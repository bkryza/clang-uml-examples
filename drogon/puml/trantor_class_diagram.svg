<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5629px" preserveAspectRatio="none" style="width:9065px;height:5629px;" version="1.1" viewBox="0 0 9065 5629" width="9065px" zoomAndPan="magnify"><defs><filter height="300%" id="f1q08zniy5sgsg" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="186" x="4443.5" y="16.708">trantor class diagram</text><!--MD5=[fed249d7874c77c08dcf893861b9a747]
class C_0001166594284895168875--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="60.8047" id="C_0001166594284895168875" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="49.5" y="67.4531"/><ellipse cx="87" cy="83.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M89.9688,89.0938 Q89.3906,89.3906 88.75,89.5313 Q88.1094,89.6875 87.4063,89.6875 Q84.9063,89.6875 83.5781,88.0469 Q82.2656,86.3906 82.2656,83.2656 Q82.2656,80.1406 83.5781,78.4844 Q84.9063,76.8281 87.4063,76.8281 Q88.1094,76.8281 88.75,76.9844 Q89.4063,77.1406 89.9688,77.4375 L89.9688,80.1563 Q89.3438,79.5781 88.75,79.3125 Q88.1563,79.0313 87.5313,79.0313 Q86.1875,79.0313 85.5,80.1094 Q84.8125,81.1719 84.8125,83.2656 Q84.8125,85.3594 85.5,86.4375 Q86.1875,87.5 87.5313,87.5 Q88.1563,87.5 88.75,87.2344 Q89.3438,86.9531 89.9688,86.375 L89.9688,89.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="106" y="87.6074">utils::Hash128</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50.5" x2="220.5" y1="99.4531" y2="99.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="50.5" x2="220.5" y1="107.4531" y2="107.4531"/><ellipse cx="60.5" cy="118.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="69.5" y="121.6636">bytes : unsigned char[16]</text><!--MD5=[021cb10fbb8ce3370cd11a9cd6334df8]
class C_0001016092423778930091--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="60.8047" id="C_0001016092423778930091" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="256.5" y="67.4531"/><ellipse cx="294" cy="83.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M296.9688,89.0938 Q296.3906,89.3906 295.75,89.5313 Q295.1094,89.6875 294.4063,89.6875 Q291.9063,89.6875 290.5781,88.0469 Q289.2656,86.3906 289.2656,83.2656 Q289.2656,80.1406 290.5781,78.4844 Q291.9063,76.8281 294.4063,76.8281 Q295.1094,76.8281 295.75,76.9844 Q296.4063,77.1406 296.9688,77.4375 L296.9688,80.1563 Q296.3438,79.5781 295.75,79.3125 Q295.1563,79.0313 294.5313,79.0313 Q293.1875,79.0313 292.5,80.1094 Q291.8125,81.1719 291.8125,83.2656 Q291.8125,85.3594 292.5,86.4375 Q293.1875,87.5 294.5313,87.5 Q295.1563,87.5 295.75,87.2344 Q296.3438,86.9531 296.9688,86.375 L296.9688,89.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="313" y="87.6074">utils::Hash160</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="257.5" x2="427.5" y1="99.4531" y2="99.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="257.5" x2="427.5" y1="107.4531" y2="107.4531"/><ellipse cx="267.5" cy="118.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="276.5" y="121.6636">bytes : unsigned char[20]</text><!--MD5=[8c8e5215c80d1cd8a8ee6133aa829fcf]
class C_0000080756732781028581--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="60.8047" id="C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="894.5" y="394.9531"/><ellipse cx="932" cy="410.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M934.9688,416.5938 Q934.3906,416.8906 933.75,417.0313 Q933.1094,417.1875 932.4063,417.1875 Q929.9063,417.1875 928.5781,415.5469 Q927.2656,413.8906 927.2656,410.7656 Q927.2656,407.6406 928.5781,405.9844 Q929.9063,404.3281 932.4063,404.3281 Q933.1094,404.3281 933.75,404.4844 Q934.4063,404.6406 934.9688,404.9375 L934.9688,407.6563 Q934.3438,407.0781 933.75,406.8125 Q933.1563,406.5313 932.5313,406.5313 Q931.1875,406.5313 930.5,407.6094 Q929.8125,408.6719 929.8125,410.7656 Q929.8125,412.8594 930.5,413.9375 Q931.1875,415 932.5313,415 Q933.1563,415 933.75,414.7344 Q934.3438,414.4531 934.9688,413.875 L934.9688,416.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="951" y="415.1074">utils::Hash256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="895.5" x2="1065.5" y1="426.9531" y2="426.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="895.5" x2="1065.5" y1="434.9531" y2="434.9531"/><ellipse cx="905.5" cy="445.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="914.5" y="449.1636">bytes : unsigned char[32]</text><!--MD5=[a74ca64b85c4b088ee21340913b25922]
class C_0000195316585713148470--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="99.2188" id="C_0000195316585713148470" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="902.5" y="48.4531"/><ellipse cx="931.9" cy="64.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M934.8688,70.0938 Q934.2906,70.3906 933.65,70.5313 Q933.0094,70.6875 932.3063,70.6875 Q929.8063,70.6875 928.4781,69.0469 Q927.1656,67.3906 927.1656,64.2656 Q927.1656,61.1406 928.4781,59.4844 Q929.8063,57.8281 932.3063,57.8281 Q933.0094,57.8281 933.65,57.9844 Q934.3063,58.1406 934.8688,58.4375 L934.8688,61.1563 Q934.2438,60.5781 933.65,60.3125 Q933.0563,60.0313 932.4313,60.0313 Q931.0875,60.0313 930.4,61.1094 Q929.7125,62.1719 929.7125,64.2656 Q929.7125,66.3594 930.4,67.4375 Q931.0875,68.5 932.4313,68.5 Q933.0563,68.5 933.65,68.2344 Q934.2438,67.9531 934.8688,67.375 L934.8688,70.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="949.1" y="68.6074">utils::RngState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="903.5" x2="1057.5" y1="80.4531" y2="80.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="903.5" x2="1057.5" y1="88.4531" y2="88.4531"/><ellipse cx="913.5" cy="99.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="922.5" y="102.6636">counter : uint64_t</text><ellipse cx="913.5" cy="112.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="922.5" y="115.4683">prev : utils::Hash256</text><ellipse cx="913.5" cy="125.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="922.5" y="128.2729">secret : utils::Hash256</text><ellipse cx="913.5" cy="137.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="922.5" y="141.0776">time : int64_t</text><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="4416.5" y="73.9531"/><ellipse cx="4431.5" cy="89.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4434.4688,95.5938 Q4433.8906,95.8906 4433.25,96.0313 Q4432.6094,96.1875 4431.9063,96.1875 Q4429.4063,96.1875 4428.0781,94.5469 Q4426.7656,92.8906 4426.7656,89.7656 Q4426.7656,86.6406 4428.0781,84.9844 Q4429.4063,83.3281 4431.9063,83.3281 Q4432.6094,83.3281 4433.25,83.4844 Q4433.9063,83.6406 4434.4688,83.9375 L4434.4688,86.6563 Q4433.8438,86.0781 4433.25,85.8125 Q4432.6563,85.5313 4432.0313,85.5313 Q4430.6875,85.5313 4430,86.6094 Q4429.3125,87.6719 4429.3125,89.7656 Q4429.3125,91.8594 4430,92.9375 Q4430.6875,94 4432.0313,94 Q4432.6563,94 4433.25,93.7344 Q4433.8438,93.4531 4434.4688,92.875 L4434.4688,95.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="4445.5" y="94.1074">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4417.5" x2="4529.5" y1="105.9531" y2="105.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4417.5" x2="4529.5" y1="113.9531" y2="113.9531"/><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="448.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="1794.5" y="4665.9531"/><ellipse cx="2284.25" cy="4681.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2287.2188,4687.5938 Q2286.6406,4687.8906 2286,4688.0313 Q2285.3594,4688.1875 2284.6563,4688.1875 Q2282.1563,4688.1875 2280.8281,4686.5469 Q2279.5156,4684.8906 2279.5156,4681.7656 Q2279.5156,4678.6406 2280.8281,4676.9844 Q2282.1563,4675.3281 2284.6563,4675.3281 Q2285.3594,4675.3281 2286,4675.4844 Q2286.6563,4675.6406 2287.2188,4675.9375 L2287.2188,4678.6563 Q2286.5938,4678.0781 2286,4677.8125 Q2285.4063,4677.5313 2284.7813,4677.5313 Q2283.4375,4677.5313 2282.75,4678.6094 Q2282.0625,4679.6719 2282.0625,4681.7656 Q2282.0625,4683.8594 2282.75,4684.9375 Q2283.4375,4686 2284.7813,4686 Q2285.4063,4686 2286,4685.7344 Q2286.5938,4685.4531 2287.2188,4684.875 L2287.2188,4687.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="2304.75" y="4686.1074">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1795.5" x2="2811.5" y1="4697.9531" y2="4697.9531"/><ellipse cx="1805.5" cy="4708.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1814.5" y="4712.1636">Date() : void</text><ellipse cx="1805.5" cy="4721.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1814.5" y="4724.9683">Date(int64_t microSec) : void</text><ellipse cx="1805.5" cy="4734.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1814.5" y="4737.7729">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="1805.5" cy="4747.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1814.5" y="4750.5776">~Date() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1795.5" x2="2811.5" y1="4757.1719" y2="4757.1719"/><ellipse cx="1805.5" cy="4768.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1814.5" y="4771.3823">operator!=(const Date &amp; date) const : bool</text><ellipse cx="1805.5" cy="4780.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1814.5" y="4784.187">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="1805.5" cy="4793.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1814.5" y="4796.9917">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="1805.5" cy="4806.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1814.5" y="4809.7964">operator==(const Date &amp; date) const : bool</text><ellipse cx="1805.5" cy="4819.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1814.5" y="4822.6011">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="1805.5" cy="4832.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1814.5" y="4835.4058">operator&gt;=(const Date &amp; date) const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1795.5" x2="2811.5" y1="4842" y2="4842"/><ellipse cx="1805.5" cy="4853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1814.5" y="4856.2104">after(double second) const : const Date</text><ellipse cx="1805.5" cy="4865.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="1814.5" y="4869.0151">date() : const Date</text><ellipse cx="1805.5" cy="4878.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="1814.5" y="4881.8198">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="1805.5" cy="4891.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="1814.5" y="4894.6245">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="1805.5" cy="4904.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1814.5" y="4907.4292">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="1805.5" cy="4917.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1814.5" y="4920.2339">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="1805.5" cy="4929.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="1814.5" y="4933.0386">now() : const Date</text><ellipse cx="1805.5" cy="4942.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1814.5" y="4945.8433">roundDay() const : const Date</text><ellipse cx="1805.5" cy="4955.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1814.5" y="4958.6479">roundSecond() const : const Date</text><ellipse cx="1805.5" cy="4968.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1814.5" y="4971.4526">secondsSinceEpoch() const : int64_t</text><ellipse cx="1805.5" cy="4981.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1814.5" y="4984.2573">swap(Date &amp; that) : void</text><ellipse cx="1805.5" cy="4993.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="1814.5" y="4997.062">timezoneOffset() : int64_t</text><ellipse cx="1805.5" cy="5006.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1814.5" y="5009.8667">tmStruct() const : struct tm</text><ellipse cx="1805.5" cy="5019.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="1814.5" y="5022.6714">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1805.5" cy="5032.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="1814.5" y="5035.4761">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="1805.5" cy="5045.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="1814.5" y="5048.2808">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1805.5" cy="5057.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1814.5" y="5061.0854">toDbString() const : std::string</text><ellipse cx="1805.5" cy="5070.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1814.5" y="5073.8901">toDbStringLocal() const : std::string</text><ellipse cx="1805.5" cy="5083.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1814.5" y="5086.6948">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="1805.5" cy="5096.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="1814.5" y="5099.4995">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1795.5" x2="2811.5" y1="5106.0938" y2="5106.0938"/><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="222.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1884" y="3264.4531"/><ellipse cx="1930.25" cy="3280.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1933.2188,3286.0938 Q1932.6406,3286.3906 1932,3286.5313 Q1931.3594,3286.6875 1930.6563,3286.6875 Q1928.1563,3286.6875 1926.8281,3285.0469 Q1925.5156,3283.3906 1925.5156,3280.2656 Q1925.5156,3277.1406 1926.8281,3275.4844 Q1928.1563,3273.8281 1930.6563,3273.8281 Q1931.3594,3273.8281 1932,3273.9844 Q1932.6563,3274.1406 1933.2188,3274.4375 L1933.2188,3277.1563 Q1932.5938,3276.5781 1932,3276.3125 Q1931.4063,3276.0313 1930.7813,3276.0313 Q1929.4375,3276.0313 1928.75,3277.1094 Q1928.0625,3278.1719 1928.0625,3280.2656 Q1928.0625,3282.3594 1928.75,3283.4375 Q1929.4375,3284.5 1930.7813,3284.5 Q1931.4063,3284.5 1932,3284.2344 Q1932.5938,3283.9531 1933.2188,3283.375 L1933.2188,3286.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1950.75" y="3284.6074">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="2102" y="3261.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="2103" y="3273.5918">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1885" x2="2148" y1="3296.4531" y2="3296.4531"/><ellipse cx="1895" cy="3307.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1904" y="3310.6636">FixedBuffer() : void</text><ellipse cx="1895" cy="3320.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1904" y="3323.4683">~FixedBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1885" x2="2148" y1="3330.0625" y2="3330.0625"/><ellipse cx="1895" cy="3341.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1904" y="3344.2729">add(size_t len) : void</text><ellipse cx="1895" cy="3353.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1904" y="3357.0776">append(const char * buf, size_t len) : bool</text><ellipse cx="1895" cy="3366.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1904" y="3369.8823">avail() const : int</text><ellipse cx="1895" cy="3379.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1904" y="3382.687">current() : char *</text><ellipse cx="1895" cy="3392.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1904" y="3395.4917">data() const : const char *</text><ellipse cx="1895" cy="3405.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1904" y="3408.2964">debugString() : const char *</text><ellipse cx="1895" cy="3417.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1904" y="3421.1011">length() const : int</text><ellipse cx="1895" cy="3430.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1904" y="3433.9058">reset() : void</text><ellipse cx="1895" cy="3443.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1904" y="3446.7104">setCookie(void (*)() cookie) : void</text><ellipse cx="1895" cy="3456.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1904" y="3459.5151">toString() const : std::string</text><ellipse cx="1895" cy="3469.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1904" y="3472.3198">zeroBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1885" x2="2148" y1="3478.9141" y2="3478.9141"/><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="1611.5" y="2811.4531"/><ellipse cx="1626.5" cy="2827.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1629.4688,2833.0938 Q1628.8906,2833.3906 1628.25,2833.5313 Q1627.6094,2833.6875 1626.9063,2833.6875 Q1624.4063,2833.6875 1623.0781,2832.0469 Q1621.7656,2830.3906 1621.7656,2827.2656 Q1621.7656,2824.1406 1623.0781,2822.4844 Q1624.4063,2820.8281 1626.9063,2820.8281 Q1627.6094,2820.8281 1628.25,2820.9844 Q1628.9063,2821.1406 1629.4688,2821.4375 L1629.4688,2824.1563 Q1628.8438,2823.5781 1628.25,2823.3125 Q1627.6563,2823.0313 1627.0313,2823.0313 Q1625.6875,2823.0313 1625,2824.1094 Q1624.3125,2825.1719 1624.3125,2827.2656 Q1624.3125,2829.3594 1625,2830.4375 Q1625.6875,2831.5 1627.0313,2831.5 Q1627.6563,2831.5 1628.25,2831.2344 Q1628.8438,2830.9531 1629.4688,2830.375 L1629.4688,2833.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1640.5" y="2831.6074">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="1760.5" y="2808.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="1761.5" y="2820.5918">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1612.5" x2="1878.5" y1="2843.4531" y2="2843.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1612.5" x2="1878.5" y1="2851.4531" y2="2851.4531"/><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="222.4609" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="2039" y="636.9531"/><ellipse cx="2093.25" cy="652.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2096.2188,658.5938 Q2095.6406,658.8906 2095,659.0313 Q2094.3594,659.1875 2093.6563,659.1875 Q2091.1563,659.1875 2089.8281,657.5469 Q2088.5156,655.8906 2088.5156,652.7656 Q2088.5156,649.6406 2089.8281,647.9844 Q2091.1563,646.3281 2093.6563,646.3281 Q2094.3594,646.3281 2095,646.4844 Q2095.6563,646.6406 2096.2188,646.9375 L2096.2188,649.6563 Q2095.5938,649.0781 2095,648.8125 Q2094.4063,648.5313 2093.7813,648.5313 Q2092.4375,648.5313 2091.75,649.6094 Q2091.0625,650.6719 2091.0625,652.7656 Q2091.0625,654.8594 2091.75,655.9375 Q2092.4375,657 2093.7813,657 Q2094.4063,657 2095,656.7344 Q2095.5938,656.4531 2096.2188,655.875 L2096.2188,658.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="2113.75" y="657.1074">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="2273" y="633.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2274" y="646.0918">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2040" x2="2303" y1="668.9531" y2="668.9531"/><ellipse cx="2050" cy="679.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2059" y="683.1636">FixedBuffer() : void</text><ellipse cx="2050" cy="692.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2059" y="695.9683">~FixedBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2040" x2="2303" y1="702.5625" y2="702.5625"/><ellipse cx="2050" cy="713.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2059" y="716.7729">add(size_t len) : void</text><ellipse cx="2050" cy="726.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2059" y="729.5776">append(const char * buf, size_t len) : bool</text><ellipse cx="2050" cy="739.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2059" y="742.3823">avail() const : int</text><ellipse cx="2050" cy="751.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2059" y="755.187">current() : char *</text><ellipse cx="2050" cy="764.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2059" y="767.9917">data() const : const char *</text><ellipse cx="2050" cy="777.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2059" y="780.7964">debugString() : const char *</text><ellipse cx="2050" cy="790.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2059" y="793.6011">length() const : int</text><ellipse cx="2050" cy="803.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="2059" y="806.4058">reset() : void</text><ellipse cx="2050" cy="816" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2059" y="819.2104">setCookie(void (*)() cookie) : void</text><ellipse cx="2050" cy="828.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2059" y="832.0151">toString() const : std::string</text><ellipse cx="2050" cy="841.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2059" y="844.8198">zeroBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2040" x2="2303" y1="851.4141" y2="851.4141"/><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="222.4609" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="2110" y="1653.9531"/><ellipse cx="2152.45" cy="1669.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2155.4188,1675.5938 Q2154.8406,1675.8906 2154.2,1676.0313 Q2153.5594,1676.1875 2152.8563,1676.1875 Q2150.3563,1676.1875 2149.0281,1674.5469 Q2147.7156,1672.8906 2147.7156,1669.7656 Q2147.7156,1666.6406 2149.0281,1664.9844 Q2150.3563,1663.3281 2152.8563,1663.3281 Q2153.5594,1663.3281 2154.2,1663.4844 Q2154.8563,1663.6406 2155.4188,1663.9375 L2155.4188,1666.6563 Q2154.7938,1666.0781 2154.2,1665.8125 Q2153.6063,1665.5313 2152.9813,1665.5313 Q2151.6375,1665.5313 2150.95,1666.6094 Q2150.2625,1667.6719 2150.2625,1669.7656 Q2150.2625,1671.8594 2150.95,1672.9375 Q2151.6375,1674 2152.9813,1674 Q2153.6063,1674 2154.2,1673.7344 Q2154.7938,1673.4531 2155.4188,1672.875 L2155.4188,1675.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="2172.55" y="1674.1074">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="2320" y="1650.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="2321" y="1663.0918">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2111" x2="2374" y1="1685.9531" y2="1685.9531"/><ellipse cx="2121" cy="1696.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2130" y="1700.1636">FixedBuffer() : void</text><ellipse cx="2121" cy="1709.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2130" y="1712.9683">~FixedBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2111" x2="2374" y1="1719.5625" y2="1719.5625"/><ellipse cx="2121" cy="1730.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2130" y="1733.7729">add(size_t len) : void</text><ellipse cx="2121" cy="1743.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2130" y="1746.5776">append(const char * buf, size_t len) : bool</text><ellipse cx="2121" cy="1756.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2130" y="1759.3823">avail() const : int</text><ellipse cx="2121" cy="1768.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2130" y="1772.187">current() : char *</text><ellipse cx="2121" cy="1781.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2130" y="1784.9917">data() const : const char *</text><ellipse cx="2121" cy="1794.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2130" y="1797.7964">debugString() : const char *</text><ellipse cx="2121" cy="1807.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2130" y="1810.6011">length() const : int</text><ellipse cx="2121" cy="1820.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="2130" y="1823.4058">reset() : void</text><ellipse cx="2121" cy="1833" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2130" y="1836.2104">setCookie(void (*)() cookie) : void</text><ellipse cx="2121" cy="1845.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2130" y="1849.0151">toString() const : std::string</text><ellipse cx="2121" cy="1858.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2130" y="1861.8198">zeroBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2111" x2="2374" y1="1868.4141" y2="1868.4141"/><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="350.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="1512.5" y="1982.4531"/><ellipse cx="1665.75" cy="1998.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1668.7188,2004.0938 Q1668.1406,2004.3906 1667.5,2004.5313 Q1666.8594,2004.6875 1666.1563,2004.6875 Q1663.6563,2004.6875 1662.3281,2003.0469 Q1661.0156,2001.3906 1661.0156,1998.2656 Q1661.0156,1995.1406 1662.3281,1993.4844 Q1663.6563,1991.8281 1666.1563,1991.8281 Q1666.8594,1991.8281 1667.5,1991.9844 Q1668.1563,1992.1406 1668.7188,1992.4375 L1668.7188,1995.1563 Q1668.0938,1994.5781 1667.5,1994.3125 Q1666.9063,1994.0313 1666.2813,1994.0313 Q1664.9375,1994.0313 1664.25,1995.1094 Q1663.5625,1996.1719 1663.5625,1998.2656 Q1663.5625,2000.3594 1664.25,2001.4375 Q1664.9375,2002.5 1666.2813,2002.5 Q1666.9063,2002.5 1667.5,2002.2344 Q1668.0938,2001.9531 1668.7188,2001.375 L1668.7188,2004.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1686.25" y="2002.6074">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1513.5" x2="1893.5" y1="2014.4531" y2="2014.4531"/><ellipse cx="1523.5" cy="2025.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1532.5" y="2028.6636">operator&lt;&lt;(const void *) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2038.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1532.5" y="2041.4683">operator&lt;&lt;&lt;int N&gt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2051.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1532.5" y="2054.2729">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2063.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="1532.5" y="2067.0776">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2076.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1532.5" y="2079.8823">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2089.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1532.5" y="2092.687">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2102.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1532.5" y="2105.4917">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2115.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="1532.5" y="2118.2964">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2127.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1532.5" y="2131.1011">operator&lt;&lt;(const double &amp;) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2140.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1532.5" y="2143.9058">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2153.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1532.5" y="2156.7104">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2166.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="1532.5" y="2169.5151">operator&lt;&lt;(const unsigned long long &amp;) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2179.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1532.5" y="2182.3198">operator&lt;&lt;(const long long &amp;) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2191.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1532.5" y="2195.1245">operator&lt;&lt;(unsigned long) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2204.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1532.5" y="2207.9292">operator&lt;&lt;(long) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2217.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1532.5" y="2220.7339">operator&lt;&lt;(unsigned int) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2230.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1532.5" y="2233.5386">operator&lt;&lt;(int) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2243.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1532.5" y="2246.3433">operator&lt;&lt;(unsigned short) : LogStream::self &amp;</text><ellipse cx="1523.5" cy="2255.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1532.5" y="2259.1479">operator&lt;&lt;(short) : LogStream::self &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1513.5" x2="1893.5" y1="2265.7422" y2="2265.7422"/><ellipse cx="1523.5" cy="2276.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1532.5" y="2279.9526">append(const char * data, size_t len) : void</text><ellipse cx="1523.5" cy="2289.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1532.5" y="2292.7573">bufferData() const : const char *</text><ellipse cx="1523.5" cy="2302.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1532.5" y="2305.562">bufferLength() const : size_t</text><ellipse cx="1523.5" cy="2315.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1532.5" y="2318.3667">resetBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1513.5" x2="1893.5" y1="2324.9609" y2="2324.9609"/><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="94.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="464" y="50.9531"/><ellipse cx="569.75" cy="66.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M572.7188,72.5938 Q572.1406,72.8906 571.5,73.0313 Q570.8594,73.1875 570.1563,73.1875 Q567.6563,73.1875 566.3281,71.5469 Q565.0156,69.8906 565.0156,66.7656 Q565.0156,63.6406 566.3281,61.9844 Q567.6563,60.3281 570.1563,60.3281 Q570.8594,60.3281 571.5,60.4844 Q572.1563,60.6406 572.7188,60.9375 L572.7188,63.6563 Q572.0938,63.0781 571.5,62.8125 Q570.9063,62.5313 570.2813,62.5313 Q568.9375,62.5313 568.25,63.6094 Q567.5625,64.6719 567.5625,66.7656 Q567.5625,68.8594 568.25,69.9375 Q568.9375,71 570.2813,71 Q570.9063,71 571.5,70.7344 Q572.0938,70.4531 572.7188,69.875 L572.7188,72.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="590.25" y="71.1074">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="465" x2="706" y1="82.9531" y2="82.9531"/><ellipse cx="475" cy="93.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="484" y="97.1636">Fmt&lt;T&gt;(const char * fmt, T val) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="465" x2="706" y1="103.7578" y2="103.7578"/><ellipse cx="475" cy="114.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="484" y="117.9683">data() const : const char *</text><ellipse cx="475" cy="127.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="484" y="130.7729">length() const : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="465" x2="706" y1="137.3672" y2="137.3672"/><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="248.0703" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="1101.5" y="301.4531"/><ellipse cx="1470.75" cy="317.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1473.7188,323.0938 Q1473.1406,323.3906 1472.5,323.5313 Q1471.8594,323.6875 1471.1563,323.6875 Q1468.6563,323.6875 1467.3281,322.0469 Q1466.0156,320.3906 1466.0156,317.2656 Q1466.0156,314.1406 1467.3281,312.4844 Q1468.6563,310.8281 1471.1563,310.8281 Q1471.8594,310.8281 1472.5,310.9844 Q1473.1563,311.1406 1473.7188,311.4375 L1473.7188,314.1563 Q1473.0938,313.5781 1472.5,313.3125 Q1471.9063,313.0313 1471.2813,313.0313 Q1469.9375,313.0313 1469.25,314.1094 Q1468.5625,315.1719 1468.5625,317.2656 Q1468.5625,319.3594 1469.25,320.4375 Q1469.9375,321.5 1471.2813,321.5 Q1471.9063,321.5 1472.5,321.2344 Q1473.0938,320.9531 1473.7188,320.375 L1473.7188,323.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1491.25" y="321.6074">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1102.5" x2="1890.5" y1="333.4531" y2="333.4531"/><ellipse cx="1112.5" cy="344.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="1121.5" y="347.6636">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="1112.5" cy="357.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1121.5" y="360.4683">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="1112.5" cy="370.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="1121.5" y="373.2729">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="1112.5" cy="382.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1121.5" y="386.0776">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="1112.5" cy="395.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1121.5" y="398.8823">Logger() : void</text><ellipse cx="1112.5" cy="408.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1121.5" y="411.687">Logger(Logger::LogLevel level) : void</text><ellipse cx="1112.5" cy="421.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1121.5" y="424.4917">Logger(bool isSysErr) : void</text><ellipse cx="1112.5" cy="434.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1121.5" y="437.2964">~Logger() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1102.5" x2="1890.5" y1="443.8906" y2="443.8906"/><ellipse cx="1112.5" cy="454.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="1121.5" y="458.1011">displayLocalTime() : bool</text><ellipse cx="1112.5" cy="467.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="1121.5" y="470.9058">logLevel() : Logger::LogLevel</text><ellipse cx="1112.5" cy="480.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="1121.5" y="483.7104">setDisplayLocalTime(bool showLocalTime) : void</text><ellipse cx="1112.5" cy="493.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1121.5" y="496.5151">setIndex(int index) : Logger &amp;</text><ellipse cx="1112.5" cy="506.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="1121.5" y="509.3198">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="1112.5" cy="518.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="1121.5" y="522.1245">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="1112.5" cy="531.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1121.5" y="534.9292">stream() : LogStream &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1102.5" x2="1890.5" y1="541.5234" y2="541.5234"/><!--MD5=[a2beb77350952d649324ef19949173b2]
class C_0002131283840621188296--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="137.6328" id="C_0002131283840621188296" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="1264.5" y="28.9531"/><ellipse cx="1279.5" cy="44.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1283.6094,50.9531 L1275.8906,50.9531 L1275.8906,38.5625 L1283.6094,38.5625 L1283.6094,40.7188 L1278.3438,40.7188 L1278.3438,43.3906 L1283.1094,43.3906 L1283.1094,45.5469 L1278.3438,45.5469 L1278.3438,48.7969 L1283.6094,48.7969 L1283.6094,50.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="1293.5" y="49.1074">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1265.5" x2="1399.5" y1="60.9531" y2="60.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1270.5" y="75.1636">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="1270.5" y="87.9683">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="1270.5" y="100.7729">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="1270.5" y="113.5776">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1270.5" y="126.3823">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1270.5" y="139.187">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1270.5" y="151.9917">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1265.5" x2="1399.5" y1="158.5859" y2="158.5859"/><!--MD5=[80f13d7cbf12b8f5b3c51061955ccb60]
class C_0000979080797342806546--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="99.2188" id="C_0000979080797342806546" style="stroke: #A80036; stroke-width: 1.5;" width="304" x="1435.5" y="48.4531"/><ellipse cx="1525.25" cy="64.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1528.2188,70.0938 Q1527.6406,70.3906 1527,70.5313 Q1526.3594,70.6875 1525.6563,70.6875 Q1523.1563,70.6875 1521.8281,69.0469 Q1520.5156,67.3906 1520.5156,64.2656 Q1520.5156,61.1406 1521.8281,59.4844 Q1523.1563,57.8281 1525.6563,57.8281 Q1526.3594,57.8281 1527,57.9844 Q1527.6563,58.1406 1528.2188,58.4375 L1528.2188,61.1563 Q1527.5938,60.5781 1527,60.3125 Q1526.4063,60.0313 1525.7813,60.0313 Q1524.4375,60.0313 1523.75,61.1094 Q1523.0625,62.1719 1523.0625,64.2656 Q1523.0625,66.3594 1523.75,67.4375 Q1524.4375,68.5 1525.7813,68.5 Q1526.4063,68.5 1527,68.2344 Q1527.5938,67.9531 1528.2188,67.375 L1528.2188,70.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="1545.75" y="68.6074">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1436.5" x2="1738.5" y1="80.4531" y2="80.4531"/><ellipse cx="1446.5" cy="91.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1455.5" y="94.6636">SourceFile(const char * filename = nullptr) : void</text><ellipse cx="1446.5" cy="104.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="1455.5" y="107.4683">SourceFile&lt;int N&gt;(const char (&amp;)[N] arr) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1436.5" x2="1738.5" y1="114.0625" y2="114.0625"/><ellipse cx="1446.5" cy="125.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1455.5" y="128.2729">data_ : const char *</text><ellipse cx="1446.5" cy="137.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="1455.5" y="141.0776">size_ : int</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="94.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="1670.5" y="1209.4531"/><ellipse cx="1741.25" cy="1225.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1744.2188,1231.0938 Q1743.6406,1231.3906 1743,1231.5313 Q1742.3594,1231.6875 1741.6563,1231.6875 Q1739.1563,1231.6875 1737.8281,1230.0469 Q1736.5156,1228.3906 1736.5156,1225.2656 Q1736.5156,1222.1406 1737.8281,1220.4844 Q1739.1563,1218.8281 1741.6563,1218.8281 Q1742.3594,1218.8281 1743,1218.9844 Q1743.6563,1219.1406 1744.2188,1219.4375 L1744.2188,1222.1563 Q1743.5938,1221.5781 1743,1221.3125 Q1742.4063,1221.0313 1741.7813,1221.0313 Q1740.4375,1221.0313 1739.75,1222.1094 Q1739.0625,1223.1719 1739.0625,1225.2656 Q1739.0625,1227.3594 1739.75,1228.4375 Q1740.4375,1229.5 1741.7813,1229.5 Q1742.4063,1229.5 1743,1229.2344 Q1743.5938,1228.9531 1744.2188,1228.375 L1744.2188,1231.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1761.75" y="1229.6074">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1671.5" x2="1887.5" y1="1241.4531" y2="1241.4531"/><ellipse cx="1681.5" cy="1252.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1690.5" y="1255.6636">~RawLogger() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1671.5" x2="1887.5" y1="1262.2578" y2="1262.2578"/><ellipse cx="1681.5" cy="1273.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1690.5" y="1276.4683">setIndex(int index) : RawLogger &amp;</text><ellipse cx="1681.5" cy="1286.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1690.5" y="1289.2729">stream() : LogStream &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1671.5" x2="1887.5" y1="1295.8672" y2="1295.8672"/><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="563.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="5062.5" y="3093.9531"/><ellipse cx="5185.25" cy="3109.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5188.2188,3115.5938 Q5187.6406,3115.8906 5187,3116.0313 Q5186.3594,3116.1875 5185.6563,3116.1875 Q5183.1563,3116.1875 5181.8281,3114.5469 Q5180.5156,3112.8906 5180.5156,3109.7656 Q5180.5156,3106.6406 5181.8281,3104.9844 Q5183.1563,3103.3281 5185.6563,3103.3281 Q5186.3594,3103.3281 5187,3103.4844 Q5187.6563,3103.6406 5188.2188,3103.9375 L5188.2188,3106.6563 Q5187.5938,3106.0781 5187,3105.8125 Q5186.4063,3105.5313 5185.7813,3105.5313 Q5184.4375,3105.5313 5183.75,3106.6094 Q5183.0625,3107.6719 5183.0625,3109.7656 Q5183.0625,3111.8594 5183.75,3112.9375 Q5184.4375,3114 5185.7813,3114 Q5186.4063,3114 5187,3113.7344 Q5187.5938,3113.4531 5188.2188,3112.875 L5188.2188,3115.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="5205.75" y="3114.1074">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5063.5" x2="5377.5" y1="3125.9531" y2="3125.9531"/><ellipse cx="5073.5" cy="3136.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="5082.5" y="3140.1636">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5063.5" x2="5377.5" y1="3146.7578" y2="3146.7578"/><ellipse cx="5073.5" cy="3157.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="5082.5" y="3160.9683">operator[](size_t offset) const : const char &amp;</text><ellipse cx="5073.5" cy="3170.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5082.5" y="3173.7729">operator[](size_t offset) : char &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5063.5" x2="5377.5" y1="3180.3672" y2="3180.3672"/><ellipse cx="5073.5" cy="3191.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5082.5" y="3194.5776">addInFront(const char * buf, size_t len) : void</text><ellipse cx="5073.5" cy="3204.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="5082.5" y="3207.3823">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="5073.5" cy="3216.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="5082.5" y="3220.187">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="5073.5" cy="3229.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="5082.5" y="3232.9917">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="5073.5" cy="3242.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5082.5" y="3245.7964">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="5073.5" cy="3255.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="5082.5" y="3258.6011">append&lt;int N&gt;(const char (&amp;)[N] buf) : void</text><ellipse cx="5073.5" cy="3268.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5082.5" y="3271.4058">append(const std::string &amp; buf) : void</text><ellipse cx="5073.5" cy="3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5082.5" y="3284.2104">append(const char * buf, size_t len) : void</text><ellipse cx="5073.5" cy="3293.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="5082.5" y="3297.0151">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="5073.5" cy="3306.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="5082.5" y="3309.8198">appendInt16(const uint16_t s) : void</text><ellipse cx="5073.5" cy="3319.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5082.5" y="3322.6245">appendInt32(const uint32_t i) : void</text><ellipse cx="5073.5" cy="3332.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5082.5" y="3335.4292">appendInt64(const uint64_t l) : void</text><ellipse cx="5073.5" cy="3345.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5082.5" y="3348.2339">appendInt8(const uint8_t b) : void</text><ellipse cx="5073.5" cy="3357.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="5082.5" y="3361.0386">beginWrite() const : const char *</text><ellipse cx="5073.5" cy="3370.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="5082.5" y="3373.8433">beginWrite() : char *</text><ellipse cx="5073.5" cy="3383.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5082.5" y="3386.6479">ensureWritableBytes(size_t len) : void</text><ellipse cx="5073.5" cy="3396.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="5082.5" y="3399.4526">findCRLF() const : const char *</text><ellipse cx="5073.5" cy="3409.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="5082.5" y="3412.2573">hasWritten(size_t len) : void</text><ellipse cx="5073.5" cy="3421.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5082.5" y="3425.062">peek() const : const char *</text><ellipse cx="5073.5" cy="3434.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5082.5" y="3437.8667">peekInt16() const : uint16_t</text><ellipse cx="5073.5" cy="3447.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5082.5" y="3450.6714">peekInt32() const : uint32_t</text><ellipse cx="5073.5" cy="3460.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5082.5" y="3463.4761">peekInt64() const : uint64_t</text><ellipse cx="5073.5" cy="3473.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5082.5" y="3476.2808">peekInt8() const : uint8_t</text><ellipse cx="5073.5" cy="3485.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5082.5" y="3489.0854">read(size_t len) : std::string</text><ellipse cx="5073.5" cy="3498.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5082.5" y="3501.8901">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="5073.5" cy="3511.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5082.5" y="3514.6948">readInt16() : uint16_t</text><ellipse cx="5073.5" cy="3524.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5082.5" y="3527.4995">readInt32() : uint32_t</text><ellipse cx="5073.5" cy="3537.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5082.5" y="3540.3042">readInt64() : uint64_t</text><ellipse cx="5073.5" cy="3549.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5082.5" y="3553.1089">readInt8() : uint8_t</text><ellipse cx="5073.5" cy="3562.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5082.5" y="3565.9136">readableBytes() const : size_t</text><ellipse cx="5073.5" cy="3575.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="5082.5" y="3578.7183">retrieve(size_t len) : void</text><ellipse cx="5073.5" cy="3588.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5082.5" y="3591.5229">retrieveAll() : void</text><ellipse cx="5073.5" cy="3601.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5082.5" y="3604.3276">retrieveUntil(const char * end) : void</text><ellipse cx="5073.5" cy="3613.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="5082.5" y="3617.1323">swap(MsgBuffer &amp; buf) noexcept : void</text><ellipse cx="5073.5" cy="3626.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5082.5" y="3629.937">unwrite(size_t offset) : void</text><ellipse cx="5073.5" cy="3639.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="5082.5" y="3642.7417">writableBytes() const : size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5063.5" x2="5377.5" y1="3649.3359" y2="3649.3359"/><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="120.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="2389.5" y="365.4531"/><ellipse cx="2543.25" cy="381.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2543.3594,376.7969 L2542.2031,381.875 L2544.5313,381.875 L2543.3594,376.7969 Z M2541.875,374.5625 L2544.8594,374.5625 L2548.2188,386.9531 L2545.7656,386.9531 L2545,383.8906 L2541.7188,383.8906 L2540.9688,386.9531 L2538.5313,386.9531 L2541.875,374.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="2563.75" y="385.6074">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2390.5" x2="2772.5" y1="397.4531" y2="397.4531"/><ellipse cx="2400.5" cy="408.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2409.5" y="411.6636">~TaskQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2390.5" x2="2772.5" y1="418.2578" y2="418.2578"/><ellipse cx="2400.5" cy="429.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2409.5" y="432.4683">getName() const : std::string</text><ellipse cx="2400.5" cy="442.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="2409.5" y="445.2729">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="2400.5" cy="454.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="2409.5" y="458.0776">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="2400.5" cy="467.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2409.5" y="470.8823">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2390.5" x2="2772.5" y1="477.4766" y2="477.4766"/><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="132.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="4684.5" y="5337.9531"/><ellipse cx="4741.25" cy="5353.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4744.2188,5359.5938 Q4743.6406,5359.8906 4743,5360.0313 Q4742.3594,5360.1875 4741.6563,5360.1875 Q4739.1563,5360.1875 4737.8281,5358.5469 Q4736.5156,5356.8906 4736.5156,5353.7656 Q4736.5156,5350.6406 4737.8281,5348.9844 Q4739.1563,5347.3281 4741.6563,5347.3281 Q4742.3594,5347.3281 4743,5347.4844 Q4743.6563,5347.6406 4744.2188,5347.9375 L4744.2188,5350.6563 Q4743.5938,5350.0781 4743,5349.8125 Q4742.4063,5349.5313 4741.7813,5349.5313 Q4740.4375,5349.5313 4739.75,5350.6094 Q4739.0625,5351.6719 4739.0625,5353.7656 Q4739.0625,5355.8594 4739.75,5356.9375 Q4740.4375,5358 4741.7813,5358 Q4742.4063,5358 4743,5357.7344 Q4743.5938,5357.4531 4744.2188,5356.875 L4744.2188,5359.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="4761.75" y="5358.1074">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="4884.5" y="5334.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="4885.5" y="5347.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4685.5" x2="4889.5" y1="5369.9531" y2="5369.9531"/><ellipse cx="4695.5" cy="5380.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4704.5" y="5384.1636">MpscQueue() : void</text><ellipse cx="4695.5" cy="5393.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4704.5" y="5396.9683">~MpscQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4685.5" x2="4889.5" y1="5403.5625" y2="5403.5625"/><ellipse cx="4695.5" cy="5414.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4704.5" y="5417.7729">dequeue(T &amp; output) : bool</text><ellipse cx="4695.5" cy="5427.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4704.5" y="5430.5776">empty() : bool</text><ellipse cx="4695.5" cy="5440.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4704.5" y="5443.3823">enqueue(T &amp;&amp; input) : void</text><ellipse cx="4695.5" cy="5452.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4704.5" y="5456.187">enqueue(const T &amp; input) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4685.5" x2="4889.5" y1="5462.7813" y2="5462.7813"/><!--MD5=[9e2b872a1cb524987dcee0b8ea8bcdce]
class C_0000223701637084171141--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="112.0234" id="C_0000223701637084171141" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="2847.5" y="4833.9531"/><ellipse cx="2880.95" cy="4849.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2883.9188,4855.5938 Q2883.3406,4855.8906 2882.7,4856.0313 Q2882.0594,4856.1875 2881.3563,4856.1875 Q2878.8563,4856.1875 2877.5281,4854.5469 Q2876.2156,4852.8906 2876.2156,4849.7656 Q2876.2156,4846.6406 2877.5281,4844.9844 Q2878.8563,4843.3281 2881.3563,4843.3281 Q2882.0594,4843.3281 2882.7,4843.4844 Q2883.3563,4843.6406 2883.9188,4843.9375 L2883.9188,4846.6563 Q2883.2938,4846.0781 2882.7,4845.8125 Q2882.1063,4845.5313 2881.4813,4845.5313 Q2880.1375,4845.5313 2879.45,4846.6094 Q2878.7625,4847.6719 2878.7625,4849.7656 Q2878.7625,4851.8594 2879.45,4852.9375 Q2880.1375,4854 2881.4813,4854 Q2882.1063,4854 2882.7,4853.7344 Q2883.2938,4853.4531 2883.9188,4852.875 L2883.9188,4855.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="2899.05" y="4854.1074">MpscQueue::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2848.5" x2="3070.5" y1="4865.9531" y2="4865.9531"/><ellipse cx="2858.5" cy="4876.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2867.5" y="4880.1636">BufferNode() = default : void</text><ellipse cx="2858.5" cy="4889.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2867.5" y="4892.9683">BufferNode(const T &amp; data) : void</text><ellipse cx="2858.5" cy="4902.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2867.5" y="4905.7729">BufferNode(T &amp;&amp; data) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2848.5" x2="3070.5" y1="4912.3672" y2="4912.3672"/><ellipse cx="2858.5" cy="4923.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="2867.5" y="4926.5776">dataPtr_ : T *</text><ellipse cx="2858.5" cy="4936.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2867.5" y="4939.3823">next_ : std::atomic&lt;BufferNode *&gt;</text><!--MD5=[dad06bf4fbec639e9a802a58181f4e4a]
class C_0002185746167032660910--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="48" id="C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="4666.5" y="4865.9531"/><ellipse cx="4681.5" cy="4881.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4684.4688,4887.5938 Q4683.8906,4887.8906 4683.25,4888.0313 Q4682.6094,4888.1875 4681.9063,4888.1875 Q4679.4063,4888.1875 4678.0781,4886.5469 Q4676.7656,4884.8906 4676.7656,4881.7656 Q4676.7656,4878.6406 4678.0781,4876.9844 Q4679.4063,4875.3281 4681.9063,4875.3281 Q4682.6094,4875.3281 4683.25,4875.4844 Q4683.9063,4875.6406 4684.4688,4875.9375 L4684.4688,4878.6563 Q4683.8438,4878.0781 4683.25,4877.8125 Q4682.6563,4877.5313 4682.0313,4877.5313 Q4680.6875,4877.5313 4680,4878.6094 Q4679.3125,4879.6719 4679.3125,4881.7656 Q4679.3125,4883.8594 4680,4884.9375 Q4680.6875,4886 4682.0313,4886 Q4682.6563,4886 4683.25,4885.7344 Q4683.8438,4885.4531 4684.4688,4884.875 L4684.4688,4887.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="4695.5" y="4886.1074">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="135" x="4776.5" y="4862.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="4777.5" y="4875.0918">std::function&lt;void()&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4667.5" x2="4907.5" y1="4897.9531" y2="4897.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4667.5" x2="4907.5" y1="4905.9531" y2="4905.9531"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="465.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="5288.5" y="4122.9531"/><ellipse cx="5506.75" cy="4138.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5509.7188,4144.5938 Q5509.1406,4144.8906 5508.5,4145.0313 Q5507.8594,4145.1875 5507.1563,4145.1875 Q5504.6563,4145.1875 5503.3281,4143.5469 Q5502.0156,4141.8906 5502.0156,4138.7656 Q5502.0156,4135.6406 5503.3281,4133.9844 Q5504.6563,4132.3281 5507.1563,4132.3281 Q5507.8594,4132.3281 5508.5,4132.4844 Q5509.1563,4132.6406 5509.7188,4132.9375 L5509.7188,4135.6563 Q5509.0938,4135.0781 5508.5,4134.8125 Q5507.9063,4134.5313 5507.2813,4134.5313 Q5505.9375,4134.5313 5505.25,4135.6094 Q5504.5625,4136.6719 5504.5625,4138.7656 Q5504.5625,4140.8594 5505.25,4141.9375 Q5505.9375,4143 5507.2813,4143 Q5507.9063,4143 5508.5,4142.7344 Q5509.0938,4142.4531 5509.7188,4141.875 L5509.7188,4144.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5527.25" y="4143.1074">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5289.5" x2="5797.5" y1="4154.9531" y2="4154.9531"/><ellipse cx="5299.5" cy="4165.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5308.5" y="4169.1636">EventLoop() : void</text><ellipse cx="5299.5" cy="4178.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5308.5" y="4181.9683">~EventLoop() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5289.5" x2="5797.5" y1="4188.5625" y2="4188.5625"/><ellipse cx="5299.5" cy="4199.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5308.5" y="4202.7729">assertInLoopThread() : void</text><ellipse cx="5299.5" cy="4212.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="5308.5" y="4215.5776">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="5299.5" cy="4225.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="5308.5" y="4228.3823">index() : size_t</text><ellipse cx="5299.5" cy="4237.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="5308.5" y="4241.187">invalidateTimer(TimerId id) : void</text><ellipse cx="5299.5" cy="4250.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5308.5" y="4253.9917">isCallingFunctions() : bool</text><ellipse cx="5299.5" cy="4263.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="5308.5" y="4266.7964">isInLoopThread() const : bool</text><ellipse cx="5299.5" cy="4276.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5308.5" y="4279.6011">isRunning() : bool</text><ellipse cx="5299.5" cy="4289.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5308.5" y="4292.4058">loop() : void</text><ellipse cx="5299.5" cy="4302" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5308.5" y="4305.2104">moveToCurrentThread() : void</text><ellipse cx="5299.5" cy="4314.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5308.5" y="4318.0151">queueInLoop(const Func &amp; f) : void</text><ellipse cx="5299.5" cy="4327.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="5308.5" y="4330.8198">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="5299.5" cy="4340.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="5308.5" y="4343.6245">quit() : void</text><ellipse cx="5299.5" cy="4353.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5308.5" y="4356.4292">removeChannel(Channel * chl) : void</text><ellipse cx="5299.5" cy="4366.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5308.5" y="4369.2339">resetAfterFork() : void</text><ellipse cx="5299.5" cy="4378.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5308.5" y="4382.0386">resetTimerQueue() : void</text><ellipse cx="5299.5" cy="4391.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="5308.5" y="4394.8433">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4404.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="5308.5" y="4407.6479">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4417.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5308.5" y="4420.4526">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4430.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5308.5" y="4433.2573">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4442.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5308.5" y="4446.062">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4455.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5308.5" y="4458.8667">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4468.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5308.5" y="4471.6714">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4481.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="5308.5" y="4484.4761">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4494.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="5308.5" y="4497.2808">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4506.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5308.5" y="4510.0854">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5299.5" cy="4519.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="5308.5" y="4522.8901">runInLoop&lt;Functor&gt;(Functor &amp;&amp; f) : void</text><ellipse cx="5299.5" cy="4532.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5308.5" y="4535.6948">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="5299.5" cy="4545.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5308.5" y="4548.4995">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="5299.5" cy="4558.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5308.5" y="4561.3042">setIndex(size_t index) : void</text><ellipse cx="5299.5" cy="4570.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="5308.5" y="4574.1089">updateChannel(Channel * chl) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5289.5" x2="5797.5" y1="4580.7031" y2="4580.7031"/><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="120.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="3118.5" y="3829.9531"/><ellipse cx="3296.75" cy="3845.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3299.7188,3851.5938 Q3299.1406,3851.8906 3298.5,3852.0313 Q3297.8594,3852.1875 3297.1563,3852.1875 Q3294.6563,3852.1875 3293.3281,3850.5469 Q3292.0156,3848.8906 3292.0156,3845.7656 Q3292.0156,3842.6406 3293.3281,3840.9844 Q3294.6563,3839.3281 3297.1563,3839.3281 Q3297.8594,3839.3281 3298.5,3839.4844 Q3299.1563,3839.6406 3299.7188,3839.9375 L3299.7188,3842.6563 Q3299.0938,3842.0781 3298.5,3841.8125 Q3297.9063,3841.5313 3297.2813,3841.5313 Q3295.9375,3841.5313 3295.25,3842.6094 Q3294.5625,3843.6719 3294.5625,3845.7656 Q3294.5625,3847.8594 3295.25,3848.9375 Q3295.9375,3850 3297.2813,3850 Q3297.9063,3850 3298.5,3849.7344 Q3299.0938,3849.4531 3299.7188,3848.875 L3299.7188,3851.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="3317.25" y="3850.1074">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3119.5" x2="3591.5" y1="3861.9531" y2="3861.9531"/><ellipse cx="3129.5" cy="3872.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="3138.5" y="3876.1636">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="3129.5" cy="3885.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="3138.5" y="3888.9683">~EventLoopThread() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3119.5" x2="3591.5" y1="3895.5625" y2="3895.5625"/><ellipse cx="3129.5" cy="3906.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3138.5" y="3909.7729">getLoop() const : EventLoop *</text><ellipse cx="3129.5" cy="3919.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="3138.5" y="3922.5776">run() : void</text><ellipse cx="3129.5" cy="3932.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="3138.5" y="3935.3823">wait() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3119.5" x2="3591.5" y1="3941.9766" y2="3941.9766"/><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="184.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="2468" y="2439.9531"/><ellipse cx="2592.75" cy="2455.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2595.7188,2461.5938 Q2595.1406,2461.8906 2594.5,2462.0313 Q2593.8594,2462.1875 2593.1563,2462.1875 Q2590.6563,2462.1875 2589.3281,2460.5469 Q2588.0156,2458.8906 2588.0156,2455.7656 Q2588.0156,2452.6406 2589.3281,2450.9844 Q2590.6563,2449.3281 2593.1563,2449.3281 Q2593.8594,2449.3281 2594.5,2449.4844 Q2595.1563,2449.6406 2595.7188,2449.9375 L2595.7188,2452.6563 Q2595.0938,2452.0781 2594.5,2451.8125 Q2593.9063,2451.5313 2593.2813,2451.5313 Q2591.9375,2451.5313 2591.25,2452.6094 Q2590.5625,2453.6719 2590.5625,2455.7656 Q2590.5625,2457.8594 2591.25,2458.9375 Q2591.9375,2460 2593.2813,2460 Q2593.9063,2460 2594.5,2459.7344 Q2595.0938,2459.4531 2595.7188,2458.875 L2595.7188,2461.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="2613.25" y="2460.1074">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2469" x2="2830" y1="2471.9531" y2="2471.9531"/><ellipse cx="2479" cy="2482.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2488" y="2486.1636">SerialTaskQueue() = deleted : void</text><ellipse cx="2479" cy="2495.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2488" y="2498.9683">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="2479" cy="2508.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2488" y="2511.7729">~SerialTaskQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2469" x2="2830" y1="2518.3672" y2="2518.3672"/><ellipse cx="2479" cy="2529.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2488" y="2532.5776">getName() const : std::string</text><ellipse cx="2479" cy="2542.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2488" y="2545.3823">getTaskCount() : size_t</text><ellipse cx="2479" cy="2554.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2488" y="2558.187">isRuningTask() : bool</text><ellipse cx="2479" cy="2567.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2488" y="2570.9917">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2479" cy="2580.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2488" y="2583.7964">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="2479" cy="2593.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2488" y="2596.6011">stop() : void</text><ellipse cx="2479" cy="2606.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2488" y="2609.4058">waitAllTasksFinished() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2469" x2="2830" y1="2616" y2="2616"/><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="158.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="5718" y="4810.9531"/><ellipse cx="5878.25" cy="4826.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5878.3594,4822.2969 L5877.2031,4827.375 L5879.5313,4827.375 L5878.3594,4822.2969 Z M5876.875,4820.0625 L5879.8594,4820.0625 L5883.2188,4832.4531 L5880.7656,4832.4531 L5880,4829.3906 L5876.7188,4829.3906 L5875.9688,4832.4531 L5873.5313,4832.4531 L5876.875,4820.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="5898.75" y="4831.1074">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5719" x2="6080" y1="4842.9531" y2="4842.9531"/><ellipse cx="5729" cy="4853.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5738" y="4857.1636">Poller(EventLoop * loop) : void</text><ellipse cx="5729" cy="4866.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5738" y="4869.9683">~Poller() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5719" x2="6080" y1="4876.5625" y2="4876.5625"/><ellipse cx="5729" cy="4887.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5738" y="4890.7729">assertInLoopThread() : void</text><ellipse cx="5729" cy="4900.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="5738" y="4903.5776">newPoller(EventLoop * loop) : Poller *</text><ellipse cx="5729" cy="4913.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="5738" y="4916.3823">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="5729" cy="4925.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="5738" y="4929.187">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="5729" cy="4938.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5738" y="4941.9917">resetAfterFork() : void</text><ellipse cx="5729" cy="4951.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="5738" y="4954.7964">updateChannel(Channel * channel) = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5719" x2="6080" y1="4961.3906" y2="4961.3906"/><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="145.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="6233" y="4816.9531"/><ellipse cx="6495.75" cy="4832.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6498.7188,4838.5938 Q6498.1406,4838.8906 6497.5,4839.0313 Q6496.8594,4839.1875 6496.1563,4839.1875 Q6493.6563,4839.1875 6492.3281,4837.5469 Q6491.0156,4835.8906 6491.0156,4832.7656 Q6491.0156,4829.6406 6492.3281,4827.9844 Q6493.6563,4826.3281 6496.1563,4826.3281 Q6496.8594,4826.3281 6497.5,4826.4844 Q6498.1563,4826.6406 6498.7188,4826.9375 L6498.7188,4829.6563 Q6498.0938,4829.0781 6497.5,4828.8125 Q6496.9063,4828.5313 6496.2813,4828.5313 Q6494.9375,4828.5313 6494.25,4829.6094 Q6493.5625,4830.6719 6493.5625,4832.7656 Q6493.5625,4834.8594 6494.25,4835.9375 Q6494.9375,4837 6496.2813,4837 Q6496.9063,4837 6497.5,4836.7344 Q6498.0938,4836.4531 6498.7188,4835.875 L6498.7188,4838.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="6516.25" y="4837.1074">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6234" x2="6841" y1="4848.9531" y2="4848.9531"/><ellipse cx="6244" cy="4859.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6253" y="4863.1636">TimerQueue(EventLoop * loop) : void</text><ellipse cx="6244" cy="4872.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6253" y="4875.9683">~TimerQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6234" x2="6841" y1="4882.5625" y2="4882.5625"/><ellipse cx="6244" cy="4893.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="6253" y="4896.7729">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="6244" cy="4906.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="6253" y="4909.5776">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="6244" cy="4919.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="6253" y="4922.3823">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="6244" cy="4931.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="6253" y="4935.187">invalidateTimer(TimerId id) : void</text><ellipse cx="6244" cy="4944.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6253" y="4947.9917">reset() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6234" x2="6841" y1="4954.5859" y2="4954.5859"/><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="427.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="5717.5" y="5190.9531"/><ellipse cx="5869.75" cy="5206.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5872.7188,5212.5938 Q5872.1406,5212.8906 5871.5,5213.0313 Q5870.8594,5213.1875 5870.1563,5213.1875 Q5867.6563,5213.1875 5866.3281,5211.5469 Q5865.0156,5209.8906 5865.0156,5206.7656 Q5865.0156,5203.6406 5866.3281,5201.9844 Q5867.6563,5200.3281 5870.1563,5200.3281 Q5870.8594,5200.3281 5871.5,5200.4844 Q5872.1563,5200.6406 5872.7188,5200.9375 L5872.7188,5203.6563 Q5872.0938,5203.0781 5871.5,5202.8125 Q5870.9063,5202.5313 5870.2813,5202.5313 Q5868.9375,5202.5313 5868.25,5203.6094 Q5867.5625,5204.6719 5867.5625,5206.7656 Q5867.5625,5208.8594 5868.25,5209.9375 Q5868.9375,5211 5870.2813,5211 Q5870.9063,5211 5871.5,5210.7344 Q5872.0938,5210.4531 5872.7188,5209.875 L5872.7188,5212.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5890.25" y="5211.1074">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5718.5" x2="6080.5" y1="5222.9531" y2="5222.9531"/><ellipse cx="5728.5" cy="5233.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="5737.5" y="5237.1636">Channel(EventLoop * loop, int fd) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5718.5" x2="6080.5" y1="5243.7578" y2="5243.7578"/><ellipse cx="5728.5" cy="5254.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5737.5" y="5257.9683">disableAll() : void</text><ellipse cx="5728.5" cy="5267.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5737.5" y="5270.7729">disableReading() : void</text><ellipse cx="5728.5" cy="5280.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="5737.5" y="5283.5776">disableWriting() : void</text><ellipse cx="5728.5" cy="5293.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5737.5" y="5296.3823">enableReading() : void</text><ellipse cx="5728.5" cy="5305.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5737.5" y="5309.187">enableWriting() : void</text><ellipse cx="5728.5" cy="5318.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5737.5" y="5321.9917">events() const : int</text><ellipse cx="5728.5" cy="5331.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="5737.5" y="5334.7964">fd() const : int</text><ellipse cx="5728.5" cy="5344.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5737.5" y="5347.6011">isNoneEvent() const : bool</text><ellipse cx="5728.5" cy="5357.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5737.5" y="5360.4058">isReading() const : bool</text><ellipse cx="5728.5" cy="5370" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5737.5" y="5373.2104">isWriting() const : bool</text><ellipse cx="5728.5" cy="5382.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="5737.5" y="5386.0151">ownerLoop() : EventLoop *</text><ellipse cx="5728.5" cy="5395.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5737.5" y="5398.8198">remove() : void</text><ellipse cx="5728.5" cy="5408.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5737.5" y="5411.6245">revents() const : int</text><ellipse cx="5728.5" cy="5421.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="5737.5" y="5424.4292">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5728.5" cy="5434.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="5737.5" y="5437.2339">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5728.5" cy="5446.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="5737.5" y="5450.0386">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5728.5" cy="5459.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="5737.5" y="5462.8433">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5728.5" cy="5472.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="5737.5" y="5475.6479">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5728.5" cy="5485.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5737.5" y="5488.4526">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5728.5" cy="5498.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="5737.5" y="5501.2573">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5728.5" cy="5510.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="5737.5" y="5514.062">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5728.5" cy="5523.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="5737.5" y="5526.8667">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5728.5" cy="5536.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="5737.5" y="5539.6714">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5728.5" cy="5549.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5737.5" y="5552.4761">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><ellipse cx="5728.5" cy="5562.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5737.5" y="5565.2808">updateEvents(int events) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5718.5" x2="6080.5" y1="5571.875" y2="5571.875"/><ellipse cx="5728.5" cy="5582.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="5737.5" y="5586.0854">kNoneEvent : const int</text><ellipse cx="5728.5" cy="5595.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="5737.5" y="5598.8901">kReadEvent : const int</text><ellipse cx="5728.5" cy="5608.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="5737.5" y="5611.6948">kWriteEvent : const int</text><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="145.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="2211" y="1183.4531"/><ellipse cx="2360.25" cy="1199.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2363.2188,1205.0938 Q2362.6406,1205.3906 2362,1205.5313 Q2361.3594,1205.6875 2360.6563,1205.6875 Q2358.1563,1205.6875 2356.8281,1204.0469 Q2355.5156,1202.3906 2355.5156,1199.2656 Q2355.5156,1196.1406 2356.8281,1194.4844 Q2358.1563,1192.8281 2360.6563,1192.8281 Q2361.3594,1192.8281 2362,1192.9844 Q2362.6563,1193.1406 2363.2188,1193.4375 L2363.2188,1196.1563 Q2362.5938,1195.5781 2362,1195.3125 Q2361.4063,1195.0313 2360.7813,1195.0313 Q2359.4375,1195.0313 2358.75,1196.1094 Q2358.0625,1197.1719 2358.0625,1199.2656 Q2358.0625,1201.3594 2358.75,1202.4375 Q2359.4375,1203.5 2360.7813,1203.5 Q2361.4063,1203.5 2362,1203.2344 Q2362.5938,1202.9531 2363.2188,1202.375 L2363.2188,1205.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="2380.75" y="1203.6074">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2212" x2="2657" y1="1215.4531" y2="1215.4531"/><ellipse cx="2222" cy="1226.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2231" y="1229.6636">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="2222" cy="1239.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2231" y="1242.4683">~ConcurrentTaskQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2212" x2="2657" y1="1249.0625" y2="1249.0625"/><ellipse cx="2222" cy="1260.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2231" y="1263.2729">getName() const : std::string</text><ellipse cx="2222" cy="1272.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2231" y="1276.0776">getTaskCount() : size_t</text><ellipse cx="2222" cy="1285.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2231" y="1288.8823">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2222" cy="1298.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2231" y="1301.687">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="2222" cy="1311.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2231" y="1314.4917">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2212" x2="2657" y1="1321.0859" y2="1321.0859"/><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="312.0938" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="6946" y="4199.9531"/><ellipse cx="7150.75" cy="4215.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7153.7188,4221.5938 Q7153.1406,4221.8906 7152.5,4222.0313 Q7151.8594,4222.1875 7151.1563,4222.1875 Q7148.6563,4222.1875 7147.3281,4220.5469 Q7146.0156,4218.8906 7146.0156,4215.7656 Q7146.0156,4212.6406 7147.3281,4210.9844 Q7148.6563,4209.3281 7151.1563,4209.3281 Q7151.8594,4209.3281 7152.5,4209.4844 Q7153.1563,4209.6406 7153.7188,4209.9375 L7153.7188,4212.6563 Q7153.0938,4212.0781 7152.5,4211.8125 Q7151.9063,4211.5313 7151.2813,4211.5313 Q7149.9375,4211.5313 7149.25,4212.6094 Q7148.5625,4213.6719 7148.5625,4215.7656 Q7148.5625,4217.8594 7149.25,4218.9375 Q7149.9375,4220 7151.2813,4220 Q7151.9063,4220 7152.5,4219.7344 Q7153.0938,4219.4531 7153.7188,4218.875 L7153.7188,4221.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="7171.25" y="4220.1074">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6947" x2="7438" y1="4231.9531" y2="4231.9531"/><ellipse cx="6957" cy="4242.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="6966" y="4246.1636">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="6957" cy="4255.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="6966" y="4258.9683">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="6957" cy="4268.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="6966" y="4271.7729">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="6957" cy="4281.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="6966" y="4284.5776">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6947" x2="7438" y1="4291.1719" y2="4291.1719"/><ellipse cx="6957" cy="4302.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6966" y="4305.3823">family() const : sa_family_t</text><ellipse cx="6957" cy="4314.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="6966" y="4318.187">getSockAddr() const : const struct sockaddr *</text><ellipse cx="6957" cy="4327.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6966" y="4330.9917">ip6NetEndian() const : const uint32_t *</text><ellipse cx="6957" cy="4340.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="6966" y="4343.7964">ipNetEndian() const : uint32_t</text><ellipse cx="6957" cy="4353.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6966" y="4356.6011">isIntranetIp() const : bool</text><ellipse cx="6957" cy="4366.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6966" y="4369.4058">isIpV6() const : bool</text><ellipse cx="6957" cy="4379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6966" y="4382.2104">isLoopbackIp() const : bool</text><ellipse cx="6957" cy="4391.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6966" y="4395.0151">isUnspecified() const : bool</text><ellipse cx="6957" cy="4404.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6966" y="4407.8198">portNetEndian() const : uint16_t</text><ellipse cx="6957" cy="4417.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6966" y="4420.6245">setPortNetEndian(uint16_t port) : void</text><ellipse cx="6957" cy="4430.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="6966" y="4433.4292">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="6957" cy="4443.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6966" y="4446.2339">toIp() const : std::string</text><ellipse cx="6957" cy="4455.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6966" y="4459.0386">toIpNetEndian() const : std::string</text><ellipse cx="6957" cy="4468.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6966" y="4471.8433">toIpPort() const : std::string</text><ellipse cx="6957" cy="4481.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="6966" y="4484.6479">toIpPortNetEndian() const : std::string</text><ellipse cx="6957" cy="4494.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6966" y="4497.4526">toPort() const : uint16_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6947" x2="7438" y1="4504.0469" y2="4504.0469"/><!--MD5=[fc18972faf1c61d69feddadc1f33c92d]
class C_0000673025168912921705--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="73.6094" id="C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="7098" y="4852.9531"/><ellipse cx="7141.8" cy="4868.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7144.7688,4874.5938 Q7144.1906,4874.8906 7143.55,4875.0313 Q7142.9094,4875.1875 7142.2063,4875.1875 Q7139.7063,4875.1875 7138.3781,4873.5469 Q7137.0656,4871.8906 7137.0656,4868.7656 Q7137.0656,4865.6406 7138.3781,4863.9844 Q7139.7063,4862.3281 7142.2063,4862.3281 Q7142.9094,4862.3281 7143.55,4862.4844 Q7144.2063,4862.6406 7144.7688,4862.9375 L7144.7688,4865.6563 Q7144.1438,4865.0781 7143.55,4864.8125 Q7142.9563,4864.5313 7142.3313,4864.5313 Q7140.9875,4864.5313 7140.3,4865.6094 Q7139.6125,4866.6719 7139.6125,4868.7656 Q7139.6125,4870.8594 7140.3,4871.9375 Q7140.9875,4873 7142.3313,4873 Q7142.9563,4873 7143.55,4872.7344 Q7144.1438,4872.4531 7144.7688,4871.875 L7144.7688,4874.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="7162.2" y="4873.1074">InetAddress::()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7099" x2="7286" y1="4884.9531" y2="4884.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7099" x2="7286" y1="4892.9531" y2="4892.9531"/><ellipse cx="7109" cy="4903.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7118" y="4907.1636">addr6_ : struct sockaddr_in6</text><ellipse cx="7109" cy="4916.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7118" y="4919.9683">addr_ : struct sockaddr_in</text><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="86.4141" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="3903.5" y="2792.4531"/><ellipse cx="3940.55" cy="2808.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3944.6594,2814.4531 L3936.9406,2814.4531 L3936.9406,2802.0625 L3944.6594,2802.0625 L3944.6594,2804.2188 L3939.3938,2804.2188 L3939.3938,2806.8906 L3944.1594,2806.8906 L3944.1594,2809.0469 L3939.3938,2809.0469 L3939.3938,2812.2969 L3944.6594,2812.2969 L3944.6594,2814.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="3959.45" y="2812.6074">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3904.5" x2="4036.5" y1="2824.4531" y2="2824.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3909.5" y="2838.6636">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3909.5" y="2851.4683">kSSLInvalidCertificate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3909.5" y="2864.2729">kSSLProtocolError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3904.5" x2="4036.5" y1="2870.8672" y2="2870.8672"/><!--MD5=[bc555c99f0e75025e1dcf95caffae609]
class C_0001660397537883119469--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="107.2188" id="C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="4092" y="3321.9531"/><ellipse cx="4187.25" cy="3337.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4187.3594,3333.2969 L4186.2031,3338.375 L4188.5313,3338.375 L4187.3594,3333.2969 Z M4185.875,3331.0625 L4188.8594,3331.0625 L4192.2188,3343.4531 L4189.7656,3343.4531 L4189,3340.3906 L4185.7188,3340.3906 L4184.9688,3343.4531 L4182.5313,3343.4531 L4185.875,3331.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="4207.75" y="3342.1074">Certificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4093" x2="4354" y1="3353.9531" y2="3353.9531"/><ellipse cx="4103" cy="3364.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4112" y="3368.1636">~Certificate() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4093" x2="4354" y1="3374.7578" y2="3374.7578"/><ellipse cx="4103" cy="3385.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4112" y="3388.9683">pem() const = 0 : std::string</text><ellipse cx="4103" cy="3398.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="4112" y="3401.7729">sha1Fingerprint() const = 0 : std::string</text><ellipse cx="4103" cy="3411.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="4112" y="3414.5776">sha256Fingerprint() const = 0 : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4093" x2="4354" y1="3421.1719" y2="3421.1719"/><!--MD5=[5368604bbb4530f9ed0e170f7ad54dab]
class C_0002100370281243872283--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="355.3125" id="C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.5;" width="637" x="4390" y="3197.9531"/><ellipse cx="4676.25" cy="3213.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4679.2188,3219.5938 Q4678.6406,3219.8906 4678,3220.0313 Q4677.3594,3220.1875 4676.6563,3220.1875 Q4674.1563,3220.1875 4672.8281,3218.5469 Q4671.5156,3216.8906 4671.5156,3213.7656 Q4671.5156,3210.6406 4672.8281,3208.9844 Q4674.1563,3207.3281 4676.6563,3207.3281 Q4677.3594,3207.3281 4678,3207.4844 Q4678.6563,3207.6406 4679.2188,3207.9375 L4679.2188,3210.6563 Q4678.5938,3210.0781 4678,3209.8125 Q4677.4063,3209.5313 4676.7813,3209.5313 Q4675.4375,3209.5313 4674.75,3210.6094 Q4674.0625,3211.6719 4674.0625,3213.7656 Q4674.0625,3215.8594 4674.75,3216.9375 Q4675.4375,3218 4676.7813,3218 Q4677.4063,3218 4678,3217.7344 Q4678.5938,3217.4531 4679.2188,3216.875 L4679.2188,3219.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="4696.75" y="3218.1074">TLSPolicy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4391" x2="5026" y1="3229.9531" y2="3229.9531"/><ellipse cx="4401" cy="3240.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="478" x="4410" y="3244.1636">defaultClientPolicy(const std::string &amp; hostname = "") : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="4401" cy="3253.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="611" x="4410" y="3256.9683">defaultServerPolicy(const std::string &amp; certPath, const std::string &amp; keyPath) : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="4401" cy="3266.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4410" y="3269.7729">getAllowBrokenChain() const : bool</text><ellipse cx="4401" cy="3279.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4410" y="3282.5776">getAlpnProtocols() : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="4401" cy="3292.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="4410" y="3295.3823">getAlpnProtocols() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="4401" cy="3304.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4410" y="3308.187">getCaPath() const : const std::string &amp;</text><ellipse cx="4401" cy="3317.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="4410" y="3320.9917">getCertPath() const : const std::string &amp;</text><ellipse cx="4401" cy="3330.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="4410" y="3333.7964">getConfCmds() const : const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp;</text><ellipse cx="4401" cy="3343.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4410" y="3346.6011">getHostname() const : const std::string &amp;</text><ellipse cx="4401" cy="3356.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="4410" y="3359.4058">getKeyPath() const : const std::string &amp;</text><ellipse cx="4401" cy="3369" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4410" y="3372.2104">getUseOldTLS() const : bool</text><ellipse cx="4401" cy="3381.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="4410" y="3385.0151">getUseSystemCertStore() const : bool</text><ellipse cx="4401" cy="3394.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4410" y="3397.8198">getValidate() const : bool</text><ellipse cx="4401" cy="3407.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="4410" y="3410.6245">setAllowBrokenChain(bool allow) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3420.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="4410" y="3423.4292">setAlpnProtocols(std::vector&lt;std::string&gt; &amp;&amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3433.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="4410" y="3436.2339">setAlpnProtocols(const std::vector&lt;std::string&gt; &amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3445.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="4410" y="3449.0386">setCaPath(const std::string &amp; caPath) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3458.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4410" y="3461.8433">setCertPath(const std::string &amp; certPath) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3471.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="560" x="4410" y="3474.6479">setConfCmds(const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3484.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="4410" y="3487.4526">setHostname(const std::string &amp; hostname) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3497.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4410" y="3500.2573">setKeyPath(const std::string &amp; keyPath) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3509.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4410" y="3513.062">setUseOldTLS(bool useOldTLS) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3522.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4410" y="3525.8667">setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &amp;</text><ellipse cx="4401" cy="3535.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4410" y="3538.6714">setValidate(bool enable) : TLSPolicy &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4391" x2="5026" y1="3545.2656" y2="3545.2656"/><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="734.6484" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1413" x="4327" y="888.9531"/><ellipse cx="4982.75" cy="904.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4982.8594,900.2969 L4981.7031,905.375 L4984.0313,905.375 L4982.8594,900.2969 Z M4981.375,898.0625 L4984.3594,898.0625 L4987.7188,910.4531 L4985.2656,910.4531 L4984.5,907.3906 L4981.2188,907.3906 L4980.4688,910.4531 L4978.0313,910.4531 L4981.375,898.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="5003.25" y="909.1074">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4328" x2="5739" y1="920.9531" y2="920.9531"/><ellipse cx="4338" cy="931.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="4347" y="935.1636">TcpConnection() = default : void</text><ellipse cx="4338" cy="944.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4347" y="947.9683">~TcpConnection() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4328" x2="5739" y1="954.5625" y2="954.5625"/><ellipse cx="4338" cy="965.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="242" x="4347" y="968.7729">applicationProtocol() const = 0 : std::string</text><ellipse cx="4338" cy="978.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="4347" y="981.5776">bytesReceived() const = 0 : size_t</text><ellipse cx="4338" cy="991.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="4347" y="994.3823">bytesSent() const = 0 : size_t</text><ellipse cx="4338" cy="1003.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4347" y="1007.187">clearContext() : void</text><ellipse cx="4338" cy="1016.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="170" x="4347" y="1019.9917">connectDestroyed() = 0 : void</text><ellipse cx="4338" cy="1029.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4347" y="1032.7964">connectEstablished() = 0 : void</text><ellipse cx="4338" cy="1042.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4347" y="1045.6011">connected() const = 0 : bool</text><ellipse cx="4338" cy="1055.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4347" y="1058.4058">disconnected() const = 0 : bool</text><ellipse cx="4338" cy="1068" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="547" x="4347" y="1071.2104">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) = 0 : void</text><ellipse cx="4338" cy="1080.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="4347" y="1084.0151">forceClose() = 0 : void</text><ellipse cx="4338" cy="1093.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="4347" y="1096.8198">getContext&lt;T&gt;() const : std::shared_ptr&lt;T&gt;</text><ellipse cx="4338" cy="1106.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="4347" y="1109.6245">getLoop() = 0 : EventLoop *</text><ellipse cx="4338" cy="1119.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="4347" y="1122.4292">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="4338" cy="1132.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4347" y="1135.2339">hasContext() const : bool</text><ellipse cx="4338" cy="1144.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="4347" y="1148.0386">isKeepAlive() = 0 : bool</text><ellipse cx="4338" cy="1157.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4347" y="1160.8433">isSSLConnection() const = 0 : bool</text><ellipse cx="4338" cy="1170.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="4347" y="1173.6479">keepAlive() = 0 : void</text><ellipse cx="4338" cy="1183.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4347" y="1186.4526">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4338" cy="1196.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4347" y="1199.2573">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4338" cy="1208.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="4347" y="1212.062">peerCertificate() const = 0 : CertificatePtr</text><ellipse cx="4338" cy="1221.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="4347" y="1224.8667">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="4338" cy="1234.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="4347" y="1237.6714">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="4338" cy="1247.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="4347" y="1250.4761">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="4338" cy="1260.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="4347" y="1263.2808">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="4338" cy="1272.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="4347" y="1276.0854">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="4338" cy="1285.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4347" y="1288.8901">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4338" cy="1298.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4347" y="1301.6948">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4338" cy="1311.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="4347" y="1314.4995">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="4338" cy="1324.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="4347" y="1327.3042">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4338" cy="1336.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="4347" y="1340.1089">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4338" cy="1349.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="4347" y="1352.9136">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="4338" cy="1362.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4347" y="1365.7183">setCloseCallback(CloseCallback &amp;&amp; cb) : void</text><ellipse cx="4338" cy="1375.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="4347" y="1378.5229">setCloseCallback(const CloseCallback &amp; cb) : void</text><ellipse cx="4338" cy="1388.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4347" y="1391.3276">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="4338" cy="1400.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4347" y="1404.1323">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4338" cy="1413.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4347" y="1416.937">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="4338" cy="1426.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="4347" y="1429.7417">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="4338" cy="1439.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="4347" y="1442.5464">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="4338" cy="1452.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4347" y="1455.3511">setRecvMsgCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="4338" cy="1464.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4347" y="1468.1558">setRecvMsgCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="4338" cy="1477.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4347" y="1480.9604">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4338" cy="1490.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4347" y="1493.7651">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="4338" cy="1503.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4347" y="1506.5698">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="4338" cy="1516.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4347" y="1519.3745">setValidationPolicy(TLSPolicy &amp;&amp; policy) : void</text><ellipse cx="4338" cy="1528.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4347" y="1532.1792">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="4338" cy="1541.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="4347" y="1544.9839">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="4338" cy="1554.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="4347" y="1557.7886">shutdown() = 0 : void</text><ellipse cx="4338" cy="1567.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="4347" y="1570.5933">sniName() const = 0 : std::string</text><ellipse cx="4338" cy="1580.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1387" x="4347" y="1583.3979">startClientEncryption(std::function&lt;void (const TcpConnectionPtr &amp;)&gt; &amp;&amp; callback, bool useOldTLS = false, bool validateCert = true, const std::string &amp; hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="4347" y="1596.2026">{}) : void</text><ellipse cx="4338" cy="1605.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="772" x="4347" y="1609.0073">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4328" x2="5739" y1="1615.6016" y2="1615.6016"/><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="363.3125" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="953" x="4844" y="243.9531"/><ellipse cx="5287.75" cy="259.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5290.7188,265.5938 Q5290.1406,265.8906 5289.5,266.0313 Q5288.8594,266.1875 5288.1563,266.1875 Q5285.6563,266.1875 5284.3281,264.5469 Q5283.0156,262.8906 5283.0156,259.7656 Q5283.0156,256.6406 5284.3281,254.9844 Q5285.6563,253.3281 5288.1563,253.3281 Q5288.8594,253.3281 5289.5,253.4844 Q5290.1563,253.6406 5290.7188,253.9375 L5290.7188,256.6563 Q5290.0938,256.0781 5289.5,255.8125 Q5288.9063,255.5313 5288.2813,255.5313 Q5286.9375,255.5313 5286.25,256.6094 Q5285.5625,257.6719 5285.5625,259.7656 Q5285.5625,261.8594 5286.25,262.9375 Q5286.9375,264 5288.2813,264 Q5288.9063,264 5289.5,263.7344 Q5290.0938,263.4531 5290.7188,262.875 L5290.7188,265.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="5308.25" y="264.1074">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4845" x2="5796" y1="275.9531" y2="275.9531"/><ellipse cx="4855" cy="286.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="4864" y="290.1636">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="4855" cy="299.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4864" y="302.9683">~TcpClient() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4845" x2="5796" y1="309.5625" y2="309.5625"/><ellipse cx="4855" cy="320.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="4864" y="323.7729">connect() : void</text><ellipse cx="4855" cy="333.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4864" y="336.5776">connection() const : TcpConnectionPtr</text><ellipse cx="4855" cy="346.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4864" y="349.3823">disconnect() : void</text><ellipse cx="4855" cy="358.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4864" y="362.187">enableRetry() : void</text><ellipse cx="4855" cy="371.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4864" y="374.9917">enableSSL(TLSPolicyPtr policy) : void</text><ellipse cx="4855" cy="384.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="927" x="4864" y="387.7964">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4864" y="400.6011">{}, const std::string &amp; certPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5062" y="400.6011">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="5286" y="400.6011">, const std::string &amp; caPath = "") : void</text><ellipse cx="4855" cy="410.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4864" y="413.4058">getLoop() const : EventLoop *</text><ellipse cx="4855" cy="423" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4864" y="426.2104">name() const : const std::string &amp;</text><ellipse cx="4855" cy="435.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="4864" y="439.0151">retry() const : bool</text><ellipse cx="4855" cy="448.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4864" y="451.8198">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="4855" cy="461.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4864" y="464.6245">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4855" cy="474.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="4864" y="477.4292">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="4855" cy="487.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="4864" y="490.2339">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="4855" cy="499.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="4864" y="503.0386">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="4855" cy="512.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4864" y="515.8433">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="4855" cy="525.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4864" y="528.6479">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4855" cy="538.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="4864" y="541.4526">setSockOptCallback(const SockOptCallback &amp; cb) : void</text><ellipse cx="4855" cy="551.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4864" y="554.2573">setSockOptCallback(SockOptCallback &amp;&amp; cb) : void</text><ellipse cx="4855" cy="563.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="4864" y="567.062">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="4855" cy="576.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4864" y="579.8667">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="4855" cy="589.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="4864" y="592.6714">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4845" x2="5796" y1="599.2656" y2="599.2656"/><!--MD5=[36897566f721d8b8c541721979fa9001]
class C_0001278908569830571044--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="60.8047" id="C_0001278908569830571044" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="8534" y="67.4531"/><ellipse cx="8549" cy="83.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8551.9688,89.0938 Q8551.3906,89.3906 8550.75,89.5313 Q8550.1094,89.6875 8549.4063,89.6875 Q8546.9063,89.6875 8545.5781,88.0469 Q8544.2656,86.3906 8544.2656,83.2656 Q8544.2656,80.1406 8545.5781,78.4844 Q8546.9063,76.8281 8549.4063,76.8281 Q8550.1094,76.8281 8550.75,76.9844 Q8551.4063,77.1406 8551.9688,77.4375 L8551.9688,80.1563 Q8551.3438,79.5781 8550.75,79.3125 Q8550.1563,79.0313 8549.5313,79.0313 Q8548.1875,79.0313 8547.5,80.1094 Q8546.8125,81.1719 8546.8125,83.2656 Q8546.8125,85.3594 8547.5,86.4375 Q8548.1875,87.5 8549.5313,87.5 Q8550.1563,87.5 8550.75,87.2344 Q8551.3438,86.9531 8551.9688,86.375 L8551.9688,89.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="8563" y="87.6074">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8535" x2="8716" y1="99.4531" y2="99.4531"/><ellipse cx="8545" cy="110.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="8554" y="113.6636">IgnoreSigPipe() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8535" x2="8716" y1="120.2578" y2="120.2578"/><!--MD5=[bf31e704e42c877df2dec6bd5fd054fb]
class C_0000464040622375950341--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="286.4844" id="C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="4658" y="2692.4531"/><ellipse cx="4859.25" cy="2708.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4859.3594,2703.7969 L4858.2031,2708.875 L4860.5313,2708.875 L4859.3594,2703.7969 Z M4857.875,2701.5625 L4860.8594,2701.5625 L4864.2188,2713.9531 L4861.7656,2713.9531 L4861,2710.8906 L4857.7188,2710.8906 L4856.9688,2713.9531 L4854.5313,2713.9531 L4857.875,2701.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="4879.75" y="2712.6074">TLSProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4659" x2="5140" y1="2724.4531" y2="2724.4531"/><ellipse cx="4669" cy="2735.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="4678" y="2738.6636">TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void</text><ellipse cx="4669" cy="2748.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4678" y="2751.4683">~TLSProvider() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4659" x2="5140" y1="2758.0625" y2="2758.0625"/><ellipse cx="4669" cy="2769.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="4678" y="2772.2729">appendToWriteBuffer(const char * ptr, size_t size) : void</text><ellipse cx="4669" cy="2781.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="4678" y="2785.0776">applicationProtocol() const : const std::string &amp;</text><ellipse cx="4669" cy="2794.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="4678" y="2797.8823">close() = 0 : void</text><ellipse cx="4669" cy="2807.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4678" y="2810.687">getBufferedData() : MsgBuffer &amp;</text><ellipse cx="4669" cy="2820.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4678" y="2823.4917">getRecvBuffer() : MsgBuffer &amp;</text><ellipse cx="4669" cy="2833.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4678" y="2836.2964">peerCertificate() const : const CertificatePtr &amp;</text><ellipse cx="4669" cy="2845.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="224" x="4678" y="2849.1011">recvData(MsgBuffer * buffer) = 0 : void</text><ellipse cx="4669" cy="2858.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4678" y="2861.9058">sendBufferedData() : bool</text><ellipse cx="4669" cy="2871.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="290" x="4678" y="2874.7104">sendData(const char * ptr, size_t size) = 0 : ssize_t</text><ellipse cx="4669" cy="2884.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4678" y="2887.5151">setCloseCallback(TLSProvider::CloseCallback cb) : void</text><ellipse cx="4669" cy="2897.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4678" y="2900.3198">setErrorCallback(TLSProvider::ErrorCallback cb) : void</text><ellipse cx="4669" cy="2909.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="4678" y="2913.1245">setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void</text><ellipse cx="4669" cy="2922.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4678" y="2925.9292">setMessageCallback(TLSProvider::MessageCallback cb) : void</text><ellipse cx="4669" cy="2935.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="4678" y="2938.7339">setWriteCallback(TLSProvider::WriteCallback cb) : void</text><ellipse cx="4669" cy="2948.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4678" y="2951.5386">sniName() const : const std::string &amp;</text><ellipse cx="4669" cy="2961.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="4678" y="2964.3433">startEncryption() = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4659" x2="5140" y1="2970.9375" y2="2970.9375"/><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="222.4609" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="7629" y="3778.9531"/><ellipse cx="7835.75" cy="3794.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7838.7188,3800.5938 Q7838.1406,3800.8906 7837.5,3801.0313 Q7836.8594,3801.1875 7836.1563,3801.1875 Q7833.6563,3801.1875 7832.3281,3799.5469 Q7831.0156,3797.8906 7831.0156,3794.7656 Q7831.0156,3791.6406 7832.3281,3789.9844 Q7833.6563,3788.3281 7836.1563,3788.3281 Q7836.8594,3788.3281 7837.5,3788.4844 Q7838.1563,3788.6406 7838.7188,3788.9375 L7838.7188,3791.6563 Q7838.0938,3791.0781 7837.5,3790.8125 Q7836.9063,3790.5313 7836.2813,3790.5313 Q7834.9375,3790.5313 7834.25,3791.6094 Q7833.5625,3792.6719 7833.5625,3794.7656 Q7833.5625,3796.8594 7834.25,3797.9375 Q7834.9375,3799 7836.2813,3799 Q7836.9063,3799 7837.5,3798.7344 Q7838.0938,3798.4531 7838.7188,3797.875 L7838.7188,3800.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="7856.25" y="3799.1074">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7630" x2="8115" y1="3810.9531" y2="3810.9531"/><ellipse cx="7640" cy="3821.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="7649" y="3825.1636">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="7640" cy="3834.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="7649" y="3837.9683">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="7640" cy="3847.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="7649" y="3850.7729">~Connector() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7630" x2="8115" y1="3857.3672" y2="3857.3672"/><ellipse cx="7640" cy="3868.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="7649" y="3871.5776">restart() : void</text><ellipse cx="7640" cy="3881.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="7649" y="3884.3823">serverAddress() const : const InetAddress &amp;</text><ellipse cx="7640" cy="3893.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="7649" y="3897.187">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="7640" cy="3906.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="7649" y="3909.9917">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="7640" cy="3919.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="7649" y="3922.7964">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="7640" cy="3932.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="7649" y="3935.6011">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="7640" cy="3945.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="7649" y="3948.4058">setSockOptCallback(const Connector::SockOptCallback &amp; cb) : void</text><ellipse cx="7640" cy="3958" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="7649" y="3961.2104">setSockOptCallback(Connector::SockOptCallback &amp;&amp; cb) : void</text><ellipse cx="7640" cy="3970.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="7649" y="3974.0151">start() : void</text><ellipse cx="7640" cy="3983.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="7649" y="3986.8198">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7630" x2="8115" y1="3993.4141" y2="3993.4141"/><!--MD5=[e79edad503674c7fc854de75a75b6c70]
class C_0000000982196670174162--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="86.4141" id="C_0000000982196670174162" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="6284.5" y="3332.4531"/><ellipse cx="6299.5" cy="3348.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6303.6094,3354.4531 L6295.8906,3354.4531 L6295.8906,3342.0625 L6303.6094,3342.0625 L6303.6094,3344.2188 L6298.3438,3344.2188 L6298.3438,3346.8906 L6303.1094,3346.8906 L6303.1094,3349.0469 L6298.3438,3349.0469 L6298.3438,3352.2969 L6303.6094,3352.2969 L6303.6094,3354.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="6313.5" y="3352.6074">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6285.5" x2="6429.5" y1="3364.4531" y2="3364.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="6290.5" y="3378.6636">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="6290.5" y="3391.4683">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="6290.5" y="3404.2729">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6285.5" x2="6429.5" y1="3410.8672" y2="3410.8672"/><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="120.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="5555.5" y="3315.4531"/><ellipse cx="5859.25" cy="3331.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5862.2188,3337.0938 Q5861.6406,3337.3906 5861,3337.5313 Q5860.3594,3337.6875 5859.6563,3337.6875 Q5857.1563,3337.6875 5855.8281,3336.0469 Q5854.5156,3334.3906 5854.5156,3331.2656 Q5854.5156,3328.1406 5855.8281,3326.4844 Q5857.1563,3324.8281 5859.6563,3324.8281 Q5860.3594,3324.8281 5861,3324.9844 Q5861.6563,3325.1406 5862.2188,3325.4375 L5862.2188,3328.1563 Q5861.5938,3327.5781 5861,3327.3125 Q5860.4063,3327.0313 5859.7813,3327.0313 Q5858.4375,3327.0313 5857.75,3328.1094 Q5857.0625,3329.1719 5857.0625,3331.2656 Q5857.0625,3333.3594 5857.75,3334.4375 Q5858.4375,3335.5 5859.7813,3335.5 Q5860.4063,3335.5 5861,3335.2344 Q5861.5938,3334.9531 5862.2188,3334.375 L5862.2188,3337.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="5879.75" y="3335.6074">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5556.5" x2="6248.5" y1="3347.4531" y2="3347.4531"/><ellipse cx="5566.5" cy="3358.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="5575.5" y="3361.6636">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="5566.5" cy="3371.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5575.5" y="3374.4683">~TimingWheel() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5556.5" x2="6248.5" y1="3381.0625" y2="3381.0625"/><ellipse cx="5566.5" cy="3392.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5575.5" y="3395.2729">getLoop() : EventLoop *</text><ellipse cx="5566.5" cy="3404.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5575.5" y="3408.0776">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5566.5" cy="3417.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="5575.5" y="3420.8823">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5556.5" x2="6248.5" y1="3427.4766" y2="3427.4766"/><!--MD5=[1a78d5db763eaae95321a32dcf46614d]
class C_0002013739811805694444--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="73.6094" id="C_0002013739811805694444" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="5610.5" y="2798.4531"/><ellipse cx="5664.25" cy="2814.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5667.2188,2820.0938 Q5666.6406,2820.3906 5666,2820.5313 Q5665.3594,2820.6875 5664.6563,2820.6875 Q5662.1563,2820.6875 5660.8281,2819.0469 Q5659.5156,2817.3906 5659.5156,2814.2656 Q5659.5156,2811.1406 5660.8281,2809.4844 Q5662.1563,2807.8281 5664.6563,2807.8281 Q5665.3594,2807.8281 5666,2807.9844 Q5666.6563,2808.1406 5667.2188,2808.4375 L5667.2188,2811.1563 Q5666.5938,2810.5781 5666,2810.3125 Q5665.4063,2810.0313 5664.7813,2810.0313 Q5663.4375,2810.0313 5662.75,2811.1094 Q5662.0625,2812.1719 5662.0625,2814.2656 Q5662.0625,2816.3594 5662.75,2817.4375 Q5663.4375,2818.5 5664.7813,2818.5 Q5665.4063,2818.5 5666,2818.2344 Q5666.5938,2817.9531 5667.2188,2817.375 L5667.2188,2820.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="5684.75" y="2818.6074">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5611.5" x2="5895.5" y1="2830.4531" y2="2830.4531"/><ellipse cx="5621.5" cy="2841.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5630.5" y="2844.6636">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="5621.5" cy="2854.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5630.5" y="2857.4683">~CallbackEntry() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5611.5" x2="5895.5" y1="2864.0625" y2="2864.0625"/><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="504.1641" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1036" x="3501.5" y="1905.9531"/><ellipse cx="3956.25" cy="1921.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3959.2188,1927.5938 Q3958.6406,1927.8906 3958,1928.0313 Q3957.3594,1928.1875 3956.6563,1928.1875 Q3954.1563,1928.1875 3952.8281,1926.5469 Q3951.5156,1924.8906 3951.5156,1921.7656 Q3951.5156,1918.6406 3952.8281,1916.9844 Q3954.1563,1915.3281 3956.6563,1915.3281 Q3957.3594,1915.3281 3958,1915.4844 Q3958.6563,1915.6406 3959.2188,1915.9375 L3959.2188,1918.6563 Q3958.5938,1918.0781 3958,1917.8125 Q3957.4063,1917.5313 3956.7813,1917.5313 Q3955.4375,1917.5313 3954.75,1918.6094 Q3954.0625,1919.6719 3954.0625,1921.7656 Q3954.0625,1923.8594 3954.75,1924.9375 Q3955.4375,1926 3956.7813,1926 Q3957.4063,1926 3958,1925.7344 Q3958.5938,1925.4531 3959.2188,1924.875 L3959.2188,1927.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="3976.75" y="1926.1074">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3502.5" x2="4536.5" y1="1937.9531" y2="1937.9531"/><ellipse cx="3512.5" cy="1948.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1010" x="3521.5" y="1952.1636">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void</text><ellipse cx="3512.5" cy="1961.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3521.5" y="1964.9683">~TcpConnectionImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3502.5" x2="4536.5" y1="1971.5625" y2="1971.5625"/><ellipse cx="3512.5" cy="1982.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3521.5" y="1985.7729">applicationProtocol() const : std::string</text><ellipse cx="3512.5" cy="1995.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3521.5" y="1998.5776">bytesReceived() const : size_t</text><ellipse cx="3512.5" cy="2008.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3521.5" y="2011.3823">bytesSent() const : size_t</text><ellipse cx="3512.5" cy="2020.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3521.5" y="2024.187">connectDestroyed() : void</text><ellipse cx="3512.5" cy="2033.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3521.5" y="2036.9917">connectEstablished() : void</text><ellipse cx="3512.5" cy="2046.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="3521.5" y="2049.7964">connected() const : bool</text><ellipse cx="3512.5" cy="2059.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3521.5" y="2062.6011">disconnected() const : bool</text><ellipse cx="3512.5" cy="2072.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="3521.5" y="2075.4058">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) : void</text><ellipse cx="3512.5" cy="2085" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3521.5" y="2088.2104">forceClose() : void</text><ellipse cx="3512.5" cy="2097.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3521.5" y="2101.0151">getLoop() : EventLoop *</text><ellipse cx="3512.5" cy="2110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3521.5" y="2113.8198">getRecvBuffer() : MsgBuffer *</text><ellipse cx="3512.5" cy="2123.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3521.5" y="2126.6245">isKeepAlive() : bool</text><ellipse cx="3512.5" cy="2136.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3521.5" y="2139.4292">isSSLConnection() const : bool</text><ellipse cx="3512.5" cy="2149.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="3521.5" y="2152.2339">keepAlive() : void</text><ellipse cx="3512.5" cy="2161.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3521.5" y="2165.0386">localAddr() const : const InetAddress &amp;</text><ellipse cx="3512.5" cy="2174.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3521.5" y="2177.8433">peerAddr() const : const InetAddress &amp;</text><ellipse cx="3512.5" cy="2187.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="3521.5" y="2190.6479">peerCertificate() const : CertificatePtr</text><ellipse cx="3512.5" cy="2200.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="3521.5" y="2203.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="3512.5" cy="2213.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="3521.5" y="2216.2573">send(const void * msg, size_t len) : void</text><ellipse cx="3512.5" cy="2225.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3521.5" y="2229.062">send(const std::string &amp; msg) : void</text><ellipse cx="3512.5" cy="2238.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="3521.5" y="2241.8667">send(std::string &amp;&amp; msg) : void</text><ellipse cx="3512.5" cy="2251.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="3521.5" y="2254.6714">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="3512.5" cy="2264.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="3521.5" y="2267.4761">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="3512.5" cy="2277.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="3521.5" y="2280.2808">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="3512.5" cy="2289.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="3521.5" y="2293.0854">send(const char * msg, size_t len) : void</text><ellipse cx="3512.5" cy="2302.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3521.5" y="2305.8901">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="3512.5" cy="2315.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="3521.5" y="2318.6948">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="3512.5" cy="2328.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3521.5" y="2331.4995">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="3512.5" cy="2341.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="3521.5" y="2344.3042">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="3512.5" cy="2353.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3521.5" y="2357.1089">setTcpNoDelay(bool on) : void</text><ellipse cx="3512.5" cy="2366.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3521.5" y="2369.9136">shutdown() : void</text><ellipse cx="3512.5" cy="2379.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3521.5" y="2382.7183">sniName() const : std::string</text><ellipse cx="3512.5" cy="2392.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="749" x="3521.5" y="2395.5229">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3502.5" x2="4536.5" y1="2402.1172" y2="2402.1172"/><!--MD5=[fd31fd44dd4b53895283cc4ebf0192ff]
class C_0002266895444343633259--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="86.4141" id="C_0002266895444343633259" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="4027" y="382.4531"/><ellipse cx="4120.25" cy="398.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4123.2188,404.0938 Q4122.6406,404.3906 4122,404.5313 Q4121.3594,404.6875 4120.6563,404.6875 Q4118.1563,404.6875 4116.8281,403.0469 Q4115.5156,401.3906 4115.5156,398.2656 Q4115.5156,395.1406 4116.8281,393.4844 Q4118.1563,391.8281 4120.6563,391.8281 Q4121.3594,391.8281 4122,391.9844 Q4122.6563,392.1406 4123.2188,392.4375 L4123.2188,395.1563 Q4122.5938,394.5781 4122,394.3125 Q4121.4063,394.0313 4120.7813,394.0313 Q4119.4375,394.0313 4118.75,395.1094 Q4118.0625,396.1719 4118.0625,398.2656 Q4118.0625,400.3594 4118.75,401.4375 Q4119.4375,402.5 4120.7813,402.5 Q4121.4063,402.5 4122,402.2344 Q4122.5938,401.9531 4123.2188,401.375 L4123.2188,404.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="4140.75" y="402.6074">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4028" x2="4419" y1="414.4531" y2="414.4531"/><ellipse cx="4038" cy="425.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="4047" y="428.6636">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="4038" cy="438.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4047" y="441.4683">reset() : void</text><ellipse cx="4038" cy="451.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4047" y="454.2729">~KickoffEntry() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4028" x2="4419" y1="460.8672" y2="460.8672"/><!--MD5=[87de1d9bdb2486f0ceeb68ee204e5830]
class C_0001029063960859366412--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="163.2422" id="C_0001029063960859366412" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="3903.5" y="1174.9531"/><ellipse cx="3995.25" cy="1190.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3998.2188,1196.5938 Q3997.6406,1196.8906 3997,1197.0313 Q3996.3594,1197.1875 3995.6563,1197.1875 Q3993.1563,1197.1875 3991.8281,1195.5469 Q3990.5156,1193.8906 3990.5156,1190.7656 Q3990.5156,1187.6406 3991.8281,1185.9844 Q3993.1563,1184.3281 3995.6563,1184.3281 Q3996.3594,1184.3281 3997,1184.4844 Q3997.6563,1184.6406 3998.2188,1184.9375 L3998.2188,1187.6563 Q3997.5938,1187.0781 3997,1186.8125 Q3996.4063,1186.5313 3995.7813,1186.5313 Q3994.4375,1186.5313 3993.75,1187.6094 Q3993.0625,1188.6719 3993.0625,1190.7656 Q3993.0625,1192.8594 3993.75,1193.9375 Q3994.4375,1195 3995.7813,1195 Q3996.4063,1195 3997,1194.7344 Q3997.5938,1194.4531 3998.2188,1193.875 L3998.2188,1196.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="4015.75" y="1195.1074">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3904.5" x2="4290.5" y1="1206.9531" y2="1206.9531"/><ellipse cx="3914.5" cy="1217.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3923.5" y="1221.1636">isFile() const : bool</text><ellipse cx="3914.5" cy="1230.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3923.5" y="1233.9683">~BufferNode() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3904.5" x2="4290.5" y1="1240.5625" y2="1240.5625"/><ellipse cx="3914.5" cy="1251.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3923.5" y="1254.7729">closeConnection_ : bool</text><ellipse cx="3914.5" cy="1264.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3923.5" y="1267.5776">fileBytesToSend_ : ssize_t</text><ellipse cx="3914.5" cy="1277.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3923.5" y="1280.3823">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><ellipse cx="3914.5" cy="1289.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3923.5" y="1293.187">nDataWritten_ : std::size_t</text><ellipse cx="3914.5" cy="1302.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3923.5" y="1305.9917">offset_ : off_t</text><ellipse cx="3914.5" cy="1315.5859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3923.5" y="1318.7964">sendFd_ : int</text><ellipse cx="3914.5" cy="1328.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3923.5" y="1331.6011">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[8afb725b5f97df604240a26bac5b9bd6]
class C_0001727349338344491225--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="99.2188" id="C_0001727349338344491225" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="3501" y="1206.9531"/><ellipse cx="3516" cy="1222.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3520.1094,1228.9531 L3512.3906,1228.9531 L3512.3906,1216.5625 L3520.1094,1216.5625 L3520.1094,1218.7188 L3514.8438,1218.7188 L3514.8438,1221.3906 L3519.6094,1221.3906 L3519.6094,1223.5469 L3514.8438,1223.5469 L3514.8438,1226.7969 L3520.1094,1226.7969 L3520.1094,1228.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="3530" y="1227.1074">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3502" x2="3731" y1="1238.9531" y2="1238.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3507" y="1253.1636">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="3507" y="1265.9683">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3507" y="1278.7729">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="3507" y="1291.5776">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3502" x2="3731" y1="1298.1719" y2="1298.1719"/><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="312.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="6918.5" y="3733.9531"/><ellipse cx="7049.75" cy="3749.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7052.7188,3755.5938 Q7052.1406,3755.8906 7051.5,3756.0313 Q7050.8594,3756.1875 7050.1563,3756.1875 Q7047.6563,3756.1875 7046.3281,3754.5469 Q7045.0156,3752.8906 7045.0156,3749.7656 Q7045.0156,3746.6406 7046.3281,3744.9844 Q7047.6563,3743.3281 7050.1563,3743.3281 Q7050.8594,3743.3281 7051.5,3743.4844 Q7052.1563,3743.6406 7052.7188,3743.9375 L7052.7188,3746.6563 Q7052.0938,3746.0781 7051.5,3745.8125 Q7050.9063,3745.5313 7050.2813,3745.5313 Q7048.9375,3745.5313 7048.25,3746.6094 Q7047.5625,3747.6719 7047.5625,3749.7656 Q7047.5625,3751.8594 7048.25,3752.9375 Q7048.9375,3754 7050.2813,3754 Q7050.9063,3754 7051.5,3753.7344 Q7052.0938,3753.4531 7052.7188,3752.875 L7052.7188,3755.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="7070.25" y="3754.1074">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6919.5" x2="7231.5" y1="3765.9531" y2="3765.9531"/><ellipse cx="6929.5" cy="3776.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6938.5" y="3780.1636">Socket(int sockfd) : void</text><ellipse cx="6929.5" cy="3789.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6938.5" y="3792.9683">~Socket() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6919.5" x2="7231.5" y1="3799.5625" y2="3799.5625"/><ellipse cx="6929.5" cy="3810.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="6938.5" y="3813.7729">accept(InetAddress * peeraddr) : int</text><ellipse cx="6929.5" cy="3823.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="6938.5" y="3826.5776">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="6929.5" cy="3836.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6938.5" y="3839.3823">closeWrite() : void</text><ellipse cx="6929.5" cy="3848.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="6938.5" y="3852.187">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="6929.5" cy="3861.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="6938.5" y="3864.9917">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="6929.5" cy="3874.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="6938.5" y="3877.7964">fd() : int</text><ellipse cx="6929.5" cy="3887.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="6938.5" y="3890.6011">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="6929.5" cy="3900.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="6938.5" y="3903.4058">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="6929.5" cy="3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="6938.5" y="3916.2104">getSocketError(int sockfd) : int</text><ellipse cx="6929.5" cy="3925.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6938.5" y="3929.0151">getSocketError() : int</text><ellipse cx="6929.5" cy="3938.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="6938.5" y="3941.8198">isSelfConnect(int sockfd) : bool</text><ellipse cx="6929.5" cy="3951.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6938.5" y="3954.6245">listen() : void</text><ellipse cx="6929.5" cy="3964.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="6938.5" y="3967.4292">read(char * buffer, uint64_t len) : int</text><ellipse cx="6929.5" cy="3977.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="6938.5" y="3980.2339">setKeepAlive(bool on) : void</text><ellipse cx="6929.5" cy="3989.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="6938.5" y="3993.0386">setNonBlockAndCloseOnExec(int sockfd) : void</text><ellipse cx="6929.5" cy="4002.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6938.5" y="4005.8433">setReuseAddr(bool on) : void</text><ellipse cx="6929.5" cy="4015.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6938.5" y="4018.6479">setReusePort(bool on) : void</text><ellipse cx="6929.5" cy="4028.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6938.5" y="4031.4526">setTcpNoDelay(bool on) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6919.5" x2="7231.5" y1="4038.0469" y2="4038.0469"/><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="6465.5" y="3351.4531"/><ellipse cx="6480.5" cy="3367.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6483.4688,3373.0938 Q6482.8906,3373.3906 6482.25,3373.5313 Q6481.6094,3373.6875 6480.9063,3373.6875 Q6478.4063,3373.6875 6477.0781,3372.0469 Q6475.7656,3370.3906 6475.7656,3367.2656 Q6475.7656,3364.1406 6477.0781,3362.4844 Q6478.4063,3360.8281 6480.9063,3360.8281 Q6481.6094,3360.8281 6482.25,3360.9844 Q6482.9063,3361.1406 6483.4688,3361.4375 L6483.4688,3364.1563 Q6482.8438,3363.5781 6482.25,3363.3125 Q6481.6563,3363.0313 6481.0313,3363.0313 Q6479.6875,3363.0313 6479,3364.1094 Q6478.3125,3365.1719 6478.3125,3367.2656 Q6478.3125,3369.3594 6479,3370.4375 Q6479.6875,3371.5 6481.0313,3371.5 Q6481.6563,3371.5 6482.25,3371.2344 Q6482.8438,3370.9531 6483.4688,3370.375 L6483.4688,3373.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="6494.5" y="3371.6074">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6466.5" x2="6566.5" y1="3383.4531" y2="3383.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6466.5" x2="6566.5" y1="3391.4531" y2="3391.4531"/><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="363.3125" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="985" x="6003" y="2653.9531"/><ellipse cx="6460.25" cy="2669.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6463.2188,2675.5938 Q6462.6406,2675.8906 6462,2676.0313 Q6461.3594,2676.1875 6460.6563,2676.1875 Q6458.1563,2676.1875 6456.8281,2674.5469 Q6455.5156,2672.8906 6455.5156,2669.7656 Q6455.5156,2666.6406 6456.8281,2664.9844 Q6458.1563,2663.3281 6460.6563,2663.3281 Q6461.3594,2663.3281 6462,2663.4844 Q6462.6563,2663.6406 6463.2188,2663.9375 L6463.2188,2666.6563 Q6462.5938,2666.0781 6462,2665.8125 Q6461.4063,2665.5313 6460.7813,2665.5313 Q6459.4375,2665.5313 6458.75,2666.6094 Q6458.0625,2667.6719 6458.0625,2669.7656 Q6458.0625,2671.8594 6458.75,2672.9375 Q6459.4375,2674 6460.7813,2674 Q6461.4063,2674 6462,2673.7344 Q6462.5938,2673.4531 6463.2188,2672.875 L6463.2188,2675.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="6480.75" y="2674.1074">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6004" x2="6987" y1="2685.9531" y2="2685.9531"/><ellipse cx="6014" cy="2696.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="745" x="6023" y="2700.1636">TcpServer(EventLoop * loop, const InetAddress &amp; address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="6014" cy="2709.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6023" y="2712.9683">~TcpServer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6004" x2="6987" y1="2719.5625" y2="2719.5625"/><ellipse cx="6014" cy="2730.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6023" y="2733.7729">address() const : const InetAddress &amp;</text><ellipse cx="6014" cy="2743.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6023" y="2746.5776">enableSSL(TLSPolicyPtr policy) : void</text><ellipse cx="6014" cy="2756.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="959" x="6023" y="2759.3823">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="6023" y="2772.187">{}, const std::string &amp; caPath = "") : void</text><ellipse cx="6014" cy="2781.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="6023" y="2784.9917">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="6014" cy="2794.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6023" y="2797.7964">getLoop() const : EventLoop *</text><ellipse cx="6014" cy="2807.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="6023" y="2810.6011">ipPort() const : std::string</text><ellipse cx="6014" cy="2820.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="6023" y="2823.4058">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="6014" cy="2833" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="6023" y="2836.2104">name() const : const std::string &amp;</text><ellipse cx="6014" cy="2845.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="6023" y="2849.0151">setAfterAcceptSockOptCallback(SockOptCallback cb) : void</text><ellipse cx="6014" cy="2858.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="6023" y="2861.8198">setBeforeListenSockOptCallback(SockOptCallback cb) : void</text><ellipse cx="6014" cy="2871.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="6023" y="2874.6245">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="6014" cy="2884.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="6023" y="2887.4292">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="6014" cy="2897.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6023" y="2900.2339">setIoLoopNum(size_t num) : void</text><ellipse cx="6014" cy="2909.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="6023" y="2913.0386">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="6014" cy="2922.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="6023" y="2925.8433">setIoLoops(const std::vector&lt;EventLoop *&gt; &amp; ioLoops) : void</text><ellipse cx="6014" cy="2935.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="6023" y="2938.6479">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="6014" cy="2948.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="6023" y="2951.4526">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="6014" cy="2961.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="6023" y="2964.2573">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="6014" cy="2973.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="6023" y="2977.062">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="6014" cy="2986.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="6023" y="2989.8667">start() : void</text><ellipse cx="6014" cy="2999.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="6023" y="3002.6714">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6004" x2="6987" y1="3009.2656" y2="3009.2656"/><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="158.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="2977" y="3296.4531"/><ellipse cx="3200.25" cy="3312.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3203.2188,3318.0938 Q3202.6406,3318.3906 3202,3318.5313 Q3201.3594,3318.6875 3200.6563,3318.6875 Q3198.1563,3318.6875 3196.8281,3317.0469 Q3195.5156,3315.3906 3195.5156,3312.2656 Q3195.5156,3309.1406 3196.8281,3307.4844 Q3198.1563,3305.8281 3200.6563,3305.8281 Q3201.3594,3305.8281 3202,3305.9844 Q3202.6563,3306.1406 3203.2188,3306.4375 L3203.2188,3309.1563 Q3202.5938,3308.5781 3202,3308.3125 Q3201.4063,3308.0313 3200.7813,3308.0313 Q3199.4375,3308.0313 3198.75,3309.1094 Q3198.0625,3310.1719 3198.0625,3312.2656 Q3198.0625,3314.3594 3198.75,3315.4375 Q3199.4375,3316.5 3200.7813,3316.5 Q3201.4063,3316.5 3202,3316.2344 Q3202.5938,3315.9531 3203.2188,3315.375 L3203.2188,3318.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="3220.75" y="3316.6074">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2978" x2="3567" y1="3328.4531" y2="3328.4531"/><ellipse cx="2988" cy="3339.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="2997" y="3342.6636">EventLoopThreadPool() = deleted : void</text><ellipse cx="2988" cy="3352.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2997" y="3355.4683">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2978" x2="3567" y1="3362.0625" y2="3362.0625"/><ellipse cx="2988" cy="3373.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2997" y="3376.2729">getLoop(size_t id) : EventLoop *</text><ellipse cx="2988" cy="3385.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2997" y="3389.0776">getLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="2988" cy="3398.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2997" y="3401.8823">getNextLoop() : EventLoop *</text><ellipse cx="2988" cy="3411.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2997" y="3414.687">size() : size_t</text><ellipse cx="2988" cy="3424.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2997" y="3427.4917">start() : void</text><ellipse cx="2988" cy="3437.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2997" y="3440.2964">wait() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2978" x2="3567" y1="3446.8906" y2="3446.8906"/><!--MD5=[8fb7d425c930a356f66377cadc9e5510]
class C_0000051485486938383234--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="73.6094" id="C_0000051485486938383234" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="6" y="388.4531"/><ellipse cx="21" cy="404.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,410.0938 Q23.3906,410.3906 22.75,410.5313 Q22.1094,410.6875 21.4063,410.6875 Q18.9063,410.6875 17.5781,409.0469 Q16.2656,407.3906 16.2656,404.2656 Q16.2656,401.1406 17.5781,399.4844 Q18.9063,397.8281 21.4063,397.8281 Q22.1094,397.8281 22.75,397.9844 Q23.4063,398.1406 23.9688,398.4375 L23.9688,401.1563 Q23.3438,400.5781 22.75,400.3125 Q22.1563,400.0313 21.5313,400.0313 Q20.1875,400.0313 19.5,401.1094 Q18.8125,402.1719 18.8125,404.2656 Q18.8125,406.3594 19.5,407.4375 Q20.1875,408.5 21.5313,408.5 Q22.1563,408.5 22.75,408.2344 Q23.3438,407.9531 23.9688,407.375 L23.9688,410.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="35" y="408.6074">InetAddress::(anonymous_2591690)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="420.4531" y2="420.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="428.4531" y2="428.4531"/><ellipse cx="17" cy="439.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="442.6636">addr6_ : struct sockaddr_in6</text><ellipse cx="17" cy="452.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="455.4683">addr_ : struct sockaddr_in</text><!--MD5=[094a28402c24830a9b549b01e4879f1e]
class C_0001489562721151066050--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="60.8047" id="C_0001489562721151066050" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="6785.5" y="2127.4531"/><ellipse cx="6800.5" cy="2143.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6803.4688,2149.0938 Q6802.8906,2149.3906 6802.25,2149.5313 Q6801.6094,2149.6875 6800.9063,2149.6875 Q6798.4063,2149.6875 6797.0781,2148.0469 Q6795.7656,2146.3906 6795.7656,2143.2656 Q6795.7656,2140.1406 6797.0781,2138.4844 Q6798.4063,2136.8281 6800.9063,2136.8281 Q6801.6094,2136.8281 6802.25,2136.9844 Q6802.9063,2137.1406 6803.4688,2137.4375 L6803.4688,2140.1563 Q6802.8438,2139.5781 6802.25,2139.3125 Q6801.6563,2139.0313 6801.0313,2139.0313 Q6799.6875,2139.0313 6799,2140.1094 Q6798.3125,2141.1719 6798.3125,2143.2656 Q6798.3125,2145.3594 6799,2146.4375 Q6799.6875,2147.5 6801.0313,2147.5 Q6801.6563,2147.5 6802.25,2147.2344 Q6802.8438,2146.9531 6803.4688,2146.375 L6803.4688,2149.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="6814.5" y="2147.6074">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6786.5" x2="6972.5" y1="2159.4531" y2="2159.4531"/><ellipse cx="6796.5" cy="2170.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6805.5" y="2173.6636">IgnoreSigPipe() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6786.5" x2="6972.5" y1="2180.2578" y2="2180.2578"/><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="145.6328" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="6983.5" y="3302.4531"/><ellipse cx="7270.25" cy="3318.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7273.2188,3324.0938 Q7272.6406,3324.3906 7272,3324.5313 Q7271.3594,3324.6875 7270.6563,3324.6875 Q7268.1563,3324.6875 7266.8281,3323.0469 Q7265.5156,3321.3906 7265.5156,3318.2656 Q7265.5156,3315.1406 7266.8281,3313.4844 Q7268.1563,3311.8281 7270.6563,3311.8281 Q7271.3594,3311.8281 7272,3311.9844 Q7272.6563,3312.1406 7273.2188,3312.4375 L7273.2188,3315.1563 Q7272.5938,3314.5781 7272,3314.3125 Q7271.4063,3314.0313 7270.7813,3314.0313 Q7269.4375,3314.0313 7268.75,3315.1094 Q7268.0625,3316.1719 7268.0625,3318.2656 Q7268.0625,3320.3594 7268.75,3321.4375 Q7269.4375,3322.5 7270.7813,3322.5 Q7271.4063,3322.5 7272,3322.2344 Q7272.5938,3321.9531 7273.2188,3321.375 L7273.2188,3324.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="7290.75" y="3322.6074">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6984.5" x2="7620.5" y1="3334.4531" y2="3334.4531"/><ellipse cx="6994.5" cy="3345.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="7003.5" y="3348.6636">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="6994.5" cy="3358.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7003.5" y="3361.4683">~Acceptor() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6984.5" x2="7620.5" y1="3368.0625" y2="3368.0625"/><ellipse cx="6994.5" cy="3379.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7003.5" y="3382.2729">addr() const : const InetAddress &amp;</text><ellipse cx="6994.5" cy="3391.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7003.5" y="3395.0776">listen() : void</text><ellipse cx="6994.5" cy="3404.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="7003.5" y="3407.8823">setAfterAcceptSockOptCallback(AcceptorSockOptCallback cb) : void</text><ellipse cx="6994.5" cy="3417.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="7003.5" y="3420.687">setBeforeListenSockOptCallback(AcceptorSockOptCallback cb) : void</text><ellipse cx="6994.5" cy="3430.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="7003.5" y="3433.4917">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6984.5" x2="7620.5" y1="3440.0859" y2="3440.0859"/><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="300" y="382.4531"/><ellipse cx="424.75" cy="398.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M427.7188,404.0938 Q427.1406,404.3906 426.5,404.5313 Q425.8594,404.6875 425.1563,404.6875 Q422.6563,404.6875 421.3281,403.0469 Q420.0156,401.3906 420.0156,398.2656 Q420.0156,395.1406 421.3281,393.4844 Q422.6563,391.8281 425.1563,391.8281 Q425.8594,391.8281 426.5,391.9844 Q427.1563,392.1406 427.7188,392.4375 L427.7188,395.1563 Q427.0938,394.5781 426.5,394.3125 Q425.9063,394.0313 425.2813,394.0313 Q423.9375,394.0313 423.25,395.1094 Q422.5625,396.1719 422.5625,398.2656 Q422.5625,400.3594 423.25,401.4375 Q423.9375,402.5 425.2813,402.5 Q425.9063,402.5 426.5,402.2344 Q427.0938,401.9531 427.7188,401.375 L427.7188,404.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="445.25" y="402.6074">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="301" x2="564" y1="414.4531" y2="414.4531"/><ellipse cx="311" cy="425.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="320" y="428.6636">T(const char * str, unsigned int len) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="301" x2="564" y1="435.2578" y2="435.2578"/><ellipse cx="311" cy="446.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="320" y="449.4683">len_ : const unsigned int</text><ellipse cx="311" cy="459.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="320" y="462.2729">str_ : const char *</text><!--MD5=[da87277bedcb07dc571b3074b5ceaf4d]
class C_0001331044972460795182--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="73.6094" id="C_0001331044972460795182" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="600" y="388.4531"/><ellipse cx="615" cy="404.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M617.9688,410.0938 Q617.3906,410.3906 616.75,410.5313 Q616.1094,410.6875 615.4063,410.6875 Q612.9063,410.6875 611.5781,409.0469 Q610.2656,407.3906 610.2656,404.2656 Q610.2656,401.1406 611.5781,399.4844 Q612.9063,397.8281 615.4063,397.8281 Q616.1094,397.8281 616.75,397.9844 Q617.4063,398.1406 617.9688,398.4375 L617.9688,401.1563 Q617.3438,400.5781 616.75,400.3125 Q616.1563,400.0313 615.5313,400.0313 Q614.1875,400.0313 613.5,401.1094 Q612.8125,402.1719 612.8125,404.2656 Q612.8125,406.3594 613.5,407.4375 Q614.1875,408.5 615.5313,408.5 Q616.1563,408.5 616.75,408.2344 Q617.3438,407.9531 617.9688,407.375 L617.9688,410.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="629" y="408.6074">InetAddress::(anonymous_1207742)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="601" x2="858" y1="420.4531" y2="420.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="601" x2="858" y1="428.4531" y2="428.4531"/><ellipse cx="611" cy="439.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="620" y="442.6636">addr6_ : struct sockaddr_in6</text><ellipse cx="611" cy="452.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="620" y="455.4683">addr_ : struct sockaddr_in</text><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="192.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="8486.5" y="5308.4531"/><ellipse cx="8749.25" cy="5324.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8752.2188,5330.0938 Q8751.6406,5330.3906 8751,5330.5313 Q8750.3594,5330.6875 8749.6563,5330.6875 Q8747.1563,5330.6875 8745.8281,5329.0469 Q8744.5156,5327.3906 8744.5156,5324.2656 Q8744.5156,5321.1406 8745.8281,5319.4844 Q8747.1563,5317.8281 8749.6563,5317.8281 Q8750.3594,5317.8281 8751,5317.9844 Q8751.6563,5318.1406 8752.2188,5318.4375 L8752.2188,5321.1563 Q8751.5938,5320.5781 8751,5320.3125 Q8750.4063,5320.0313 8749.7813,5320.0313 Q8748.4375,5320.0313 8747.75,5321.1094 Q8747.0625,5322.1719 8747.0625,5324.2656 Q8747.0625,5326.3594 8747.75,5327.4375 Q8748.4375,5328.5 8749.7813,5328.5 Q8750.4063,5328.5 8751,5328.2344 Q8751.5938,5327.9531 8752.2188,5327.375 L8752.2188,5330.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="8769.75" y="5328.6074">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8487.5" x2="9053.5" y1="5340.4531" y2="5340.4531"/><ellipse cx="8497.5" cy="5351.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="8506.5" y="5354.6636">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="8497.5" cy="5364.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="8506.5" y="5367.4683">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="8497.5" cy="5377.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="8506.5" y="5380.2729">~Timer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8487.5" x2="9053.5" y1="5386.8672" y2="5386.8672"/><ellipse cx="8497.5" cy="5397.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8506.5" y="5401.0776">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="8497.5" cy="5410.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8506.5" y="5413.8823">operator&gt;(const Timer &amp; t) const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8487.5" x2="9053.5" y1="5420.4766" y2="5420.4766"/><ellipse cx="8497.5" cy="5431.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8506.5" y="5434.687">id() : TimerId</text><ellipse cx="8497.5" cy="5444.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="8506.5" y="5447.4917">isRepeat() : bool</text><ellipse cx="8497.5" cy="5457.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="8506.5" y="5460.2964">restart(const TimePoint &amp; now) : void</text><ellipse cx="8497.5" cy="5469.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="8506.5" y="5473.1011">run() const : void</text><ellipse cx="8497.5" cy="5482.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="8506.5" y="5485.9058">when() const : const TimePoint &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8487.5" x2="9053.5" y1="5492.5" y2="5492.5"/><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="8577.5" y="4859.4531"/><ellipse cx="8709.75" cy="4875.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8712.7188,4881.0938 Q8712.1406,4881.3906 8711.5,4881.5313 Q8710.8594,4881.6875 8710.1563,4881.6875 Q8707.6563,4881.6875 8706.3281,4880.0469 Q8705.0156,4878.3906 8705.0156,4875.2656 Q8705.0156,4872.1406 8706.3281,4870.4844 Q8707.6563,4868.8281 8710.1563,4868.8281 Q8710.8594,4868.8281 8711.5,4868.9844 Q8712.1563,4869.1406 8712.7188,4869.4375 L8712.7188,4872.1563 Q8712.0938,4871.5781 8711.5,4871.3125 Q8710.9063,4871.0313 8710.2813,4871.0313 Q8708.9375,4871.0313 8708.25,4872.1094 Q8707.5625,4873.1719 8707.5625,4875.2656 Q8707.5625,4877.3594 8708.25,4878.4375 Q8708.9375,4879.5 8710.2813,4879.5 Q8710.9063,4879.5 8711.5,4879.2344 Q8712.0938,4878.9531 8712.7188,4878.375 L8712.7188,4881.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="8730.25" y="4879.6074">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8578.5" x2="8962.5" y1="4891.4531" y2="4891.4531"/><ellipse cx="8588.5" cy="4902.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="8597.5" y="4905.6636">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8578.5" x2="8962.5" y1="4912.2578" y2="4912.2578"/><!--MD5=[126bacd0ed15124482552b070b9a279f]
class C_0000026148367911088234--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="86.4141" id="C_0000026148367911088234" style="stroke: #A80036; stroke-width: 1.5;" width="162" x="54.5" y="1213.4531"/><ellipse cx="95.6" cy="1229.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M98.5688,1235.0938 Q97.9906,1235.3906 97.35,1235.5313 Q96.7094,1235.6875 96.0063,1235.6875 Q93.5063,1235.6875 92.1781,1234.0469 Q90.8656,1232.3906 90.8656,1229.2656 Q90.8656,1226.1406 92.1781,1224.4844 Q93.5063,1222.8281 96.0063,1222.8281 Q96.7094,1222.8281 97.35,1222.9844 Q98.0063,1223.1406 98.5688,1223.4375 L98.5688,1226.1563 Q97.9438,1225.5781 97.35,1225.3125 Q96.7563,1225.0313 96.1313,1225.0313 Q94.7875,1225.0313 94.1,1226.1094 Q93.4125,1227.1719 93.4125,1229.2656 Q93.4125,1231.3594 94.1,1232.4375 Q94.7875,1233.5 96.1313,1233.5 Q96.7563,1233.5 97.35,1233.2344 Q97.9438,1232.9531 98.5688,1232.375 L98.5688,1235.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="115.4" y="1233.6074">ScopeExit</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="210.5" y="1210.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="211.5" y="1222.5918">F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="55.5" x2="215.5" y1="1245.4531" y2="1245.4531"/><ellipse cx="65.5" cy="1256.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="74.5" y="1259.6636">ScopeExit(F &amp;&amp; f) : void</text><ellipse cx="65.5" cy="1269.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="74.5" y="1272.4683">~ScopeExit() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="55.5" x2="215.5" y1="1279.0625" y2="1279.0625"/><ellipse cx="65.5" cy="1290.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="74.5" y="1293.2729">f_ : F</text><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="171.2422" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="7051.5" y="1170.9531"/><ellipse cx="7352.25" cy="1186.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7355.2188,1192.5938 Q7354.6406,1192.8906 7354,1193.0313 Q7353.3594,1193.1875 7352.6563,1193.1875 Q7350.1563,1193.1875 7348.8281,1191.5469 Q7347.5156,1189.8906 7347.5156,1186.7656 Q7347.5156,1183.6406 7348.8281,1181.9844 Q7350.1563,1180.3281 7352.6563,1180.3281 Q7353.3594,1180.3281 7354,1180.4844 Q7354.6563,1180.6406 7355.2188,1180.9375 L7355.2188,1183.6563 Q7354.5938,1183.0781 7354,1182.8125 Q7353.4063,1182.5313 7352.7813,1182.5313 Q7351.4375,1182.5313 7350.75,1183.6094 Q7350.0625,1184.6719 7350.0625,1186.7656 Q7350.0625,1188.8594 7350.75,1189.9375 Q7351.4375,1191 7352.7813,1191 Q7353.4063,1191 7354,1190.7344 Q7354.5938,1190.4531 7355.2188,1189.875 L7355.2188,1192.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="7372.75" y="1191.1074">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7052.5" x2="7760.5" y1="1202.9531" y2="1202.9531"/><ellipse cx="7062.5" cy="1213.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="7071.5" y="1217.1636">AsyncFileLogger() : void</text><ellipse cx="7062.5" cy="1226.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7071.5" y="1229.9683">~AsyncFileLogger() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7052.5" x2="7760.5" y1="1236.5625" y2="1236.5625"/><ellipse cx="7062.5" cy="1247.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7071.5" y="1250.7729">flush() : void</text><ellipse cx="7062.5" cy="1260.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7071.5" y="1263.5776">output(const char * msg, const uint64_t len) : void</text><ellipse cx="7062.5" cy="1273.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="7071.5" y="1276.3823">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="7062.5" cy="1285.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="7071.5" y="1289.187">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="7062.5" cy="1298.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="7071.5" y="1301.9917">setMaxFiles(size_t maxFiles) : void</text><ellipse cx="7062.5" cy="1311.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7071.5" y="1314.7964">setSwitchOnLimitOnly(bool flag = true) : void</text><ellipse cx="7062.5" cy="1324.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7071.5" y="1327.6011">startLogging() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7052.5" x2="7760.5" y1="1334.1953" y2="1334.1953"/><!--MD5=[d6dc5f302a37b6f3cec78b5e6a6182c8]
class C_0001453238540802541239--><rect fill="#FEFECE" filter="url(#f1q08zniy5sgsg)" height="150.4375" id="C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.5;" width="970" x="2950.5" y="350.4531"/><ellipse cx="3345.25" cy="366.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3348.2188,372.0938 Q3347.6406,372.3906 3347,372.5313 Q3346.3594,372.6875 3345.6563,372.6875 Q3343.1563,372.6875 3341.8281,371.0469 Q3340.5156,369.3906 3340.5156,366.2656 Q3340.5156,363.1406 3341.8281,361.4844 Q3343.1563,359.8281 3345.6563,359.8281 Q3346.3594,359.8281 3347,359.9844 Q3347.6563,360.1406 3348.2188,360.4375 L3348.2188,363.1563 Q3347.5938,362.5781 3347,362.3125 Q3346.4063,362.0313 3345.7813,362.0313 Q3344.4375,362.0313 3343.75,363.1094 Q3343.0625,364.1719 3343.0625,366.2656 Q3343.0625,368.3594 3343.75,369.4375 Q3344.4375,370.5 3345.7813,370.5 Q3346.4063,370.5 3347,370.2344 Q3347.5938,369.9531 3348.2188,369.375 L3348.2188,372.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="3365.75" y="370.6074">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2951.5" x2="3919.5" y1="382.4531" y2="382.4531"/><ellipse cx="2961.5" cy="393.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="944" x="2970.5" y="396.6636">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName, bool switchOnLimitOnly = false, size_t maxFiles = 0) : void</text><ellipse cx="2961.5" cy="406.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2970.5" y="409.4683">flush() : void</text><ellipse cx="2961.5" cy="419.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2970.5" y="422.2729">getLength() : uint64_t</text><ellipse cx="2961.5" cy="431.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2970.5" y="435.0776">open() : void</text><ellipse cx="2961.5" cy="444.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2970.5" y="447.8823">operator bool() const : bool</text><ellipse cx="2961.5" cy="457.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2970.5" y="460.687">switchLog(bool openNewOne) : void</text><ellipse cx="2961.5" cy="470.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2970.5" y="473.4917">writeLog(const StringPtr buf) : void</text><ellipse cx="2961.5" cy="483.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2970.5" y="486.2964">~LoggerFile() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2951.5" x2="3919.5" y1="492.8906" y2="492.8906"/><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M944.18,159.3131 C938.52,171.3931 933.55,184.2731 930.5,196.9531 C913.49,267.7231 945.12,351.4531 965.4,394.9231 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="950.02,147.5431,943.7678,151.1362,944.6798,158.2894,950.932,154.6963,950.02,147.5431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="936.5" cy="206.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="943.5" y="210.02">secret</text><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M986.32,160.7731 C987.23,172.7631 988.02,185.2431 988.5,196.9531 C991.39,267.8331 986.29,351.1631 982.99,394.6331 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="985.25,147.5031,981.7442,153.8047,986.2127,159.4644,989.7185,153.1629,985.25,147.5031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="995.5" cy="206.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="1002.5" y="210.02">prev</text><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M4396.11,99.8331 C4048.2,104.1731 2626.82,125.9831 2187.5,196.9531 C2112.23,209.1131 2071.17,185.2631 2022.5,243.9531 C1826.6,480.1931 1971.72,2736.6331 2008.59,3264.4231 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.22,92.8331,4416.3,99.5831,4396.39,106.8331,4396.22,92.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M1757.14,2859.5731 C1790.21,2925.2131 1886.52,3116.4131 1952,3246.4031 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1958.28,3243.3131,1961.03,3264.3231,1945.78,3249.6131,1958.28,3243.3131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M2141.07,858.9631 C2138.93,869.0531 2137.02,879.1531 2135.5,888.9531 C2075.82,1273.8531 2086.5,1374.4531 2086.5,1763.9531 C2086.5,1763.9531 2086.5,1763.9531 2086.5,2836.4531 C2086.5,2976.7731 2062.79,3135.9731 2042.97,3244.5631 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2049.85,3245.8431,2039.32,3264.2331,2036.09,3243.2931,2049.85,3245.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M4396.44,99.8431 C4019.39,104.5431 2383.76,128.8031 2301.5,196.9531 C2173.62,302.9031 2158.01,509.1631 2162.11,636.7831 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.37,92.8431,4416.45,99.6031,4396.54,106.8431,4396.37,92.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M2238.89,1876.0331 C2229.9,2101.1831 2200.45,2629.7331 2112.5,3063.9531 C2100.25,3124.4331 2080.95,3189.8931 2062.86,3245.0531 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2069.47,3247.3431,2056.52,3264.1131,2056.19,3242.9231,2069.47,3247.3431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M4396.13,98.3831 C4033.79,96.4831 2516.24,97.3631 2371.5,243.9531 C2178.35,439.5731 2484.27,650.1231 2305.5,858.9531 C2271.99,898.1031 2224.87,848.0731 2193.5,888.9531 C2094.06,1018.5331 2166.13,1462.9331 2193.5,1623.9531 C2195.16,1633.7231 2197.43,1643.7231 2200.09,1653.6631 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.43,91.3831,4416.39,98.5031,4396.35,105.3831,4396.43,91.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M1715.2,2347.1331 C1725.52,2513.0831 1739.59,2739.3931 1744.07,2811.4431 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1714.37,2333.7931,1710.7469,2340.028,1715.1087,2345.7704,1718.7318,2339.5355,1714.37,2333.7931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1735.5" y="2529.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="1745.5" y="2536.52">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M4396.04,99.1231 C4056.23,100.3931 2695.78,110.8631 2278.5,196.9531 C2220.78,208.8631 2194.63,200.7831 2154.5,243.9531 C1983.51,427.9031 1975.6,1264.6831 1905.5,1623.9531 C1883.35,1737.4831 1880.49,1767.4231 1840.5,1875.9531 C1827.55,1911.0931 1811.63,1947.7031 1795.28,1982.4431 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.23,92.1231,4416.25,99.0631,4396.27,106.1231,4396.23,92.1231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1495.48,562.7631 C1495.78,785.9631 1504.58,1242.7531 1564.5,1623.9531 C1583.58,1745.3431 1618.53,1879.1631 1648.61,1982.3531 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1495.48,549.7031,1491.4866,555.7075,1495.4932,561.7031,1499.4866,555.6987,1495.48,549.7031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1570.5,1252.0195,1574.5,1256.0195,1570.5,1260.0195,1566.5,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1577.5" y="1261.02">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M1486.69,562.6931 C1475.73,726.8931 1459.5,1011.2131 1459.5,1255.4531 C1459.5,1255.4531 1459.5,1255.4531 1459.5,4356.9531 C1459.5,4547.9131 1616.04,4673.0631 1794.28,4753.6731 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1487.57,549.6231,1483.1764,555.3412,1486.7648,561.5961,1491.1584,555.878,1487.57,549.6231" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1465.5,3051.0195,1469.5,3055.0195,1465.5,3059.0195,1461.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1472.5" y="3060.02">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M1543.91,554.2231 C1553.84,581.4731 1564.13,610.1231 1573.5,636.9531 C1647.87,849.8431 1731.26,1106.0131 1764.58,1209.1331 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1542.2,549.5131,1541.4997,559.3371,1543.9007,554.215,1549.0227,556.616,1542.2,549.5131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1655.5" cy="748.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="1662.5" y="752.52">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M4396.19,99.8331 C3995.32,104.6931 2162.38,130.4031 1918.5,196.9531 C1836.2,219.4131 1752.15,260.3531 1680.95,301.3831 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.24,92.8331,4416.32,99.5931,4396.4,106.8331,4396.24,92.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2546ce8b172ab3415fe98599ef34be58]
link C_0002131283840621188296 to C_0002053752992472264214--><path d="M1366.88,167.1931 C1384.55,202.2631 1406.74,246.2931 1427.73,287.9731 " fill="none" id="C_0002131283840621188296-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1430.8979" cy="294.2599" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1427.2959" x2="1434.5" y1="287.1167" y2="301.4031"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1438.0411" x2="1423.7548" y1="290.6579" y2="297.862"/><!--MD5=[93922583ef61aedd7e4cac59826dbbbd]
link C_0000979080797342806546 to C_0002053752992472264214--><path d="M1573.88,147.6831 C1563.56,184.5631 1548.86,237.1531 1535.04,286.5931 " fill="none" id="C_0000979080797342806546-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1533.1294" cy="293.4273" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1535.2788" x2="1530.98" y1="285.7214" y2="301.1331"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1540.8353" x2="1525.4236" y1="295.5767" y2="291.2779"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1774.5,1316.6331 C1763.24,1449.9131 1735.53,1777.8631 1718.25,1982.4131 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1775.6,1303.6031,1771.113,1309.2482,1774.598,1315.5612,1779.085,1309.9162,1775.6,1303.6031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1747.5" y="1762.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1757.5" y="1769.52">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M4396.15,99.5331 C3993.65,102.8731 2153.68,122.2231 2060.5,196.9531 C1977.99,263.1231 1826.64,1013.8631 1788.44,1209.2231 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.3,92.5331,4416.35,99.3731,4396.41,106.5331,4396.3,92.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M4396.1,100.1831 C4086.45,105.5531 2946.47,129.7531 2800.5,196.9531 C2722.07,233.0631 2657.25,310.8531 2618.98,365.3731 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4395.99,93.1831,4416.11,99.8431,4396.23,107.1831,4395.99,93.1831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M4550.85,100.0731 C4993.57,106.8531 7196.46,145.3631 7480.5,243.9531 C8524.04,606.1731 8453.5,1426.3431 8453.5,2530.9531 C8453.5,2530.9531 8453.5,2530.9531 8453.5,4890.9531 C8453.5,5198.6531 6005.32,5148.9431 5700.5,5190.9531 C5402.44,5232.0331 5058.73,5324.6031 4890.74,5372.8731 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.42,107.0731,4530.53,99.7731,4550.63,93.0731,4550.42,107.0731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ffc230e37c5c4ce1f573c198139c7155]
link C_0000223701637084171141 to C_0000912667184903365399--><path d="M2971.76,4945.9531 C2988.82,5008.7431 3026.15,5109.4131 3098.5,5160.9531 C3352.15,5341.6531 4328.5,5389.1131 4669.3,5400.3031 " fill="none" id="C_0000223701637084171141-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4676.3142" cy="5400.5242" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4668.3184" x2="4684.31" y1="5400.2653" y2="5400.7831"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4676.5731" x2="4676.0553" y1="5392.5284" y2="5408.52"/><!--MD5=[f80622055e9d57665d4031fadfdf3e69]
link C_0002185746167032660910 to C_0000912667184903365399--><path d="M4787.5,4913.9731 C4787.5,4983.9531 4787.5,5196.7931 4787.5,5317.5031 " fill="none" id="C_0002185746167032660910-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4794.5,5317.8431,4787.5,5337.8431,4780.5,5317.8431,4794.5,5317.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M5288.45,4361.7631 C4802.38,4376.2231 3713.11,4434.1331 2830.5,4665.9531 C2826.27,4667.0631 2822.03,4668.2031 2817.78,4669.3731 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2812.79,4670.7531,2822.5298,4672.2148,2817.6098,4669.423,2820.4016,4664.5031,2812.79,4670.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M5728.61,4599.9031 C5732.99,4606.2931 5737.29,4612.6531 5741.5,4618.9531 C5783.39,4681.7531 5826.38,4755.9531 5856.91,4810.6631 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5721.18,4589.1331,5721.2965,4596.3433,5727.9968,4599.0089,5727.8803,4591.7988,5721.18,4589.1331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5753.5" y="4625.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5763.5" y="4632.02">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5834.88,4810.7831 C5795.62,4765.7431 5743.06,4709.5931 5690.5,4665.9531 C5671.43,4650.1231 5658.96,4655.3231 5643.5,4635.9531 C5633.1,4622.9231 5623.74,4608.7231 5615.3,4593.8531 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5612.72,4589.2231,5613.6078,4599.0319,5615.1543,4593.5905,5620.5956,4595.137,5612.72,4589.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5646.5" y="4625.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5656.5" y="4632.02">ownerLoop_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5288.26,4505.3531 C5234.35,4549.6731 5184.68,4603.4231 5154.5,4665.9531 C5067.94,4845.2631 5042.06,4949.6331 5154.5,5113.9531 C5278.75,5295.5331 5534.89,5363.2431 5711.87,5388.4731 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5717.09,5389.2131,5708.7398,5383.9907,5712.1394,5388.512,5707.618,5391.9116,5717.09,5389.2131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5157.5" y="4887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="5167.5" y="4894.52">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5373.2,4589.2631 C5360.82,4614.2531 5350.19,4640.0331 5342.5,4665.9531 C5285.88,4856.8431 5239.15,4943.7631 5342.5,5113.9531 C5422.43,5245.5831 5583.83,5320.1031 5712.41,5360.4631 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5717.35,5362.0031,5709.9461,5355.5083,5712.5761,5360.5166,5707.5677,5363.1466,5717.35,5362.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5345.5" y="4887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5355.5" y="4894.52">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5528.06,4602.2931 C5520.29,4788.2931 5519.92,5026.3431 5561.5,5113.9531 C5595.46,5185.4931 5656.41,5246.1631 5717.29,5293.1831 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5528.62,4589.2831,5524.3665,4595.1062,5528.1056,4601.2721,5532.3591,4595.4491,5528.62,4589.2831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5564.5" y="4887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="5574.5" y="4894.52">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6065.85,5190.6431 C6079.06,5165.8131 6090.41,5140.0131 6098.5,5113.9531 C6157.55,4923.8031 6199.4,4837.6031 6098.5,4665.9531 C6034.01,4556.2331 5914.88,4482.6431 5803.48,4434.9031 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.86,4432.9331,5805.5756,4440.1374,5803.4609,4434.8906,5808.7076,4432.776,5798.86,4432.9331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6161.5" y="4887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6171.5" y="4894.52">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M5712.18,5369.3831 C5475.67,5322.1131 5089.38,5229.2931 5005.5,5113.9531 C4946.94,5033.4431 4955.63,4752.1131 5005.5,4665.9531 C5067.22,4559.3331 5181.18,4486.3031 5288.38,4438.1331 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5717.39,5370.4231,5709.3397,5364.7493,5712.4855,5369.4508,5707.784,5372.5966,5717.39,5370.4231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5011.5" cy="4890.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5018.5" y="4894.52">«friend»</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M5275.66,4413.0331 C5077.56,4460.5831 4832.09,4534.4131 4771.5,4618.9531 C4717.2,4694.7131 4756.73,4815.3231 4777.22,4865.6731 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5288.34,4410.0131,5281.5759,4407.5137,5276.6672,4412.7961,5283.4313,4415.2956,5288.34,4410.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4774.5" y="4625.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4784.5" y="4632.02">funcs_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M5275.11,4401.8731 C5135.65,4438.2931 4972.65,4503.4231 4866.5,4618.9531 C4800.58,4690.7031 4789.42,4814.5931 4787.71,4865.7931 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5288.1,4398.5431,5281.2949,4396.1576,5276.4755,4401.5217,5283.2806,4403.9072,5288.1,4398.5431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4869.5" y="4625.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4879.5" y="4632.02">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M5811.73,4406.1831 C5971.55,4444.9531 6172.41,4510.9931 6325.5,4618.9531 C6399.29,4670.9931 6459.99,4755.9931 6497.25,4816.7231 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5798.84,4403.0931,5803.7374,4408.3861,5810.5069,4405.9011,5805.6094,4400.6082,5798.84,4403.0931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6350.5" y="4625.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="6360.5" y="4632.02">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M6453.79,4816.8031 C6383.16,4758.3531 6277.69,4676.5231 6176.5,4618.9531 C6058.86,4552.0231 5920.73,4492.8231 5803.57,4447.7031 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.71,4445.8431,5805.6814,4452.8002,5803.3786,4447.6332,5808.5455,4445.3304,5798.71,4445.8431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6202.5,4623.0195,6206.5,4627.0195,6202.5,4631.0195,6198.5,4627.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6209.5" y="4632.02">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M5798.97,4316.8231 C5820.26,4325.2431 5833.5,4338.2831 5833.5,4355.9531 C5833.5,4372.2431 5822.25,4384.5931 5803.81,4393.0231 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.97,4395.0831,5808.8176,4395.2403,5803.5709,4393.1256,5805.6856,4387.8789,5798.97,4395.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5841.5" y="4353.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="5851.5" y="4360.52">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M4396.01,99.2131 C4087.55,101.1231 2959.5,116.8031 2872.5,243.9531 C2723.16,462.2331 2860.9,2361.1131 2831.5,2623.9531 C2777.85,3103.5331 2582.01,3241.3831 2719.5,3703.9531 C2771.2,3877.8931 2788.34,3950.2431 2942.5,4045.9531 C3330.71,4286.9731 4712.34,4340.0031 5288.41,4351.6631 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.32,92.2131,4416.36,99.1031,4396.4,106.2131,4396.32,92.2131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3337.26,3950.1331 C3327.45,3994.8931 3323.44,4054.9531 3357.5,4092.9531 C3484.23,4234.3631 4731.31,4314.1031 5283.11,4342.7031 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5288.36,4342.9831,5279.5773,4338.5262,5283.3666,4342.7263,5279.1664,4346.5156,5288.36,4342.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3360.5" y="4082.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3370.5" y="4089.02">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3370.6,3962.6331 C3383.9,4007.3631 3408.02,4062.1231 3450.5,4092.9531 C3738.53,4302.0131 4795.79,4344.6531 5288.11,4353.0631 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3367.05,3950.0131,3364.8284,3956.8735,3370.3066,3961.5628,3372.5282,3954.7024,3367.05,3950.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3453.5" y="4082.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="3463.5" y="4089.02">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M4396,100.3031 C4097.42,106.2731 3033.18,135.1031 2933.5,243.9531 C2819.44,368.5131 2924.5,1595.0631 2924.5,1763.9531 C2924.5,1763.9531 2924.5,1763.9531 2924.5,3056.4531 C2924.5,3323.7931 2819.66,3429.1031 2959.5,3656.9531 C2995.03,3714.8431 3032.88,3699.6531 3091.5,3733.9531 C3145.51,3765.5631 3205.69,3800.8831 3254.94,3829.8231 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4396.02,93.2931,4416.16,99.9031,4396.3,107.2931,4396.02,93.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M2639.33,2637.2731 C2616.62,2895.6331 2574.6,3555.0831 2720.5,3703.9531 C2778.4,3763.0231 3012.62,3709.0531 3091.5,3733.9531 C3158.4,3755.0731 3226.5,3795.6231 3276.78,3829.9531 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2640.5,2624.1631,2635.9821,2629.7835,2639.4326,2636.1156,2643.9504,2630.4951,2640.5,2624.1631" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2622.5,3051.0195,2626.5,3055.0195,2622.5,3059.0195,2618.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="2629.5" y="3060.02">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M2602.57,505.3531 C2625.83,596.8331 2661.78,752.5231 2675.5,888.9531 C2734.71,1477.5731 2680.85,2190.7531 2658.32,2439.8631 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2595.73,506.8531,2597.53,485.7331,2609.29,503.3631,2595.73,506.8531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M5899.5,4969.0731 C5899.5,5026.9231 5899.5,5108.7531 5899.5,5185.8231 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5899.5,5190.8831,5903.5,5181.8831,5899.5,5185.8831,5895.5,5181.8831,5899.5,5190.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M4551.19,99.4931 C5085.61,103.3831 8198.28,128.9331 8266.5,196.9531 C8513.19,442.9331 8311.5,1415.5831 8311.5,1763.9531 C8311.5,1763.9531 8311.5,1763.9531 8311.5,3890.9531 C8311.5,4136.1231 8061.43,4368.6131 7456.5,4588.9531 C7385.08,4614.9631 6158.63,4632.2431 6090.5,4665.9531 C6027.22,4697.2631 5976.51,4759.9631 5943.28,4810.9231 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.77,106.4931,4530.82,99.3431,4550.87,92.4931,4550.77,106.4931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M6447.78,4963.0231 C6354.25,5038.1531 6204.95,5158.0831 6085.75,5253.8331 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6081.53,5257.2331,6091.0532,5254.7216,6085.4302,5254.1044,6086.0473,5248.4813,6081.53,5257.2331" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6224.5,5148.0195,6228.5,5152.0195,6224.5,5156.0195,6220.5,5152.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="6231.5" y="5157.02">timerfdChannelPtr_</text><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M6699.44,4968.4631 C6805.68,5016.5331 6948.81,5076.1331 7080.5,5113.9531 C7564.56,5252.9731 8146.95,5334.6831 8486.27,5374.1231 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6687.33,4962.9531,6691.1392,4969.076,6698.2562,4967.9148,6694.447,4961.7919,6687.33,4962.9531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7220.5,5148.0195,7224.5,5152.0195,7220.5,5156.0195,7216.5,5152.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="7227.5" y="5157.02">timers_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M4550.79,99.3631 C5101.27,102.4331 8408.24,123.9231 8479.5,196.9531 C8660.78,382.7231 8382.5,2271.3931 8382.5,2530.9531 C8382.5,2530.9531 8382.5,2530.9531 8382.5,4356.9531 C8382.5,4607.5931 8097.64,4487.3931 7868.5,4588.9531 C7820.64,4610.1631 7811.5,4624.1531 7760.5,4635.9531 C7465.76,4704.1131 7375.93,4600.8531 7080.5,4665.9531 C6936.69,4697.6431 6782.22,4764.6031 6674.95,4816.9231 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.53,106.3631,4530.57,99.2531,4550.61,92.3631,4550.53,106.3631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M4551.06,98.8731 C5055.32,98.6531 7859.23,101.7331 8226.5,196.9531 C8630.52,301.7031 8524.5,1429.2731 8524.5,1763.9531 C8524.5,1763.9531 8524.5,1763.9531 8524.5,4890.9531 C8524.5,4992.0631 8554.05,5045.6531 8479.5,5113.9531 C8302.9,5275.7631 6640.83,5368.4531 6081.88,5395.2531 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.77,105.8731,4530.76,98.8831,4550.76,91.8731,4550.77,105.8731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M2567.45,505.6831 C2538.95,666.4031 2474.72,1028.6131 2447.3,1183.2631 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2560.6,504.2131,2570.99,485.7431,2574.39,506.6531,2560.6,504.2131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[71937ae761f89ce4d5c0645a62fc4977]
reverse link C_0001897340460211641725 to C_0000673025168912921705--><path d="M7192.5,4525.5431 C7192.5,4641.6131 7192.5,4786.3931 7192.5,4852.7131 " fill="none" id="C_0001897340460211641725&lt;-C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7192.5,4512.2631,7188.5,4518.2631,7192.5,4524.2631,7196.5,4518.2631,7192.5,4512.2631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3427b8ada0e3011132406bbf51a19799]
link C_0002230624932100089526 to C_0001897340460211641725--><path d="M5138.13,1624.1231 C5140.96,1634.1731 5143.75,1644.1331 5146.5,1653.9531 C5270.78,2097.8231 5359.83,2197.1531 5421.5,2653.9531 C5443.08,2813.8331 5524.39,2892.6831 5421.5,3016.9531 C5374.78,3073.3831 5216.12,3008.0731 5263.5,3063.9531 C5316.23,3126.1431 5386.81,3036.3331 5444.5,3093.9531 C5623.99,3273.2331 5367.99,3469.1131 5538.5,3656.9531 C5627.26,3754.7431 5699.83,3693.3531 5825.5,3733.9531 C6197.35,3854.0631 6275.55,3926.1631 6647.5,4045.9531 C6774.03,4086.7031 6819.74,4059.4231 6936.5,4122.9531 C6972.95,4142.7831 7008.4,4168.8431 7040.72,4196.3131 " fill="none" id="C_0002230624932100089526-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7044.65,4199.6731,7040.4199,4190.779,7040.8537,4196.4192,7035.2135,4196.853,7044.65,4199.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[475fc265529b86f5b89a981b424e962c]
link C_0002230624932100089526 to C_0001390130774830223499--><path d="M5740.21,1394.3731 C6242.33,1508.5431 6851.41,1687.5131 6991.5,1905.9531 C7081.25,2045.8931 7003.94,2487.7131 7005.5,2653.9531 C7007.01,2815.2831 7042.97,2860.0331 7005.5,3016.9531 C6996.59,3054.2631 6981.53,3058.6631 6966.5,3093.9531 C6862.6,3337.8431 6934.58,3449.5231 6769.5,3656.9531 C6729.57,3707.1231 6689.14,3685.1931 6647.5,3733.9531 C6549.5,3848.7231 6614.21,3933.5531 6513.5,4045.9531 C6333.94,4246.3431 6024.91,4317.6731 5803.89,4342.5731 " fill="none" id="C_0002230624932100089526-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5798.69,4343.1531,5808.0795,4346.1259,5803.6589,4342.5963,5807.1885,4338.1757,5798.69,4343.1531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cf3252f145f52c6ad0115ad3c523b41]
link C_0002230624932100089526 to C_0001660397537883119469--><path d="M4933.89,1624.1331 C4911.88,1715.6231 4890.64,1813.9031 4875.5,1905.9531 C4857.25,2016.8931 4885.51,2311.3531 4831.5,2409.9531 C4820.99,2429.1331 4806.93,2423.5231 4792.5,2439.9531 C4730.06,2511.0131 4765.52,2573.4931 4685.5,2623.9531 C4615.91,2667.8331 4376.03,2597.1731 4316.5,2653.9531 C4221.79,2744.2831 4219.52,3161.6931 4222.05,3316.4831 " fill="none" id="C_0002230624932100089526-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4222.15,3321.8731,4226.021,3312.8169,4222.0786,3316.8736,4218.0218,3312.9312,4222.15,3321.8731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b06091bb23409738e196d39773d40c]
link C_0002230624932100089526 to C_0000964465843177067305--><path d="M5485.09,1624.1231 C5490.92,1633.9131 5496.4,1643.8531 5501.5,1653.9531 C5569.93,1789.4431 5493.08,2903.1231 5593.5,3016.9531 C5639.63,3069.2431 5692.44,3004.1731 5747.5,3046.9531 C5831.83,3112.4831 5872.48,3235.1331 5890.29,3310.3231 " fill="none" id="C_0002230624932100089526-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5891.43,3315.2031,5893.2686,3305.5274,5890.288,3310.3353,5885.4801,3307.3546,5891.43,3315.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5753.24,1250.4931 C5767.26,1252.1931 5775,1254.1831 5775,1256.4531 C5775,1259.3631 5762.32,1261.8031 5740.01,1263.7731 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5740.01,1249.1331,5745.5697,1253.7255,5751.9471,1250.3598,5746.3875,1245.7674,5740.01,1249.1331" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5786,1252.0195,5790,1256.0195,5786,1260.0195,5782,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5793" y="1261.02">recvMsgCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5740.27,1232.2031 C5842.47,1236.2131 5912,1244.3031 5912,1256.4531 C5912,1268.4031 5844.76,1276.4231 5745.33,1280.5031 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5740.27,1280.7031,5749.4227,1284.3402,5745.266,1280.5033,5749.1029,1276.3466,5740.27,1280.7031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5923,1252.0195,5927,1256.0195,5923,1260.0195,5919,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5930" y="1261.02">recvMsgCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5753.31,1216.8631 C5921.74,1220.7631 6049,1233.9531 6049,1256.4531 C6049,1279.5331 5915.02,1292.8331 5740.07,1296.3331 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5740.07,1216.5731,5745.9852,1220.6975,5752.0674,1216.8236,5746.1522,1212.6992,5740.07,1216.5731" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6060,1252.0195,6064,1256.0195,6060,1260.0195,6056,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6067" y="1261.02">connectionCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5753.37,1202.1031 C5997.79,1203.4331 6203,1221.5531 6203,1256.4531 C6203,1291.9731 5990.38,1310.1131 5740.21,1310.8531 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5740.21,1202.0531,5746.1924,1206.0795,5752.2099,1202.1059,5746.2275,1198.0795,5740.21,1202.0531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6214,1252.0195,6218,1256.0195,6214,1260.0195,6210,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="6221" y="1261.02">closeCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5753.66,1188.5231 C6052.22,1186.6931 6320,1209.3331 6320,1256.4531 C6320,1304.2731 6044.2,1326.8831 5740.32,1324.2931 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5740.32,1188.6131,5746.3506,1192.5669,5752.3196,1188.5208,5746.2891,1184.5671,5740.32,1188.6131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6331,1252.0195,6335,1256.0195,6331,1260.0195,6327,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6338" y="1261.02">writeCompleteCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5753.17,1176.1331 C6128.58,1168.3331 6496,1195.1131 6496,1256.4531 C6496,1318.5131 6120,1345.1931 5740.1,1336.4931 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5740.1,1176.4131,5746.1864,1180.2803,5752.0971,1176.1495,5746.0107,1172.2823,5740.1,1176.4131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6507,1252.0195,6511,1256.0195,6507,1260.0195,6503,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6514" y="1261.02">highWaterMarkCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M5740.14,1165.2931 C6192.44,1149.4031 6675,1179.7931 6675,1256.4531 C6675,1332.8131 6196.2,1363.2631 5745.45,1347.7931 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5740.14,1347.6131,5748.9977,1351.9192,5745.1371,1347.7845,5749.2718,1343.9239,5740.14,1347.6131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6686,1252.0195,6690,1256.0195,6686,1260.0195,6682,1256.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6693" y="1261.02">highWaterMarkCallback_</text><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M5098.57,1624.1031 C5100.24,1634.1631 5101.89,1644.1231 5103.5,1653.9531 C5121.79,1765.7331 5130,1793.2731 5141.5,1905.9531 C5183.31,2315.6531 5203.8,2792.0531 5213.23,3088.4531 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5213.4,3093.6831,5217.1153,3084.5619,5213.2429,3088.6856,5209.1193,3084.8132,5213.4,3093.6831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5199.5,2527.5195,5203.5,2531.5195,5199.5,2535.5195,5195.5,2531.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5206.5" y="2536.52">recvMsgCallback_</text><!--MD5=[910e29b2ccc32ba69f633ed34b5496c0]
reverse link C_0002230624932100089526 to C_0000434245188016003403--><path d="M4836.46,1635.8631 C4833.45,1641.9331 4830.46,1647.9631 4827.5,1653.9531 C4779.26,1751.6531 4774.71,1779.7831 4723.5,1875.9531 C4716.19,1889.6731 4711.77,1891.7231 4705.5,1905.9531 C4611.3,2119.8431 4727.86,2252.1231 4555.5,2409.9531 C4506.32,2454.9831 4468.03,2409.9131 4408.5,2439.9531 C4231.02,2529.4931 4070.69,2710.2931 4003.68,2792.2931 " fill="none" id="C_0002230624932100089526&lt;-C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4842.3,1624.1531,4836.0443,1627.7401,4836.9493,1634.8941,4843.205,1631.3072,4842.3,1624.1531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4711.5,2153.5195,4715.5,2157.5195,4711.5,2161.5195,4707.5,2157.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="4718.5" y="2162.52">sslErrorCallback_</text><!--MD5=[7d2ce2e8b37834b1fb03da04894a7c85]
reverse link C_0002230624932100089526 to C_0002100370281243872283--><path d="M5005.58,1637.2031 C4983.28,1864.0331 4944.62,2156.4231 4879.5,2409.9531 C4854.12,2508.7631 4874.83,2558.5931 4796.5,2623.9531 C4742.29,2669.1931 4685.46,2599.5231 4640.5,2653.9531 C4516.18,2804.4631 4567.81,3037.6831 4627.62,3197.7731 " fill="none" id="C_0002230624932100089526&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5006.86,1624.0731,5002.2987,1629.6583,5005.6999,1636.0169,5010.2612,1630.4317,5006.86,1624.0731" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4878.5,2527.5195,4882.5,2531.5195,4878.5,2535.5195,4874.5,2531.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="4885.5" y="2536.52">tlsPolicy_</text><!--MD5=[f31d6af3df8ec0838da9d6a34fa975ae]
reverse link C_0002230624932100089526 to C_0001156367011091191681--><path d="M5220.26,883.5731 C5223.14,875.3331 5225.89,867.1231 5228.5,858.9531 C5258.89,763.7331 5243.63,734.7031 5264.5,636.9531 C5266.59,627.1531 5268.85,617.1231 5271.22,607.0231 " fill="none" id="C_0002230624932100089526&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5218.45,888.7031,5225.2275,881.5571,5220.1208,883.9906,5217.6874,878.8838,5218.45,888.7031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5270.5" cy="748.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5277.5" y="752.52">«friend»</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5355.45,620.1831 C5361.87,696.3631 5359.9,783.4831 5334.5,858.9531 C5331.12,868.9831 5327.38,878.9731 5323.31,888.8831 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5354.26,607.0731,5350.8171,613.4093,5355.3417,619.0243,5358.7846,612.6881,5354.26,607.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5371.5" y="752.52">connectionCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5502.83,619.1531 C5505.62,625.0131 5508.19,630.9531 5510.5,636.9531 C5545.92,729.0431 5552.41,769.6231 5510.5,858.9531 C5505.75,869.0631 5500.61,879.0131 5495.11,888.7931 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5496.79,607.2231,5495.9307,614.3829,5502.2092,617.9298,5503.0685,610.77,5496.79,607.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5542.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="5552.5" y="752.52">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M4843.71,548.9231 C4809.27,573.1631 4778.66,602.1931 4754.5,636.9531 C4701.96,712.5431 4707.5,799.6231 4740.55,884.1231 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4742.45,888.9131,4742.8475,879.0723,4740.6054,884.2658,4735.4118,882.0237,4742.45,888.9131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4757.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="4767.5" y="752.52">messageCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M4940.39,617.4531 C4935.82,623.7531 4931.51,630.2531 4927.5,636.9531 C4900.32,682.3431 4909.02,782.3231 4930.29,888.9331 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4948.33,607.0231,4941.5133,609.3752,4941.0626,616.5722,4947.8794,614.2201,4948.33,607.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4930.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="4940.5" y="752.52">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5138.94,618.5531 C5135.57,624.6231 5132.41,630.7631 5129.5,636.9531 C5087.04,727.1431 5112.55,760.4131 5097.5,858.9531 C5096,868.7731 5094.47,878.7331 5092.91,888.7831 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5145.67,606.9631,5139.1979,610.1431,5139.6441,617.3404,5146.1161,614.1604,5145.67,606.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5132.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="5142.5" y="752.52">connection_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M4666.86,1628.7631 C4662.18,1637.0931 4657.72,1645.4931 4653.5,1653.9531 C4608.9,1743.4131 4677.68,1796.1431 4617.5,1875.9531 C4594.53,1906.4031 4567.45,1933.6831 4537.7,1958.1131 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4669.48,1624.1431,4661.5521,1629.9868,4667.007,1628.4887,4668.5051,1633.9436,4669.48,1624.1431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4659.5" cy="1765.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4666.5" y="1769.52">«friend»</text><!--MD5=[93aa647024501110e16d2f873292016e]
reverse link C_0000920759514274339356 to C_0002230624932100089526--><path d="M4437.29,1895.3031 C4441.9,1888.9731 4446.31,1882.5231 4450.5,1875.9531 C4504.13,1791.9231 4430.81,1739.1931 4482.5,1653.9531 C4488.61,1643.8731 4495.08,1633.9831 4501.88,1624.2731 " fill="none" id="C_0000920759514274339356&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4429.36,1905.8431,4436.1637,1903.4536,4436.5748,1896.2542,4429.7711,1898.6437,4429.36,1905.8431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4488.5,1760.5195,4492.5,1764.5195,4488.5,1768.5195,4484.5,1764.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="4495.5" y="1769.52">upgradeCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M4472.27,1637.4331 C4465.94,1642.9231 4459.68,1648.4331 4453.5,1653.9531 C4368.89,1729.5631 4285.22,1821.3331 4214.26,1905.6931 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4467.92,1631.9431,4487.66,1624.2331,4477.03,1642.5731,4467.92,1631.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a625fde3388fdef88cf72768c6dd1b6]
reverse link C_0002230624932100089526 to C_0001423170502760786790--><path d="M5556.75,1628.6131 C5562.25,1636.9231 5567.51,1645.3731 5572.5,1653.9531 C5742.62,1946.3931 5541.07,2093.7931 5661.5,2409.9531 C5667.29,2425.1631 5675.16,2425.4231 5682.5,2439.9531 C5721.42,2516.9731 5677.81,2569.1931 5744.5,2623.9531 C5784.51,2656.8031 5925.12,2642.0731 5975.5,2653.9531 C5984.57,2656.0931 5993.7,2658.3331 6002.88,2660.6531 " fill="none" id="C_0002230624932100089526&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5553.67,1624.0031,5555.3495,1633.7077,5556.4501,1628.159,5561.9989,1629.2595,5553.67,1624.0031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5667.5" cy="2158.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5674.5" y="2162.52">«friend»</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5990.39,2659.1031 C5985.4,2657.3831 5980.44,2655.6631 5975.5,2653.9531 C5936.85,2640.5831 5918.42,2651.8431 5888.5,2623.9531 C5562.46,2319.9731 5913.4,2000.8831 5633.5,1653.9531 C5625.37,1643.8731 5616.91,1633.9531 5608.16,1624.2131 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6002.84,2663.4131,5998.4804,2657.6691,5991.5014,2659.4842,5995.8611,2665.2282,6002.84,2663.4131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5756.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="5766.5" y="2162.52">connSet_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M6317.53,2643.3731 C6262.14,2574.3931 6206.06,2492.9631 6169.5,2409.9531 C6028,2088.6531 6200.25,1890.1331 5940.5,1653.9531 C5880.66,1599.5431 5812.17,1551.7331 5740.23,1509.9431 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6326.05,2653.8931,6325.3797,2646.7132,6318.4943,2644.5705,6319.1646,2651.7504,6326.05,2653.8931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6172.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="6182.5" y="2162.52">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M6157.58,2653.8531 C6066.92,2588.9731 5978.59,2507.3031 5922.5,2409.9531 C5809.01,2212.9931 5905.73,2122.1431 5835.5,1905.9531 C5796.93,1787.2331 5796.54,1745.3331 5711.5,1653.9531 C5703.27,1645.1131 5694.8,1636.4031 5686.11,1627.8331 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5682.37,1624.1731,5685.9982,1633.3293,5685.9411,1627.6728,5691.5976,1627.6156,5682.37,1624.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5925.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5935.5" y="2162.52">recvMessageCallback_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M6446.65,2640.8531 C6429.54,2568.6931 6411.2,2485.8731 6397.5,2409.9531 C6357.38,2187.6331 6439.22,2104.5331 6331.5,1905.9531 C6208.23,1678.7131 5975.2,1529.4531 5740.22,1432.1631 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6449.72,2653.7231,6452.2194,2646.959,6446.937,2642.0503,6444.4376,2648.8144,6449.72,2653.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6400.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6410.5" y="2162.52">connectionCallback_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M6527.09,2640.7731 C6561.48,2407.6331 6604.24,2031.7431 6545.5,1905.9531 C6400.85,1596.2031 6060.96,1434.3331 5740.01,1349.7831 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6525.15,2653.8431,6529.99,2648.4976,6526.9172,2641.974,6522.0772,2647.3195,6525.15,2653.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6577.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6587.5" y="2162.52">writeCompleteCallback_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M5797.2,568.8131 C5864.27,584.3031 5932.75,597.7631 5998.5,606.9531 C6092.32,620.0731 7620.43,591.4031 7703.5,636.9531 C7821.31,701.5531 7825.85,762.2231 7870.5,888.9531 C7873.8,898.3131 8133.04,3724.0431 8133.5,3733.9531 C8139.89,3872.4731 8214.83,3933.6431 8133.5,4045.9531 C8051.52,4159.1531 7694.19,4253.1931 7444.28,4306.7531 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7439.13,4307.8531,7448.7724,4309.8593,7444.0169,4306.7957,7447.0805,4302.0403,7439.13,4307.8531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M5797.18,431.2631 C6519.99,443.3931 7825.53,486.1731 7975.5,636.9531 C8109.2,771.3731 8264.26,3908.6631 8133.5,4045.9531 C8112.43,4068.0731 7615,4074.2331 7584.5,4075.9531 C7494.38,4081.0231 6863.09,4111.9531 6773.5,4122.9531 C6436.11,4164.3731 6051.81,4241.7931 5803.88,4295.7531 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.78,4296.8631,5808.4279,4298.8424,5803.6639,4295.7921,5806.7143,4291.0281,5798.78,4296.8631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8180.5" y="2833.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="8190.5" y="2840.02">loop_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M5810.2,571.6731 C5873.1,585.9331 5937,598.2931 5998.5,606.9531 C6083.29,618.8831 7459.51,606.3931 7539.5,636.9531 C7699.95,698.2431 7759.82,733.3231 7832.5,888.9531 C7863.65,955.6531 7870.98,3245.1831 7872.27,3778.6431 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5797.22,568.6931,5802.1764,573.9309,5808.9176,571.3702,5803.9612,566.1325,5797.22,568.6931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7869.5" y="2529.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="7879.5" y="2536.52">connector_</text><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5797.24,499.9231 C6226.71,576.4831 6812.92,710.2531 6962.5,888.9531 C7067.84,1014.7931 6983.03,1468.1231 7034.5,1623.9531 C7039.38,1638.7131 7048.35,1638.9631 7052.5,1653.9531 C7142.19,1977.7631 7065.48,2074.2031 7052.5,2409.9531 C7042.05,2680.3331 7193.08,2821.9431 7005.5,3016.9531 C6892.35,3134.5931 5690.35,3034.0931 5538.5,3093.9531 C5481.88,3116.2731 5428.66,3153.4331 5382.56,3193.5231 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5378.68,3196.9031,5388.0935,3194.0071,5382.45,3193.6187,5382.8384,3187.9752,5378.68,3196.9031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7097.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="7107.5" y="2162.52">messageCallback_</text><!--MD5=[e8fa56f4be30a17bd0f0cd39eb9b8c23]
reverse link C_0001156367011091191681 to C_0000434245188016003403--><path d="M4830.73,540.3631 C4703.33,566.1831 4565.82,590.7431 4437.5,606.9531 C4304.17,623.7931 3960.34,592.5431 3833.5,636.9531 C3652.59,700.3031 3583.05,725.1531 3483.5,888.9531 C3305.04,1182.6031 3396.45,1311.2331 3371.5,1653.9531 C3364.33,1752.3631 3332.28,1785.4131 3371.5,1875.9531 C3379.25,1893.8431 3394.35,1888.7431 3403.5,1905.9531 C3509.97,2106.2931 3374.52,2211.5231 3484.5,2409.9531 C3537.93,2506.3431 3796.3,2705.3131 3913.04,2792.2531 " fill="none" id="C_0001156367011091191681&lt;-C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4843.82,537.6931,4837.1409,534.9748,4832.0628,540.0947,4838.7419,542.813,4843.82,537.6931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3374.5" y="1762.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="3384.5" y="1769.52">sslErrorCallback_</text><!--MD5=[3b307344d3c58e3733026c6c7a02db5d]
reverse link C_0001156367011091191681 to C_0002100370281243872283--><path d="M4830.64,541.9831 C4703.32,567.7731 4565.86,591.9031 4437.5,606.9531 C4385.5,613.0531 3539.95,609.2731 3495.5,636.9531 C3387.82,704.0031 3395.56,766.7631 3361.5,888.9531 C3270.68,1214.7631 3184.57,2094.0831 3305.5,2409.9531 C3350.95,2528.6731 3774.45,2959.4931 3886.5,3016.9531 C4081.1,3116.7431 4173.39,3003.5031 4372.5,3093.9531 C4429.41,3119.8031 4484.43,3157.9931 4532.9,3197.9331 " fill="none" id="C_0001156367011091191681&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4843.72,539.3231,4837.0415,536.6034,4831.9622,541.7221,4838.6408,544.4419,4843.72,539.3231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3308.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="3318.5" y="2162.52">tlsPolicyPtr_</text><!--MD5=[f423207d0e32839dd54b5872c5e0f583]
reverse link C_0001156367011091191681 to C_0000626107303889580949--><path d="M5810.58,445.3531 C6456.96,481.9731 7540.7,587.7631 7779.5,888.9531 C7880.98,1016.9431 7817.23,1465.0331 7779.5,1623.9531 C7619.39,2298.2931 7543.39,2502.9131 7078.5,3016.9531 C7057.68,3039.9731 6676.31,3275.9431 6553.95,3351.3931 " fill="none" id="C_0001156367011091191681&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5797.3,444.6131,5803.0615,448.9496,5809.2804,445.2992,5803.5189,440.9627,5797.3,444.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7710.5" y="2155.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="7720.5" y="2162.52">sslContextPtr_</text><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M4549.65,128.2231 C4620.78,155.5531 4733.35,198.8131 4850.71,243.9131 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4546.88,134.6531,4530.72,120.9431,4551.9,121.5831,4546.88,134.6531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c243407103ec46e8c5ed77bbb7514164]
link C_0001278908569830571044 to C_0001156367011091191681--><path d="M8533.66,108.0031 C8144.1,146.3631 6611.78,297.2831 5812.16,376.0331 " fill="none" id="C_0001278908569830571044-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5805.1814" cy="376.7184" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5813.1428" x2="5797.22" y1="375.9337" y2="377.5031"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5805.9661" x2="5804.3967" y1="384.6798" y2="368.757"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M4983.99,2692.4131 C4993.99,2670.1431 5002.69,2646.8931 5008.5,2623.9531 C5091.75,2295.2631 5089.84,1907.7331 5071.92,1629.4731 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5071.57,1624.1531,5068.1441,1633.3869,5071.8846,1629.1432,5076.1283,1632.8836,5071.57,1624.1531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5087.5,2153.5195,5091.5,2157.5195,5087.5,2161.5195,5083.5,2157.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="5094.5" y="2162.52">conn_</text><!--MD5=[875d972240b01517ed889bd22efa83e7]
reverse link C_0000464040622375950341 to C_0002100370281243872283--><path d="M4814.63,2990.4431 C4805.83,3009.1931 4797.55,3028.3131 4790.5,3046.9531 C4772.36,3094.9231 4757.04,3148.3631 4744.73,3197.9231 " fill="none" id="C_0000464040622375950341&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4820.32,2978.5031,4814.1288,2982.2003,4815.1603,2989.3372,4821.3515,2985.6401,4820.32,2978.5031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4796.5,3051.0195,4800.5,3055.0195,4796.5,3059.0195,4792.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4803.5" y="3060.02">policyPtr_</text><!--MD5=[80034138ff2d0c3e947014f89ce57bda]
reverse link C_0000464040622375950341 to C_0000626107303889580949--><path d="M5147.93,2983.8431 C5178.02,2997.0031 5208.93,3008.5131 5239.5,3016.9531 C5492.59,3086.8431 5574.84,2983.0131 5829.5,3046.9531 C5846.66,3051.2631 5848.34,3059.6431 5865.5,3063.9531 C5928.41,3079.7631 6398.56,3052.5531 6448.5,3093.9531 C6526.62,3158.7131 6523.7,3296.5331 6519.07,3351.3031 " fill="none" id="C_0000464040622375950341&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5135.99,2978.5231,5139.8381,2984.6217,5146.9476,2983.4151,5143.0995,2977.3166,5135.99,2978.5231" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5871.5,3051.0195,5875.5,3055.0195,5871.5,3059.0195,5867.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="5878.5" y="3060.02">contextPtr_</text><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4880.67,2991.6731 C4884.44,3018.0831 4893.33,3043.5431 4910.5,3063.9531 C4949.79,3110.6531 4994.66,3058.7231 5044.5,3093.9531 C5050.6,3098.2631 5056.54,3102.8631 5062.31,3107.7131 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4879.21,2978.6431,4875.9002,2985.0498,4880.541,2990.5691,4883.8508,2984.1625,4879.21,2978.6431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4916.5,3051.0195,4920.5,3055.0195,4916.5,3059.0195,4912.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4923.5" y="3060.02">recvBuffer_</text><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4991.11,2989.9931 C5013.43,3027.4031 5037.95,3068.4931 5062.38,3109.4531 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4984.26,2978.5131,4983.8953,2985.715,4990.4029,2988.8216,4990.7676,2981.6197,4984.26,2978.5131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5036.5,3051.0195,5040.5,3055.0195,5036.5,3059.0195,5032.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="5043.5" y="3060.02">writeBuffer_</text><!--MD5=[59b32ea62ecf6e8b0ce93ada6106a262]
link C_0000464040622375950341 to C_0001390130774830223499--><path d="M5066.83,2978.4931 C5112.57,3011.1131 5163.85,3042.4731 5215.5,3063.9531 C5290.79,3095.2631 5342.15,3033.1631 5396.5,3093.9531 C5486.97,3195.1531 5413.11,3569.0831 5428.5,3703.9531 C5444.24,3841.8731 5470.78,3994.7831 5494.39,4117.7331 " fill="none" id="C_0000464040622375950341-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5495.37,4122.8231,5497.5756,4113.2244,5494.4141,4117.9153,5489.7232,4114.7538,5495.37,4122.8231" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5434.5,3691.0195,5438.5,3695.0195,5434.5,3699.0195,5430.5,3695.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5441.5" y="3700.02">loop_</text><!--MD5=[8ec1a6f5f84e6ef233285776a59af2fe]
reverse link C_0000464040622375950341 to C_0001660397537883119469--><path d="M4645.79,2942.5331 C4533.07,2993.2031 4416.07,3051.8231 4372.5,3093.9531 C4305.5,3158.7231 4262.03,3260.2231 4240.22,3321.7231 " fill="none" id="C_0000464040622375950341&lt;-C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4657.73,2937.1831,4650.6188,2935.9869,4646.7795,2942.091,4653.8907,2943.2872,4657.73,2937.1831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4435.5,3051.0195,4439.5,3055.0195,4435.5,3059.0195,4431.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="4442.5" y="3060.02">peerCertificate_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M7855.22,4001.0131 C7811.09,4243.2631 7670.69,4824.0731 7304.5,5113.9531 C7117.62,5261.8831 6424.78,5350.4431 6087.03,5385.7131 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6081.59,5386.2831,6090.9538,5389.3358,6086.5635,5385.7686,6090.1306,5381.3783,6081.59,5386.2831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7666.5" y="4625.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="7676.5" y="4632.02">channelPtr_</text><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M7706.85,4000.9831 C7673.19,4018.8731 7637.14,4035.0831 7601.5,4045.9531 C7425.04,4099.7531 7371.24,4059.3931 7187.5,4075.9531 C6993.39,4093.4431 6944.25,4094.1031 6751.5,4122.9531 C6422.97,4172.1231 6047.67,4247.1931 5803.74,4298.5431 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.73,4299.5931,5808.3598,4301.6589,5803.6234,4298.5659,5806.7163,4293.8295,5798.73,4299.5931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7190.5" y="4082.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="7200.5" y="4089.02">loop_</text><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M7700.11,4008.5831 C7615.02,4066.6431 7511.25,4137.4531 7419.77,4199.8731 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7710.92,4001.2131,7703.7092,4001.2835,7701.0008,4007.9666,7708.2116,4007.8963,7710.92,4001.2131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7595.5" y="4082.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="7605.5" y="4089.02">serverAddr_</text><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M4551.02,100.2131 C4918.27,106.7031 6484.98,140.0631 6961.5,243.9531 C7432.12,346.5531 7689.34,246.5731 7971.5,636.9531 C8287.74,1074.4731 8141.77,2528.0731 8076.5,3063.9531 C8044.72,3324.8331 7958.4,3622.0931 7908.83,3778.7931 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.64,107.2131,4530.76,99.8631,4550.88,93.2131,4550.64,107.2131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[255bb85fd16b3df7cc9a8a0088a159be]
link C_0000000982196670174162 to C_0001706043459252151324--><path d="M6357.27,3418.5931 C6359.48,3482.0131 6374.01,3600.5531 6448.5,3656.9531 C6482.68,3682.8231 7176.77,3683.5031 7219.5,3686.9531 C7390,3700.7331 7439.18,3679.9831 7601.5,3733.9531 C7631.14,3743.8031 7661.16,3757.0831 7689.9,3771.7331 " fill="none" id="C_0000000982196670174162-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7696.355" cy="3775.087" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7689.26" x2="7703.45" y1="3771.3909" y2="3778.7831"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7700.0511" x2="7692.6589" y1="3767.992" y2="3782.182"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5880.85,3435.4631 C5832.49,3567.2731 5713.42,3891.8131 5630.54,4117.7231 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5628.71,4122.7031,5635.5587,4115.6253,5630.4279,4118.0075,5628.0457,4112.8767,5628.71,4122.7031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5772.5" y="3887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5782.5" y="3894.52">loop_</text><!--MD5=[64866fe38d904675f00d2ad62d2d950e]
link C_0002013739811805694444 to C_0000964465843177067305--><path d="M5763.51,2872.5931 C5787.67,2959.8231 5849.58,3183.3531 5882,3300.4231 " fill="none" id="C_0002013739811805694444-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5883.9567" cy="3307.4828" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5881.8234" x2="5886.09" y1="3299.7725" y2="3315.1931"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5891.667" x2="5876.2464" y1="3305.3495" y2="3309.6161"/><!--MD5=[76f47a1576e50ad875a2ac1674af8c7c]
link C_0000920759514274339356 to C_0002100370281243872283--><path d="M4173.89,2410.0331 C4178.67,2420.0331 4183.23,2430.0331 4187.5,2439.9531 C4292.76,2684.6331 4214.71,2787.2131 4349.5,3016.9531 C4386.99,3080.8531 4438.68,3141.4031 4491.15,3193.8931 " fill="none" id="C_0000920759514274339356-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4494.93,3197.6631,4491.3759,3188.4779,4491.3873,3194.1347,4485.7305,3194.1462,4494.93,3197.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M4537.51,2407.4331 C4540.84,2408.2931 4544.17,2409.1331 4547.5,2409.9531 C4716.38,2451.4731 5168.01,2375.4331 5329.5,2439.9531 C5444.42,2485.8731 5424.55,2575.6731 5538.5,2623.9531 C5615.68,2656.6531 5851.96,2598.1431 5914.5,2653.9531 C6037.15,2763.4131 5868.51,2901.4631 5985.5,3016.9531 C6068.45,3098.8331 6128.49,3045.0631 6243.5,3063.9531 C6288.93,3071.4131 6414.47,3062.9331 6448.5,3093.9531 C6520.97,3160.0131 6522.38,3288.9731 6519.02,3346.0831 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6518.68,3351.3731,6523.2632,3342.6556,6519.0088,3346.3839,6515.2805,3342.1296,6518.68,3351.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[757c398b52da5470305d11307157893e]
link C_0000920759514274339356 to C_0001660397537883119469--><path d="M3894.51,2409.9831 C3823.03,2592.3431 3768.66,2837.5831 3886.5,3016.9531 C3887.98,3019.2031 4062.5,3092.1531 4064.5,3093.9531 C4133.3,3155.7331 4179.52,3254.5831 4203.65,3316.9331 " fill="none" id="C_0000920759514274339356-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4205.49,3321.7331,4206.0127,3311.8981,4203.7047,3317.0627,4198.5401,3314.7547,4205.49,3321.7331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M4001.29,2410.0031 C3991.19,2549.1831 3979.57,2709.4231 3973.93,2787.2031 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3973.56,2792.2031,3978.1928,2783.5119,3973.9173,2787.2159,3970.2133,2782.9403,3973.56,2792.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M4537.76,2406.5931 C4541.01,2407.7231 4544.26,2408.8431 4547.5,2409.9531 C4606.9,2430.2231 4629.45,2411.7031 4685.5,2439.9531 C4796.32,2495.7931 4782.02,2573.7431 4895.5,2623.9531 C5003.09,2671.5531 5066.37,2580.7931 5158.5,2653.9531 C5309.98,2774.2431 5157.96,2937.7031 5304.5,3063.9531 C5357,3109.1831 5393.1,3068.3731 5457.5,3093.9531 C5595.98,3148.9531 5738.71,3247.7831 5824.01,3312.2331 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5828.03,3315.2831,5823.2645,3306.664,5824.042,3312.2671,5818.4389,3313.0447,5828.03,3315.2831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5265.5" y="2833.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="5275.5" y="2840.02">timingWheelWeakPtr_</text><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M3488.88,2376.7331 C3460.04,2388.0831 3431.44,2399.2131 3403.5,2409.9531 C3366.89,2424.0231 3355.28,2421.8131 3320.5,2439.9531 C3174.33,2516.2131 3121.39,2525.9431 3017.5,2653.9531 C2883.27,2819.3431 2887,2889.4231 2827.5,3093.9531 C2756.72,3337.2631 2790.8,3409.2231 2737.5,3656.9531 C2642.67,4097.7531 2657.71,4225.3131 2471.5,4635.9531 C2466.98,4645.9131 2462.09,4655.9231 2456.92,4665.9131 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3501.25,2371.8631,3494.2019,2370.3387,3490.0839,2376.2583,3497.132,2377.7828,3501.25,2371.8631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2733.5" y="3693.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="2743.5" y="3700.02">lastTimingWheelUpdateTime_</text><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M4041.33,2410.2631 C4047.15,2488.2931 4052.62,2574.6231 4055.5,2653.9531 C4061.36,2815.1831 4162.24,2895.9731 4055.5,3016.9531 C3984.67,3097.2331 3887.33,2966.6731 3816.5,3046.9531 C3726.24,3149.2431 3803.58,3547.8631 3885.5,3656.9531 C4223.68,4107.3131 4908.11,4269.5431 5283.19,4326.0931 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5288.14,4326.8431,5279.8344,4321.55,5283.1955,4326.1,5278.6455,4329.4611,5288.14,4326.8431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3891.5,3371.0195,3895.5,3375.0195,3891.5,3379.0195,3887.5,3375.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3898.5" y="3380.02">loop_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M3577.84,2417.7331 C3347.24,2579.6531 3087.14,2811.1731 2959.5,3093.9531 C2915.94,3190.4531 2944.22,3955.6631 2999.5,4045.9531 C3455.65,4790.9431 3845.26,4772.9531 4649.5,5113.9531 C4747.4,5155.4631 5394.63,5296.0931 5717.29,5364.9031 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3588.8,2410.0731,3581.5906,2410.2292,3578.9618,2416.944,3586.1712,2416.788,3588.8,2410.0731" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3005.5,3885.5195,3009.5,3889.5195,3005.5,3893.5195,3001.5,3889.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="3012.5" y="3894.52">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M3832.2,2422.3131 C3829.82,2428.1831 3827.58,2434.0631 3825.5,2439.9531 C3793.74,2529.8831 3813.06,2558.6431 3809.5,2653.9531 C3803.48,2815.1731 3776.2,2859.0931 3809.5,3016.9531 C3817.22,3053.5531 3832.9,3058.0731 3843.5,3093.9531 C3879.39,3215.4631 3837.56,3574.2031 3933.5,3656.9531 C3990.36,3705.9931 6562.46,3674.4331 6636.5,3686.9531 C6735.35,3703.6631 6837.58,3748.7931 6918.48,3792.1631 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3837.27,2410.3031,3831.2505,2414.2737,3832.6003,2421.3573,3838.6199,2417.3868,3837.27,2410.3031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3835.5,3051.0195,3839.5,3055.0195,3835.5,3059.0195,3831.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="3842.5" y="3060.02">socketPtr_</text><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4229.43,2421.2531 C4233.24,2427.4931 4236.93,2433.7231 4240.5,2439.9531 C4291.29,2528.6131 4292.84,2556.8031 4324.5,2653.9531 C4376.17,2812.5131 4294.4,2906.6731 4419.5,3016.9531 C4449.68,3043.5531 4738.57,3059.0831 4778.5,3063.9531 C4837.55,3071.1431 4994.14,3062.2831 5044.5,3093.9531 C5050.58,3097.7831 5056.49,3101.9031 5062.23,3106.2731 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4222.47,2410.0331,4222.237,2417.2405,4228.8003,2420.2276,4229.0333,2413.0202,4222.47,2410.0331" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4425.5,2831.0195,4429.5,2835.0195,4425.5,2839.0195,4421.5,2835.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="4432.5" y="2840.02">readBuffer_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M4075.44,2423.0331 C4088.44,2497.3531 4100.06,2578.4931 4105.5,2653.9531 C4117.09,2814.8731 4180.31,2874.0131 4105.5,3016.9531 C4077.66,3070.1531 4022.34,3040.7531 3994.5,3093.9531 C3936.49,3204.8031 3916.81,3558.8831 3994.5,3656.9531 C4053.15,3730.9831 5556.05,4032.2731 5649.5,4045.9531 C5720.37,4056.3231 6870.47,4095.1931 6936.5,4122.9531 C6979.21,4140.9131 7019.46,4169.1531 7054.84,4199.8431 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4073.18,2410.2031,4070.2899,2416.8097,4075.2767,2422.0185,4078.1668,2415.4119,4073.18,2410.2031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4000.5,3371.0195,4004.5,3375.0195,4000.5,3379.0195,3996.5,3375.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="4007.5" y="3380.02">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M3806.78,2422.3231 C3803.88,2428.1731 3801.11,2434.0531 3798.5,2439.9531 C3688.44,2688.2131 3565.68,3414.2431 3687.5,3656.9531 C3817.29,3915.5431 3936.19,3951.0131 4209.5,4045.9531 C4281.08,4070.8231 6866.19,4094.6831 6936.5,4122.9531 C6979.91,4140.4031 7020.63,4168.7631 7056.27,4199.7531 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3812.92,2410.3431,3806.6242,2413.8591,3807.4482,2421.023,3813.7441,2417.507,3812.92,2410.3431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3693.5,3371.0195,3697.5,3375.0195,3693.5,3379.0195,3689.5,3375.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="3700.5" y="3380.02">peerAddr_</text><!--MD5=[cd08661a1c3c46da22ba9f0bc8c0d36d]
link C_0000920759514274339356 to C_0000464040622375950341--><path d="M4348.1,2410.1431 C4356.3,2419.9031 4364.13,2429.8431 4371.5,2439.9531 C4423.07,2510.6331 4381.75,2560.0431 4441.5,2623.9531 C4458.78,2642.4331 4553.94,2687.1931 4653.08,2730.7031 " fill="none" id="C_0000920759514274339356-&gt;C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4657.8,2732.7731,4651.1579,2725.5011,4653.2192,2730.769,4647.9513,2732.8304,4657.8,2732.7731" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4447.5,2527.5195,4451.5,2531.5195,4447.5,2535.5195,4443.5,2531.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="4454.5" y="2536.52">tlsProviderPtr_</text><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M3902.76,1900.7831 C3869.26,1814.6631 3837.28,1716.8431 3820.5,1623.9531 C3791.47,1463.2231 3729.61,1024.6631 3820.5,888.9531 C3984.18,644.5431 4152.52,727.1631 4432.5,636.9531 C4564.27,594.5031 4709.53,556.5031 4843.73,524.8731 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3904.66,1905.6531,3905.1202,1895.815,3902.845,1900.9942,3897.6659,1898.719,3904.66,1905.6531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3826.5" cy="1257.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="3833.5" y="1261.02">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M4542.6,2386.3931 C4573.7,2395.4331 4604.81,2403.4131 4635.5,2409.9531 C4734.12,2430.9731 5460.44,2381.3531 5542.5,2439.9531 C5613.7,2490.8031 5542.57,2571.3631 5612.5,2623.9531 C5677.19,2672.6031 5896.31,2637.2131 5975.5,2653.9531 C5984.5,2655.8531 5993.56,2657.8731 6002.66,2659.9831 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4537.6,2384.9331,4545.12,2391.2931,4542.4,2386.3331,4547.36,2383.6131,4537.6,2384.9331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5618.5" cy="2532.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5625.5" y="2536.52">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M4486.71,141.6331 C4514.13,239.7431 4564.65,482.4631 4437.5,606.9531 C4389.49,653.9631 3896.92,614.7431 3833.5,636.9531 C3652.59,700.3031 3570.89,718.3531 3483.5,888.9531 C3334.57,1179.6931 3375.6,1315.6231 3483.5,1623.9531 C3495.33,1657.7631 3659.49,1850.3131 3684.5,1875.9531 C3694.17,1885.8731 3704.17,1895.8031 3714.4,1905.6931 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4479.93,143.3731,4481.05,122.2131,4493.37,139.4631,4479.93,143.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c532aab217e61acf8b6b084ec7b46eb]
link C_0002266895444343633259 to C_0000920759514274339356--><path d="M4186.83,468.8431 C4146.09,512.5231 4075.91,578.1631 3999.5,606.9531 C3925.71,634.7531 3345.06,580.0331 3290.5,636.9531 C3244.88,684.5431 3139.7,1599.9231 3333.5,1875.9531 C3334.4,1877.2331 3398.49,1903.8531 3487.17,1940.2231 " fill="none" id="C_0002266895444343633259-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3493.9093" cy="1942.9852" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3486.5085" x2="3501.31" y1="1939.9472" y2="1946.0231"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3496.9472" x2="3490.8713" y1="1935.5844" y2="1950.3859"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M4264.78,468.7031 C4341.03,546.7431 4510.87,720.5631 4671.56,885.0231 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4675.36,888.9131,4671.9364,879.6785,4671.8677,885.3349,4666.2112,885.2662,4675.36,888.9131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4631.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="4641.5" y="752.52">conn_</text><!--MD5=[a2e7476096c2077970c9b111225cac20]
link C_0001029063960859366412 to C_0000920759514274339356--><path d="M4090.51,1338.0731 C4079.83,1461.1931 4058.98,1701.6431 4042.62,1890.2831 " fill="none" id="C_0001029063960859366412-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4042.0034" cy="1897.5232" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4042.6967" x2="4041.31" y1="1889.5533" y2="1905.4931"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4049.9733" x2="4034.0335" y1="1898.2166" y2="1896.8299"/><!--MD5=[803a46c0407296c3d5232650b81b89e3]
link C_0001029063960859366412 to C_0001289495020269537351--><path d="M4119.86,1338.0731 C4160.96,1470.9331 4261.33,1735.1331 4442.5,1875.9531 C4483.53,1907.8431 4522.27,1866.0031 4555.5,1905.9531 C4634.67,2001.1331 4557.99,2924.6431 4640.5,3016.9531 C4648.11,3025.4731 5035.07,3087.5131 5044.5,3093.9531 C5049.22,3097.1831 5053.85,3100.5831 5058.37,3104.1331 " fill="none" id="C_0001029063960859366412-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5062.5,3107.4431,5057.9827,3098.6913,5058.5998,3104.3144,5052.9768,3104.9316,5062.5,3107.4431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4603.5" cy="2532.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="4610.5" y="2536.52">msgBuffer_</text><!--MD5=[78f71baf9803b06041c9b46669fccd94]
link C_0001727349338344491225 to C_0000920759514274339356--><path d="M3621.47,1306.3131 C3634.06,1414.5131 3673.85,1680.2431 3776.5,1875.9531 C3779.45,1881.5731 3782.53,1887.1831 3785.73,1892.7631 " fill="none" id="C_0001727349338344491225-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3789.3255" cy="1898.8584" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3785.2511" x2="3793.4" y1="1891.9738" y2="1905.7431"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3796.2102" x2="3782.4409" y1="1894.784" y2="1902.9329"/><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M7108.35,4046.1131 C7111.99,4061.9631 7115.74,4077.8031 7119.5,4092.9531 C7127.71,4126.0431 7137.09,4161.3031 7146.33,4194.8831 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7147.7,4199.8331,7149.1691,4190.0944,7146.3736,4195.0123,7141.4557,4192.2168,7147.7,4199.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M4550.8,99.3931 C5106.7,102.6931 8474.93,125.6131 8550.5,196.9531 C8639.67,281.1331 8595.5,624.3231 8595.5,746.9531 C8595.5,746.9531 8595.5,746.9531 8595.5,2532.9531 C8595.5,2801.1631 7662.01,3644.4331 7639.5,3656.9531 C7482.79,3744.0631 7403.47,3652.9731 7243.5,3733.9531 C7239.87,3735.7931 7236.26,3737.7331 7232.68,3739.7531 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.72,106.3831,4530.77,99.2731,4550.81,92.3931,4550.72,106.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M6779.08,3017.0231 C6786.52,3026.6131 6793.38,3036.5931 6799.5,3046.9531 C7026.45,3431.2531 6716.02,3640.0131 6901.5,4045.9531 C6926.45,4100.5531 6964.98,4151.6931 7005.93,4196.0431 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7009.39,4199.7731,7006.1915,4190.4581,7005.9856,4196.1112,7000.3324,4195.9052,7009.39,4199.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M6702.13,3017.0331 C6707.92,3026.7231 6713.1,3036.7031 6717.5,3046.9531 C6771.03,3171.4931 6802.48,3551.3431 6717.5,3656.9531 C6678.42,3705.5131 6628.91,3647.6931 6580.5,3686.9531 C6426.78,3811.6331 6545.98,3962.0731 6397.5,4092.9531 C6232.68,4238.2431 5988.74,4302.9631 5803.73,4331.7931 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.54,4332.5931,5808.0419,4335.1843,5803.4824,4331.8361,5806.8306,4327.2765,5798.54,4332.5931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6583.5" y="3693.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6593.5" y="3700.02">loop_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M6590.14,3017.1131 C6593.38,3027.0631 6596.21,3037.0431 6598.5,3046.9531 C6629.08,3179.0431 6677.24,3557.1131 6585.5,3656.9531 C6543.01,3703.1931 6362.01,3661.7231 6304.5,3686.9531 C6187.08,3738.4631 5956.39,3948.1531 5779.64,4119.0431 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5776,4122.5631,5785.2484,4119.1769,5779.5923,4119.0853,5779.6839,4113.4292,5776,4122.5631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6307.5" y="3693.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="6317.5" y="3700.02">timingWheelMap_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M6611.77,3017.1831 C6616.68,3027.1131 6621.3,3037.0731 6625.5,3046.9531 C6672.17,3156.8431 6727.11,3547.9231 6637.5,3656.9531 C6593.78,3710.1531 6547.45,3656.9031 6485.5,3686.9531 C6264.86,3793.9831 6265.94,3903.2631 6066.5,4045.9531 C5983.63,4105.2431 5888.82,4163.7931 5802.88,4213.7231 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.53,4216.2431,5808.3241,4215.2057,5802.8597,4213.7425,5804.323,4208.2781,5798.53,4216.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6488.5" y="3693.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="6498.5" y="3700.02">ioLoops_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M6894.28,3023.8731 C6906.62,3031.4331 6918.73,3039.1331 6930.5,3046.9531 C7044.82,3122.8831 7161.09,3231.3331 7232.51,3302.2931 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6882.88,3016.9631,6885.9449,3023.4905,6893.1489,3023.1719,6890.0841,3016.6446,6882.88,3016.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6955.5" y="3053.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="6965.5" y="3060.02">acceptorPtr_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M6002.65,2996.2031 C5972.96,3003.7631 5943.42,3010.7531 5914.5,3016.9531 C5806.37,3040.1231 5775.04,3021.1931 5667.5,3046.9531 C5608.16,3061.1731 5590.96,3062.7831 5538.5,3093.9531 C5484.02,3126.3231 5430.22,3168.6331 5382.81,3210.5531 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5378.83,3214.0831,5388.2198,3211.1113,5382.5733,3210.7684,5382.9162,3205.122,5378.83,3214.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5670.5" y="3053.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5680.5" y="3060.02">recvMessageCallback_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M6286.63,3025.9431 C6174.51,3127.6731 6044,3246.0731 5967.61,3315.3831 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6296.39,3017.0931,6289.259,3018.1652,6287.5059,3025.1599,6294.6369,3024.0879,6296.39,3017.0931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6254.5" y="3053.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="6264.5" y="3060.02">timingWheelMap_</text><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M6002.72,2998.6931 C5973.05,3005.6031 5943.49,3011.7831 5914.5,3016.9531 C5659.95,3062.3331 5591.49,3029.6531 5333.5,3046.9531 C5241.84,3053.1031 5219.25,3059.2731 5127.5,3063.9531 C5042.43,3068.2931 3673.98,3063.3031 3594.5,3093.9531 C3489.88,3134.3031 3396.5,3224.8731 3337.58,3292.2431 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3334.1,3296.2431,3343.0279,3292.0848,3337.3844,3292.4732,3336.996,3286.8297,3334.1,3296.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5336.5" y="3053.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="5346.5" y="3060.02">loopPoolPtr_</text><!--MD5=[79d79e4b28f578896d460465838bfe49]
reverse link C_0001423170502760786790 to C_0002100370281243872283--><path d="M5990.06,3000.8231 C5964.64,3006.7731 5939.35,3012.2131 5914.5,3016.9531 C5741.56,3049.9431 5693.92,3022.9731 5519.5,3046.9531 C5481.33,3052.2031 5472.66,3058.6831 5434.5,3063.9531 C5348.61,3075.8131 5125.84,3061.3431 5045.5,3093.9531 C4986.08,3118.0731 4929.26,3156.6931 4879.78,3197.6631 " fill="none" id="C_0001423170502760786790&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6002.96,2997.7631,5996.1992,2995.2547,5991.2835,3000.5307,5998.0443,3003.0391,6002.96,2997.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5522.5" y="3053.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5532.5" y="3060.02">policyPtr_</text><!--MD5=[e097413d72e14ba218428e784ac5e60d]
reverse link C_0001423170502760786790 to C_0000626107303889580949--><path d="M6488.81,3030.2331 C6488.7,3035.8731 6488.59,3041.4531 6488.5,3046.9531 C6486.6,3161.3531 6504.85,3297.4431 6512.85,3351.0831 " fill="none" id="C_0001423170502760786790&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6489.1,3017.0131,6484.9691,3022.9238,6488.8363,3029.0102,6492.9672,3023.0996,6489.1,3017.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6491.5" y="3053.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="6501.5" y="3060.02">sslContextPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M4550.48,105.0131 C5037.49,144.1231 7677.26,367.7231 7900.5,636.9531 C8030.15,793.3131 8055.08,1053.3031 7779.5,1623.9531 C7705.5,1777.1931 7620.59,1768.3231 7520.5,1905.9531 C7369.15,2114.0731 7416.9,2227.4331 7235.5,2409.9531 C7139.58,2506.4731 7017.19,2588.3831 6899.7,2653.7431 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4549.9,111.9931,4530.52,103.4131,4551.02,98.0331,4549.9,111.9931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41719d421dd9fac5f1bf843a27c4c912]
link C_0002061035340998974559 to C_0001390130774830223499--><path d="M3369.61,3454.5531 C3446,3521.0731 3549.43,3623.2731 3610.5,3733.9531 C3679.66,3859.2931 3607.5,3929.3231 3690.5,4045.9531 C3712.44,4076.7831 3726.15,4079.4331 3761.5,4092.9531 C4276.65,4290.0131 4927.88,4339.9031 5283.12,4351.8731 " fill="none" id="C_0002061035340998974559-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5288.32,4352.0431,5279.4501,4347.7624,5283.3225,4351.8861,5279.1988,4355.7584,5288.32,4352.0431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M3287.27,3467.6331 C3304.21,3572.2531 3331.5,3740.7831 3345.9,3829.6731 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3285.15,3454.5731,3282.1647,3461.1373,3287.0757,3466.4176,3290.061,3459.8535,3285.15,3454.5731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3326.5" y="3693.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="3336.5" y="3700.02">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M4396.28,100.0931 C4292.35,106.0331 4109.05,132.8331 4009.5,243.9531 C3899.81,366.3931 4063.15,499.7731 3938.5,606.9531 C3879.39,657.7831 3294.15,583.3931 3237.5,636.9531 C3186.41,685.2531 3163.5,706.0131 3163.5,1763.9531 C3163.5,1763.9531 3163.5,1763.9531 3163.5,2836.4531 C3163.5,3002.7531 3214.15,3192.3131 3246.39,3296.1531 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4395.96,93.1031,4416.27,99.1531,4396.62,107.0831,4395.96,93.1031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70ff9873eb8ad20d6f04092c12d73f6d]
link C_0001489562721151066050 to C_0001423170502760786790--><path d="M6866.33,2188.8331 C6845.1,2236.3931 6801.33,2331.9231 6758.5,2409.9531 C6716.25,2486.9431 6666.26,2569.4631 6621.27,2641.0831 " fill="none" id="C_0001489562721151066050-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6617.4839" cy="2647.0942" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6621.7478" x2="6613.22" y1="2640.3252" y2="2653.8631"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6624.2529" x2="6610.7149" y1="2651.3581" y2="2642.8302"/><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M7265.26,3460.5331 C7232.52,3534.4631 7184.01,3643.9631 7144.24,3733.7531 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7270.58,3448.5231,7264.4909,3452.3862,7265.7149,3459.4927,7271.804,3455.6296,7270.58,3448.5231" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7167.5,3691.0195,7171.5,3695.0195,7167.5,3699.0195,7163.5,3695.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="7174.5" y="3700.02">sock_</text><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M7300.32,3461.6931 C7295.79,3596.5631 7282.29,3867.0531 7243.5,4092.9531 C7237.56,4127.5531 7230.67,4164.6131 7223.91,4199.6531 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7300.74,3448.6731,7296.5509,3454.5427,7300.3578,3460.667,7304.5469,3454.7975,7300.74,3448.6731" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7290.5,3885.5195,7294.5,3889.5195,7290.5,3893.5195,7286.5,3889.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="7297.5" y="3894.52">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M7320.07,3448.9031 C7347.22,3572.9331 7391.41,3833.1831 7342.5,4045.9531 C7330.85,4096.6231 7309.74,4148.6231 7286.96,4195.1631 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7284.75,4199.6531,7292.3205,4193.3534,7286.9632,4195.1696,7285.1469,4189.8123,7284.75,4199.6531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7369.5,3885.5195,7373.5,3889.5195,7369.5,3893.5195,7365.5,3889.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="7376.5" y="3894.52">newConnectionCallback_</text><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M7204.08,3448.7531 C7116.88,3510.3231 6984.4,3597.9331 6859.5,3656.9531 C6821,3675.1431 6804.88,3664.8131 6768.5,3686.9531 C6742.99,3702.4731 6735.77,3708.2931 6720.5,3733.9531 C6635.54,3876.6931 6737.97,3979.6431 6616.5,4092.9531 C6499.99,4201.6431 6082.56,4279.6331 5804.01,4320.9731 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798.69,4321.7631,5808.176,4324.4119,5803.6369,4321.0361,5807.0127,4316.4969,5798.69,4321.7631" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6726.5,3885.5195,6730.5,3889.5195,6726.5,3893.5195,6722.5,3889.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6733.5" y="3894.52">loop_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M7177.54,3456.2431 C7087.22,3520.4631 6969.56,3618.8031 6901.5,3733.9531 C6811.26,3886.6331 6832.4,3946.7131 6812.5,4122.9531 C6789.26,4328.7531 6756.46,4389.5731 6812.5,4588.9531 C6823.35,4627.5531 6848.65,4627.3531 6859.5,4665.9531 C6913.38,4857.6331 6978.24,4954.1231 6859.5,5113.9531 C6766.46,5239.1931 6333.05,5330.9831 6081.53,5374.7631 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7188.42,3448.5831,7181.2113,3448.7677,7178.6091,3455.493,7185.8178,3455.3084,7188.42,3448.5831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6818.5,4351.5195,6822.5,4355.5195,6818.5,4359.5195,6814.5,4355.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="6825.5" y="4360.52">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M4551.01,99.5131 C5079.15,103.4731 8129.59,129.2831 8195.5,196.9531 C8573.59,585.1231 8207.52,2142.1631 7959.5,2623.9531 C7811.58,2911.2931 7530.17,3178.5331 7388.51,3302.2831 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.81,106.5031,4530.86,99.3631,4550.91,92.5031,4550.81,106.5031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M4550.86,98.9031 C5100.39,98.7931 8396.93,102.0631 8583.5,196.9531 C8659.91,235.8131 8666.5,408.2531 8666.5,424.4531 C8666.5,424.4531 8666.5,424.4531 8666.5,1765.9531 C8666.5,3062.4231 8911.4,3371.3831 8981.5,4665.9531 C8992.27,4864.7731 9043.17,4924.6331 8981.5,5113.9531 C8957.95,5186.2431 8908.78,5255.5131 8863.82,5308.1531 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.68,105.9031,4530.68,98.9131,4550.68,91.9031,4550.68,105.9031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M8770.5,4920.7231 C8770.5,4993.7131 8770.5,5184.2631 8770.5,5302.9631 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8770.5,5308.2031,8774.5,5299.2031,8770.5,5303.2031,8766.5,5299.2031,8770.5,5308.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M4550.98,101.7431 C4758.14,110.4131 5341.26,142.6531 5814.5,243.9531 C6367.41,362.3131 6579.83,287.7031 7024.5,636.9531 C7207.38,780.5831 7324.89,1037.8531 7376.39,1170.7831 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4550.4,108.7331,4530.7,100.9231,4550.97,94.7431,4550.4,108.7331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f292eacf5c00648cb4d50d7f5f818066]
link C_0001453238540802541239 to C_0000630185754256426097--><path d="M3561.04,500.4831 C3744.89,604.2631 4101.54,788.2131 4432.5,858.9531 C4569.96,888.3331 6830.5,840.6231 6962.5,888.9531 C7111.02,943.3231 7245.56,1070.5031 7326.67,1159.7131 " fill="none" id="C_0001453238540802541239-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7331.4321" cy="1164.9934" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7326.0841" x2="7336.78" y1="1159.0436" y2="1170.9431"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7337.3818" x2="7325.4823" y1="1159.6454" y2="1170.3413"/><!--MD5=[96ea509b2ad1947f9d7bb54a63b044ef]
reverse link C_0001453238540802541239 to C_0002032009232244826154--><path d="M3305.34,508.3631 C3257.89,543.3231 3206.98,587.5031 3170.5,636.9531 C2915.18,983.0031 2558.72,2019.6931 2467.5,2439.9531 C2430.25,2611.5631 2445.5,2658.8431 2445.5,2834.4531 C2445.5,2834.4531 2445.5,2834.4531 2445.5,4356.9531 C2445.5,4460.6731 2419.99,4572.0331 2390.6,4665.9331 " fill="none" id="C_0001453238540802541239&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3316.04,500.5931,3308.8346,500.8808,3306.3289,507.6426,3313.5343,507.3549,3316.04,500.5931" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2451.5,3051.0195,2455.5,3055.0195,2451.5,3059.0195,2447.5,3055.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="2458.5" y="3060.02">creationDate_</text><!--MD5=[ab1296281abef24fab0757a8cbe429c3]
reverse link C_0001159823987743494688 to C_0001453238540802541239--><path d="M4396.53,107.5631 C4292.83,120.4531 4103.27,148.5631 3947.5,196.9531 C3818.5,237.0231 3678.78,300.5731 3577.94,350.3231 " fill="none" id="C_0001159823987743494688&lt;-C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4395.7,100.6131,4416.4,105.1531,4397.39,114.5131,4395.7,100.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afcd30e82584d6dad1d68d23a951a309]
link C_0001166594284895168875 to C_0001016092423778930091--><!--MD5=[0d0106a0d39a3bad9af96b9857a9e617]
link C_0001016092423778930091 to C_0002131890502232898697--><!--MD5=[f8fdcf7e1edee3374f818a01359acc3e]
link C_0001166594284895168875 to C_0000051485486938383234--><!--MD5=[cd5bba869befa6f39dde45f2ba149783]
link C_0000051485486938383234 to C_0000394452884449343416--><!--MD5=[104a48de2091c502a818b15854b77c1f]
link C_0000394452884449343416 to C_0001331044972460795182--><!--MD5=[0ca735ca75a00141bf7250a4db4bbb85]
link C_0000051485486938383234 to C_0000026148367911088234--><!--MD5=[2a06fee676a52c38587d634aafcd24ba]
@startuml
title trantor class diagram
class "utils::Hash128" as C_0001166594284895168875
class C_0001166594284895168875 {
__
+bytes : unsigned char[16]
}
class "utils::Hash160" as C_0001016092423778930091
class C_0001016092423778930091 {
__
+bytes : unsigned char[20]
}
class "utils::Hash256" as C_0000080756732781028581
class C_0000080756732781028581 {
__
+bytes : unsigned char[32]
}
class "utils::RngState" as C_0000195316585713148470
class C_0000195316585713148470 {
__
+counter : uint64_t
+prev : utils::Hash256
+secret : utils::Hash256
+time : int64_t
}
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
__
}
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
+~Date() : void
..
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+operator==(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
..
+after(double second) const : const Date
{static} +date() : const Date
{static} +fromDbString(const std::string & datetime) : Date
{static} +fromDbStringLocal(const std::string & datetime) : Date
+isSameSecond(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
{static} +now() : const Date
+roundDay() const : const Date
+roundSecond() const : const Date
+secondsSinceEpoch() const : int64_t
+swap(Date & that) : void
{static} +timezoneOffset() : int64_t
+tmStruct() const : struct tm
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbString() const : std::string
+toDbStringLocal() const : std::string
+toFormattedString(bool showMicroseconds) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
__
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer() : void
+~FixedBuffer() : void
..
+add(size_t len) : void
+append(const char * buf, size_t len) : bool
+avail() const : int
+current() : char *
+data() const : const char *
+debugString() : const char *
+length() const : int
+reset() : void
+setCookie(void (*)() cookie) : void
+toString() const : std::string
+zeroBuffer() : void
__
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
__
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
+FixedBuffer() : void
+~FixedBuffer() : void
..
+add(size_t len) : void
+append(const char * buf, size_t len) : bool
+avail() const : int
+current() : char *
+data() const : const char *
+debugString() : const char *
+length() const : int
+reset() : void
+setCookie(void (*)() cookie) : void
+toString() const : std::string
+zeroBuffer() : void
__
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
+FixedBuffer() : void
+~FixedBuffer() : void
..
+add(size_t len) : void
+append(const char * buf, size_t len) : bool
+avail() const : int
+current() : char *
+data() const : const char *
+debugString() : const char *
+length() const : int
+reset() : void
+setCookie(void (*)() cookie) : void
+toString() const : std::string
+zeroBuffer() : void
__
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(const void *) : LogStream::self &
+operator<<<int N>(const char (&)[N] buf) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(const double &) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(bool v) : LogStream::self &
+operator<<(const unsigned long long &) : LogStream::self &
+operator<<(const long long &) : LogStream::self &
+operator<<(unsigned long) : LogStream::self &
+operator<<(long) : LogStream::self &
+operator<<(unsigned int) : LogStream::self &
+operator<<(int) : LogStream::self &
+operator<<(unsigned short) : LogStream::self &
+operator<<(short) : LogStream::self &
..
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
__
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+Fmt<T>(const char * fmt, T val) : void
..
+data() const : const char *
+length() const : int
__
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+Logger() : void
+Logger(Logger::LogLevel level) : void
+Logger(bool isSysErr) : void
+~Logger() : void
..
{static} +displayLocalTime() : bool
{static} +logLevel() : Logger::LogLevel
{static} +setDisplayLocalTime(bool showLocalTime) : void
+setIndex(int index) : Logger &
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
+stream() : LogStream &
__
}
enum "Logger::LogLevel" as C_0002131283840621188296
enum C_0002131283840621188296 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0000979080797342806546
class C_0000979080797342806546 {
+SourceFile(const char * filename = nullptr) : void
+SourceFile<int N>(const char (&)[N] arr) : void
__
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
..
+setIndex(int index) : RawLogger &
+stream() : LogStream &
__
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
..
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
..
+addInFront(const char * buf, size_t len) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+addInFrontInt8(const uint8_t b) : void
+append<int N>(const char (&)[N] buf) : void
+append(const std::string & buf) : void
+append(const char * buf, size_t len) : void
+append(const MsgBuffer & buf) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+appendInt8(const uint8_t b) : void
+beginWrite() const : const char *
+beginWrite() : char *
+ensureWritableBytes(size_t len) : void
+findCRLF() const : const char *
+hasWritten(size_t len) : void
+peek() const : const char *
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+peekInt8() const : uint8_t
+read(size_t len) : std::string
+readFd(int fd, int * retErrno) : ssize_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+readInt8() : uint8_t
+readableBytes() const : size_t
+retrieve(size_t len) : void
+retrieveAll() : void
+retrieveUntil(const char * end) : void
+swap(MsgBuffer & buf) noexcept : void
+unwrite(size_t offset) : void
+writableBytes() const : size_t
__
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
+~TaskQueue() : void
..
+getName() const : std::string
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+syncTaskInQueue(const std::function<void ()> & task) : void
__
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue() : void
+~MpscQueue() : void
..
+dequeue(T & output) : bool
+empty() : bool
+enqueue(T && input) : void
+enqueue(const T & input) : void
__
}
class "MpscQueue::BufferNode" as C_0000223701637084171141
class C_0000223701637084171141 {
+BufferNode() = default : void
+BufferNode(const T & data) : void
+BufferNode(T && data) : void
__
+dataPtr_ : T *
+next_ : std::atomic<BufferNode *>
}
class "MpscQueue<std::function<void()>>" as C_0002185746167032660910
class C_0002185746167032660910 {
__
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
..
+assertInLoopThread() : void
{static} +getEventLoopOfCurrentThread() : EventLoop *
+index() : size_t
+invalidateTimer(TimerId id) : void
+isCallingFunctions() : bool
+isInLoopThread() const : bool
+isRunning() : bool
+loop() : void
+moveToCurrentThread() : void
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+quit() : void
+removeChannel(Channel * chl) : void
+resetAfterFork() : void
+resetTimerQueue() : void
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAt(const Date & time, const Func & cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runInLoop<Functor>(Functor && f) : void
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+setIndex(size_t index) : void
+updateChannel(Channel * chl) : void
__
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
..
+getLoop() const : EventLoop *
+run() : void
+wait() : void
__
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+SerialTaskQueue() = deleted : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
..
+getName() const : std::string
+getTaskCount() : size_t
+isRuningTask() : bool
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+stop() : void
+waitAllTasksFinished() : void
__
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
..
+assertInLoopThread() : void
{static} +newPoller(EventLoop * loop) : Poller *
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{abstract} +updateChannel(Channel * channel) = 0 : void
__
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
..
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
__
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
..
+disableAll() : void
+disableReading() : void
+disableWriting() : void
+enableReading() : void
+enableWriting() : void
+events() const : int
+fd() const : int
+isNoneEvent() const : bool
+isReading() const : bool
+isWriting() const : bool
+ownerLoop() : EventLoop *
+remove() : void
+revents() const : int
+setCloseCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+tie(const std::shared_ptr<void> & obj) : void
+updateEvents(int events) : void
__
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+~ConcurrentTaskQueue() : void
..
+getName() const : std::string
+getTaskCount() : size_t
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+stop() : void
__
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
..
+family() const : sa_family_t
+getSockAddr() const : const struct sockaddr *
+ip6NetEndian() const : const uint32_t *
+ipNetEndian() const : uint32_t
+isIntranetIp() const : bool
+isIpV6() const : bool
+isLoopbackIp() const : bool
+isUnspecified() const : bool
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+toIp() const : std::string
+toIpNetEndian() const : std::string
+toIpPort() const : std::string
+toIpPortNetEndian() const : std::string
+toPort() const : uint16_t
__
}
class "InetAddress::()" as C_0000673025168912921705
class C_0000673025168912921705 {
__
+addr6_ : struct sockaddr_in6
+addr_ : struct sockaddr_in
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
kSSLProtocolError
}
abstract "Certificate" as C_0001660397537883119469
abstract C_0001660397537883119469 {
+~Certificate() = default : void
..
{abstract} +pem() const = 0 : std::string
{abstract} +sha1Fingerprint() const = 0 : std::string
{abstract} +sha256Fingerprint() const = 0 : std::string
__
}
class "TLSPolicy" as C_0002100370281243872283
class C_0002100370281243872283 {
{static} +defaultClientPolicy(const std::string & hostname = "") : std::shared_ptr<TLSPolicy>
{static} +defaultServerPolicy(const std::string & certPath, const std::string & keyPath) : std::shared_ptr<TLSPolicy>
+getAllowBrokenChain() const : bool
+getAlpnProtocols() : const std::vector<std::string> &
+getAlpnProtocols() const : const std::vector<std::string> &
+getCaPath() const : const std::string &
+getCertPath() const : const std::string &
+getConfCmds() const : const std::vector<std::pair<std::string,std::string>> &
+getHostname() const : const std::string &
+getKeyPath() const : const std::string &
+getUseOldTLS() const : bool
+getUseSystemCertStore() const : bool
+getValidate() const : bool
+setAllowBrokenChain(bool allow) : TLSPolicy &
+setAlpnProtocols(std::vector<std::string> && alpnProtocols) : TLSPolicy &
+setAlpnProtocols(const std::vector<std::string> & alpnProtocols) : TLSPolicy &
+setCaPath(const std::string & caPath) : TLSPolicy &
+setCertPath(const std::string & certPath) : TLSPolicy &
+setConfCmds(const std::vector<std::pair<std::string,std::string>> & sslConfCmds) : TLSPolicy &
+setHostname(const std::string & hostname) : TLSPolicy &
+setKeyPath(const std::string & keyPath) : TLSPolicy &
+setUseOldTLS(bool useOldTLS) : TLSPolicy &
+setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &
+setValidate(bool enable) : TLSPolicy &
__
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
..
{abstract} +applicationProtocol() const = 0 : std::string
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +bytesSent() const = 0 : size_t
+clearContext() : void
{abstract} +connectDestroyed() = 0 : void
{abstract} +connectEstablished() = 0 : void
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) = 0 : void
{abstract} +forceClose() = 0 : void
+getContext<T>() const : std::shared_ptr<T>
{abstract} +getLoop() = 0 : EventLoop *
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
+hasContext() const : bool
{abstract} +isKeepAlive() = 0 : bool
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +keepAlive() = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +peerCertificate() const = 0 : CertificatePtr
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
+setCloseCallback(CloseCallback && cb) : void
+setCloseCallback(const CloseCallback & cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setContext(std::shared_ptr<void> && context) : void
+setContext(const std::shared_ptr<void> & context) : void
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
+setRecvMsgCallback(const RecvMessageCallback & cb) : void
+setRecvMsgCallback(RecvMessageCallback && cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
+setValidationPolicy(TLSPolicy && policy) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
{abstract} +shutdown() = 0 : void
{abstract} +sniName() const = 0 : std::string
+startClientEncryption(std::function<void (const TcpConnectionPtr &)> && callback, bool useOldTLS = false, bool validateCert = true, const std::string & hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
{abstract} +startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) = 0 : void
__
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
..
+connect() : void
+connection() const : TcpConnectionPtr
+disconnect() : void
+enableRetry() : void
+enableSSL(TLSPolicyPtr policy) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
+getLoop() const : EventLoop *
+name() const : const std::string &
+retry() const : bool
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+setSockOptCallback(const SockOptCallback & cb) : void
+setSockOptCallback(SockOptCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+stop() : void
__
}
class "TcpClient::IgnoreSigPipe" as C_0001278908569830571044
class C_0001278908569830571044 {
+IgnoreSigPipe() : void
__
}
abstract "TLSProvider" as C_0000464040622375950341
abstract C_0000464040622375950341 {
+TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void
+~TLSProvider() = default : void
..
+appendToWriteBuffer(const char * ptr, size_t size) : void
+applicationProtocol() const : const std::string &
{abstract} +close() = 0 : void
+getBufferedData() : MsgBuffer &
+getRecvBuffer() : MsgBuffer &
+peerCertificate() const : const CertificatePtr &
{abstract} +recvData(MsgBuffer * buffer) = 0 : void
+sendBufferedData() : bool
{abstract} +sendData(const char * ptr, size_t size) = 0 : ssize_t
+setCloseCallback(TLSProvider::CloseCallback cb) : void
+setErrorCallback(TLSProvider::ErrorCallback cb) : void
+setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void
+setMessageCallback(TLSProvider::MessageCallback cb) : void
+setWriteCallback(TLSProvider::WriteCallback cb) : void
+sniName() const : const std::string &
{abstract} +startEncryption() = 0 : void
__
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+~Connector() : void
..
+restart() : void
+serverAddress() const : const InetAddress &
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+setSockOptCallback(const Connector::SockOptCallback & cb) : void
+setSockOptCallback(Connector::SockOptCallback && cb) : void
+start() : void
+stop() : void
__
}
enum "Connector::Status" as C_0000000982196670174162
enum C_0000000982196670174162 {
Disconnected
Connecting
Connected
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+~TimingWheel() : void
..
+getLoop() : EventLoop *
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
__
}
class "TimingWheel::CallbackEntry" as C_0002013739811805694444
class C_0002013739811805694444 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
__
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void
+~TcpConnectionImpl() : void
..
+applicationProtocol() const : std::string
+bytesReceived() const : size_t
+bytesSent() const : size_t
+connectDestroyed() : void
+connectEstablished() : void
+connected() const : bool
+disconnected() const : bool
+enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) : void
+forceClose() : void
+getLoop() : EventLoop *
+getRecvBuffer() : MsgBuffer *
+isKeepAlive() : bool
+isSSLConnection() const : bool
+keepAlive() : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+peerCertificate() const : CertificatePtr
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const char * msg, size_t len) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+setTcpNoDelay(bool on) : void
+shutdown() : void
+sniName() const : std::string
+startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) : void
__
}
class "TcpConnectionImpl::KickoffEntry" as C_0002266895444343633259
class C_0002266895444343633259 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
__
}
class "TcpConnectionImpl::BufferNode" as C_0001029063960859366412
class C_0001029063960859366412 {
+isFile() const : bool
+~BufferNode() : void
__
+closeConnection_ : bool
+fileBytesToSend_ : ssize_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
+nDataWritten_ : std::size_t
+offset_ : off_t
+sendFd_ : int
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
}
enum "TcpConnectionImpl::ConnStatus" as C_0001727349338344491225
enum C_0001727349338344491225 {
Disconnected
Connecting
Connected
Disconnecting
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
+Socket(int sockfd) : void
+~Socket() : void
..
+accept(InetAddress * peeraddr) : int
+bindAddress(const InetAddress & localaddr) : void
+closeWrite() : void
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +createNonblockingSocketOrDie(int family) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
{static} +getSocketError(int sockfd) : int
+getSocketError() : int
{static} +isSelfConnect(int sockfd) : bool
+listen() : void
+read(char * buffer, uint64_t len) : int
+setKeepAlive(bool on) : void
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setTcpNoDelay(bool on) : void
__
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
__
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
..
+address() const : const InetAddress &
+enableSSL(TLSPolicyPtr policy) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & caPath = "") : void
+getIoLoops() const : std::vector<EventLoop *>
+getLoop() const : EventLoop *
+ipPort() const : std::string
+kickoffIdleConnections(size_t timeout) : void
+name() const : const std::string &
+setAfterAcceptSockOptCallback(SockOptCallback cb) : void
+setBeforeListenSockOptCallback(SockOptCallback cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setIoLoops(const std::vector<EventLoop *> & ioLoops) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+start() : void
+stop() : void
__
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() = deleted : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
..
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
+getNextLoop() : EventLoop *
+size() : size_t
+start() : void
+wait() : void
__
}
class "InetAddress::(anonymous_2591690)" as C_0000051485486938383234
class C_0000051485486938383234 {
__
+addr6_ : struct sockaddr_in6
+addr_ : struct sockaddr_in
}
class "TcpServer::IgnoreSigPipe" as C_0001489562721151066050
class C_0001489562721151066050 {
+IgnoreSigPipe() : void
__
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
..
+addr() const : const InetAddress &
+listen() : void
+setAfterAcceptSockOptCallback(AcceptorSockOptCallback cb) : void
+setBeforeListenSockOptCallback(AcceptorSockOptCallback cb) : void
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
__
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
__
+len_ : const unsigned int
+str_ : const char *
}
class "InetAddress::(anonymous_1207742)" as C_0001331044972460795182
class C_0001331044972460795182 {
__
+addr6_ : struct sockaddr_in6
+addr_ : struct sockaddr_in
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
..
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
..
+id() : TimerId
+isRepeat() : bool
+restart(const TimePoint & now) : void
+run() const : void
+when() const : const TimePoint &
__
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
__
}
class "ScopeExit<F>" as C_0000026148367911088234
class C_0000026148367911088234 {
+ScopeExit(F && f) : void
+~ScopeExit() : void
__
+f_ : F
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+AsyncFileLogger() : void
+~AsyncFileLogger() : void
..
+flush() : void
+output(const char * msg, const uint64_t len) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+setFileSizeLimit(uint64_t limit) : void
+setMaxFiles(size_t maxFiles) : void
+setSwitchOnLimitOnly(bool flag = true) : void
+startLogging() : void
__
}
class "AsyncFileLogger::LoggerFile" as C_0001453238540802541239
class C_0001453238540802541239 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName, bool switchOnLimitOnly = false, size_t maxFiles = 0) : void
+flush() : void
+getLength() : uint64_t
+open() : void
+operator bool() const : bool
+switchLog(bool openNewOne) : void
+writeLog(const StringPtr buf) : void
+~LoggerFile() : void
__
}
C_0000195316585713148470 o- - C_0000080756732781028581 : +secret
C_0000195316585713148470 o- - C_0000080756732781028581 : +prev
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0002131283840621188296 - -+ C_0002053752992472264214
C_0000979080797342806546 - -+ C_0002053752992472264214
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000223701637084171141 - -+ C_0000912667184903365399
C_0002185746167032660910 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001897340460211641725 o- - C_0000673025168912921705
C_0002230624932100089526 ..> C_0001897340460211641725
C_0002230624932100089526 ..> C_0001390130774830223499
C_0002230624932100089526 ..> C_0001660397537883119469
C_0002230624932100089526 ..> C_0000964465843177067305
C_0002230624932100089526 o- - C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #connectionCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #closeCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #writeCompleteCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 o- - C_0000434245188016003403 : #sslErrorCallback_
C_0002230624932100089526 o- - C_0002100370281243872283 : #tlsPolicy_
C_0002230624932100089526 <.. C_0001156367011091191681 : +<<friend>>
C_0002230624932100089526 <.. C_0000920759514274339356 : +<<friend>>
C_0002230624932100089526 <.. C_0001423170502760786790 : +<<friend>>
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 o- - C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 o- - C_0002100370281243872283 : -tlsPolicyPtr_
C_0001156367011091191681 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0001278908569830571044 - -+ C_0001156367011091191681
C_0000464040622375950341 - -> C_0002230624932100089526 : #conn_
C_0000464040622375950341 o- - C_0002100370281243872283 : #policyPtr_
C_0000464040622375950341 o- - C_0000626107303889580949 : #contextPtr_
C_0000464040622375950341 o- - C_0001289495020269537351 : #recvBuffer_
C_0000464040622375950341 - -> C_0001390130774830223499 : #loop_
C_0000464040622375950341 o- - C_0001660397537883119469 : #peerCertificate_
C_0000464040622375950341 o- - C_0001289495020269537351 : #writeBuffer_
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0000000982196670174162 - -+ C_0001706043459252151324
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0002013739811805694444 - -+ C_0000964465843177067305
C_0000920759514274339356 ..> C_0002100370281243872283
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001660397537883119469
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 - -> C_0000464040622375950341 : #tlsProviderPtr_
C_0000920759514274339356 o- - C_0002230624932100089526 : #upgradeCallback_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0002266895444343633259 - -+ C_0000920759514274339356
C_0002266895444343633259 - -> C_0002230624932100089526 : -conn_
C_0001029063960859366412 - -+ C_0000920759514274339356
C_0001029063960859366412 - -> C_0001289495020269537351 : +msgBuffer_
C_0001727349338344491225 - -+ C_0000920759514274339356
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 o- - C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 o- - C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 - -> C_0001390130774830223499 : -timingWheelMap_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 - -> C_0001390130774830223499 : -ioLoops_
C_0001423170502760786790 o- - C_0002100370281243872283 : -policyPtr_
C_0001423170502760786790 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0002061035340998974559 ..> C_0001390130774830223499
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0001489562721151066050 - -+ C_0001423170502760786790
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0001453238540802541239 - -+ C_0000630185754256426097
C_0001453238540802541239 o- - C_0002032009232244826154 : #creationDate_
C_0001159823987743494688 <|- - C_0001453238540802541239

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.20.1+1-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>