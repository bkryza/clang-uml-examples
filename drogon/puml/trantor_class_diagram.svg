<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5294px" preserveAspectRatio="none" style="width:8824px;height:5294px;" version="1.1" viewBox="0 0 8824 5294" width="8824px" zoomAndPan="magnify"><defs><filter height="300%" id="fytoz1epo5flz" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="2740" y="27"/><ellipse cx="2755" cy="43" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2757.9688,48.6406 Q2757.3906,48.9375 2756.75,49.0781 Q2756.1094,49.2344 2755.4063,49.2344 Q2752.9063,49.2344 2751.5781,47.5938 Q2750.2656,45.9375 2750.2656,42.8125 Q2750.2656,39.6875 2751.5781,38.0313 Q2752.9063,36.375 2755.4063,36.375 Q2756.1094,36.375 2756.75,36.5313 Q2757.4063,36.6875 2757.9688,36.9844 L2757.9688,39.7031 Q2757.3438,39.125 2756.75,38.8594 Q2756.1563,38.5781 2755.5313,38.5781 Q2754.1875,38.5781 2753.5,39.6563 Q2752.8125,40.7188 2752.8125,42.8125 Q2752.8125,44.9063 2753.5,45.9844 Q2754.1875,47.0469 2755.5313,47.0469 Q2756.1563,47.0469 2756.75,46.7813 Q2757.3438,46.5 2757.9688,45.9219 L2757.9688,48.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2769" y="47.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2741" x2="2853" y1="59" y2="59"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2741" x2="2853" y1="67" y2="67"/><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="432.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="1820" y="4118"/><ellipse cx="2309.75" cy="4134" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2312.7188,4139.6406 Q2312.1406,4139.9375 2311.5,4140.0781 Q2310.8594,4140.2344 2310.1563,4140.2344 Q2307.6563,4140.2344 2306.3281,4138.5938 Q2305.0156,4136.9375 2305.0156,4133.8125 Q2305.0156,4130.6875 2306.3281,4129.0313 Q2307.6563,4127.375 2310.1563,4127.375 Q2310.8594,4127.375 2311.5,4127.5313 Q2312.1563,4127.6875 2312.7188,4127.9844 L2312.7188,4130.7031 Q2312.0938,4130.125 2311.5,4129.8594 Q2310.9063,4129.5781 2310.2813,4129.5781 Q2308.9375,4129.5781 2308.25,4130.6563 Q2307.5625,4131.7188 2307.5625,4133.8125 Q2307.5625,4135.9063 2308.25,4136.9844 Q2308.9375,4138.0469 2310.2813,4138.0469 Q2310.9063,4138.0469 2311.5,4137.7813 Q2312.0938,4137.5 2312.7188,4136.9219 L2312.7188,4139.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="2330.25" y="4138.1543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1821" x2="2837" y1="4150" y2="4150"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1821" x2="2837" y1="4158" y2="4158"/><ellipse cx="1831" cy="4169" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1840" y="4172.2104">Date() : void</text><ellipse cx="1831" cy="4181.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1840" y="4185.0151">Date(int64_t microSec) : void</text><ellipse cx="1831" cy="4194.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1840" y="4197.8198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="1831" cy="4207.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="1840" y="4210.6245">date() : const Date</text><ellipse cx="1831" cy="4220.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="1840" y="4223.4292">now() : const Date</text><ellipse cx="1831" cy="4233.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="1840" y="4236.2339">timezoneOffset() : int64_t</text><ellipse cx="1831" cy="4245.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1840" y="4249.0386">after(double second) const : const Date</text><ellipse cx="1831" cy="4258.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1840" y="4261.8433">roundSecond() const : const Date</text><ellipse cx="1831" cy="4271.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1840" y="4274.6479">roundDay() const : const Date</text><ellipse cx="1831" cy="4284.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1840" y="4287.4526">~Date() : void</text><ellipse cx="1831" cy="4297.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1840" y="4300.2573">operator==(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4309.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1840" y="4313.062">operator!=(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4322.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1840" y="4325.8667">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4335.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1840" y="4338.6714">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4348.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1840" y="4351.4761">operator&gt;=(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4361.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1840" y="4364.2808">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4373.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1840" y="4377.0854">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="1831" cy="4386.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1840" y="4389.8901">secondsSinceEpoch() const : int64_t</text><ellipse cx="1831" cy="4399.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1840" y="4402.6948">tmStruct() const : struct tm</text><ellipse cx="1831" cy="4412.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1840" y="4415.4995">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="1831" cy="4425.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="1840" y="4428.3042">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1831" cy="4437.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="1840" y="4441.1089">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><ellipse cx="1831" cy="4450.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="1840" y="4453.9136">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1831" cy="4463.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1840" y="4466.7183">toDbStringLocal() const : std::string</text><ellipse cx="1831" cy="4476.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1840" y="4479.5229">toDbString() const : std::string</text><ellipse cx="1831" cy="4489.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="1840" y="4492.3276">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="1831" cy="4501.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="1840" y="4505.1323">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="1831" cy="4514.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="1840" y="4517.937">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="1831" cy="4527.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1840" y="4530.7417">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="1831" cy="4540.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1840" y="4543.5464">swap(Date &amp; that) : void</text><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="137.6328" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="1544" y="238"/><ellipse cx="1844.75" cy="254" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1847.7188,259.6406 Q1847.1406,259.9375 1846.5,260.0781 Q1845.8594,260.2344 1845.1563,260.2344 Q1842.6563,260.2344 1841.3281,258.5938 Q1840.0156,256.9375 1840.0156,253.8125 Q1840.0156,250.6875 1841.3281,249.0313 Q1842.6563,247.375 1845.1563,247.375 Q1845.8594,247.375 1846.5,247.5313 Q1847.1563,247.6875 1847.7188,247.9844 L1847.7188,250.7031 Q1847.0938,250.125 1846.5,249.8594 Q1845.9063,249.5781 1845.2813,249.5781 Q1843.9375,249.5781 1843.25,250.6563 Q1842.5625,251.7188 1842.5625,253.8125 Q1842.5625,255.9063 1843.25,256.9844 Q1843.9375,258.0469 1845.2813,258.0469 Q1845.9063,258.0469 1846.5,257.7813 Q1847.0938,257.5 1847.7188,256.9219 L1847.7188,259.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="1865.25" y="258.1543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1545" x2="2253" y1="270" y2="270"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1545" x2="2253" y1="278" y2="278"/><ellipse cx="1555" cy="289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="1564" y="292.2104">output(const char * msg, const uint64_t len) : void</text><ellipse cx="1555" cy="301.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1564" y="305.0151">flush() : void</text><ellipse cx="1555" cy="314.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1564" y="317.8198">startLogging() : void</text><ellipse cx="1555" cy="327.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1564" y="330.6245">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="1555" cy="340.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="1564" y="343.4292">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="1555" cy="353.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1564" y="356.2339">~AsyncFileLogger() : void</text><ellipse cx="1555" cy="365.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1564" y="369.0386">AsyncFileLogger() : void</text><!--MD5=[365b5a9dc82dd271793e6f4b3616371c]
class C_0000923080849258138681--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="124.8281" id="C_0000923080849258138681" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="1452.5" y="925"/><ellipse cx="1695.75" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1698.7188,946.6406 Q1698.1406,946.9375 1697.5,947.0781 Q1696.8594,947.2344 1696.1563,947.2344 Q1693.6563,947.2344 1692.3281,945.5938 Q1691.0156,943.9375 1691.0156,940.8125 Q1691.0156,937.6875 1692.3281,936.0313 Q1693.6563,934.375 1696.1563,934.375 Q1696.8594,934.375 1697.5,934.5313 Q1698.1563,934.6875 1698.7188,934.9844 L1698.7188,937.7031 Q1698.0938,937.125 1697.5,936.8594 Q1696.9063,936.5781 1696.2813,936.5781 Q1694.9375,936.5781 1694.25,937.6563 Q1693.5625,938.7188 1693.5625,940.8125 Q1693.5625,942.9063 1694.25,943.9844 Q1694.9375,945.0469 1696.2813,945.0469 Q1696.9063,945.0469 1697.5,944.7813 Q1698.0938,944.5 1698.7188,943.9219 L1698.7188,946.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="1716.25" y="945.1543">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1453.5" x2="2118.5" y1="957" y2="957"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1453.5" x2="2118.5" y1="965" y2="965"/><ellipse cx="1463.5" cy="976" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="1472.5" y="979.2104">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName) : void</text><ellipse cx="1463.5" cy="988.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1472.5" y="992.0151">~LoggerFile() : void</text><ellipse cx="1463.5" cy="1001.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1472.5" y="1004.8198">writeLog(const StringPtr buf) : void</text><ellipse cx="1463.5" cy="1014.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1472.5" y="1017.6245">getLength() : uint64_t</text><ellipse cx="1463.5" cy="1027.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1472.5" y="1030.4292">operator bool() const : bool</text><ellipse cx="1463.5" cy="1040.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1472.5" y="1043.2339">flush() : void</text><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="124.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="948" y="4774"/><ellipse cx="1004.75" cy="4790" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1007.7188,4795.6406 Q1007.1406,4795.9375 1006.5,4796.0781 Q1005.8594,4796.2344 1005.1563,4796.2344 Q1002.6563,4796.2344 1001.3281,4794.5938 Q1000.0156,4792.9375 1000.0156,4789.8125 Q1000.0156,4786.6875 1001.3281,4785.0313 Q1002.6563,4783.375 1005.1563,4783.375 Q1005.8594,4783.375 1006.5,4783.5313 Q1007.1563,4783.6875 1007.7188,4783.9844 L1007.7188,4786.7031 Q1007.0938,4786.125 1006.5,4785.8594 Q1005.9063,4785.5781 1005.2813,4785.5781 Q1003.9375,4785.5781 1003.25,4786.6563 Q1002.5625,4787.7188 1002.5625,4789.8125 Q1002.5625,4791.9063 1003.25,4792.9844 Q1003.9375,4794.0469 1005.2813,4794.0469 Q1005.9063,4794.0469 1006.5,4793.7813 Q1007.0938,4793.5 1007.7188,4792.9219 L1007.7188,4795.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="1025.25" y="4794.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1148" y="4771"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1149" y="4783.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="949" x2="1153" y1="4806" y2="4806"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="949" x2="1153" y1="4814" y2="4814"/><ellipse cx="959" cy="4825" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="968" y="4828.2104">MpscQueue&lt;T&gt;() : void</text><ellipse cx="959" cy="4837.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="968" y="4841.0151">~MpscQueue&lt;T&gt;() : void</text><ellipse cx="959" cy="4850.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="968" y="4853.8198">enqueue(T &amp;&amp; input) : void</text><ellipse cx="959" cy="4863.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="968" y="4866.6245">enqueue(const T &amp; input) : void</text><ellipse cx="959" cy="4876.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="968" y="4879.4292">dequeue(T &amp; output) : bool</text><ellipse cx="959" cy="4889.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="968" y="4892.2339">empty() : bool</text><!--MD5=[805f636b45cd5c652037ed8df0735b6e]
class C_0000913287266699074255--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="48" id="C_0000913287266699074255" style="stroke: #A80036; stroke-width: 1.5;" width="207" x="3966.5" y="4310"/><ellipse cx="3981.5" cy="4326" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3984.4688,4331.6406 Q3983.8906,4331.9375 3983.25,4332.0781 Q3982.6094,4332.2344 3981.9063,4332.2344 Q3979.4063,4332.2344 3978.0781,4330.5938 Q3976.7656,4328.9375 3976.7656,4325.8125 Q3976.7656,4322.6875 3978.0781,4321.0313 Q3979.4063,4319.375 3981.9063,4319.375 Q3982.6094,4319.375 3983.25,4319.5313 Q3983.9063,4319.6875 3984.4688,4319.9844 L3984.4688,4322.7031 Q3983.8438,4322.125 3983.25,4321.8594 Q3982.6563,4321.5781 3982.0313,4321.5781 Q3980.6875,4321.5781 3980,4322.6563 Q3979.3125,4323.7188 3979.3125,4325.8125 Q3979.3125,4327.9063 3980,4328.9844 Q3980.6875,4330.0469 3982.0313,4330.0469 Q3982.6563,4330.0469 3983.25,4329.7813 Q3983.8438,4329.5 3984.4688,4328.9219 L3984.4688,4331.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="3995.5" y="4330.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="100" x="4076.5" y="4307"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="4077.5" y="4319.1387">std::function&lt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3967.5" x2="4172.5" y1="4342" y2="4342"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3967.5" x2="4172.5" y1="4350" y2="4350"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="457.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="4779" y="3583"/><ellipse cx="4997.25" cy="3599" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5000.2188,3604.6406 Q4999.6406,3604.9375 4999,3605.0781 Q4998.3594,3605.2344 4997.6563,3605.2344 Q4995.1563,3605.2344 4993.8281,3603.5938 Q4992.5156,3601.9375 4992.5156,3598.8125 Q4992.5156,3595.6875 4993.8281,3594.0313 Q4995.1563,3592.375 4997.6563,3592.375 Q4998.3594,3592.375 4999,3592.5313 Q4999.6563,3592.6875 5000.2188,3592.9844 L5000.2188,3595.7031 Q4999.5938,3595.125 4999,3594.8594 Q4998.4063,3594.5781 4997.7813,3594.5781 Q4996.4375,3594.5781 4995.75,3595.6563 Q4995.0625,3596.7188 4995.0625,3598.8125 Q4995.0625,3600.9063 4995.75,3601.9844 Q4996.4375,3603.0469 4997.7813,3603.0469 Q4998.4063,3603.0469 4999,3602.7813 Q4999.5938,3602.5 5000.2188,3601.9219 L5000.2188,3604.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5017.75" y="3603.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4780" x2="5288" y1="3615" y2="3615"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4780" x2="5288" y1="3623" y2="3623"/><ellipse cx="4790" cy="3634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4799" y="3637.2104">EventLoop() : void</text><ellipse cx="4790" cy="3646.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4799" y="3650.0151">~EventLoop() : void</text><ellipse cx="4790" cy="3659.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4799" y="3662.8198">loop() : void</text><ellipse cx="4790" cy="3672.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4799" y="3675.6245">quit() : void</text><ellipse cx="4790" cy="3685.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4799" y="3688.4292">assertInLoopThread() : void</text><ellipse cx="4790" cy="3698.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4799" y="3701.2339">resetTimerQueue() : void</text><ellipse cx="4790" cy="3710.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4799" y="3714.0386">resetAfterFork() : void</text><ellipse cx="4790" cy="3723.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4799" y="3726.8433">isInLoopThread() const : bool</text><ellipse cx="4790" cy="3736.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="4799" y="3739.6479">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="4790" cy="3749.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4799" y="3752.4526">queueInLoop(const Func &amp; f) : void</text><ellipse cx="4790" cy="3762.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4799" y="3765.2573">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="4790" cy="3774.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4799" y="3778.062">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="4790" cy="3787.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4799" y="3790.8667">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4790" cy="3800.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4799" y="3803.6714">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="4790" cy="3813.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4799" y="3816.4761">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4790" cy="3826.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="4799" y="3829.2808">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="4790" cy="3838.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="4799" y="3842.0854">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4790" cy="3851.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4799" y="3854.8901">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="4790" cy="3864.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4799" y="3867.6948">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4790" cy="3877.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="4799" y="3880.4995">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="4790" cy="3890.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="4799" y="3893.3042">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4790" cy="3902.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4799" y="3906.1089">invalidateTimer(TimerId id) : void</text><ellipse cx="4790" cy="3915.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4799" y="3918.9136">moveToCurrentThread() : void</text><ellipse cx="4790" cy="3928.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4799" y="3931.7183">updateChannel(Channel * chl) : void</text><ellipse cx="4790" cy="3941.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4799" y="3944.5229">removeChannel(Channel * chl) : void</text><ellipse cx="4790" cy="3954.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4799" y="3957.3276">index() : size_t</text><ellipse cx="4790" cy="3966.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4799" y="3970.1323">setIndex(size_t index) : void</text><ellipse cx="4790" cy="3979.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4799" y="3982.937">isRunning() : bool</text><ellipse cx="4790" cy="3992.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4799" y="3995.7417">isCallingFunctions() : bool</text><ellipse cx="4790" cy="4005.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4799" y="4008.5464">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="4790" cy="4018.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4799" y="4021.3511">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="4790" cy="4030.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4799" y="4034.1558">runInLoop(Functor &amp;&amp; f) : void</text><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="112.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="2337" y="3298"/><ellipse cx="2515.25" cy="3314" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2518.2188,3319.6406 Q2517.6406,3319.9375 2517,3320.0781 Q2516.3594,3320.2344 2515.6563,3320.2344 Q2513.1563,3320.2344 2511.8281,3318.5938 Q2510.5156,3316.9375 2510.5156,3313.8125 Q2510.5156,3310.6875 2511.8281,3309.0313 Q2513.1563,3307.375 2515.6563,3307.375 Q2516.3594,3307.375 2517,3307.5313 Q2517.6563,3307.6875 2518.2188,3307.9844 L2518.2188,3310.7031 Q2517.5938,3310.125 2517,3309.8594 Q2516.4063,3309.5781 2515.7813,3309.5781 Q2514.4375,3309.5781 2513.75,3310.6563 Q2513.0625,3311.7188 2513.0625,3313.8125 Q2513.0625,3315.9063 2513.75,3316.9844 Q2514.4375,3318.0469 2515.7813,3318.0469 Q2516.4063,3318.0469 2517,3317.7813 Q2517.5938,3317.5 2518.2188,3316.9219 L2518.2188,3319.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="2535.75" y="3318.1543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2338" x2="2810" y1="3330" y2="3330"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2338" x2="2810" y1="3338" y2="3338"/><ellipse cx="2348" cy="3349" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="2357" y="3352.2104">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="2348" cy="3361.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2357" y="3365.0151">~EventLoopThread() : void</text><ellipse cx="2348" cy="3374.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2357" y="3377.8198">wait() : void</text><ellipse cx="2348" cy="3387.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2357" y="3390.6245">getLoop() const : EventLoop *</text><ellipse cx="2348" cy="3400.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2357" y="3403.4292">run() : void</text><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="150.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="3587.5" y="2776.5"/><ellipse cx="3810.75" cy="2792.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3813.7188,2798.1406 Q3813.1406,2798.4375 3812.5,2798.5781 Q3811.8594,2798.7344 3811.1563,2798.7344 Q3808.6563,2798.7344 3807.3281,2797.0938 Q3806.0156,2795.4375 3806.0156,2792.3125 Q3806.0156,2789.1875 3807.3281,2787.5313 Q3808.6563,2785.875 3811.1563,2785.875 Q3811.8594,2785.875 3812.5,2786.0313 Q3813.1563,2786.1875 3813.7188,2786.4844 L3813.7188,2789.2031 Q3813.0938,2788.625 3812.5,2788.3594 Q3811.9063,2788.0781 3811.2813,2788.0781 Q3809.9375,2788.0781 3809.25,2789.1563 Q3808.5625,2790.2188 3808.5625,2792.3125 Q3808.5625,2794.4063 3809.25,2795.4844 Q3809.9375,2796.5469 3811.2813,2796.5469 Q3811.9063,2796.5469 3812.5,2796.2813 Q3813.0938,2796 3813.7188,2795.4219 L3813.7188,2798.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="3831.25" y="2796.6543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3588.5" x2="4177.5" y1="2808.5" y2="2808.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3588.5" x2="4177.5" y1="2816.5" y2="2816.5"/><ellipse cx="3598.5" cy="2827.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3607.5" y="2830.7104">EventLoopThreadPool() : void</text><ellipse cx="3598.5" cy="2840.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="3607.5" y="2843.5151">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><ellipse cx="3598.5" cy="2853.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="3607.5" y="2856.3198">start() : void</text><ellipse cx="3598.5" cy="2865.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="3607.5" y="2869.1245">wait() : void</text><ellipse cx="3598.5" cy="2878.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3607.5" y="2881.9292">size() : size_t</text><ellipse cx="3598.5" cy="2891.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3607.5" y="2894.7339">getNextLoop() : EventLoop *</text><ellipse cx="3598.5" cy="2904.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3607.5" y="2907.5386">getLoop(size_t id) : EventLoop *</text><ellipse cx="3598.5" cy="2917.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3607.5" y="2920.3433">getLoops() const : std::vector&lt;EventLoop *&gt;</text><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="150.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="5040.5" y="4259"/><ellipse cx="5200.75" cy="4275" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5200.8594,4270.3438 L5199.7031,4275.4219 L5202.0313,4275.4219 L5200.8594,4270.3438 Z M5199.375,4268.1094 L5202.3594,4268.1094 L5205.7188,4280.5 L5203.2656,4280.5 L5202.5,4277.4375 L5199.2188,4277.4375 L5198.4688,4280.5 L5196.0313,4280.5 L5199.375,4268.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="5221.25" y="4279.1543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5041.5" x2="5402.5" y1="4291" y2="4291"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5041.5" x2="5402.5" y1="4299" y2="4299"/><ellipse cx="5051.5" cy="4310" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5060.5" y="4313.2104">Poller(EventLoop * loop) : void</text><ellipse cx="5051.5" cy="4322.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5060.5" y="4326.0151">~Poller() : void</text><ellipse cx="5051.5" cy="4335.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5060.5" y="4338.8198">assertInLoopThread() : void</text><ellipse cx="5051.5" cy="4348.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="5060.5" y="4351.6245">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="5051.5" cy="4361.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="5060.5" y="4364.4292">updateChannel(Channel * channel) = 0 : void</text><ellipse cx="5051.5" cy="4374.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="5060.5" y="4377.2339">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="5051.5" cy="4386.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5060.5" y="4390.0386">resetAfterFork() : void</text><ellipse cx="5051.5" cy="4399.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="5060.5" y="4402.8433">newPoller(EventLoop * loop) : Poller *</text><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="137.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="4208.5" y="4265"/><ellipse cx="4471.25" cy="4281" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4474.2188,4286.6406 Q4473.6406,4286.9375 4473,4287.0781 Q4472.3594,4287.2344 4471.6563,4287.2344 Q4469.1563,4287.2344 4467.8281,4285.5938 Q4466.5156,4283.9375 4466.5156,4280.8125 Q4466.5156,4277.6875 4467.8281,4276.0313 Q4469.1563,4274.375 4471.6563,4274.375 Q4472.3594,4274.375 4473,4274.5313 Q4473.6563,4274.6875 4474.2188,4274.9844 L4474.2188,4277.7031 Q4473.5938,4277.125 4473,4276.8594 Q4472.4063,4276.5781 4471.7813,4276.5781 Q4470.4375,4276.5781 4469.75,4277.6563 Q4469.0625,4278.7188 4469.0625,4280.8125 Q4469.0625,4282.9063 4469.75,4283.9844 Q4470.4375,4285.0469 4471.7813,4285.0469 Q4472.4063,4285.0469 4473,4284.7813 Q4473.5938,4284.5 4474.2188,4283.9219 L4474.2188,4286.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="4491.75" y="4285.1543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4209.5" x2="4816.5" y1="4297" y2="4297"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4209.5" x2="4816.5" y1="4305" y2="4305"/><ellipse cx="4219.5" cy="4316" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4228.5" y="4319.2104">TimerQueue(EventLoop * loop) : void</text><ellipse cx="4219.5" cy="4328.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4228.5" y="4332.0151">~TimerQueue() : void</text><ellipse cx="4219.5" cy="4341.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="4228.5" y="4344.8198">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="4219.5" cy="4354.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="4228.5" y="4357.6245">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="4219.5" cy="4367.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4228.5" y="4370.4292">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="4219.5" cy="4380.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4228.5" y="4383.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="4219.5" cy="4392.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4228.5" y="4396.0386">reset() : void</text><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="419.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="5773" y="4627"/><ellipse cx="5925.25" cy="4643" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5928.2188,4648.6406 Q5927.6406,4648.9375 5927,4649.0781 Q5926.3594,4649.2344 5925.6563,4649.2344 Q5923.1563,4649.2344 5921.8281,4647.5938 Q5920.5156,4645.9375 5920.5156,4642.8125 Q5920.5156,4639.6875 5921.8281,4638.0313 Q5923.1563,4636.375 5925.6563,4636.375 Q5926.3594,4636.375 5927,4636.5313 Q5927.6563,4636.6875 5928.2188,4636.9844 L5928.2188,4639.7031 Q5927.5938,4639.125 5927,4638.8594 Q5926.4063,4638.5781 5925.7813,4638.5781 Q5924.4375,4638.5781 5923.75,4639.6563 Q5923.0625,4640.7188 5923.0625,4642.8125 Q5923.0625,4644.9063 5923.75,4645.9844 Q5924.4375,4647.0469 5925.7813,4647.0469 Q5926.4063,4647.0469 5927,4646.7813 Q5927.5938,4646.5 5928.2188,4645.9219 L5928.2188,4648.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5945.75" y="4647.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5774" x2="6136" y1="4659" y2="4659"/><ellipse cx="5784" cy="4670" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="5793" y="4673.2104">kNoneEvent : const int</text><ellipse cx="5784" cy="4682.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="5793" y="4686.0151">kReadEvent : const int</text><ellipse cx="5784" cy="4695.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="5793" y="4698.8198">kWriteEvent : const int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5774" x2="6136" y1="4705.4141" y2="4705.4141"/><ellipse cx="5784" cy="4716.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="5793" y="4719.6245">Channel(EventLoop * loop, int fd) : void</text><ellipse cx="5784" cy="4729.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="5793" y="4732.4292">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5784" cy="4742.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="5793" y="4745.2339">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5784" cy="4754.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="5793" y="4758.0386">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5784" cy="4767.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="5793" y="4770.8433">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5784" cy="4780.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="5793" y="4783.6479">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5784" cy="4793.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="5793" y="4796.4526">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5784" cy="4806.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="5793" y="4809.2573">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5784" cy="4818.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="5793" y="4822.062">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5784" cy="4831.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="5793" y="4834.8667">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="5784" cy="4844.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5793" y="4847.6714">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="5784" cy="4857.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="5793" y="4860.4761">fd() const : int</text><ellipse cx="5784" cy="4870.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5793" y="4873.2808">events() const : int</text><ellipse cx="5784" cy="4882.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5793" y="4886.0854">revents() const : int</text><ellipse cx="5784" cy="4895.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5793" y="4898.8901">isNoneEvent() const : bool</text><ellipse cx="5784" cy="4908.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5793" y="4911.6948">disableAll() : void</text><ellipse cx="5784" cy="4921.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5793" y="4924.4995">remove() : void</text><ellipse cx="5784" cy="4934.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="5793" y="4937.3042">ownerLoop() : EventLoop *</text><ellipse cx="5784" cy="4946.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5793" y="4950.1089">enableReading() : void</text><ellipse cx="5784" cy="4959.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5793" y="4962.9136">disableReading() : void</text><ellipse cx="5784" cy="4972.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5793" y="4975.7183">enableWriting() : void</text><ellipse cx="5784" cy="4985.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="5793" y="4988.5229">disableWriting() : void</text><ellipse cx="5784" cy="4998.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5793" y="5001.3276">isWriting() const : bool</text><ellipse cx="5784" cy="5010.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5793" y="5014.1323">isReading() const : bool</text><ellipse cx="5784" cy="5023.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5793" y="5026.937">updateEvents(int events) : void</text><ellipse cx="5784" cy="5036.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5793" y="5039.7417">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="547.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="4284" y="2578"/><ellipse cx="4406.75" cy="2594" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4409.7188,2599.6406 Q4409.1406,2599.9375 4408.5,2600.0781 Q4407.8594,2600.2344 4407.1563,2600.2344 Q4404.6563,2600.2344 4403.3281,2598.5938 Q4402.0156,2596.9375 4402.0156,2593.8125 Q4402.0156,2590.6875 4403.3281,2589.0313 Q4404.6563,2587.375 4407.1563,2587.375 Q4407.8594,2587.375 4408.5,2587.5313 Q4409.1563,2587.6875 4409.7188,2587.9844 L4409.7188,2590.7031 Q4409.0938,2590.125 4408.5,2589.8594 Q4407.9063,2589.5781 4407.2813,2589.5781 Q4405.9375,2589.5781 4405.25,2590.6563 Q4404.5625,2591.7188 4404.5625,2593.8125 Q4404.5625,2595.9063 4405.25,2596.9844 Q4405.9375,2598.0469 4407.2813,2598.0469 Q4407.9063,2598.0469 4408.5,2597.7813 Q4409.0938,2597.5 4409.7188,2596.9219 L4409.7188,2599.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="4427.25" y="2598.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4285" x2="4599" y1="2610" y2="2610"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4285" x2="4599" y1="2618" y2="2618"/><ellipse cx="4295" cy="2629" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4304" y="2632.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><ellipse cx="4295" cy="2641.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4304" y="2645.0151">peek() const : const char *</text><ellipse cx="4295" cy="2654.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4304" y="2657.8198">beginWrite() const : const char *</text><ellipse cx="4295" cy="2667.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4304" y="2670.6245">beginWrite() : char *</text><ellipse cx="4295" cy="2680.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4304" y="2683.4292">peekInt8() const : uint8_t</text><ellipse cx="4295" cy="2693.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4304" y="2696.2339">peekInt16() const : uint16_t</text><ellipse cx="4295" cy="2705.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4304" y="2709.0386">peekInt32() const : uint32_t</text><ellipse cx="4295" cy="2718.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4304" y="2721.8433">peekInt64() const : uint64_t</text><ellipse cx="4295" cy="2731.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4304" y="2734.6479">read(size_t len) : std::string</text><ellipse cx="4295" cy="2744.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4304" y="2747.4526">readInt8() : uint8_t</text><ellipse cx="4295" cy="2757.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4304" y="2760.2573">readInt16() : uint16_t</text><ellipse cx="4295" cy="2769.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4304" y="2773.062">readInt32() : uint32_t</text><ellipse cx="4295" cy="2782.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4304" y="2785.8667">readInt64() : uint64_t</text><ellipse cx="4295" cy="2795.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4304" y="2798.6714">swap(MsgBuffer &amp; buf) : void</text><ellipse cx="4295" cy="2808.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4304" y="2811.4761">readableBytes() const : size_t</text><ellipse cx="4295" cy="2821.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4304" y="2824.2808">writableBytes() const : size_t</text><ellipse cx="4295" cy="2833.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4304" y="2837.0854">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="4295" cy="2846.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="4304" y="2849.8901">append(const char * buf, size_t len) : void</text><ellipse cx="4295" cy="2859.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4304" y="2862.6948">append(const std::string &amp; buf) : void</text><ellipse cx="4295" cy="2872.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4304" y="2875.4995">appendInt8(const uint8_t b) : void</text><ellipse cx="4295" cy="2885.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4304" y="2888.3042">appendInt16(const uint16_t s) : void</text><ellipse cx="4295" cy="2897.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4304" y="2901.1089">appendInt32(const uint32_t i) : void</text><ellipse cx="4295" cy="2910.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4304" y="2913.9136">appendInt64(const uint64_t l) : void</text><ellipse cx="4295" cy="2923.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4304" y="2926.7183">addInFront(const char * buf, size_t len) : void</text><ellipse cx="4295" cy="2936.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4304" y="2939.5229">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="4295" cy="2949.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4304" y="2952.3276">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="4295" cy="2961.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4304" y="2965.1323">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="4295" cy="2974.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4304" y="2977.937">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="4295" cy="2987.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4304" y="2990.7417">retrieveAll() : void</text><ellipse cx="4295" cy="3000.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4304" y="3003.5464">retrieve(size_t len) : void</text><ellipse cx="4295" cy="3013.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="4304" y="3016.3511">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="4295" cy="3025.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4304" y="3029.1558">retrieveUntil(const char * end) : void</text><ellipse cx="4295" cy="3038.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4304" y="3041.9604">findCRLF() const : const char *</text><ellipse cx="4295" cy="3051.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4304" y="3054.7651">ensureWritableBytes(size_t len) : void</text><ellipse cx="4295" cy="3064.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4304" y="3067.5698">hasWritten(size_t len) : void</text><ellipse cx="4295" cy="3077.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4304" y="3080.3745">unwrite(size_t offset) : void</text><ellipse cx="4295" cy="3089.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="4304" y="3093.1792">operator[](size_t offset) const : const char &amp;</text><ellipse cx="4295" cy="3102.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4304" y="3105.9839">operator[](size_t offset) : char &amp;</text><ellipse cx="4295" cy="3115.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="4304" y="3118.7886">append(const char (&amp;)[N] buf) : void</text><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="112.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="2360" y="251"/><ellipse cx="2513.75" cy="267" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2513.8594,262.3438 L2512.7031,267.4219 L2515.0313,267.4219 L2513.8594,262.3438 Z M2512.375,260.1094 L2515.3594,260.1094 L2518.7188,272.5 L2516.2656,272.5 L2515.5,269.4375 L2512.2188,269.4375 L2511.4688,272.5 L2509.0313,272.5 L2512.375,260.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="2534.25" y="271.1543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2361" x2="2743" y1="283" y2="283"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2361" x2="2743" y1="291" y2="291"/><ellipse cx="2371" cy="302" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="2380" y="305.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="2371" cy="314.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="2380" y="318.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="2371" cy="327.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2380" y="330.8198">getName() const : std::string</text><ellipse cx="2371" cy="340.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2380" y="343.6245">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2371" cy="353.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2380" y="356.4292">~TaskQueue() : void</text><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="176.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="2400.5" y="2004"/><ellipse cx="2525.25" cy="2020" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2528.2188,2025.6406 Q2527.6406,2025.9375 2527,2026.0781 Q2526.3594,2026.2344 2525.6563,2026.2344 Q2523.1563,2026.2344 2521.8281,2024.5938 Q2520.5156,2022.9375 2520.5156,2019.8125 Q2520.5156,2016.6875 2521.8281,2015.0313 Q2523.1563,2013.375 2525.6563,2013.375 Q2526.3594,2013.375 2527,2013.5313 Q2527.6563,2013.6875 2528.2188,2013.9844 L2528.2188,2016.7031 Q2527.5938,2016.125 2527,2015.8594 Q2526.4063,2015.5781 2525.7813,2015.5781 Q2524.4375,2015.5781 2523.75,2016.6563 Q2523.0625,2017.7188 2523.0625,2019.8125 Q2523.0625,2021.9063 2523.75,2022.9844 Q2524.4375,2024.0469 2525.7813,2024.0469 Q2526.4063,2024.0469 2527,2023.7813 Q2527.5938,2023.5 2528.2188,2022.9219 L2528.2188,2025.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="2545.75" y="2024.1543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2401.5" x2="2762.5" y1="2036" y2="2036"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2401.5" x2="2762.5" y1="2044" y2="2044"/><ellipse cx="2411.5" cy="2055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2420.5" y="2058.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2411.5" cy="2067.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2420.5" y="2071.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="2411.5" cy="2080.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2420.5" y="2083.8198">getName() const : std::string</text><ellipse cx="2411.5" cy="2093.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2420.5" y="2096.6245">waitAllTasksFinished() : void</text><ellipse cx="2411.5" cy="2106.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2420.5" y="2109.4292">SerialTaskQueue() : void</text><ellipse cx="2411.5" cy="2119.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2420.5" y="2122.2339">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="2411.5" cy="2131.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2420.5" y="2135.0386">~SerialTaskQueue() : void</text><ellipse cx="2411.5" cy="2144.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2420.5" y="2147.8433">isRuningTask() : bool</text><ellipse cx="2411.5" cy="2157.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2420.5" y="2160.6479">getTaskCount() : size_t</text><ellipse cx="2411.5" cy="2170.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2420.5" y="2173.4526">stop() : void</text><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="214.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="113.5" y="2744.5"/><ellipse cx="159.75" cy="2760.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M162.7188,2766.1406 Q162.1406,2766.4375 161.5,2766.5781 Q160.8594,2766.7344 160.1563,2766.7344 Q157.6563,2766.7344 156.3281,2765.0938 Q155.0156,2763.4375 155.0156,2760.3125 Q155.0156,2757.1875 156.3281,2755.5313 Q157.6563,2753.875 160.1563,2753.875 Q160.8594,2753.875 161.5,2754.0313 Q162.1563,2754.1875 162.7188,2754.4844 L162.7188,2757.2031 Q162.0938,2756.625 161.5,2756.3594 Q160.9063,2756.0781 160.2813,2756.0781 Q158.9375,2756.0781 158.25,2757.1563 Q157.5625,2758.2188 157.5625,2760.3125 Q157.5625,2762.4063 158.25,2763.4844 Q158.9375,2764.5469 160.2813,2764.5469 Q160.9063,2764.5469 161.5,2764.2813 Q162.0938,2764 162.7188,2763.4219 L162.7188,2766.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="180.25" y="2764.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="331.5" y="2741.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="332.5" y="2753.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="114.5" x2="377.5" y1="2776.5" y2="2776.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="114.5" x2="377.5" y1="2784.5" y2="2784.5"/><ellipse cx="124.5" cy="2795.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="133.5" y="2798.7104">FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="124.5" cy="2808.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="133.5" y="2811.5151">~FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="124.5" cy="2821.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="133.5" y="2824.3198">append(const char * buf, size_t len) : bool</text><ellipse cx="124.5" cy="2833.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="133.5" y="2837.1245">data() const : const char *</text><ellipse cx="124.5" cy="2846.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="133.5" y="2849.9292">length() const : int</text><ellipse cx="124.5" cy="2859.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="133.5" y="2862.7339">current() : char *</text><ellipse cx="124.5" cy="2872.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="133.5" y="2875.5386">avail() const : int</text><ellipse cx="124.5" cy="2885.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="133.5" y="2888.3433">add(size_t len) : void</text><ellipse cx="124.5" cy="2897.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="133.5" y="2901.1479">reset() : void</text><ellipse cx="124.5" cy="2910.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="133.5" y="2913.9526">zeroBuffer() : void</text><ellipse cx="124.5" cy="2923.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="133.5" y="2926.7573">debugString() : const char *</text><ellipse cx="124.5" cy="2936.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="133.5" y="2939.562">setCookie(void (*)() cookie) : void</text><ellipse cx="124.5" cy="2949.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="133.5" y="2952.3667">toString() const : std::string</text><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="360" y="2331.5"/><ellipse cx="375" cy="2347.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M377.9688,2353.1406 Q377.3906,2353.4375 376.75,2353.5781 Q376.1094,2353.7344 375.4063,2353.7344 Q372.9063,2353.7344 371.5781,2352.0938 Q370.2656,2350.4375 370.2656,2347.3125 Q370.2656,2344.1875 371.5781,2342.5313 Q372.9063,2340.875 375.4063,2340.875 Q376.1094,2340.875 376.75,2341.0313 Q377.4063,2341.1875 377.9688,2341.4844 L377.9688,2344.2031 Q377.3438,2343.625 376.75,2343.3594 Q376.1563,2343.0781 375.5313,2343.0781 Q374.1875,2343.0781 373.5,2344.1563 Q372.8125,2345.2188 372.8125,2347.3125 Q372.8125,2349.4063 373.5,2350.4844 Q374.1875,2351.5469 375.5313,2351.5469 Q376.1563,2351.5469 376.75,2351.2813 Q377.3438,2351 377.9688,2350.4219 L377.9688,2353.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="389" y="2351.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="509" y="2328.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="510" y="2340.6387">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="361" x2="627" y1="2363.5" y2="2363.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="361" x2="627" y1="2371.5" y2="2371.5"/><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="214.4609" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="100.5" y="489"/><ellipse cx="154.75" cy="505" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M157.7188,510.6406 Q157.1406,510.9375 156.5,511.0781 Q155.8594,511.2344 155.1563,511.2344 Q152.6563,511.2344 151.3281,509.5938 Q150.0156,507.9375 150.0156,504.8125 Q150.0156,501.6875 151.3281,500.0313 Q152.6563,498.375 155.1563,498.375 Q155.8594,498.375 156.5,498.5313 Q157.1563,498.6875 157.7188,498.9844 L157.7188,501.7031 Q157.0938,501.125 156.5,500.8594 Q155.9063,500.5781 155.2813,500.5781 Q153.9375,500.5781 153.25,501.6563 Q152.5625,502.7188 152.5625,504.8125 Q152.5625,506.9063 153.25,507.9844 Q153.9375,509.0469 155.2813,509.0469 Q155.9063,509.0469 156.5,508.7813 Q157.0938,508.5 157.7188,507.9219 L157.7188,510.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="175.25" y="509.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="334.5" y="486"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="335.5" y="498.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="101.5" x2="364.5" y1="521" y2="521"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="101.5" x2="364.5" y1="529" y2="529"/><ellipse cx="111.5" cy="540" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="120.5" y="543.2104">FixedBuffer() : void</text><ellipse cx="111.5" cy="552.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="120.5" y="556.0151">~FixedBuffer() : void</text><ellipse cx="111.5" cy="565.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="120.5" y="568.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="111.5" cy="578.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="120.5" y="581.6245">data() const : const char *</text><ellipse cx="111.5" cy="591.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="120.5" y="594.4292">length() const : int</text><ellipse cx="111.5" cy="604.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="120.5" y="607.2339">current() : char *</text><ellipse cx="111.5" cy="616.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="120.5" y="620.0386">avail() const : int</text><ellipse cx="111.5" cy="629.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="120.5" y="632.8433">add(size_t len) : void</text><ellipse cx="111.5" cy="642.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="120.5" y="645.6479">reset() : void</text><ellipse cx="111.5" cy="655.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="120.5" y="658.4526">zeroBuffer() : void</text><ellipse cx="111.5" cy="668.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="120.5" y="671.2573">debugString() : const char *</text><ellipse cx="111.5" cy="680.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="120.5" y="684.062">setCookie(void (*)() cookie) : void</text><ellipse cx="111.5" cy="693.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="120.5" y="696.8667">toString() const : std::string</text><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="214.4609" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="171.5" y="1272"/><ellipse cx="213.95" cy="1288" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M216.9188,1293.6406 Q216.3406,1293.9375 215.7,1294.0781 Q215.0594,1294.2344 214.3563,1294.2344 Q211.8563,1294.2344 210.5281,1292.5938 Q209.2156,1290.9375 209.2156,1287.8125 Q209.2156,1284.6875 210.5281,1283.0313 Q211.8563,1281.375 214.3563,1281.375 Q215.0594,1281.375 215.7,1281.5313 Q216.3563,1281.6875 216.9188,1281.9844 L216.9188,1284.7031 Q216.2938,1284.125 215.7,1283.8594 Q215.1063,1283.5781 214.4813,1283.5781 Q213.1375,1283.5781 212.45,1284.6563 Q211.7625,1285.7188 211.7625,1287.8125 Q211.7625,1289.9063 212.45,1290.9844 Q213.1375,1292.0469 214.4813,1292.0469 Q215.1063,1292.0469 215.7,1291.7813 Q216.2938,1291.5 216.9188,1290.9219 L216.9188,1293.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="234.05" y="1292.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="381.5" y="1269"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="382.5" y="1281.1387">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="172.5" x2="435.5" y1="1304" y2="1304"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="172.5" x2="435.5" y1="1312" y2="1312"/><ellipse cx="182.5" cy="1323" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="191.5" y="1326.2104">FixedBuffer() : void</text><ellipse cx="182.5" cy="1335.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="191.5" y="1339.0151">~FixedBuffer() : void</text><ellipse cx="182.5" cy="1348.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="191.5" y="1351.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="182.5" cy="1361.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="191.5" y="1364.6245">data() const : const char *</text><ellipse cx="182.5" cy="1374.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="191.5" y="1377.4292">length() const : int</text><ellipse cx="182.5" cy="1387.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="191.5" y="1390.2339">current() : char *</text><ellipse cx="182.5" cy="1399.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="191.5" y="1403.0386">avail() const : int</text><ellipse cx="182.5" cy="1412.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="191.5" y="1415.8433">add(size_t len) : void</text><ellipse cx="182.5" cy="1425.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="191.5" y="1428.6479">reset() : void</text><ellipse cx="182.5" cy="1438.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="191.5" y="1441.4526">zeroBuffer() : void</text><ellipse cx="182.5" cy="1451.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="191.5" y="1454.2573">debugString() : const char *</text><ellipse cx="182.5" cy="1463.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="191.5" y="1467.062">setCookie(void (*)() cookie) : void</text><ellipse cx="182.5" cy="1476.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="191.5" y="1479.8667">toString() const : std::string</text><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="342.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="379" x="340.5" y="1573.5"/><ellipse cx="492.25" cy="1589.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M495.2188,1595.1406 Q494.6406,1595.4375 494,1595.5781 Q493.3594,1595.7344 492.6563,1595.7344 Q490.1563,1595.7344 488.8281,1594.0938 Q487.5156,1592.4375 487.5156,1589.3125 Q487.5156,1586.1875 488.8281,1584.5313 Q490.1563,1582.875 492.6563,1582.875 Q493.3594,1582.875 494,1583.0313 Q494.6563,1583.1875 495.2188,1583.4844 L495.2188,1586.2031 Q494.5938,1585.625 494,1585.3594 Q493.4063,1585.0781 492.7813,1585.0781 Q491.4375,1585.0781 490.75,1586.1563 Q490.0625,1587.2188 490.0625,1589.3125 Q490.0625,1591.4063 490.75,1592.4844 Q491.4375,1593.5469 492.7813,1593.5469 Q493.4063,1593.5469 494,1593.2813 Q494.5938,1593 495.2188,1592.4219 L495.2188,1595.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="512.75" y="1593.6543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="341.5" x2="718.5" y1="1605.5" y2="1605.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="341.5" x2="718.5" y1="1613.5" y2="1613.5"/><ellipse cx="351.5" cy="1624.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="360.5" y="1627.7104">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1637.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="360.5" y="1640.5151">operator&lt;&lt;(short ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1650.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="360.5" y="1653.3198">operator&lt;&lt;(unsigned short ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1662.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="360.5" y="1666.1245">operator&lt;&lt;(int ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1675.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="360.5" y="1678.9292">operator&lt;&lt;(unsigned int ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1688.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="360.5" y="1691.7339">operator&lt;&lt;(long ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1701.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="360.5" y="1704.5386">operator&lt;&lt;(unsigned long ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1714.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="360.5" y="1717.3433">operator&lt;&lt;(const long long &amp; ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1726.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="360.5" y="1730.1479">operator&lt;&lt;(const unsigned long long &amp; ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1739.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="360.5" y="1742.9526">operator&lt;&lt;(const void * ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1752.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="360.5" y="1755.7573">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1765.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="360.5" y="1768.562">operator&lt;&lt;(const double &amp; ) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1778.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="360.5" y="1781.3667">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1790.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="360.5" y="1794.1714">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1803.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="360.5" y="1806.9761">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1816.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="360.5" y="1819.7808">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1829.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="360.5" y="1832.5854">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1842.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="360.5" y="1845.3901">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="351.5" cy="1854.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="360.5" y="1858.1948">append(const char * data, size_t len) : void</text><ellipse cx="351.5" cy="1867.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="360.5" y="1870.9995">bufferData() const : const char *</text><ellipse cx="351.5" cy="1880.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="360.5" y="1883.8042">bufferLength() const : size_t</text><ellipse cx="351.5" cy="1893.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="360.5" y="1896.6089">resetBuffer() : void</text><ellipse cx="351.5" cy="1906.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="360.5" y="1909.4136">operator&lt;&lt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="86.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="2889" y="8"/><ellipse cx="2982.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2985.2188,29.6406 Q2984.6406,29.9375 2984,30.0781 Q2983.3594,30.2344 2982.6563,30.2344 Q2980.1563,30.2344 2978.8281,28.5938 Q2977.5156,26.9375 2977.5156,23.8125 Q2977.5156,20.6875 2978.8281,19.0313 Q2980.1563,17.375 2982.6563,17.375 Q2983.3594,17.375 2984,17.5313 Q2984.6563,17.6875 2985.2188,17.9844 L2985.2188,20.7031 Q2984.5938,20.125 2984,19.8594 Q2983.4063,19.5781 2982.7813,19.5781 Q2981.4375,19.5781 2980.75,20.6563 Q2980.0625,21.7188 2980.0625,23.8125 Q2980.0625,25.9063 2980.75,26.9844 Q2981.4375,28.0469 2982.7813,28.0469 Q2983.4063,28.0469 2984,27.7813 Q2984.5938,27.5 2985.2188,26.9219 L2985.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="3002.75" y="28.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2890" x2="3106" y1="40" y2="40"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2890" x2="3106" y1="48" y2="48"/><ellipse cx="2900" cy="59" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2909" y="62.2104">data() const : const char *</text><ellipse cx="2900" cy="71.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2909" y="75.0151">length() const : int</text><ellipse cx="2900" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2909" y="87.8198">Fmt(const char * fmt, T val) : void</text><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="176.0469" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="648" y="219"/><ellipse cx="1017.25" cy="235" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1020.2188,240.6406 Q1019.6406,240.9375 1019,241.0781 Q1018.3594,241.2344 1017.6563,241.2344 Q1015.1563,241.2344 1013.8281,239.5938 Q1012.5156,237.9375 1012.5156,234.8125 Q1012.5156,231.6875 1013.8281,230.0313 Q1015.1563,228.375 1017.6563,228.375 Q1018.3594,228.375 1019,228.5313 Q1019.6563,228.6875 1020.2188,228.9844 L1020.2188,231.7031 Q1019.5938,231.125 1019,230.8594 Q1018.4063,230.5781 1017.7813,230.5781 Q1016.4375,230.5781 1015.75,231.6563 Q1015.0625,232.7188 1015.0625,234.8125 Q1015.0625,236.9063 1015.75,237.9844 Q1016.4375,239.0469 1017.7813,239.0469 Q1018.4063,239.0469 1019,238.7813 Q1019.5938,238.5 1020.2188,237.9219 L1020.2188,240.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1037.75" y="239.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="649" x2="1437" y1="251" y2="251"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="649" x2="1437" y1="259" y2="259"/><ellipse cx="659" cy="270" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="668" y="273.2104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="659" cy="282.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="668" y="286.0151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="659" cy="295.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="668" y="298.8198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="659" cy="308.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="668" y="311.6245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="659" cy="321.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="668" y="324.4292">~Logger() : void</text><ellipse cx="659" cy="334.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="668" y="337.2339">setIndex(int index) : Logger &amp;</text><ellipse cx="659" cy="346.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="668" y="350.0386">stream() : LogStream &amp;</text><ellipse cx="659" cy="359.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="668" y="362.8433">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="659" cy="372.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="668" y="375.6479">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="659" cy="385.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="668" y="388.4526">logLevel() : Logger::LogLevel</text><!--MD5=[e8f3f3ecaa6788588bc1d8813f745eb6]
class C_0001184349029950147049--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="137.6328" id="C_0001184349029950147049" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="1282" y="918.5"/><ellipse cx="1297" cy="934.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1301.1094,940.5 L1293.3906,940.5 L1293.3906,928.1094 L1301.1094,928.1094 L1301.1094,930.2656 L1295.8438,930.2656 L1295.8438,932.9375 L1300.6094,932.9375 L1300.6094,935.0938 L1295.8438,935.0938 L1295.8438,938.3438 L1301.1094,938.3438 L1301.1094,940.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="1311" y="938.6543">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1283" x2="1417" y1="950.5" y2="950.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1288" y="964.7104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="1288" y="977.5151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="1288" y="990.3198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="1288" y="1003.1245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1288" y="1015.9292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1288" y="1028.7339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1288" y="1041.5386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1283" x2="1417" y1="1048.1328" y2="1048.1328"/><!--MD5=[aa27675839e3d36b3b628177d3e92e86]
class C_0002198968118661318449--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="99.2188" id="C_0002198968118661318449" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="995.5" y="938"/><ellipse cx="1058.75" cy="954" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1061.7188,959.6406 Q1061.1406,959.9375 1060.5,960.0781 Q1059.8594,960.2344 1059.1563,960.2344 Q1056.6563,960.2344 1055.3281,958.5938 Q1054.0156,956.9375 1054.0156,953.8125 Q1054.0156,950.6875 1055.3281,949.0313 Q1056.6563,947.375 1059.1563,947.375 Q1059.8594,947.375 1060.5,947.5313 Q1061.1563,947.6875 1061.7188,947.9844 L1061.7188,950.7031 Q1061.0938,950.125 1060.5,949.8594 Q1059.9063,949.5781 1059.2813,949.5781 Q1057.9375,949.5781 1057.25,950.6563 Q1056.5625,951.7188 1056.5625,953.8125 Q1056.5625,955.9063 1057.25,956.9844 Q1057.9375,958.0469 1059.2813,958.0469 Q1059.9063,958.0469 1060.5,957.7813 Q1061.0938,957.5 1061.7188,956.9219 L1061.7188,959.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="1079.25" y="958.1543">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="996.5" x2="1245.5" y1="970" y2="970"/><ellipse cx="1006.5" cy="981" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1015.5" y="984.2104">data_ : const char *</text><ellipse cx="1006.5" cy="993.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="1015.5" y="997.0151">size_ : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="996.5" x2="1245.5" y1="1003.6094" y2="1003.6094"/><ellipse cx="1006.5" cy="1014.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1015.5" y="1017.8198">SourceFile(const char * filename) : void</text><ellipse cx="1006.5" cy="1027.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1015.5" y="1030.6245">SourceFile(const char (&amp;)[N] arr) : void</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="86.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="513" y="944.5"/><ellipse cx="583.75" cy="960.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M586.7188,966.1406 Q586.1406,966.4375 585.5,966.5781 Q584.8594,966.7344 584.1563,966.7344 Q581.6563,966.7344 580.3281,965.0938 Q579.0156,963.4375 579.0156,960.3125 Q579.0156,957.1875 580.3281,955.5313 Q581.6563,953.875 584.1563,953.875 Q584.8594,953.875 585.5,954.0313 Q586.1563,954.1875 586.7188,954.4844 L586.7188,957.2031 Q586.0938,956.625 585.5,956.3594 Q584.9063,956.0781 584.2813,956.0781 Q582.9375,956.0781 582.25,957.1563 Q581.5625,958.2188 581.5625,960.3125 Q581.5625,962.4063 582.25,963.4844 Q582.9375,964.5469 584.2813,964.5469 Q584.9063,964.5469 585.5,964.2813 Q586.0938,964 586.7188,963.4219 L586.7188,966.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="604.25" y="964.6543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="514" x2="730" y1="976.5" y2="976.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="514" x2="730" y1="984.5" y2="984.5"/><ellipse cx="524" cy="995.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="533" y="998.7104">~RawLogger() : void</text><ellipse cx="524" cy="1008.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="533" y="1011.5151">setIndex(int index) : RawLogger &amp;</text><ellipse cx="524" cy="1021.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="533" y="1024.3198">stream() : LogStream &amp;</text><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="137.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="2225.5" y="918.5"/><ellipse cx="2374.75" cy="934.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2377.7188,940.1406 Q2377.1406,940.4375 2376.5,940.5781 Q2375.8594,940.7344 2375.1563,940.7344 Q2372.6563,940.7344 2371.3281,939.0938 Q2370.0156,937.4375 2370.0156,934.3125 Q2370.0156,931.1875 2371.3281,929.5313 Q2372.6563,927.875 2375.1563,927.875 Q2375.8594,927.875 2376.5,928.0313 Q2377.1563,928.1875 2377.7188,928.4844 L2377.7188,931.2031 Q2377.0938,930.625 2376.5,930.3594 Q2375.9063,930.0781 2375.2813,930.0781 Q2373.9375,930.0781 2373.25,931.1563 Q2372.5625,932.2188 2372.5625,934.3125 Q2372.5625,936.4063 2373.25,937.4844 Q2373.9375,938.5469 2375.2813,938.5469 Q2375.9063,938.5469 2376.5,938.2813 Q2377.0938,938 2377.7188,937.4219 L2377.7188,940.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="2395.25" y="938.6543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2226.5" x2="2671.5" y1="950.5" y2="950.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2226.5" x2="2671.5" y1="958.5" y2="958.5"/><ellipse cx="2236.5" cy="969.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2245.5" y="972.7104">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="2236.5" cy="982.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2245.5" y="985.5151">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2236.5" cy="995.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2245.5" y="998.3198">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="2236.5" cy="1007.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2245.5" y="1011.1245">getName() const : std::string</text><ellipse cx="2236.5" cy="1020.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2245.5" y="1023.9292">getTaskCount() : size_t</text><ellipse cx="2236.5" cy="1033.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2245.5" y="1036.7339">stop() : void</text><ellipse cx="2236.5" cy="1046.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2245.5" y="1049.5386">~ConcurrentTaskQueue() : void</text><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="278.4844" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="6960.5" y="3673"/><ellipse cx="7165.25" cy="3689" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7168.2188,3694.6406 Q7167.6406,3694.9375 7167,3695.0781 Q7166.3594,3695.2344 7165.6563,3695.2344 Q7163.1563,3695.2344 7161.8281,3693.5938 Q7160.5156,3691.9375 7160.5156,3688.8125 Q7160.5156,3685.6875 7161.8281,3684.0313 Q7163.1563,3682.375 7165.6563,3682.375 Q7166.3594,3682.375 7167,3682.5313 Q7167.6563,3682.6875 7168.2188,3682.9844 L7168.2188,3685.7031 Q7167.5938,3685.125 7167,3684.8594 Q7166.4063,3684.5781 7165.7813,3684.5781 Q7164.4375,3684.5781 7163.75,3685.6563 Q7163.0625,3686.7188 7163.0625,3688.8125 Q7163.0625,3690.9063 7163.75,3691.9844 Q7164.4375,3693.0469 7165.7813,3693.0469 Q7166.4063,3693.0469 7167,3692.7813 Q7167.5938,3692.5 7168.2188,3691.9219 L7168.2188,3694.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="7185.75" y="3693.1543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6961.5" x2="7452.5" y1="3705" y2="3705"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6961.5" x2="7452.5" y1="3713" y2="3713"/><ellipse cx="6971.5" cy="3724" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="6980.5" y="3727.2104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="6971.5" cy="3736.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="6980.5" y="3740.0151">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="6971.5" cy="3749.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="6980.5" y="3752.8198">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="6971.5" cy="3762.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="6980.5" y="3765.6245">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><ellipse cx="6971.5" cy="3775.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6980.5" y="3778.4292">family() const : sa_family_t</text><ellipse cx="6971.5" cy="3788.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6980.5" y="3791.2339">toIp() const : std::string</text><ellipse cx="6971.5" cy="3800.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6980.5" y="3804.0386">toIpPort() const : std::string</text><ellipse cx="6971.5" cy="3813.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6980.5" y="3816.8433">toPort() const : uint16_t</text><ellipse cx="6971.5" cy="3826.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6980.5" y="3829.6479">isIpV6() const : bool</text><ellipse cx="6971.5" cy="3839.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6980.5" y="3842.4526">isIntranetIp() const : bool</text><ellipse cx="6971.5" cy="3852.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6980.5" y="3855.2573">isLoopbackIp() const : bool</text><ellipse cx="6971.5" cy="3864.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="6980.5" y="3868.062">getSockAddr() const : const struct sockaddr *</text><ellipse cx="6971.5" cy="3877.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="6980.5" y="3880.8667">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="6971.5" cy="3890.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="6980.5" y="3893.6714">ipNetEndian() const : uint32_t</text><ellipse cx="6971.5" cy="3903.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6980.5" y="3906.4761">ip6NetEndian() const : const uint32_t *</text><ellipse cx="6971.5" cy="3916.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6980.5" y="3919.2808">portNetEndian() const : uint16_t</text><ellipse cx="6971.5" cy="3928.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6980.5" y="3932.0854">setPortNetEndian(uint16_t port) : void</text><ellipse cx="6971.5" cy="3941.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6980.5" y="3944.8901">isUnspecified() const : bool</text><!--MD5=[9fbeaf382328048510e7182f722e4c1d]
class C_0001238571308552245455--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="73.6094" id="C_0001238571308552245455" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="7077.5" y="4297"/><ellipse cx="7092.5" cy="4313" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7095.4688,4318.6406 Q7094.8906,4318.9375 7094.25,4319.0781 Q7093.6094,4319.2344 7092.9063,4319.2344 Q7090.4063,4319.2344 7089.0781,4317.5938 Q7087.7656,4315.9375 7087.7656,4312.8125 Q7087.7656,4309.6875 7089.0781,4308.0313 Q7090.4063,4306.375 7092.9063,4306.375 Q7093.6094,4306.375 7094.25,4306.5313 Q7094.9063,4306.6875 7095.4688,4306.9844 L7095.4688,4309.7031 Q7094.8438,4309.125 7094.25,4308.8594 Q7093.6563,4308.5781 7093.0313,4308.5781 Q7091.6875,4308.5781 7091,4309.6563 Q7090.3125,4310.7188 7090.3125,4312.8125 Q7090.3125,4314.9063 7091,4315.9844 Q7091.6875,4317.0469 7093.0313,4317.0469 Q7093.6563,4317.0469 7094.25,4316.7813 Q7094.8438,4316.5 7095.4688,4315.9219 L7095.4688,4318.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="7106.5" y="4317.1543">InetAddress::(anonymous_2030796)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7078.5" x2="7335.5" y1="4329" y2="4329"/><ellipse cx="7088.5" cy="4340" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7097.5" y="4343.2104">addr_ : struct sockaddr_in</text><ellipse cx="7088.5" cy="4352.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7097.5" y="4356.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7078.5" x2="7335.5" y1="4362.6094" y2="4362.6094"/><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="73.6094" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="7869" y="2318.5"/><ellipse cx="7906.05" cy="2334.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7910.1594,2340.5 L7902.4406,2340.5 L7902.4406,2328.1094 L7910.1594,2328.1094 L7910.1594,2330.2656 L7904.8938,2330.2656 L7904.8938,2332.9375 L7909.6594,2332.9375 L7909.6594,2335.0938 L7904.8938,2335.0938 L7904.8938,2338.3438 L7910.1594,2338.3438 L7910.1594,2340.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="7924.95" y="2338.6543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7870" x2="8002" y1="2350.5" y2="2350.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7875" y="2364.7104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="7875" y="2377.5151">kSSLInvalidCertificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7870" x2="8002" y1="2384.1094" y2="2384.1094"/><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="508.9688" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1177" x="5689.5" y="733"/><ellipse cx="6227.25" cy="749" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6227.3594,744.3438 L6226.2031,749.4219 L6228.5313,749.4219 L6227.3594,744.3438 Z M6225.875,742.1094 L6228.8594,742.1094 L6232.2188,754.5 L6229.7656,754.5 L6229,751.4375 L6225.7188,751.4375 L6224.9688,754.5 L6222.5313,754.5 L6225.875,742.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="6247.75" y="753.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5690.5" x2="6865.5" y1="765" y2="765"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5690.5" x2="6865.5" y1="773" y2="773"/><ellipse cx="5700.5" cy="784" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="5709.5" y="787.2104">TcpConnection() = default : void</text><ellipse cx="5700.5" cy="796.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="5709.5" y="800.0151">~TcpConnection() : void</text><ellipse cx="5700.5" cy="809.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="5709.5" y="812.8198">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="5700.5" cy="822.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="5709.5" y="825.6245">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="5700.5" cy="835.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="5709.5" y="838.4292">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="5700.5" cy="848.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="5709.5" y="851.2339">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="5700.5" cy="860.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="5709.5" y="864.0386">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="5700.5" cy="873.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="5709.5" y="876.8433">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="5700.5" cy="886.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="5709.5" y="889.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="5700.5" cy="899.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="5709.5" y="902.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="5700.5" cy="912.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="5709.5" y="915.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="5700.5" cy="924.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="5709.5" y="928.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="5700.5" cy="937.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="5709.5" y="940.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="5700.5" cy="950.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="5709.5" y="953.6714">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="5700.5" cy="963.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="5709.5" y="966.4761">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="5700.5" cy="976.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="5709.5" y="979.2808">connected() const = 0 : bool</text><ellipse cx="5700.5" cy="988.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="5709.5" y="992.0854">disconnected() const = 0 : bool</text><ellipse cx="5700.5" cy="1001.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="5709.5" y="1004.8901">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="5700.5" cy="1014.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="5709.5" y="1017.6948">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="5700.5" cy="1027.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="5709.5" y="1030.4995">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="5700.5" cy="1040.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="5709.5" y="1043.3042">shutdown() = 0 : void</text><ellipse cx="5700.5" cy="1052.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="5709.5" y="1056.1089">forceClose() = 0 : void</text><ellipse cx="5700.5" cy="1065.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="5709.5" y="1068.9136">getLoop() = 0 : EventLoop *</text><ellipse cx="5700.5" cy="1078.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="5709.5" y="1081.7183">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="5700.5" cy="1091.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="5709.5" y="1094.5229">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="5700.5" cy="1104.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5709.5" y="1107.3276">hasContext() const : bool</text><ellipse cx="5700.5" cy="1116.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="5709.5" y="1120.1323">clearContext() : void</text><ellipse cx="5700.5" cy="1129.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="5709.5" y="1132.937">keepAlive() = 0 : void</text><ellipse cx="5700.5" cy="1142.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="5709.5" y="1145.7417">isKeepAlive() = 0 : bool</text><ellipse cx="5700.5" cy="1155.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="5709.5" y="1158.5464">bytesSent() const = 0 : size_t</text><ellipse cx="5700.5" cy="1168.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="5709.5" y="1171.3511">bytesReceived() const = 0 : size_t</text><ellipse cx="5700.5" cy="1180.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="5709.5" y="1184.1558">isSSLConnection() const = 0 : bool</text><ellipse cx="5700.5" cy="1193.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1151" x="5709.5" y="1196.9604">startClientEncryption(std::function&lt;void ()&gt; callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5709.5" y="1209.7651">{}) = 0 : void</text><ellipse cx="5700.5" cy="1219.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="609" x="5709.5" y="1222.5698">startServerEncryption(const std::shared_ptr&lt;SSLContext&gt; &amp; ctx, std::function&lt;void ()&gt; callback) = 0 : void</text><ellipse cx="5700.5" cy="1232.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="5709.5" y="1235.3745">getContext() : std::shared_ptr&lt;T&gt;</text><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="304.0938" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="1713" x="5856.5" y="155"/><ellipse cx="6680.25" cy="171" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6683.2188,176.6406 Q6682.6406,176.9375 6682,177.0781 Q6681.3594,177.2344 6680.6563,177.2344 Q6678.1563,177.2344 6676.8281,175.5938 Q6675.5156,173.9375 6675.5156,170.8125 Q6675.5156,167.6875 6676.8281,166.0313 Q6678.1563,164.375 6680.6563,164.375 Q6681.3594,164.375 6682,164.5313 Q6682.6563,164.6875 6683.2188,164.9844 L6683.2188,167.7031 Q6682.5938,167.125 6682,166.8594 Q6681.4063,166.5781 6680.7813,166.5781 Q6679.4375,166.5781 6678.75,167.6563 Q6678.0625,168.7188 6678.0625,170.8125 Q6678.0625,172.9063 6678.75,173.9844 Q6679.4375,175.0469 6680.7813,175.0469 Q6681.4063,175.0469 6682,174.7813 Q6682.5938,174.5 6683.2188,173.9219 L6683.2188,176.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="6700.75" y="175.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5857.5" x2="7568.5" y1="187" y2="187"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5857.5" x2="7568.5" y1="195" y2="195"/><ellipse cx="5867.5" cy="206" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="5876.5" y="209.2104">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="5867.5" cy="218.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5876.5" y="222.0151">~TcpClient() : void</text><ellipse cx="5867.5" cy="231.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5876.5" y="234.8198">connect() : void</text><ellipse cx="5867.5" cy="244.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5876.5" y="247.6245">disconnect() : void</text><ellipse cx="5867.5" cy="257.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5876.5" y="260.4292">stop() : void</text><ellipse cx="5867.5" cy="270.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5876.5" y="273.2339">connection() const : TcpConnectionPtr</text><ellipse cx="5867.5" cy="282.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5876.5" y="286.0386">getLoop() const : EventLoop *</text><ellipse cx="5867.5" cy="295.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5876.5" y="298.8433">retry() const : bool</text><ellipse cx="5867.5" cy="308.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5876.5" y="311.6479">enableRetry() : void</text><ellipse cx="5867.5" cy="321.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5876.5" y="324.4526">name() const : const std::string &amp;</text><ellipse cx="5867.5" cy="334.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5876.5" y="337.2573">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5867.5" cy="346.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5876.5" y="350.062">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5867.5" cy="359.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="5876.5" y="362.8667">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="5867.5" cy="372.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5876.5" y="375.6714">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5867.5" cy="385.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="5876.5" y="388.4761">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5867.5" cy="398.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5876.5" y="401.2808">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5867.5" cy="410.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5876.5" y="414.0854">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5867.5" cy="423.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="5876.5" y="426.8901">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="5867.5" cy="436.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5876.5" y="439.6948">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="5867.5" cy="449.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="5876.5" y="452.4995">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="756" x="6363.5" y="452.4995">, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = = {}, const std::string &amp; certPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="7126.5" y="452.4995">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="7307.5" y="452.4995">, const std::string &amp; caPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="7524.5" y="452.4995">) : void</text><!--MD5=[6d316d4a142de304bf34719181277753]
class C_0002033458902174399063--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="60.8047" id="C_0002033458902174399063" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="7728.5" y="957"/><ellipse cx="7743.5" cy="973" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7746.4688,978.6406 Q7745.8906,978.9375 7745.25,979.0781 Q7744.6094,979.2344 7743.9063,979.2344 Q7741.4063,979.2344 7740.0781,977.5938 Q7738.7656,975.9375 7738.7656,972.8125 Q7738.7656,969.6875 7740.0781,968.0313 Q7741.4063,966.375 7743.9063,966.375 Q7744.6094,966.375 7745.25,966.5313 Q7745.9063,966.6875 7746.4688,966.9844 L7746.4688,969.7031 Q7745.8438,969.125 7745.25,968.8594 Q7744.6563,968.5781 7744.0313,968.5781 Q7742.6875,968.5781 7742,969.6563 Q7741.3125,970.7188 7741.3125,972.8125 Q7741.3125,974.9063 7742,975.9844 Q7742.6875,977.0469 7744.0313,977.0469 Q7744.6563,977.0469 7745.25,976.7813 Q7745.8438,976.5 7746.4688,975.9219 L7746.4688,978.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="7757.5" y="977.1543">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7729.5" x2="7910.5" y1="989" y2="989"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7729.5" x2="7910.5" y1="997" y2="997"/><ellipse cx="7739.5" cy="1008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7748.5" y="1011.2104">IgnoreSigPipe() : void</text><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="176.0469" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="8129.5" y="3266"/><ellipse cx="8336.25" cy="3282" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8339.2188,3287.6406 Q8338.6406,3287.9375 8338,3288.0781 Q8337.3594,3288.2344 8336.6563,3288.2344 Q8334.1563,3288.2344 8332.8281,3286.5938 Q8331.5156,3284.9375 8331.5156,3281.8125 Q8331.5156,3278.6875 8332.8281,3277.0313 Q8334.1563,3275.375 8336.6563,3275.375 Q8337.3594,3275.375 8338,3275.5313 Q8338.6563,3275.6875 8339.2188,3275.9844 L8339.2188,3278.7031 Q8338.5938,3278.125 8338,3277.8594 Q8337.4063,3277.5781 8336.7813,3277.5781 Q8335.4375,3277.5781 8334.75,3278.6563 Q8334.0625,3279.7188 8334.0625,3281.8125 Q8334.0625,3283.9063 8334.75,3284.9844 Q8335.4375,3286.0469 8336.7813,3286.0469 Q8337.4063,3286.0469 8338,3285.7813 Q8338.5938,3285.5 8339.2188,3284.9219 L8339.2188,3287.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="8356.75" y="3286.1543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8130.5" x2="8615.5" y1="3298" y2="3298"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8130.5" x2="8615.5" y1="3306" y2="3306"/><ellipse cx="8140.5" cy="3317" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="8149.5" y="3320.2104">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="8140.5" cy="3329.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="8149.5" y="3333.0151">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="8140.5" cy="3342.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="8149.5" y="3345.8198">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="8140.5" cy="3355.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="8149.5" y="3358.6245">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="8140.5" cy="3368.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="8149.5" y="3371.4292">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="8140.5" cy="3381.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="8149.5" y="3384.2339">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="8140.5" cy="3393.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="8149.5" y="3397.0386">serverAddress() const : const InetAddress &amp;</text><ellipse cx="8140.5" cy="3406.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="8149.5" y="3409.8433">start() : void</text><ellipse cx="8140.5" cy="3419.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="8149.5" y="3422.6479">restart() : void</text><ellipse cx="8140.5" cy="3432.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="8149.5" y="3435.4526">stop() : void</text><!--MD5=[572b9e0261ff2ea7319b4db932b69e38]
class C_0002045450139033818398--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="86.4141" id="C_0002045450139033818398" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="8145" y="3769"/><ellipse cx="8160" cy="3785" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8164.1094,3791 L8156.3906,3791 L8156.3906,3778.6094 L8164.1094,3778.6094 L8164.1094,3780.7656 L8158.8438,3780.7656 L8158.8438,3783.4375 L8163.6094,3783.4375 L8163.6094,3785.5938 L8158.8438,3785.5938 L8158.8438,3788.8438 L8164.1094,3788.8438 L8164.1094,3791 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="8174" y="3789.1543">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8146" x2="8290" y1="3801" y2="3801"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="8151" y="3815.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="8151" y="3828.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="8151" y="3840.8198">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8146" x2="8290" y1="3847.4141" y2="3847.4141"/><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="112.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="5108" y="2795.5"/><ellipse cx="5411.75" cy="2811.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5414.7188,2817.1406 Q5414.1406,2817.4375 5413.5,2817.5781 Q5412.8594,2817.7344 5412.1563,2817.7344 Q5409.6563,2817.7344 5408.3281,2816.0938 Q5407.0156,2814.4375 5407.0156,2811.3125 Q5407.0156,2808.1875 5408.3281,2806.5313 Q5409.6563,2804.875 5412.1563,2804.875 Q5412.8594,2804.875 5413.5,2805.0313 Q5414.1563,2805.1875 5414.7188,2805.4844 L5414.7188,2808.2031 Q5414.0938,2807.625 5413.5,2807.3594 Q5412.9063,2807.0781 5412.2813,2807.0781 Q5410.9375,2807.0781 5410.25,2808.1563 Q5409.5625,2809.2188 5409.5625,2811.3125 Q5409.5625,2813.4063 5410.25,2814.4844 Q5410.9375,2815.5469 5412.2813,2815.5469 Q5412.9063,2815.5469 5413.5,2815.2813 Q5414.0938,2815 5414.7188,2814.4219 L5414.7188,2817.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="5432.25" y="2815.6543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5109" x2="5801" y1="2827.5" y2="2827.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5109" x2="5801" y1="2835.5" y2="2835.5"/><ellipse cx="5119" cy="2846.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="5128" y="2849.7104">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="5119" cy="2859.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5128" y="2862.5151">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5119" cy="2872.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="5128" y="2875.3198">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5119" cy="2884.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5128" y="2888.1245">getLoop() : EventLoop *</text><ellipse cx="5119" cy="2897.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5128" y="2900.9292">~TimingWheel() : void</text><!--MD5=[a11c6ce0330b34c2b676c0b99a28d19b]
class C_0001504852334691167098--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="73.6094" id="C_0001504852334691167098" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="5670" y="2318.5"/><ellipse cx="5723.75" cy="2334.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5726.7188,2340.1406 Q5726.1406,2340.4375 5725.5,2340.5781 Q5724.8594,2340.7344 5724.1563,2340.7344 Q5721.6563,2340.7344 5720.3281,2339.0938 Q5719.0156,2337.4375 5719.0156,2334.3125 Q5719.0156,2331.1875 5720.3281,2329.5313 Q5721.6563,2327.875 5724.1563,2327.875 Q5724.8594,2327.875 5725.5,2328.0313 Q5726.1563,2328.1875 5726.7188,2328.4844 L5726.7188,2331.2031 Q5726.0938,2330.625 5725.5,2330.3594 Q5724.9063,2330.0781 5724.2813,2330.0781 Q5722.9375,2330.0781 5722.25,2331.1563 Q5721.5625,2332.2188 5721.5625,2334.3125 Q5721.5625,2336.4063 5722.25,2337.4844 Q5722.9375,2338.5469 5724.2813,2338.5469 Q5724.9063,2338.5469 5725.5,2338.2813 Q5726.0938,2338 5726.7188,2337.4219 L5726.7188,2340.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="5744.25" y="2338.6543">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5671" x2="5955" y1="2350.5" y2="2350.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5671" x2="5955" y1="2358.5" y2="2358.5"/><ellipse cx="5681" cy="2369.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5690" y="2372.7104">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="5681" cy="2382.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5690" y="2385.5151">~CallbackEntry() : void</text><!--MD5=[4fb8d7b5f3060c88eb88b17d74e59049]
class C_0001515554933771522998--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="112.0234" id="C_0001515554933771522998" style="stroke: #A80036; stroke-width: 1.5;" width="95" x="5836.5" y="2795.5"/><ellipse cx="5851.5" cy="2811.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5855.6094,2817.5 L5847.8906,2817.5 L5847.8906,2805.1094 L5855.6094,2805.1094 L5855.6094,2807.2656 L5850.3438,2807.2656 L5850.3438,2809.9375 L5855.1094,2809.9375 L5855.1094,2812.0938 L5850.3438,2812.0938 L5850.3438,2815.3438 L5855.6094,2815.3438 L5855.6094,2817.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="5865.5" y="2815.6543">SSLStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5837.5" x2="5930.5" y1="2827.5" y2="2827.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="5842.5" y="2841.7104">Handshaking</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="5842.5" y="2854.5151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="5842.5" y="2867.3198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5842.5" y="2880.1245">DisConnecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5842.5" y="2892.9292">DisConnected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5837.5" x2="5930.5" y1="2899.5234" y2="2899.5234"/><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="457.75" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1444" x="5740" y="1516"/><ellipse cx="6398.75" cy="1532" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6401.7188,1537.6406 Q6401.1406,1537.9375 6400.5,1538.0781 Q6399.8594,1538.2344 6399.1563,1538.2344 Q6396.6563,1538.2344 6395.3281,1536.5938 Q6394.0156,1534.9375 6394.0156,1531.8125 Q6394.0156,1528.6875 6395.3281,1527.0313 Q6396.6563,1525.375 6399.1563,1525.375 Q6399.8594,1525.375 6400.5,1525.5313 Q6401.1563,1525.6875 6401.7188,1525.9844 L6401.7188,1528.7031 Q6401.0938,1528.125 6400.5,1527.8594 Q6399.9063,1527.5781 6399.2813,1527.5781 Q6397.9375,1527.5781 6397.25,1528.6563 Q6396.5625,1529.7188 6396.5625,1531.8125 Q6396.5625,1533.9063 6397.25,1534.9844 Q6397.9375,1536.0469 6399.2813,1536.0469 Q6399.9063,1536.0469 6400.5,1535.7813 Q6401.0938,1535.5 6401.7188,1534.9219 L6401.7188,1537.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="6419.25" y="1536.1543">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5741" x2="7183" y1="1548" y2="1548"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5741" x2="7183" y1="1556" y2="1556"/><ellipse cx="5751" cy="1567" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="5760" y="1570.2104">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr) : void</text><ellipse cx="5751" cy="1579.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1418" x="5760" y="1583.0151">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, const std::shared_ptr&lt;SSLContext&gt; &amp; ctxPtr, bool isServer = true, bool validateCert = true, const std::string &amp; hostname = "") : void</text><ellipse cx="5751" cy="1592.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5760" y="1595.8198">~TcpConnectionImpl() : void</text><ellipse cx="5751" cy="1605.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5760" y="1608.6245">send(const char * msg, size_t len) : void</text><ellipse cx="5751" cy="1618.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="5760" y="1621.4292">send(const void * msg, size_t len) : void</text><ellipse cx="5751" cy="1631.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5760" y="1634.2339">send(const std::string &amp; msg) : void</text><ellipse cx="5751" cy="1643.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="5760" y="1647.0386">send(std::string &amp;&amp; msg) : void</text><ellipse cx="5751" cy="1656.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="5760" y="1659.8433">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="5751" cy="1669.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5760" y="1672.6479">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="5751" cy="1682.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="5760" y="1685.4526">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="5751" cy="1695.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="5760" y="1698.2573">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="5751" cy="1707.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="5760" y="1711.062">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="5751" cy="1720.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="5760" y="1723.8667">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="5751" cy="1733.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="5760" y="1736.6714">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="5751" cy="1746.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="5760" y="1749.4761">localAddr() const : const InetAddress &amp;</text><ellipse cx="5751" cy="1759.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="5760" y="1762.2808">peerAddr() const : const InetAddress &amp;</text><ellipse cx="5751" cy="1771.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="5760" y="1775.0854">connected() const : bool</text><ellipse cx="5751" cy="1784.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5760" y="1787.8901">disconnected() const : bool</text><ellipse cx="5751" cy="1797.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="5760" y="1800.6948">getRecvBuffer() : MsgBuffer *</text><ellipse cx="5751" cy="1810.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="5760" y="1813.4995">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="5751" cy="1823.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5760" y="1826.3042">keepAlive() : void</text><ellipse cx="5751" cy="1835.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="5760" y="1839.1089">isKeepAlive() : bool</text><ellipse cx="5751" cy="1848.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5760" y="1851.9136">setTcpNoDelay(bool on) : void</text><ellipse cx="5751" cy="1861.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5760" y="1864.7183">shutdown() : void</text><ellipse cx="5751" cy="1874.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5760" y="1877.5229">forceClose() : void</text><ellipse cx="5751" cy="1887.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5760" y="1890.3276">getLoop() : EventLoop *</text><ellipse cx="5751" cy="1899.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5760" y="1903.1323">bytesSent() const : size_t</text><ellipse cx="5751" cy="1912.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5760" y="1915.937">bytesReceived() const : size_t</text><ellipse cx="5751" cy="1925.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1166" x="5760" y="1928.7417">startClientEncryption(std::function&lt;void ()&gt; callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="5760" y="1941.5464">{}) : void</text><ellipse cx="5751" cy="1951.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="588" x="5760" y="1954.3511">startServerEncryption(const std::shared_ptr&lt;SSLContext&gt; &amp; ctx, std::function&lt;void ()&gt; callback) : void</text><ellipse cx="5751" cy="1963.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5760" y="1967.1558">isSSLConnection() const : bool</text><!--MD5=[2d97360a6445c06d833573b93b4acd5a]
class C_0000054046898195558381--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="86.4141" id="C_0000054046898195558381" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="7369.5" y="2312.5"/><ellipse cx="7462.75" cy="2328.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7465.7188,2334.1406 Q7465.1406,2334.4375 7464.5,2334.5781 Q7463.8594,2334.7344 7463.1563,2334.7344 Q7460.6563,2334.7344 7459.3281,2333.0938 Q7458.0156,2331.4375 7458.0156,2328.3125 Q7458.0156,2325.1875 7459.3281,2323.5313 Q7460.6563,2321.875 7463.1563,2321.875 Q7463.8594,2321.875 7464.5,2322.0313 Q7465.1563,2322.1875 7465.7188,2322.4844 L7465.7188,2325.2031 Q7465.0938,2324.625 7464.5,2324.3594 Q7463.9063,2324.0781 7463.2813,2324.0781 Q7461.9375,2324.0781 7461.25,2325.1563 Q7460.5625,2326.2188 7460.5625,2328.3125 Q7460.5625,2330.4063 7461.25,2331.4844 Q7461.9375,2332.5469 7463.2813,2332.5469 Q7463.9063,2332.5469 7464.5,2332.2813 Q7465.0938,2332 7465.7188,2331.4219 L7465.7188,2334.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="7483.25" y="2332.6543">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7370.5" x2="7761.5" y1="2344.5" y2="2344.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7370.5" x2="7761.5" y1="2352.5" y2="2352.5"/><ellipse cx="7380.5" cy="2363.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="7389.5" y="2366.7104">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="7380.5" cy="2376.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="7389.5" y="2379.5151">reset() : void</text><ellipse cx="7380.5" cy="2389.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="7389.5" y="2392.3198">~KickoffEntry() : void</text><!--MD5=[7b7e0753ace761f70f41559086430d1f]
class C_0000943181451128697972--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="150.4375" id="C_0000943181451128697972" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="5247" y="2280.5"/><ellipse cx="5338.75" cy="2296.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5341.7188,2302.1406 Q5341.1406,2302.4375 5340.5,2302.5781 Q5339.8594,2302.7344 5339.1563,2302.7344 Q5336.6563,2302.7344 5335.3281,2301.0938 Q5334.0156,2299.4375 5334.0156,2296.3125 Q5334.0156,2293.1875 5335.3281,2291.5313 Q5336.6563,2289.875 5339.1563,2289.875 Q5339.8594,2289.875 5340.5,2290.0313 Q5341.1563,2290.1875 5341.7188,2290.4844 L5341.7188,2293.2031 Q5341.0938,2292.625 5340.5,2292.3594 Q5339.9063,2292.0781 5339.2813,2292.0781 Q5337.9375,2292.0781 5337.25,2293.1563 Q5336.5625,2294.2188 5336.5625,2296.3125 Q5336.5625,2298.4063 5337.25,2299.4844 Q5337.9375,2300.5469 5339.2813,2300.5469 Q5339.9063,2300.5469 5340.5,2300.2813 Q5341.0938,2300 5341.7188,2299.4219 L5341.7188,2302.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="5359.25" y="2300.6543">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5248" x2="5634" y1="2312.5" y2="2312.5"/><ellipse cx="5258" cy="2323.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="5267" y="2326.7104">sendFd_ : int</text><ellipse cx="5258" cy="2336.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5267" y="2339.5151">offset_ : off_t</text><ellipse cx="5258" cy="2349.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5267" y="2352.3198">fileBytesToSend_ : ssize_t</text><ellipse cx="5258" cy="2361.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5267" y="2365.1245">nDataWritten_ : std::size_t</text><ellipse cx="5258" cy="2374.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="5267" y="2377.9292">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5248" x2="5634" y1="2384.5234" y2="2384.5234"/><ellipse cx="5258" cy="2395.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="5267" y="2398.7339">isFile() const : bool</text><ellipse cx="5258" cy="2408.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5267" y="2411.5386">~BufferNode() : void</text><ellipse cx="5258" cy="2421.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="5267" y="2424.3433">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[080bd1f2e93abade890a4691d69ad2ce]
class C_0000198777833674414676--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="99.2188" id="C_0000198777833674414676" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="6818.5" y="2306"/><ellipse cx="6833.5" cy="2322" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6837.6094,2328 L6829.8906,2328 L6829.8906,2315.6094 L6837.6094,2315.6094 L6837.6094,2317.7656 L6832.3438,2317.7656 L6832.3438,2320.4375 L6837.1094,2320.4375 L6837.1094,2322.5938 L6832.3438,2322.5938 L6832.3438,2325.8438 L6837.6094,2325.8438 L6837.6094,2328 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="6847.5" y="2326.1543">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6819.5" x2="7048.5" y1="2338" y2="2338"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="6824.5" y="2352.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="6824.5" y="2365.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="6824.5" y="2377.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="6824.5" y="2390.6245">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6819.5" x2="7048.5" y1="2397.2188" y2="2397.2188"/><!--MD5=[abce83987d86f121fb4360adfb11f58b]
class C_0001847734957165426408--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="150.4375" id="C_0001847734957165426408" style="stroke: #A80036; stroke-width: 1.5;" width="358" x="6283" y="2280.5"/><ellipse cx="6350.75" cy="2296.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6353.7188,2302.1406 Q6353.1406,2302.4375 6352.5,2302.5781 Q6351.8594,2302.7344 6351.1563,2302.7344 Q6348.6563,2302.7344 6347.3281,2301.0938 Q6346.0156,2299.4375 6346.0156,2296.3125 Q6346.0156,2293.1875 6347.3281,2291.5313 Q6348.6563,2289.875 6351.1563,2289.875 Q6351.8594,2289.875 6352.5,2290.0313 Q6353.1563,2290.1875 6353.7188,2290.4844 L6353.7188,2293.2031 Q6353.0938,2292.625 6352.5,2292.3594 Q6351.9063,2292.0781 6351.2813,2292.0781 Q6349.9375,2292.0781 6349.25,2293.1563 Q6348.5625,2294.2188 6348.5625,2296.3125 Q6348.5625,2298.4063 6349.25,2299.4844 Q6349.9375,2300.5469 6351.2813,2300.5469 Q6351.9063,2300.5469 6352.5,2300.2813 Q6353.0938,2300 6353.7188,2299.4219 L6353.7188,2302.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="214" x="6371.25" y="2300.6543">TcpConnectionImpl::SSLEncryption</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6284" x2="6640" y1="2312.5" y2="2312.5"/><ellipse cx="6294" cy="2323.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="6303" y="2326.7104">statusOfSSL_ : SSLStatus</text><ellipse cx="6294" cy="2336.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="6303" y="2339.5151">sslCtxPtr_ : std::shared_ptr&lt;SSLContext&gt;</text><ellipse cx="6294" cy="2349.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="6303" y="2352.3198">sslPtr_ : std::unique_ptr&lt;SSLConn&gt;</text><ellipse cx="6294" cy="2361.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="6303" y="2365.1245">sendBufferPtr_ : std::unique_ptr&lt;std::array&lt;char,8192&gt;&gt;</text><ellipse cx="6294" cy="2374.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6303" y="2377.9292">isServer_ : bool</text><ellipse cx="6294" cy="2387.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="6303" y="2390.7339">isUpgrade_ : bool</text><ellipse cx="6294" cy="2400.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6303" y="2403.5386">hostname_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6284" x2="6640" y1="2410.1328" y2="2410.1328"/><ellipse cx="6294" cy="2421.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="6303" y="2424.3433">upgradeCallback_ : std::function&lt;void ()&gt;</text><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="304.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="7050" y="3202"/><ellipse cx="7181.25" cy="3218" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7184.2188,3223.6406 Q7183.6406,3223.9375 7183,3224.0781 Q7182.3594,3224.2344 7181.6563,3224.2344 Q7179.1563,3224.2344 7177.8281,3222.5938 Q7176.5156,3220.9375 7176.5156,3217.8125 Q7176.5156,3214.6875 7177.8281,3213.0313 Q7179.1563,3211.375 7181.6563,3211.375 Q7182.3594,3211.375 7183,3211.5313 Q7183.6563,3211.6875 7184.2188,3211.9844 L7184.2188,3214.7031 Q7183.5938,3214.125 7183,3213.8594 Q7182.4063,3213.5781 7181.7813,3213.5781 Q7180.4375,3213.5781 7179.75,3214.6563 Q7179.0625,3215.7188 7179.0625,3217.8125 Q7179.0625,3219.9063 7179.75,3220.9844 Q7180.4375,3222.0469 7181.7813,3222.0469 Q7182.4063,3222.0469 7183,3221.7813 Q7183.5938,3221.5 7184.2188,3220.9219 L7184.2188,3223.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="7201.75" y="3222.1543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7051" x2="7363" y1="3234" y2="3234"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7051" x2="7363" y1="3242" y2="3242"/><ellipse cx="7061" cy="3253" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="7070" y="3256.2104">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="7061" cy="3265.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="7070" y="3269.0151">getSocketError(int sockfd) : int</text><ellipse cx="7061" cy="3278.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="7070" y="3281.8198">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="7061" cy="3291.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="7070" y="3294.6245">isSelfConnect(int sockfd) : bool</text><ellipse cx="7061" cy="3304.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="7070" y="3307.4292">Socket(int sockfd) : void</text><ellipse cx="7061" cy="3317.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7070" y="3320.2339">~Socket() : void</text><ellipse cx="7061" cy="3329.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7070" y="3333.0386">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="7061" cy="3342.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7070" y="3345.8433">listen() : void</text><ellipse cx="7061" cy="3355.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="7070" y="3358.6479">accept(InetAddress * peeraddr) : int</text><ellipse cx="7061" cy="3368.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7070" y="3371.4526">closeWrite() : void</text><ellipse cx="7061" cy="3381.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="7070" y="3384.2573">read(char * buffer, uint64_t len) : int</text><ellipse cx="7061" cy="3393.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="7070" y="3397.062">fd() : int</text><ellipse cx="7061" cy="3406.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="7070" y="3409.8667">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="7061" cy="3419.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="7070" y="3422.6714">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="7061" cy="3432.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="7070" y="3435.4761">setTcpNoDelay(bool on) : void</text><ellipse cx="7061" cy="3445.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7070" y="3448.2808">setReuseAddr(bool on) : void</text><ellipse cx="7061" cy="3457.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="7070" y="3461.0854">setReusePort(bool on) : void</text><ellipse cx="7061" cy="3470.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="7070" y="3473.8901">setKeepAlive(bool on) : void</text><ellipse cx="7061" cy="3483.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="7070" y="3486.6948">getSocketError() : int</text><ellipse cx="7061" cy="3496.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="7070" y="3499.4995">setNonBlockAndCloseOnExec(int sockfd) : void</text><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="6832" y="2827.5"/><ellipse cx="6847" cy="2843.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6849.9688,2849.1406 Q6849.3906,2849.4375 6848.75,2849.5781 Q6848.1094,2849.7344 6847.4063,2849.7344 Q6844.9063,2849.7344 6843.5781,2848.0938 Q6842.2656,2846.4375 6842.2656,2843.3125 Q6842.2656,2840.1875 6843.5781,2838.5313 Q6844.9063,2836.875 6847.4063,2836.875 Q6848.1094,2836.875 6848.75,2837.0313 Q6849.4063,2837.1875 6849.9688,2837.4844 L6849.9688,2840.2031 Q6849.3438,2839.625 6848.75,2839.3594 Q6848.1563,2839.0781 6847.5313,2839.0781 Q6846.1875,2839.0781 6845.5,2840.1563 Q6844.8125,2841.2188 6844.8125,2843.3125 Q6844.8125,2845.4063 6845.5,2846.4844 Q6846.1875,2847.5469 6847.5313,2847.5469 Q6848.1563,2847.5469 6848.75,2847.2813 Q6849.3438,2847 6849.9688,2846.4219 L6849.9688,2849.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="6861" y="2847.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6833" x2="6933" y1="2859.5" y2="2859.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6833" x2="6933" y1="2867.5" y2="2867.5"/><!--MD5=[d2d942cd4386751444b16de75468ea85]
class C_0001248784923817560723--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="48" id="C_0001248784923817560723" style="stroke: #A80036; stroke-width: 1.5;" width="86" x="5967" y="2827.5"/><ellipse cx="5982" cy="2843.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5984.9688,2849.1406 Q5984.3906,2849.4375 5983.75,2849.5781 Q5983.1094,2849.7344 5982.4063,2849.7344 Q5979.9063,2849.7344 5978.5781,2848.0938 Q5977.2656,2846.4375 5977.2656,2843.3125 Q5977.2656,2840.1875 5978.5781,2838.5313 Q5979.9063,2836.875 5982.4063,2836.875 Q5983.1094,2836.875 5983.75,2837.0313 Q5984.4063,2837.1875 5984.9688,2837.4844 L5984.9688,2840.2031 Q5984.3438,2839.625 5983.75,2839.3594 Q5983.1563,2839.0781 5982.5313,2839.0781 Q5981.1875,2839.0781 5980.5,2840.1563 Q5979.8125,2841.2188 5979.8125,2843.3125 Q5979.8125,2845.4063 5980.5,2846.4844 Q5981.1875,2847.5469 5982.5313,2847.5469 Q5983.1563,2847.5469 5983.75,2847.2813 Q5984.3438,2847 5984.9688,2846.4219 L5984.9688,2849.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="5996" y="2847.6543">SSLConn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5968" x2="6052" y1="2859.5" y2="2859.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5968" x2="6052" y1="2867.5" y2="2867.5"/><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="291.2891" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="1227" x="3275.5" y="2210"/><ellipse cx="3853.75" cy="2226" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3856.7188,2231.6406 Q3856.1406,2231.9375 3855.5,2232.0781 Q3854.8594,2232.2344 3854.1563,2232.2344 Q3851.6563,2232.2344 3850.3281,2230.5938 Q3849.0156,2228.9375 3849.0156,2225.8125 Q3849.0156,2222.6875 3850.3281,2221.0313 Q3851.6563,2219.375 3854.1563,2219.375 Q3854.8594,2219.375 3855.5,2219.5313 Q3856.1563,2219.6875 3856.7188,2219.9844 L3856.7188,2222.7031 Q3856.0938,2222.125 3855.5,2221.8594 Q3854.9063,2221.5781 3854.2813,2221.5781 Q3852.9375,2221.5781 3852.25,2222.6563 Q3851.5625,2223.7188 3851.5625,2225.8125 Q3851.5625,2227.9063 3852.25,2228.9844 Q3852.9375,2230.0469 3854.2813,2230.0469 Q3854.9063,2230.0469 3855.5,2229.7813 Q3856.0938,2229.5 3856.7188,2228.9219 L3856.7188,2231.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="3874.25" y="2230.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3276.5" x2="4501.5" y1="2242" y2="2242"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3276.5" x2="4501.5" y1="2250" y2="2250"/><ellipse cx="3286.5" cy="2261" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="794" x="3295.5" y="2264.2104">TcpServer(EventLoop * loop, const InetAddress &amp; address, const std::string &amp; name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="3286.5" cy="2273.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3295.5" y="2277.0151">~TcpServer() : void</text><ellipse cx="3286.5" cy="2286.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="3295.5" y="2289.8198">start() : void</text><ellipse cx="3286.5" cy="2299.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3295.5" y="2302.6245">stop() : void</text><ellipse cx="3286.5" cy="2312.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="3295.5" y="2315.4292">setIoLoopNum(size_t num) : void</text><ellipse cx="3286.5" cy="2325.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="3295.5" y="2328.2339">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="3286.5" cy="2337.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="3295.5" y="2341.0386">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="3286.5" cy="2350.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="3295.5" y="2353.8433">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="3286.5" cy="2363.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="3295.5" y="2366.6479">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="3286.5" cy="2376.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="3295.5" y="2379.4526">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="3286.5" cy="2389.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="3295.5" y="2392.2573">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="3286.5" cy="2401.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="3295.5" y="2405.062">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="3286.5" cy="2414.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3295.5" y="2417.8667">name() const : const std::string &amp;</text><ellipse cx="3286.5" cy="2427.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3295.5" y="2430.6714">ipPort() const : const std::string</text><ellipse cx="3286.5" cy="2440.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3295.5" y="2443.4761">address() const : const InetAddress &amp;</text><ellipse cx="3286.5" cy="2453.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3295.5" y="2456.2808">getLoop() const : EventLoop *</text><ellipse cx="3286.5" cy="2465.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="3295.5" y="2469.0854">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="3286.5" cy="2478.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="3295.5" y="2481.8901">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="3286.5" cy="2491.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1201" x="3295.5" y="2494.6948">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = = {}, const std::string &amp; caPath = "") : void</text><!--MD5=[246828eb47d6694f6a77fbdbe1f98053]
class C_0000741797986785144168--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="73.6094" id="C_0000741797986785144168" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="7541.5" y="3317"/><ellipse cx="7556.5" cy="3333" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7559.4688,3338.6406 Q7558.8906,3338.9375 7558.25,3339.0781 Q7557.6094,3339.2344 7556.9063,3339.2344 Q7554.4063,3339.2344 7553.0781,3337.5938 Q7551.7656,3335.9375 7551.7656,3332.8125 Q7551.7656,3329.6875 7553.0781,3328.0313 Q7554.4063,3326.375 7556.9063,3326.375 Q7557.6094,3326.375 7558.25,3326.5313 Q7558.9063,3326.6875 7559.4688,3326.9844 L7559.4688,3329.7031 Q7558.8438,3329.125 7558.25,3328.8594 Q7557.6563,3328.5781 7557.0313,3328.5781 Q7555.6875,3328.5781 7555,3329.6563 Q7554.3125,3330.7188 7554.3125,3332.8125 Q7554.3125,3334.9063 7555,3335.9844 Q7555.6875,3337.0469 7557.0313,3337.0469 Q7557.6563,3337.0469 7558.25,3336.7813 Q7558.8438,3336.5 7559.4688,3335.9219 L7559.4688,3338.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="7570.5" y="3337.1543">InetAddress::(anonymous_2030836)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7542.5" x2="7799.5" y1="3349" y2="3349"/><ellipse cx="7552.5" cy="3360" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7561.5" y="3363.2104">addr_ : struct sockaddr_in</text><ellipse cx="7552.5" cy="3372.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7561.5" y="3376.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7542.5" x2="7799.5" y1="3382.6094" y2="3382.6094"/><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="112.0234" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="6088" y="2795.5"/><ellipse cx="6374.75" cy="2811.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6377.7188,2817.1406 Q6377.1406,2817.4375 6376.5,2817.5781 Q6375.8594,2817.7344 6375.1563,2817.7344 Q6372.6563,2817.7344 6371.3281,2816.0938 Q6370.0156,2814.4375 6370.0156,2811.3125 Q6370.0156,2808.1875 6371.3281,2806.5313 Q6372.6563,2804.875 6375.1563,2804.875 Q6375.8594,2804.875 6376.5,2805.0313 Q6377.1563,2805.1875 6377.7188,2805.4844 L6377.7188,2808.2031 Q6377.0938,2807.625 6376.5,2807.3594 Q6375.9063,2807.0781 6375.2813,2807.0781 Q6373.9375,2807.0781 6373.25,2808.1563 Q6372.5625,2809.2188 6372.5625,2811.3125 Q6372.5625,2813.4063 6373.25,2814.4844 Q6373.9375,2815.5469 6375.2813,2815.5469 Q6375.9063,2815.5469 6376.5,2815.2813 Q6377.0938,2815 6377.7188,2814.4219 L6377.7188,2817.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="6395.25" y="2815.6543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6089" x2="6725" y1="2827.5" y2="2827.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6089" x2="6725" y1="2835.5" y2="2835.5"/><ellipse cx="6099" cy="2846.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="6108" y="2849.7104">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="6099" cy="2859.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6108" y="2862.5151">~Acceptor() : void</text><ellipse cx="6099" cy="2872.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6108" y="2875.3198">addr() const : const InetAddress &amp;</text><ellipse cx="6099" cy="2884.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="6108" y="2888.1245">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><ellipse cx="6099" cy="2897.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6108" y="2900.9292">listen() : void</text><!--MD5=[8ecabf7e7cdce9f4b7df86f1eee6bd12]
class C_0001829426703641465340--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="60.8047" id="C_0001829426703641465340" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="3365" y="2821"/><ellipse cx="3380" cy="2837" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3382.9688,2842.6406 Q3382.3906,2842.9375 3381.75,2843.0781 Q3381.1094,2843.2344 3380.4063,2843.2344 Q3377.9063,2843.2344 3376.5781,2841.5938 Q3375.2656,2839.9375 3375.2656,2836.8125 Q3375.2656,2833.6875 3376.5781,2832.0313 Q3377.9063,2830.375 3380.4063,2830.375 Q3381.1094,2830.375 3381.75,2830.5313 Q3382.4063,2830.6875 3382.9688,2830.9844 L3382.9688,2833.7031 Q3382.3438,2833.125 3381.75,2832.8594 Q3381.1563,2832.5781 3380.5313,2832.5781 Q3379.1875,2832.5781 3378.5,2833.6563 Q3377.8125,2834.7188 3377.8125,2836.8125 Q3377.8125,2838.9063 3378.5,2839.9844 Q3379.1875,2841.0469 3380.5313,2841.0469 Q3381.1563,2841.0469 3381.75,2840.7813 Q3382.3438,2840.5 3382.9688,2839.9219 L3382.9688,2842.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="3394" y="2841.1543">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3366" x2="3552" y1="2853" y2="2853"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3366" x2="3552" y1="2861" y2="2861"/><ellipse cx="3376" cy="2872" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3385" y="2875.2104">IgnoreSigPipe() : void</text><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="3142.5" y="8"/><ellipse cx="3267.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3270.2188,29.6406 Q3269.6406,29.9375 3269,30.0781 Q3268.3594,30.2344 3267.6563,30.2344 Q3265.1563,30.2344 3263.8281,28.5938 Q3262.5156,26.9375 3262.5156,23.8125 Q3262.5156,20.6875 3263.8281,19.0313 Q3265.1563,17.375 3267.6563,17.375 Q3268.3594,17.375 3269,17.5313 Q3269.6563,17.6875 3270.2188,17.9844 L3270.2188,20.7031 Q3269.5938,20.125 3269,19.8594 Q3268.4063,19.5781 3267.7813,19.5781 Q3266.4375,19.5781 3265.75,20.6563 Q3265.0625,21.7188 3265.0625,23.8125 Q3265.0625,25.9063 3265.75,26.9844 Q3266.4375,28.0469 3267.7813,28.0469 Q3268.4063,28.0469 3269,27.7813 Q3269.5938,27.5 3270.2188,26.9219 L3270.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="3287.75" y="28.1543">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3143.5" x2="3406.5" y1="40" y2="40"/><ellipse cx="3153.5" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3162.5" y="54.2104">str_ : const char *</text><ellipse cx="3153.5" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3162.5" y="67.0151">len_ : const unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3143.5" x2="3406.5" y1="73.6094" y2="73.6094"/><ellipse cx="3153.5" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3162.5" y="87.8198">T(const char * str, unsigned int len) : void</text><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="176.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="4319" y="5107"/><ellipse cx="4581.75" cy="5123" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4584.7188,5128.6406 Q4584.1406,5128.9375 4583.5,5129.0781 Q4582.8594,5129.2344 4582.1563,5129.2344 Q4579.6563,5129.2344 4578.3281,5127.5938 Q4577.0156,5125.9375 4577.0156,5122.8125 Q4577.0156,5119.6875 4578.3281,5118.0313 Q4579.6563,5116.375 4582.1563,5116.375 Q4582.8594,5116.375 4583.5,5116.5313 Q4584.1563,5116.6875 4584.7188,5116.9844 L4584.7188,5119.7031 Q4584.0938,5119.125 4583.5,5118.8594 Q4582.9063,5118.5781 4582.2813,5118.5781 Q4580.9375,5118.5781 4580.25,5119.6563 Q4579.5625,5120.7188 4579.5625,5122.8125 Q4579.5625,5124.9063 4580.25,5125.9844 Q4580.9375,5127.0469 4582.2813,5127.0469 Q4582.9063,5127.0469 4583.5,5126.7813 Q4584.0938,5126.5 4584.7188,5125.9219 L4584.7188,5128.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="4602.25" y="5127.1543">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4320" x2="4886" y1="5139" y2="5139"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4320" x2="4886" y1="5147" y2="5147"/><ellipse cx="4330" cy="5158" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="4339" y="5161.2104">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="4330" cy="5170.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="4339" y="5174.0151">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="4330" cy="5183.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4339" y="5186.8198">~Timer() : void</text><ellipse cx="4330" cy="5196.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4339" y="5199.6245">run() const : void</text><ellipse cx="4330" cy="5209.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4339" y="5212.4292">restart(const TimePoint &amp; now) : void</text><ellipse cx="4330" cy="5222.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4339" y="5225.2339">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="4330" cy="5234.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4339" y="5238.0386">operator&gt;(const Timer &amp; t) const : bool</text><ellipse cx="4330" cy="5247.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4339" y="5250.8433">when() const : const TimePoint &amp;</text><ellipse cx="4330" cy="5260.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4339" y="5263.6479">isRepeat() : bool</text><ellipse cx="4330" cy="5273.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4339" y="5276.4526">id() : TimerId</text><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="4617" y="4806"/><ellipse cx="4749.25" cy="4822" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4752.2188,4827.6406 Q4751.6406,4827.9375 4751,4828.0781 Q4750.3594,4828.2344 4749.6563,4828.2344 Q4747.1563,4828.2344 4745.8281,4826.5938 Q4744.5156,4824.9375 4744.5156,4821.8125 Q4744.5156,4818.6875 4745.8281,4817.0313 Q4747.1563,4815.375 4749.6563,4815.375 Q4750.3594,4815.375 4751,4815.5313 Q4751.6563,4815.6875 4752.2188,4815.9844 L4752.2188,4818.7031 Q4751.5938,4818.125 4751,4817.8594 Q4750.4063,4817.5781 4749.7813,4817.5781 Q4748.4375,4817.5781 4747.75,4818.6563 Q4747.0625,4819.7188 4747.0625,4821.8125 Q4747.0625,4823.9063 4747.75,4824.9844 Q4748.4375,4826.0469 4749.7813,4826.0469 Q4750.4063,4826.0469 4751,4825.7813 Q4751.5938,4825.5 4752.2188,4824.9219 L4752.2188,4827.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="4769.75" y="4826.1543">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4618" x2="5002" y1="4838" y2="4838"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4618" x2="5002" y1="4846" y2="4846"/><ellipse cx="4628" cy="4857" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4637" y="4860.2104">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><!--MD5=[f273a62711b82de0492e3370b53bafae]
class C_0000253546837558644771--><rect fill="#FEFECE" filter="url(#fytoz1epo5flz)" height="73.6094" id="C_0000253546837558644771" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="7835.5" y="3317"/><ellipse cx="7850.5" cy="3333" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7853.4688,3338.6406 Q7852.8906,3338.9375 7852.25,3339.0781 Q7851.6094,3339.2344 7850.9063,3339.2344 Q7848.4063,3339.2344 7847.0781,3337.5938 Q7845.7656,3335.9375 7845.7656,3332.8125 Q7845.7656,3329.6875 7847.0781,3328.0313 Q7848.4063,3326.375 7850.9063,3326.375 Q7851.6094,3326.375 7852.25,3326.5313 Q7852.9063,3326.6875 7853.4688,3326.9844 L7853.4688,3329.7031 Q7852.8438,3329.125 7852.25,3328.8594 Q7851.6563,3328.5781 7851.0313,3328.5781 Q7849.6875,3328.5781 7849,3329.6563 Q7848.3125,3330.7188 7848.3125,3332.8125 Q7848.3125,3334.9063 7849,3335.9844 Q7849.6875,3337.0469 7851.0313,3337.0469 Q7851.6563,3337.0469 7852.25,3336.7813 Q7852.8438,3336.5 7853.4688,3335.9219 L7853.4688,3338.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="7864.5" y="3337.1543">InetAddress::(anonymous_1188166)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7836.5" x2="8093.5" y1="3349" y2="3349"/><ellipse cx="7846.5" cy="3360" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7855.5" y="3363.2104">addr_ : struct sockaddr_in</text><ellipse cx="7846.5" cy="3372.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7855.5" y="3376.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7836.5" x2="8093.5" y1="3382.6094" y2="3382.6094"/><!--MD5=[ecf249adc7ca108900d2e978d3b3b08c]
reverse link C_0000630185754256426097 to C_0000923080849258138681--><path d="M1831.6,386.85 C1810.11,416.84 1789.05,452.6 1778,489 C1732.16,640.06 1755.84,828.98 1773.15,924.72 " fill="none" id="C_0000630185754256426097&lt;-C_0000923080849258138681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1839.52,376.08,1832.743,378.5442,1832.4111,385.7476,1839.1881,383.2835,1839.52,376.08" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1784,591.5664,1788,595.5664,1784,599.5664,1780,595.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="1791" y="600.5669">loggerFilePtr_</text><!--MD5=[ba799a9852152493196dca2fe0c0e4f2]
link C_0000923080849258138681 to C_0000630185754256426097--><path d="M1812.57,924.81 C1835.54,868.28 1867.3,781.66 1882,703 C1901.85,596.78 1903.72,471.82 1902.21,391.34 " fill="none" id="C_0000923080849258138681-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1902.0454" cy="384.1081" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1902.2207" x2="1901.87" y1="392.1062" y2="376.11"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1894.0473" x2="1910.0434" y1="384.2834" y2="383.9327"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M2719.43,55.44 C2617.07,61.65 2432.2,78.61 2281,124 C2188.83,151.67 2090.96,198.68 2017.36,237.99 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.3,48.44,2739.67,54.29,2720.1,62.42,2719.3,48.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1abf77325bb953a69e48913d3538496a]
reverse link C_0000923080849258138681 to C_0002032009232244826154--><path d="M1810.69,1062.87 C1853.03,1197.25 1935,1490.16 1935,1744 C1935,1744 1935,1744 1935,3813 C1935,3927.4 1996.33,4032.47 2070.59,4117.77 " fill="none" id="C_0000923080849258138681&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1806.72,1050.37,1804.7212,1057.2986,1810.3481,1061.8084,1812.3468,1054.8798,1806.72,1050.37" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1941,2847.0664,1945,2851.0664,1941,2855.0664,1937,2851.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="1948" y="2856.0669">creationDate_</text><!--MD5=[697a9144aaa193fbdb4d43303bc09227]
reverse link C_0001159823987743494688 to C_0000923080849258138681--><path d="M2719.69,52.33 C2456.63,54.23 1607.99,67.18 1527,155 C1435.4,254.32 1496.43,327.39 1527,459 C1568.95,639.62 1681.88,829.66 1743.86,924.7 " fill="none" id="C_0001159823987743494688&lt;-C_0000923080849258138681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.7,45.33,2739.75,52.19,2719.8,59.33,2719.7,45.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M2719.55,51.98 C2416.21,52.37 1279.7,58.4 347,124 C222.98,132.72 168.47,80.43 69,155 C10.82,198.62 6,233.28 6,306 C6,306 6,306 6,4335 C6,4749.89 684.3,4821.13 947.94,4833.15 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.93,44.98,2739.94,51.96,2719.94,58.98,2719.93,44.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a9618021460bcc1d44c7377ab2184a4a]
link C_0000913287266699074255 to C_0000912667184903365399--><path d="M3966.18,4354.05 C3756.55,4392.37 3267.64,4481 2856,4550 C2224.12,4655.92 1465.94,4772.39 1173.93,4816.85 " fill="none" id="C_0000913287266699074255-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1174.96,4823.78,1154.13,4819.87,1172.85,4809.94,1174.96,4823.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M4778.91,3862.04 C4337.1,3946.97 3421.44,4122.99 2843.23,4234.15 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2838.15,4235.12,2847.7425,4237.3525,2843.0604,4234.1779,2846.2351,4229.4958,2838.15,4235.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5289.23,3834.41 C5590.53,3865.59 6064.53,3935.21 6173,4071 C6318.91,4253.65 6257.59,4379.06 6173,4597 C6164.6,4618.64 6153.22,4639.51 6140.05,4659.3 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6137.03,4663.77,6145.3837,4658.5532,6139.8298,4659.6274,6138.7556,4654.0735,6137.03,4663.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4910.34,4041.26 C4843.41,4199.02 4794.66,4405.65 4905,4550 C4957.95,4619.26 5480.51,4737.09 5767.88,4797.43 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5772.94,4798.49,5764.9571,4792.7217,5768.0473,4797.4599,5763.309,4800.5501,5772.94,4798.49" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4908" y="4331.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="4918" y="4338.5669">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5289.18,3970.72 C5339.72,4012.8 5387.46,4062.31 5421,4118 C5521.7,4285.2 5390.49,4388.43 5500,4550 C5564.83,4645.65 5673.5,4715.59 5768.38,4762.31 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5772.88,4764.51,5766.5514,4756.9636,5768.3881,4762.3139,5763.0377,4764.1506,5772.88,4764.51" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5503" y="4331.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5513" y="4338.5669">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5301.77,3865.4 C5533.8,3917.81 5840.39,4006.55 5893,4118 C5968.13,4277.14 5979.38,4478.18 5974.29,4626.94 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5289.04,3862.55,5294.0201,3867.7652,5300.7496,3865.1741,5295.7695,3859.9589,5289.04,3862.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5978" y="4331.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="5988" y="4338.5669">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6087.44,4626.73 C6166.87,4472.35 6232.98,4264.37 6122,4118 C6022.25,3986.44 5583.32,3896.03 5294.36,3849.53 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5289.26,3848.71,5297.5028,3854.1003,5294.1954,3849.5111,5298.7846,3846.2037,5289.26,3848.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M5772.77,4631.11 C5755.58,4605.02 5740.1,4577.71 5728,4550 C5650.28,4372 5777.23,4274.35 5662,4118 C5573.43,3997.83 5424.72,3922.69 5294.24,3877.07 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5289.22,3875.32,5296.4088,3882.0521,5293.9431,3876.9609,5299.0343,3874.4952,5289.22,3875.32" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5731" y="4331.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5741" y="4338.5669">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M5843.43,4621.93 C5833.96,4598.1 5825.53,4573.83 5819,4550 C5793.54,4457.03 5837.28,4195.52 5780,4118 C5665.04,3962.42 5456.68,3885.93 5289.33,3848.48 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5845.34,4626.69,5845.6853,4616.8472,5843.4708,4622.0526,5838.2654,4619.838,5845.34,4626.69" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5825" cy="4334.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5832" y="4338.5669">«friend»</text><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M5176.46,4053.35 C5178.77,4059.24 5180.95,4065.13 5183,4071 C5204.36,4132.22 5214.03,4205.48 5218.39,4258.95 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5171.57,4041.25,5170.1118,4048.3121,5176.0699,4052.3743,5177.5281,4045.3122,5171.57,4041.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5190" y="4077.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5200" y="4084.0669">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5156.82,4258.91 C5120.43,4212.98 5078.08,4150.9 5056,4088 C5051.3,4074.62 5047.4,4060.65 5044.16,4046.42 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5043,4041.16,5041.0476,4050.8134,5044.0847,4046.0409,5048.8571,4049.078,5043,4041.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5172.09,4258.83 C5142.59,4211.75 5106.85,4148.5 5085,4088 C5080.11,4074.46 5075.67,4060.37 5071.64,4046.03 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5070.28,4041.16,5068.8377,4050.9027,5071.6197,4045.9772,5076.5452,4048.7592,5070.28,4041.16" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5088" y="4077.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5098" y="4084.0669">ownerLoop_</text><!--MD5=[de23fe49c03c04d6a6596b8aabb0600a]
reverse link C_0001390130774830223499 to C_0000913287266699074255--><path d="M4766.22,3887.68 C4554.46,3950.73 4280.12,4042.53 4191,4118 C4128.08,4171.28 4091.37,4266 4077.03,4309.71 " fill="none" id="C_0001390130774830223499&lt;-C_0000913287266699074255" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4778.8,3883.95,4771.9124,3881.8145,4767.292,3887.351,4774.1797,3889.4865,4778.8,3883.95" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4254" y="4077.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4264" y="4084.0669">funcs_</text><!--MD5=[de23fe49c03c04d6a6596b8aabb0600a]
reverse link C_0001390130774830223499 to C_0000913287266699074255--><path d="M4766.14,3858.43 C4532.41,3903.45 4217.37,3978.89 4130,4071 C4066.1,4138.38 4065.29,4259.32 4068.09,4309.84 " fill="none" id="C_0001390130774830223499&lt;-C_0000913287266699074255-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4778.95,3855.98,4772.3048,3853.1798,4767.1641,3858.2369,4773.8094,3861.0371,4778.95,3855.98" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4133" y="4077.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4143" y="4084.0669">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M4766.81,3896 C4681.77,3935.59 4595.89,3992.07 4542,4071 C4503.23,4127.79 4499.98,4208.17 4503.91,4264.88 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4778.8,3890.53,4771.6807,3889.383,4767.8837,3895.5135,4775.003,3896.6605,4778.8,3890.53" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4545" y="4077.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="4555" y="4084.0669">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M4568.36,4264.92 C4613.39,4210.74 4679.48,4133.86 4742,4071 C4752.72,4060.23 4763.8,4049.36 4775.1,4038.49 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4778.94,4034.81,4769.6849,4038.1778,4775.3408,4038.2807,4775.2379,4043.9366,4778.94,4034.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M4581.16,4264.97 C4637.68,4208.56 4721.48,4124.92 4801.67,4044.89 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4805.48,4041.08,4796.2805,4044.597,4801.9373,4044.6084,4801.9259,4050.2652,4805.48,4041.08" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4779,4075.0664,4783,4079.0664,4779,4083.0664,4775,4079.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4786" y="4084.0669">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M5289.47,3773.45 C5310.76,3781.75 5324,3794.6 5324,3812 C5324,3828.04 5312.75,3840.22 5294.31,3848.52 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5289.47,3850.55,5299.3164,3850.77,5294.0833,3848.6219,5296.2314,3843.3887,5289.47,3850.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5332" y="3809.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="5342" y="3816.5669">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M2816.26,93.81 C2837.29,143.35 2868,228.91 2868,306 C2868,306 2868,306 2868,1380 C2868,1853.68 2673.77,3184.89 3022,3506 C3273.45,3737.86 4295.52,3793.47 4778.65,3806.8 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2809.72,96.33,2808.09,75.2,2822.54,90.7,2809.72,96.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2616.76,3410.13 C2656.28,3456.69 2719.43,3520.79 2790,3553 C3138.19,3711.93 4260.12,3778.5 4773.36,3801.15 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4778.62,3801.38,4769.7995,3796.9983,4773.6246,3801.1659,4769.457,3804.991,4778.62,3801.38" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2793" y="3542.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2803" y="3549.0669">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2557.58,3423.29 C2551.65,3466.09 2552.95,3519.32 2585,3553 C2594.42,3562.9 4153.46,3721.81 4778.83,3785.19 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2559.62,3410.38,2554.732,3415.6816,2557.7457,3422.2327,2562.6338,3416.9311,2559.62,3410.38" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2588" y="3542.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="2598" y="3549.0669">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M2797,95.38 C2797,145.94 2797,232.03 2797,306 C2797,306 2797,306 2797,1380 C2797,1735.72 2808.17,1826.03 2773,2180 C2729.86,2614.21 2622.41,3130.56 2586.16,3297.81 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2790,95.11,2797,75.11,2804,95.11,2790,95.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M3815.61,2936.31 C3758.21,3000.8 3669.54,3085.38 3571,3125 C3438.28,3178.36 3065.54,3115.7 2928,3155 C2823.73,3184.79 2716.8,3250.39 2648.15,3297.94 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3824.2,2926.55,3817.2334,2928.412,3816.2728,2935.5588,3823.2393,2933.6968,3824.2,2926.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2931" y="3161.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="2941" y="3168.0669">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M2859.83,86.58 C2873.2,96.88 2885.76,109.39 2894,124 C2959.14,239.55 3033.05,2399.97 3119,2501 C3167.58,2558.11 3561.18,2573.69 3571,2578 C3672.4,2622.54 3764.71,2712.11 3822.17,2776.41 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2855.78,92.29,2843.34,75.13,2863.76,80.79,2855.78,92.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M5272.33,4409.2 C5313.93,4466.25 5377.32,4544.02 5447,4597 C5543.86,4670.65 5667.12,4729.2 5767.97,4769.86 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5772.76,4771.78,5765.908,4764.7054,5768.1226,4769.9108,5762.9172,4772.1253,5772.76,4771.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M2847.44,84.67 C2855.39,88.5 2863.72,91.81 2872,94 C3000.08,127.85 7508.56,120.82 7641,124 C7873.15,129.58 8670,73.78 8670,306 C8670,306 8670,306 8670,3164.5 C8670,3585.8 8673.41,3829.57 8309,4041 C8030.58,4202.54 5704.84,3982.2 5413,4118 C5349.63,4147.49 5298.44,4209.02 5265.07,4258.74 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.03,90.78,2829.79,75.09,2850.71,78.48,2844.03,90.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6fae28fa9ff5d7f68f4068664152934]
link C_0000607400095182694101 to C_0002026475275429760163--><path d="M4496.28,4403.24 C4467.74,4531.49 4418.14,4816.27 4477,5046 C4482.17,5066.19 4492.18,5085.25 4504.4,5102.56 " fill="none" id="C_0000607400095182694101-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4507.55,5106.92,4505.5258,5097.2814,4504.6236,5102.8659,4499.0391,5101.9637,4507.55,5106.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M4506.02,4416.5 C4496.77,4550 4487.03,4822.77 4538,5046 C4542.62,5066.25 4550,5087.15 4558.16,5106.65 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4506.97,4403.24,4502.5518,4408.9391,4506.1132,4415.2094,4510.5314,4409.5103,4506.97,4403.24" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4544,4832.0664,4548,4836.0664,4544,4840.0664,4540,4836.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="4551" y="4841.0669">timers_</text><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M4547.43,4403.23 C4582.68,4465.23 4643.65,4553.44 4724,4597 C4782.32,4628.61 4955.51,4616.42 5021,4627 C5282.34,4669.22 5580.19,4739.65 5767.85,4786.83 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5772.82,4788.07,5765.0799,4781.9797,5767.9735,4786.8405,5763.1127,4789.7341,5772.82,4788.07" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4730,4584.0664,4734,4588.0664,4730,4592.0664,4726,4588.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="4737" y="4593.0669">timerfdChannelPtr_</text><!--MD5=[94ff915feb725d4dab9cf4cca4f2b7b9]
reverse link C_0000607400095182694101 to C_0000157340721173102239--><path d="M4528.85,4416.04 C4541.59,4469.76 4562.76,4540.49 4595,4597 C4643.9,4682.7 4727.96,4763.91 4775.18,4805.87 " fill="none" id="C_0000607400095182694101&lt;-C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4525.87,4403.11,4523.3183,4409.8545,4528.5625,4414.804,4531.1143,4408.0595,4525.87,4403.11" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4601,4584.0664,4605,4588.0664,4601,4592.0664,4597,4588.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="4608" y="4593.0669">timers_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M2719.77,59.67 C2604.51,72.7 2395.41,102.92 2343,155 C2343,155 2208,733 2208,733 C2107.4,1605.98 2032.5,3129.42 2320,3506 C2386.36,3592.93 4092.64,4070.19 4191,4118 C4275.03,4158.84 4362.74,4218.72 4425.36,4264.92 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.15,52.7,2739.8,57.47,2720.68,66.61,2719.15,52.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M2847.44,84.67 C2855.39,88.5 2863.72,91.81 2872,94 C3007.36,129.75 7772.04,120.36 7912,124 C8210.88,131.78 8309.32,36.92 8584,155 C8672.94,193.24 8741,209.19 8741,306 C8741,306 8741,306 8741,4335 C8741,4600.45 6756.46,4774.34 6137.26,4822.14 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.03,90.78,2829.79,75.09,2850.71,78.48,2844.03,90.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M2760.5,89.84 C2719.36,132.49 2652.11,202.21 2605.14,250.91 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2755.47,84.98,2774.39,75.44,2765.54,94.7,2755.47,84.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M2581.36,2193.28 C2579.76,2446.08 2575.59,3103.11 2574.35,3297.84 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2581.45,2180.1,2577.4105,2186.0735,2581.3709,2192.0997,2585.4104,2186.1262,2581.45,2180.1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2585,2535.0664,2589,2539.0664,2585,2543.0664,2581,2539.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="2592" y="2544.0669">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M2583.92,382.01 C2618.03,465.45 2669.91,606.07 2690,733 C2765.34,1208.96 2652.34,1787.52 2603.08,2003.86 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2577.37,384.48,2576.19,363.33,2590.31,379.13,2577.37,384.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M2719.74,52.19 C2357.88,53.38 828.42,62.07 355,124 C208.57,143.15 77,158.32 77,306 C77,306 77,306 77,2356.5 C77,2496.09 138.16,2646.5 186.89,2744.2 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.93,45.19,2739.95,52.12,2719.98,59.19,2719.93,45.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M482.37,2379.66 C451.82,2440.52 367.57,2608.34 308.4,2726.2 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="314.54,2729.57,299.32,2744.3,302.03,2723.28,314.54,2729.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M214.08,703.03 C189.04,852.87 148,1135.39 148,1378 C148,1378 148,1378 148,2356.5 C148,2483.63 179.61,2625.7 206.93,2724.73 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="213.74,2723.11,212.41,2744.26,200.26,2726.9,213.74,2723.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M2719.66,51.73 C2315.14,50.61 457.79,49.59 363,124 C253.82,209.71 231.1,378.27 228.92,488.76 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.98,44.73,2739.96,51.79,2719.94,58.73,2719.98,44.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M299.82,1486.05 C289.38,1750.63 262.23,2439.03 250.99,2724.06 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="257.97,2724.57,250.19,2744.28,243.98,2724.02,257.97,2724.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M2719.5,52.97 C2316.47,58.2 476.82,84.19 434,124 C423.48,133.78 342.79,970.85 314.09,1271.76 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.65,45.97,2739.74,52.71,2719.83,59.97,2719.65,45.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M519.12,1929.82 C510.48,2075.97 499.22,2266.34 495.36,2331.48 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="519.9,1916.72,515.5509,1922.472,519.1876,1928.6988,523.5367,1922.9469,519.9,1916.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="518" y="2089.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="528" y="2096.5669">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M2719.74,52.43 C2328.61,54.97 582.65,70.99 507,155 C413.94,258.34 481.73,1184.57 514.73,1573.38 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.89,45.43,2739.93,52.3,2719.97,59.43,2719.89,45.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4cf16a3a7515461f3d05fd8f8446243e]
link C_0002053752992472264214 to C_0002198968118661318449--><path d="M1053.04,395.31 C1069.42,537.79 1101.41,816.09 1114.84,932.88 " fill="none" id="C_0002053752992472264214-&gt;C_0002198968118661318449" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1115.42,937.98,1118.3661,928.5821,1114.849,933.0127,1110.4184,929.4956,1115.42,937.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dedba6e7176083499cf65eaf9b18123f]
reverse link C_0002053752992472264214 to C_0002198968118661318449--><path d="M1074.65,407.74 C1081.83,433.93 1088.62,462.32 1093,489 C1119.76,651.83 1122.19,848.22 1121.69,937.75 " fill="none" id="C_0002053752992472264214&lt;-C_0002198968118661318449" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1071.1,395.08,1068.8711,401.938,1074.3444,406.6331,1076.5732,399.7751,1071.1,395.08" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1120,591.5664,1124,595.5664,1120,599.5664,1116,595.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="1127" y="600.5669">sourceFile_</text><!--MD5=[6e413a9ff98d1036c32a40f38eda6d04]
link C_0002198968118661318449 to C_0002053752992472264214--><path d="M1106.57,937.87 C1090.67,881.83 1065.9,786.69 1055,703 C1042.11,604.09 1039.99,490.14 1040.57,410.12 " fill="none" id="C_0002198968118661318449-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1040.6338" cy="403.0796" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1040.5576" x2="1040.71" y1="411.0793" y2="395.08"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1032.6342" x2="1048.6335" y1="403.0035" y2="403.1558"/><!--MD5=[4e55153dc2bbe973a98011189d7f73bc]
link C_0002053752992472264214 to C_0001184349029950147049--><path d="M1180.39,395.06 C1212.38,421.53 1243.14,453.23 1264,489 C1274.63,507.22 1317.91,779.41 1338.72,913.27 " fill="none" id="C_0002053752992472264214-&gt;C_0001184349029950147049" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1339.51,918.36,1342.0743,908.8508,1338.739,913.4198,1334.17,910.0845,1339.51,918.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7286c3c57541826f41b0c3d9fa47a52c]
reverse link C_0002053752992472264214 to C_0001184349029950147049--><path d="M1226.25,403.02 C1257.19,427.02 1285.54,455.65 1305,489 C1384.11,624.58 1373.85,817.14 1361.05,918.33 " fill="none" id="C_0002053752992472264214&lt;-C_0001184349029950147049" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1215.67,395.06,1218.0595,401.8637,1225.2589,402.2748,1222.8694,395.4711,1215.67,395.06" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1371,591.5664,1375,595.5664,1371,599.5664,1367,595.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1378" y="600.5669">level_</text><!--MD5=[1118e87c4fa09581de729e25b1b02b57]
link C_0001184349029950147049 to C_0002053752992472264214--><path d="M1329.82,918.4 C1312.88,861.01 1288.12,776.7 1267,703 C1239.79,608.04 1254.77,575.46 1207,489 C1190.91,459.87 1169.27,431.59 1147,406.38 " fill="none" id="C_0001184349029950147049-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1142.1001" cy="400.9588" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1147.4603" x2="1136.74" y1="406.8976" y2="395.02"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1136.1614" x2="1148.0389" y1="406.3189" y2="395.5986"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M967.26,405.88 C949.03,432.02 930.62,460.85 916,489 C706.28,892.84 859.29,1066.48 683,1486 C670.79,1515.05 655.81,1544.77 640.05,1573.24 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="974.77,395.24,968.0408,397.8319,967.8451,405.0403,974.5743,402.4484,974.77,395.24" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="826,983.0664,830,987.0664,826,991.0664,822,987.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="833" y="992.0669">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M1018.65,408.01 C988.77,539.75 942,779.04 942,986.5 C942,986.5 942,986.5 942,3813 C942,4007.08 1424.16,4153.07 1819.92,4240.21 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1021.58,395.21,1016.3423,400.1664,1018.9029,406.9076,1024.1406,401.9512,1021.58,395.21" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="948,2535.0664,952,2539.0664,948,2543.0664,944,2539.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="955" y="2544.0669">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M810.82,397.78 C771.82,422.11 735.48,452.2 709,489 C607.23,630.46 611.04,852.14 617.84,944.21 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="815.09,395.14,805.3307,396.4648,810.8356,397.7669,809.5336,403.2718,815.09,395.14" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="715" cy="596.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="722" y="600.5669">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M2719.47,52.62 C2472.42,55.14 1705.84,67.46 1465,124 C1376.74,144.72 1283.7,182.9 1207.5,218.96 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.65,45.62,2739.72,52.42,2719.79,59.61,2719.65,45.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M615.27,1043.74 C601.89,1153.67 571.43,1403.79 550.78,1573.35 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="616.86,1030.74,612.1638,1036.2123,615.4089,1042.6519,620.1051,1037.1797,616.86,1030.74" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590" y="1376.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="600" y="1383.5669">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M2719.81,52.75 C2342.18,56.81 704.48,78.75 630,155 C414.39,375.75 553.25,807.55 604.96,944.07 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2719.78,45.75,2739.86,52.54,2719.93,59.75,2719.78,45.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M2540.57,383.33 C2520.37,516.34 2478.71,790.8 2459.33,918.45 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2533.69,381.96,2543.61,363.24,2547.53,384.06,2533.69,381.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f8dd13c3c8cdfbb0be5d6bf21d6fa3e]
reverse link C_0001897340460211641725 to C_0001238571308552245455--><path d="M7195.29,3964.47 C7192.95,4079.57 7194.56,4229.26 7200.12,4296.95 " fill="none" id="C_0001897340460211641725&lt;-C_0001238571308552245455" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7195.58,3951.33,7191.4491,3957.2407,7195.3163,3963.3271,7199.4472,3957.4164,7195.58,3951.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7b9bcc732db9920d249b0d9e1ba70175]
link C_0001238571308552245455 to C_0001897340460211641725--><path d="M7214.29,4296.95 C7220.14,4229.67 7221.86,4081.39 7219.44,3966.58 " fill="none" id="C_0001238571308552245455-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7219.273" cy="3959.3279" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7219.456" x2="7219.09" y1="3967.3258" y2="3951.33"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7211.2751" x2="7227.2709" y1="3959.5109" y2="3959.1449"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M5689.26,1183.48 C5307.15,1342.17 4834.07,1605.91 4577,2004 C4456.39,2190.78 4672.14,2338.87 4520,2501 C4468.4,2555.99 4401.38,2473.15 4353,2531 C4342.21,2543.9 4335.05,2558.01 4330.81,2572.89 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4329.49,2577.96,4335.6286,2570.2582,4330.7498,2573.1213,4327.8866,2568.2425,4329.49,2577.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fb33c8d241a2fef006600e262be5e63]
link C_0002230624932100089526 to C_0000626107303889580949--><path d="M6866.68,1210.56 C6911.39,1222.69 6956.17,1233.4 7000,1242 C7065.72,1254.89 7547.67,1232.83 7602,1272 C7696.4,1340.06 7668.75,1403.11 7697,1516 C7723.66,1622.55 7855.43,2421.17 7780,2501 C7739.57,2543.79 7309.53,2524.62 7251,2531 C7121.2,2545.16 7058.62,2491.28 6961,2578 C6889.36,2641.64 6881.58,2766.12 6881.95,2822.07 " fill="none" id="C_0002230624932100089526-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6882.01,2827.27,6885.9069,2818.2249,6881.9529,2822.2703,6877.9074,2818.3163,6882.01,2827.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M5856.34,322.47 C4822.24,344.13 3208.69,393.11 3113,489 C3046.58,555.56 3037.22,2086.01 3040,2180 C3044.22,2322.85 3047.05,2358.58 3059,2501 C3084.09,2799.93 3044.3,2885.12 3132,3172 C3181.05,3332.46 3209.92,3369.86 3308,3506 C3324.9,3529.46 3327.34,3539.65 3353,3553 C3595.26,3679.03 4365.09,3757.64 4773.59,3791.55 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4778.68,3791.97,4770.0421,3787.2385,4773.6972,3791.556,4769.3797,3795.211,4778.68,3791.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M5856.31,322.82 C4811.19,344.96 3169.92,394.57 3070,489 C2826.31,719.3 2901.37,3263.57 3133,3506 C3353.93,3737.24 4306.76,3793.19 4773.86,3806.71 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4778.99,3806.86,4770.1083,3802.6039,4773.9921,3806.7168,4769.8791,3810.6006,4778.99,3806.86" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2948" y="2353.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2958" y="2360.0669">loop_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M7569.86,364.82 C7783.53,391.79 7977.32,431.29 8067,489 C8174.64,558.27 8179.71,611.5 8220,733 C8305.31,990.28 8365.25,2985.03 8169,3172 C8117.06,3221.49 7581.63,3159.27 7524,3202 C7390.49,3300.98 7478.3,3409.18 7395,3553 C7372.51,3591.83 7345.45,3631.9 7318.95,3668.55 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7315.72,3673,7324.2506,3668.0776,7318.6626,3668.9576,7317.7826,3663.3696,7315.72,3673" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6705.69,459.01 C6698.86,552.52 6685.94,662.28 6662,703 C6656.86,711.75 6651.32,720.31 6645.46,728.68 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6642.55,732.77,6651.0294,727.7601,6645.4508,728.6975,6644.5134,723.1188,6642.55,732.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6740.86,459.14 C6747.58,536.57 6743.41,629.71 6703,703 C6698.21,711.68 6693.03,720.15 6687.5,728.4 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6684.4,732.96,6692.766,727.763,6687.2096,728.824,6686.1485,723.2676,6684.4,732.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6746" y="593.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6756" y="600.5669">connectionCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6212.57,459.02 C6203.78,468.42 6195.56,478.4 6188,489 C6138.85,557.93 6139.51,645.55 6159.43,727.98 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6160.64,732.9,6162.3646,723.2033,6159.4408,728.0459,6154.5981,725.1221,6160.64,732.9" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6191" y="593.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="6201" y="600.5669">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6386.32,459.04 C6377.19,468.48 6368.7,478.45 6361,489 C6360.75,489.34 6341.1,607.06 6320.99,727.89 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6320.15,732.92,6325.5636,724.6924,6320.965,727.9869,6317.6706,723.3883,6320.15,732.92" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6364" y="593.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6374" y="600.5669">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6571.97,470.75 C6568.75,476.78 6565.74,482.87 6563,489 C6523.77,576.8 6571.83,615.93 6531,703 C6526.31,713 6521.15,722.91 6515.6,732.7 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6578.45,459.23,6572.0223,462.4988,6572.5675,469.6893,6578.9952,466.4205,6578.45,459.23" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6566" y="593.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="6576" y="600.5669">connection_</text><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5856.33,325.01 C4851.57,349 3309.61,400.07 3214,489 C3050.85,640.76 3152,763.68 3152,986.5 C3152,986.5 3152,986.5 3152,2093 C3152,2275.43 3074.71,2365.62 3197,2501 C3213.68,2519.47 3391.31,2544.9 3416,2548 C3502.05,2558.81 4117.44,2541.26 4196,2578 C4226.26,2592.15 4254.45,2611.94 4280.14,2634.45 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4283.91,2637.79,4279.8238,2628.8288,4280.1667,2634.4753,4274.5202,2634.8182,4283.91,2637.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5856.39,384.88 C5155.63,486.81 4173.34,723.41 3497,1272 C3162.88,1543.01 3290.57,1781.03 3258,2210 C3248.21,2338.96 3173.22,2403.33 3258,2501 C3282.35,2529.05 3552.02,2544.47 3589,2548 C3656.22,2554.42 4134.99,2549.06 4196,2578 C4226.19,2592.32 4254.33,2612.2 4279.99,2634.77 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4283.76,2638.11,4279.6738,2629.1488,4280.0167,2634.7953,4274.3702,2635.1382,4283.76,2638.11" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3305" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="3315" y="1749.5669">messageCallback_</text><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M7569.84,365.98 C7720.77,392.81 7847.23,431.95 7902,489 C8032.26,624.7 7954.13,2049.92 7938.53,2312.9 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7938.22,2318.17,7942.7533,2309.4265,7938.5203,2313.179,7934.7678,2308.946,7938.22,2318.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M6934.6,459.08 C6946.8,468.93 6958.68,478.94 6970,489 C7013.66,527.82 7642.13,1221.79 7672,1272 C7887.29,1633.86 7927.33,2162.97 7934.5,2313.3 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7934.74,2318.49,7938.3236,2309.3163,7934.511,2313.4952,7930.332,2309.6826,7934.74,2318.49" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7775" y="1376.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="7785" y="1383.5669">sslErrorCallback_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M7049.85,465.45 C7064.19,473.23 7078.29,481.09 7092,489 C7258.16,584.84 7321.02,589.22 7448,733 C7616.56,923.86 7504.48,1093.05 7711,1242 C7780.69,1292.27 7839.24,1213.3 7902,1272 C8052.9,1413.15 8298.56,2889.09 8359.16,3265.84 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7038.3,459.24,7041.6822,465.6088,7048.8618,464.9363,7045.4797,458.5675,7038.3,459.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8165" y="2089.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="8175" y="2096.5669">connector_</text><!--MD5=[9d36523b26b5126cf640c54811b76fac]
link C_0001156367011091191681 to C_0000626107303889580949--><path d="M7569.87,360.13 C7742.76,387.02 7891.18,427.66 7955,489 C8445.6,960.53 8141.28,1324.43 8176,2004 C8187.47,2228.51 8257.19,2360.12 8082,2501 C8057.68,2520.56 6985.26,2558.37 6961,2578 C6886.33,2638.42 6880.18,2765.14 6881.47,2821.92 " fill="none" id="C_0001156367011091191681-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6881.62,2827.19,6885.3613,2818.0794,6881.4772,2822.192,6877.3646,2818.3079,6881.62,2827.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8201" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="8211" y="1749.5669">sslCtxPtr_</text><!--MD5=[8f280db49d361387361e76fdd43952a1]
link C_0001156367011091191681 to C_0002033458902174399063--><path d="M7569.63,401.28 C7653.08,424.38 7719.57,453.16 7754,489 C7878.4,618.51 7845.27,861.95 7827.63,951.93 " fill="none" id="C_0001156367011091191681-&gt;C_0002033458902174399063" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7826.65,956.87,7832.3238,948.8197,7827.6223,951.9655,7824.4766,947.264,7826.65,956.87" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7843" y="593.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="7853" y="600.5669">initObj</text><!--MD5=[d852101d9639303932471b7e00db4a4b]
link C_0002033458902174399063 to C_0001156367011091191681--><path d="M7812.48,956.74 C7799.47,905.15 7772.06,795.72 7750,703 C7727.42,608.08 7771.49,556.46 7701,489 C7676.08,465.15 7635.27,444.35 7584.07,426.23 " fill="none" id="C_0002033458902174399063-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7577.2986" cy="423.9015" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7584.8673" x2="7569.73" y1="426.493" y2="421.31"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7574.7072" x2="7579.8901" y1="431.4701" y2="416.3328"/><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M2848.08,84.65 C2855.85,88.41 2863.96,91.71 2872,94 C3016.84,135.24 3398.6,116.34 3549,124 C4330.32,163.78 5219.79,215.52 5856.23,253.66 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.5,90.68,2830.25,75.01,2851.17,78.37,2844.5,90.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M8250.48,3442.19 C8208.52,3467.49 8160.01,3492.05 8112,3506 C7711.97,3622.24 6652.87,3535.6 6239,3583 C5910.48,3620.63 5537.07,3696.52 5294.15,3750.39 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5289.15,3751.5,5298.8034,3753.4524,5294.0309,3750.4153,5297.068,3745.6429,5289.15,3751.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M8250.48,3442.19 C8208.52,3467.49 8160.01,3492.05 8112,3506 C8011.99,3535.06 6342.47,3571.15 6239,3583 C5910.48,3620.63 5537.07,3696.52 5294.15,3750.39 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5289.15,3751.5,5298.8034,3753.4524,5294.0309,3750.4153,5297.068,3745.6429,5289.15,3751.5" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7591" y="3542.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="7601" y="3549.0669">loop_</text><!--MD5=[33283569ac1ba65b658e3f0b917458cb]
link C_0001706043459252151324 to C_0001897340460211641725--><path d="M8258.78,3442.2 C8204.92,3480.22 8138.44,3522.89 8074,3553 C7875.42,3645.78 7635.67,3714.08 7458.66,3757.01 " fill="none" id="C_0001706043459252151324-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7453.71,3758.21,7463.4019,3759.9615,7458.5674,3757.0242,7461.5046,3752.1897,7453.71,3758.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M8266.37,3450.61 C8221.53,3486.83 8167.25,3525.84 8113,3553 C7902.04,3658.61 7641.17,3727.12 7453.6,3766.8 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8276.67,3442.2,8269.4922,3442.8925,8267.3708,3449.7845,8274.5485,3449.092,8276.67,3442.2" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8147" y="3542.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="8157" y="3549.0669">serverAddr_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M8390.25,3442.2 C8412.82,3582.2 8435.91,3859.72 8309,4041 C8033.16,4435.01 7806.55,4387.11 7354,4550 C6934.95,4700.83 6415.02,4780.57 6142.21,4814.72 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6137.01,4815.37,6146.4336,4818.2328,6141.972,4814.7551,6145.4498,4810.2936,6137.01,4815.37" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8286" y="4077.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="8296" y="4084.0669">channelPtr_</text><!--MD5=[61ea569ec755a24e96e52e138419a7b4]
reverse link C_0001706043459252151324 to C_0002045450139033818398--><path d="M8339.2,3454.43 C8305.86,3552.52 8256.49,3697.77 8232.35,3768.8 " fill="none" id="C_0001706043459252151324&lt;-C_0002045450139033818398" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8343.39,3442.11,8337.6703,3446.5015,8339.5241,3453.4702,8345.2438,3449.0787,8343.39,3442.11" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8312" y="3542.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="47" x="8322" y="3549.0669">status_</text><!--MD5=[145d72dfb1a5f1d6b017c25bc885b258]
link C_0002045450139033818398 to C_0001706043459252151324--><path d="M8229.55,3768.71 C8244.66,3714.41 8272.57,3617.45 8301,3536 C8310.08,3510 8320.66,3482.23 8330.88,3456.45 " fill="none" id="C_0002045450139033818398-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="8333.5454" cy="3449.7804" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8330.5809" x2="8336.51" y1="3457.2109" y2="3442.35"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8326.115" x2="8340.9759" y1="3446.8159" y2="3452.745"/><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M2847.44,84.66 C2855.39,88.49 2863.72,91.81 2872,94 C2998.46,127.43 7450.24,120.62 7581,124 C7885.21,131.86 7980.73,46.4 8265,155 C8364.15,192.88 8450,199.87 8450,306 C8450,306 8450,306 8450,2852.5 C8450,2998.88 8417.43,3166.57 8394.65,3265.92 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.03,90.78,2829.79,75.09,2850.71,78.48,2844.03,90.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5454.92,2907.96 C5451.98,3035.37 5428.53,3353.34 5274,3553 C5267.4,3561.52 5260.58,3570.09 5253.59,3578.67 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5250.14,3582.88,5258.9376,3578.4526,5253.3085,3579.0121,5252.749,3573.383,5250.14,3582.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5419.14,2907.78 C5376.28,2975.35 5304.07,3094.05 5254,3202 C5197.84,3323.08 5146.45,3462.85 5107.49,3577.92 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5105.87,3582.69,5112.5436,3575.4469,5107.4726,3577.9538,5104.9657,3572.8827,5105.87,3582.69" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5257" y="3351.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5267" y="3358.5669">loop_</text><!--MD5=[4abc7934a67a73e991ce9337c32880e8]
link C_0001504852334691167098 to C_0000964465843177067305--><path d="M5786.68,2392.82 C5727.01,2475.15 5580.73,2677 5503.92,2782.99 " fill="none" id="C_0001504852334691167098-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5499.6045" cy="2788.9522" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5504.299" x2="5494.91" y1="2782.4744" y2="2795.43"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5506.0823" x2="5493.1267" y1="2793.6467" y2="2784.2577"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M5739.7,1845.04 C5535.6,1912.23 5339.42,2024.12 5230,2210 C5161.89,2325.69 5194.51,2374.7 5149,2501 C5141.24,2522.52 5141.93,2529.85 5128,2548 C5115.11,2564.79 5100.55,2559.1 5091,2578 C5005.68,2746.87 5010.94,3269.43 5022.42,3577.4 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5022.62,3582.82,5026.2822,3573.6773,5022.4339,3577.8235,5018.2878,3573.9751,5022.62,3582.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M5739.71,1844.06 C5525.9,1884.77 5326.55,1938.12 5243,2004 C5163.38,2066.77 5176.61,2113.66 5145,2210 C5097.31,2355.35 5185.05,2436.79 5080,2548 C5042.55,2587.65 4994.52,2534.98 4961,2578 C4811.58,2769.77 4948.12,2882.23 4961,3125 C4969.02,3276.15 4986.91,3445.24 5002.97,3577.72 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5003.59,3582.82,5006.4828,3573.4056,5002.9909,3577.856,4998.5404,3574.3641,5003.59,3582.82" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4967,2847.0664,4971,2851.0664,4967,2855.0664,4963,2851.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4974" y="2856.0669">loop_</text><!--MD5=[cb9f027c3142c905f1a5f676e638bcfe]
link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7184.17,1945.94 C7205.61,1963.68 7225.68,1982.99 7244,2004 C7283.13,2048.88 7333.78,2471.9 7341,2531 C7377.22,2827.57 7372.88,2903.36 7382,3202 C7386.12,3337.05 7416.79,3375.45 7382,3506 C7366.97,3562.4 7338.75,3619.22 7309.3,3668.27 " fill="none" id="C_0000920759514274339356-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7306.63,3672.69,7314.7126,3667.0622,7309.2193,3668.4127,7307.8689,3662.9194,7306.63,3672.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M6926.01,1982.87 C6933.89,1989.76 6941.57,1996.81 6949,2004 C7024.83,2077.37 7039.87,2108.04 7067,2210 C7100.26,2334.98 7095.06,2374.75 7067,2501 C7058.8,2537.88 7040.95,2541.56 7031,2578 C6957.6,2846.77 6984.35,2923.71 6971,3202 C6963.53,3357.82 6914.52,3407.58 6971,3553 C6987.92,3596.57 7016.02,3637.27 7047.03,3672.89 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6915.92,1974.21,6917.8682,1981.1529,6925.0264,1982.0249,6923.0782,1975.082,6915.92,1974.21" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7037,2847.0664,7041,2851.0664,7037,2855.0664,7033,2851.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7044" y="2856.0669">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7008.64,1983.25 C7015.64,1989.99 7022.44,1996.9 7029,2004 C7095.16,2075.53 7085.64,2114.31 7104,2210 C7128.37,2337.02 7118.62,3116.64 7115,3125 C7095.14,3170.88 7052.86,3156.12 7033,3202 C6979.34,3326 6998.37,3375.4 7033,3506 C7048.39,3564.04 7077.7,3622.57 7107.93,3672.62 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6998.96,1974.17,7000.6043,1981.1911,7007.7177,1982.3738,7006.0735,1975.3526,6998.96,1974.17" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7125,2847.0664,7129,2851.0664,7125,2855.0664,7121,2851.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7132" y="2856.0669">peerAddr_</text><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M6702.87,1974.04 C6709.06,1983.86 6714.8,1993.85 6720,2004 C6822.05,2203.18 6757.41,2281.48 6801,2501 C6824.86,2621.16 6860.42,2762.85 6875.65,2822.16 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6876.97,2827.31,6878.6072,2817.5982,6875.7271,2822.4669,6870.8583,2819.5868,6876.97,2827.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M5739.85,1773.67 C5331.42,1804.26 4873.28,1868.63 4724,2004 C4664.27,2058.16 4701.37,2102.25 4680,2180 C4676.31,2193.42 4673.43,2196.29 4671,2210 C4657.88,2284.09 4675.51,2476.86 4651,2548 C4639.11,2582.51 4622.1,2616.7 4602.86,2648.98 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4600.25,2653.32,4608.3104,2647.6605,4602.8225,2649.0325,4601.4505,2643.5446,4600.25,2653.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M5726.8,1798.72 C5369.94,1836.97 4988.06,1900.67 4846,2004 C4641.47,2152.77 4782.82,2317.38 4679,2548 C4658.67,2593.17 4630.19,2637.59 4600.01,2677.88 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5739.76,1797.34,5733.3715,1793.9952,5727.8269,1798.6058,5734.2154,1801.9506,5739.76,1797.34" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4732,2351.0664,4736,2355.0664,4732,2359.0664,4728,2355.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="4739" y="2360.0669">readBuffer_</text><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M5739.71,1820.64 C5445.1,1862.26 5145.71,1922.44 5026,2004 C4828.67,2138.44 4945.36,2296.56 4822,2501 C4766.84,2592.42 4680.74,2674.43 4604.43,2736 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4600.34,2739.28,4609.8587,2736.7514,4604.2345,2736.1443,4604.8416,2730.5201,4600.34,2739.28" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4903,2351.0664,4907,2355.0664,4903,2359.0664,4899,2355.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="4910" y="2360.0669">recvMsgCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6111.33,1515.95 C6104.67,1506.3 6098.52,1496.32 6093,1486 C6052.59,1410.5 6067.27,1325.18 6101.88,1246.78 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6103.98,1242.11,6096.6485,1248.6864,6101.9347,1246.6725,6103.9485,1251.9588,6103.98,1242.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6125.25,1515.59 C6118.95,1506.03 6113.17,1496.17 6108,1486 C6069.86,1411.02 6081.22,1325.54 6111.38,1246.85 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6113.2,1242.16,6106.2059,1249.0941,6111.385,1246.8189,6113.6602,1251.9981,6113.2,1242.16" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6114,1374.5664,6118,1378.5664,6114,1382.5664,6110,1378.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6121" y="1383.5669">recvMsgCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6286.27,1515.76 C6282.03,1505.93 6278.24,1496 6275,1486 C6250.59,1410.73 6244.04,1325.62 6245.68,1247.35 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6245.8,1242.21,6241.5954,1251.1162,6245.6857,1247.2087,6249.5933,1251.2991,6245.8,1242.21" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6281,1374.5664,6285,1378.5664,6281,1382.5664,6277,1378.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6288" y="1383.5669">connectionCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6461.04,1515.71 C6456.03,1437.27 6445.14,1349.69 6423,1272 C6420.68,1263.85 6418.12,1255.67 6415.35,1247.48 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6413.6,1242.38,6412.7222,1252.1897,6415.2154,1247.1119,6420.2932,1249.605,6413.6,1242.38" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6464,1374.5664,6468,1378.5664,6464,1382.5664,6460,1378.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="6471" y="1383.5669">closeCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6570.52,1515.96 C6593.58,1436.83 6602.46,1348.75 6570,1272 C6566.4,1263.49 6562.41,1255.11 6558.07,1246.87 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6555.62,1242.3,6556.3308,1252.1232,6557.9752,1246.7106,6563.3878,1248.3549,6555.62,1242.3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6597,1374.5664,6601,1378.5664,6597,1382.5664,6593,1378.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6604" y="1383.5669">writeCompleteCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6749.1,1515.81 C6754.96,1506.13 6760.29,1496.19 6765,1486 C6804.88,1399.66 6812.41,1354.45 6765,1272 C6760.01,1263.32 6754.64,1254.89 6748.93,1246.69 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-5" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6745.73,1242.16,6747.6549,1251.8189,6748.6145,1246.244,6754.1894,1247.2037,6745.73,1242.16" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6803,1374.5664,6807,1378.5664,6803,1382.5664,6799,1378.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6810" y="1383.5669">highWaterMarkCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M6062.44,1260.44 C6030.76,1335 6019.93,1414.86 6058,1486 C6063.52,1496.32 6069.67,1506.3 6076.34,1515.95 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6056.1,1257.47,6070.69,1242.11,6068.86,1263.22,6056.1,1257.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M6093.31,1974.02 C6085.37,1983.7 6077.9,1993.7 6071,2004 C5945.76,2190.99 6110.42,2322.01 5974,2501 C5927.37,2562.18 5884.5,2537.67 5819,2578 C5711.57,2644.14 5596.41,2733.9 5525.04,2792.01 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5520.83,2795.45,5530.3374,2792.8791,5524.7106,2792.297,5525.2927,2786.6702,5520.83,2795.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M6266.43,1974.19 C6211.74,2046.2 6156.1,2128.35 6115,2210 C6054.31,2330.58 6111.59,2395.01 6028,2501 C5966.7,2578.73 5908.71,2536.16 5819,2578 C5701.51,2632.8 5584.96,2729.44 5516.5,2791.68 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5512.46,2795.36,5521.8066,2792.2549,5516.1558,2791.9924,5516.4184,2786.3416,5512.46,2795.36" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6118" y="2353.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="6128" y="2360.0669">timingWheelWeakPtr_</text><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M7184.23,1920.72 C7274.46,1940.02 7365.68,1958.32 7453,1974 C7554.9,1992.29 7596.65,1948.43 7684,2004 C7762.23,2053.77 7742.02,2104.62 7796,2180 C7830.01,2227.49 7872.37,2279.4 7901.54,2314.15 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7905.03,2318.31,7902.3066,2308.8452,7901.815,2314.4806,7896.1796,2313.9891,7905.03,2318.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M7184.19,1881.24 C7315.77,1916.88 7428.15,1958.31 7481,2004 C7545.07,2059.38 7486.83,2128.43 7554,2180 C7634.37,2241.71 7688.31,2166.88 7780,2210 C7830.88,2233.93 7876.44,2280.53 7905,2314.36 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7908.39,2318.42,7905.6839,2308.9502,7905.1821,2314.5847,7899.5475,2314.0829,7908.39,2318.42" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7560,2087.5664,7564,2091.5664,7560,2095.5664,7556,2091.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="7567" y="2096.5669">sslErrorCallback_</text><!--MD5=[6d9da86e50250c04b64c8deb4277505b]
link C_0000920759514274339356 to C_0000943181451128697972--><path d="M6035.19,1974.08 C6017.51,1984.1 6000.05,1994.1 5983,2004 C5833.48,2090.82 5797.8,2115.51 5653,2210 C5620.07,2231.49 5584.64,2255.34 5552.34,2277.37 " fill="none" id="C_0000920759514274339356-&gt;C_0000943181451128697972" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5548.01,2280.33,5557.6996,2278.5659,5552.1414,2277.5138,5553.1936,2271.9556,5548.01,2280.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[befbe2e4b05f5ea22fe0bd09e20e9619]
reverse link C_0000920759514274339356 to C_0000943181451128697972--><path d="M5727.42,1901.08 C5636.38,1931.84 5562.46,1966.39 5526,2004 C5454.42,2077.84 5439.7,2201.21 5438.34,2280.16 " fill="none" id="C_0000920759514274339356&lt;-C_0000943181451128697972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5739.78,1896.95,5732.8223,1895.0551,5728.3971,1900.7487,5735.3548,1902.6436,5739.78,1896.95" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5532,2087.5664,5536,2091.5664,5532,2095.5664,5528,2091.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="97" x="5539" y="2096.5669">writeBufferList_</text><!--MD5=[0769db58c70be7c62657cf0b927eda3c]
link C_0000943181451128697972 to C_0000920759514274339356--><path d="M5548.02,2280.43 C5581.9,2252.39 5616.78,2217.98 5641,2180 C5684.79,2111.34 5635.61,2062.76 5692,2004 C5703.49,1992.03 5715.55,1980.61 5728.11,1969.72 " fill="none" id="C_0000943181451128697972-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5733.6668" cy="1965.0304" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5727.5537" x2="5739.78" y1="1970.1907" y2="1959.87"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5728.5065" x2="5738.8272" y1="1958.9172" y2="1971.1435"/><!--MD5=[82dc8be4a2b591773f6b2c476c4b4dcb]
link C_0000920759514274339356 to C_0000054046898195558381--><path d="M7184.11,1907.64 C7226.35,1934.96 7265.28,1966.84 7299,2004 C7352.65,2063.13 7292.4,2112.47 7335,2180 C7369.95,2235.4 7429.17,2279.61 7478.91,2309.68 " fill="none" id="C_0000920759514274339356-&gt;C_0000054046898195558381" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7483.38,2312.36,7477.7205,2304.2996,7479.0925,2309.7875,7473.6046,2311.1595,7483.38,2312.36" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7338" y="2089.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="80" x="7348" y="2096.5669">kickoffEntry_</text><!--MD5=[e31f2bbddd3559769db361cecb5ae270]
link C_0000054046898195558381 to C_0000920759514274339356--><path d="M7541.07,2312.35 C7521.46,2277.75 7494.59,2226.98 7477,2180 C7448.72,2104.49 7489.59,2061.43 7433,2004 C7391.63,1962.01 7304.41,1924.21 7198.45,1891.31 " fill="none" id="C_0000054046898195558381-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7191.7103" cy="1889.2493" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7199.3607" x2="7184.06" y1="1891.5886" y2="1886.91"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7189.371" x2="7194.0496" y1="1896.8996" y2="1881.599"/><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M5726.84,1819.78 C5475.27,1859.46 5234.72,1918.39 5146,2004 C4982.77,2161.5 5168.85,2321.64 5030,2501 C5029.29,2501.91 4883.8,2577.17 4883,2578 C4695,2771.99 4845.41,2979.2 4618,3125 C4549.75,3168.76 3230.58,3116.93 3159,3155 C3107.92,3182.17 2697.21,3785.26 2473.33,4117.7 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5739.97,1817.73,5733.4227,1814.708,5728.1149,1819.5894,5734.6623,1822.6114,5739.97,1817.73" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3162" y="3161.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="3172" y="3168.0669">lastTimingWheelUpdateTime_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M6573.53,1986.52 C6603.88,2057.52 6634.96,2136.04 6659,2210 C6710.89,2369.64 6723.83,2411.35 6744,2578 C6793.56,2987.49 6820.31,3103.09 6732,3506 C6625.38,3992.47 6623.47,4151.34 6325,4550 C6274.31,4617.71 6203.54,4677.62 6137.46,4724.85 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6568.27,1974.27,6566.9692,1981.3628,6573.0161,1985.2915,6574.3169,1978.1987,6568.27,1974.27" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6788,3349.5664,6792,3353.5664,6788,3357.5664,6784,3353.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="6795" y="3358.5669">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M7183.79,1984.12 C7189.38,1990.57 7194.79,1997.19 7200,2004 C7275.8,2102.94 7251.48,3000.72 7242,3125 C7240.1,3149.96 7237.03,3176.32 7233.5,3201.91 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7174.87,1974.12,7175.8809,1981.2599,7182.8604,1983.0729,7181.8495,1975.933,7174.87,1974.12" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7258,2535.0664,7262,2539.0664,7258,2543.0664,7254,2539.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="7265" y="2544.0669">socketPtr_</text><!--MD5=[f04e648bd4bc15b0adcc144018bc0cf3]
reverse link C_0000920759514274339356 to C_0000198777833674414676--><path d="M6777.69,1984.65 C6782.33,1991 6786.78,1997.45 6791,2004 C6834.64,2071.67 6804.13,2105.22 6834,2180 C6851.87,2224.75 6879.54,2271.96 6901.24,2305.98 " fill="none" id="C_0000920759514274339356&lt;-C_0000198777833674414676" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6769.7,1974.06,6770.1174,1981.259,6776.9232,1983.6426,6776.5058,1976.4436,6769.7,1974.06" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6840,2087.5664,6844,2091.5664,6840,2095.5664,6836,2091.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="47" x="6847" y="2096.5669">status_</text><!--MD5=[22a90a2ecb431ee553f948496547cf12]
link C_0000198777833674414676 to C_0000920759514274339356--><path d="M6942.09,2305.89 C6951.41,2233.87 6958.59,2097.28 6899,2004 C6895.2,1998.04 6891.2,1992.21 6887.03,1986.49 " fill="none" id="C_0000198777833674414676-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6882.4774" cy="1980.5242" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6887.3249" x2="6877.63" y1="1986.8883" y2="1974.16"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6876.1133" x2="6888.8416" y1="1985.3716" y2="1975.6767"/><!--MD5=[df51948c2c788d1dd8291346923680ae]
reverse link C_0000920759514274339356 to C_0001847734957165426408--><path d="M6387.15,1986.97 C6376.51,2049.94 6373.01,2117.65 6386,2180 C6393.14,2214.29 6407.4,2250.1 6421.66,2280.3 " fill="none" id="C_0000920759514274339356&lt;-C_0001847734957165426408" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6389.45,1974.02,6384.4632,1979.2288,6387.3533,1985.8354,6392.3401,1980.6266,6389.45,1974.02" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6389" y="2089.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="109" x="6399" y="2096.5669">sslEncryptionPtr_</text><!--MD5=[5e1632f2bf0a645d20b418a23d7374d8]
link C_0001847734957165426408 to C_0000920759514274339356--><path d="M6488.72,2280.37 C6498.43,2249.74 6508.19,2213.59 6513,2180 C6521.84,2118.21 6519.74,2051.3 6512.8,1988.96 " fill="none" id="C_0001847734957165426408-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6511.9778" cy="1982.0048" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6512.9157" x2="6511.04" y1="1989.9497" y2="1974.06"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6504.033" x2="6519.9227" y1="1982.9427" y2="1981.067"/><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M6956.32,1511.88 C6962.6,1503.55 6968.51,1494.92 6974,1486 C7207.1,1107.52 7086.08,890.33 6895,489 C6890.12,478.74 6884.4,468.73 6878.06,459.02 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6953.2,1515.95,6961.8382,1511.219,6956.2319,1511.9742,6955.4768,1506.3679,6953.2,1515.95" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7107" cy="988.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="7114" y="992.0669">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M5734.73,1773.26 C5293.61,1803.67 4783.35,1867.98 4610,2004 C4543.77,2055.97 4602.89,2124.05 4540,2180 C4528.09,2190.6 4515.6,2200.56 4502.63,2209.93 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5739.92,1772.91,5730.6668,1769.5369,5734.9318,1773.253,5731.2156,1777.518,5739.92,1772.91" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4616" cy="2092.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4623" y="2096.5669">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M2847.45,84.62 C2855.4,88.45 2863.73,91.78 2872,94 C3125.05,161.78 7347.14,49.67 7587,155 C7773.83,237.05 7816.35,303.8 7902,489 C7995,690.09 8063.67,1334.5 7902,1486 C7848.27,1536.35 7312.63,1503.89 7240,1516 C7221.52,1519.08 7202.85,1522.46 7184.08,1526.09 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.04,90.73,2829.81,75.03,2850.72,78.43,2844.04,90.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ea19712c8d9adeb5c03c9f978ae0be12]
link C_0000054046898195558381 to C_0002230624932100089526--><path d="M7602.58,2312.38 C7629,2278.99 7662.5,2229.81 7677,2180 C7734.21,1983.46 7677.26,1405.39 7522,1272 C7477.93,1234.14 7056.97,1253.4 7000,1242 C6957.82,1233.56 6914.77,1223.2 6871.73,1211.54 " fill="none" id="C_0000054046898195558381-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6866.75,1210.18,6874.3835,1216.4033,6871.5745,1211.4932,6876.4846,1208.6841,6866.75,1210.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ea19712c8d9adeb5c03c9f978ae0be12]
link C_0000054046898195558381 to C_0002230624932100089526--><path d="M7554.08,2312.26 C7544.2,2276.97 7529.89,2225.28 7518,2180 C7497.53,2102.01 7503.66,2078.98 7474,2004 C7329.06,1637.64 7298.49,1495.45 6974,1272 C6941.6,1249.69 6907.19,1228.71 6871.67,1209.04 " fill="none" id="C_0000054046898195558381-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6866.88,1206.4,6872.8353,1214.2444,6871.2602,1208.8112,6876.6933,1207.2361,6866.88,1206.4" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7462" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="7472" y="1749.5669">conn_</text><!--MD5=[fe7468a0193401b27ab9a295fe84374e]
link C_0000943181451128697972 to C_0001289495020269537351--><path d="M5246.94,2430.54 C5145.44,2471.02 5019.96,2523.87 4911,2578 C4806.61,2629.87 4693.51,2695.29 4604.54,2749.03 " fill="none" id="C_0000943181451128697972-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4600.06,2751.74,4609.8325,2750.5156,4604.3412,2749.157,4605.6997,2743.6657,4600.06,2751.74" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5001" cy="2540.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="5008" y="2544.0669">msgBuffer_</text><!--MD5=[3073ed382be2d73daf0b081cdabecc25]
reverse link C_0001847734957165426408 to C_0001515554933771522998--><path d="M6359.77,2438.18 C6327.87,2460.87 6291.67,2483.93 6256,2501 C6212.6,2521.76 6197.01,2514.01 6152,2531 C6135.45,2537.25 6132.85,2542.6 6116,2548 C6044.6,2570.87 6004.55,2526.57 5950,2578 C5890.68,2633.93 5880.73,2733.33 5880.94,2795.37 " fill="none" id="C_0001847734957165426408&lt;-C_0001515554933771522998" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6370.41,2430.51,6363.2036,2430.7692,6360.6711,2437.521,6367.8775,2437.2618,6370.41,2430.51" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6158" cy="2540.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="6165" y="2544.0669">statusOfSSL_</text><!--MD5=[5a517b2c516c5971b1ce8bfa34a9a837]
link C_0001847734957165426408 to C_0000626107303889580949--><path d="M6578.81,2430.74 C6633.77,2469.77 6697.33,2521.27 6744,2578 C6808.71,2656.67 6854.49,2770.43 6873.37,2822.53 " fill="none" id="C_0001847734957165426408-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6875.11,2827.38,6875.8103,2817.5561,6873.4093,2822.6781,6868.2873,2820.2772,6875.11,2827.38" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6717" cy="2540.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="6724" y="2544.0669">sslCtxPtr_</text><!--MD5=[b6d228dfc1a4cc5886f8685e79cf808d]
reverse link C_0001847734957165426408 to C_0001248784923817560723--><path d="M6442.34,2443.69 C6429.16,2481.83 6407.65,2523.4 6373,2548 C6318.01,2587.04 6121.49,2533.29 6071,2578 C5998.05,2642.6 6002.05,2773.75 6007.14,2827.12 " fill="none" id="C_0001847734957165426408&lt;-C_0001248784923817560723" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6446.49,2430.91,6440.8319,2435.3806,6442.7825,2442.3229,6448.4405,2437.8523,6446.49,2430.91" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6396" cy="2540.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="6403" y="2544.0669">sslPtr_</text><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M7207,3506.21 C7207,3558.22 7207,3616.26 7207,3667.63 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7207,3672.9,7211,3663.9,7207,3667.9,7203,3663.9,7207,3672.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M2847.44,84.66 C2855.39,88.49 2863.72,91.81 2872,94 C2997.63,127.21 7420.22,117.5 7550,124 C7738.37,133.43 8379,117.39 8379,306 C8379,306 8379,306 8379,2093 C8379,2297.56 8291.87,2339.75 8166,2501 C8040.36,2661.97 7602.65,3029.49 7364.42,3225.06 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.03,90.78,2829.79,75.09,2850.71,78.48,2844.03,90.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M3319.81,2501.23 C3305.3,2510.73 3293.78,2520.65 3286,2531 C3127.38,2742.03 3203.86,2874.1 3286,3125 C3291.14,3140.71 3301.56,3139.77 3308,3155 C3377.81,3320.23 3247.37,3426.96 3375,3553 C3567.98,3743.58 4357.1,3793.42 4773.64,3806.43 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4778.83,3806.59,4769.9601,3802.3093,4773.8325,3806.4329,4769.7088,3810.3053,4778.83,3806.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M3419.53,2501.01 C3392.12,2523.12 3367.72,2548.61 3348,2578 C3280.26,2678.93 3280.15,3024.14 3348,3125 C3669.15,3602.39 4386.32,3747.72 4773.74,3791.85 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4778.85,3792.43,4770.3515,3787.4525,4773.8811,3791.8731,4769.4605,3795.4028,4778.85,3792.43" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3383" y="3161.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3393" y="3168.0669">loop_</text><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M4013.05,2501.22 C4033.03,2518.85 4054.57,2535.13 4077,2548 C4124.31,2575.14 4159.77,2537.23 4196,2578 C4358.84,2761.26 4086.33,2959.29 4267,3125 C4414.53,3260.31 5891.33,3106.01 6067,3202 C6212,3281.23 6159.46,3394.06 6281,3506 C6311.33,3533.94 6323.24,3536.43 6361,3553 C6554.36,3637.87 6784.11,3706.01 6955.35,3750.9 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6960.4,3752.22,6952.7107,3746.0657,6955.5639,3750.9503,6950.6793,3753.8035,6960.4,3752.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M3877.39,2501.19 C3876.84,2511.27 3876.36,2521.29 3876,2531 C3872.96,2612.7 3875.74,2706.21 3878.65,2770.86 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3878.89,2776.24,3882.4736,2767.0663,3878.661,2771.2452,3874.482,2767.4326,3878.89,2776.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M3887.24,2501.05 C3886.17,2589.19 3884.85,2698.5 3883.96,2771.15 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3883.9,2776.32,3888.0026,2767.3663,3883.9571,2771.3203,3880.0031,2767.2749,3883.9,2776.32" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3889" y="2537.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="3899" y="2544.0669">loopPoolPtr_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M4278.99,2209.86 C4293.57,2200.44 4307.64,2190.49 4321,2180 C4409.65,2110.36 4427.68,2078.89 4469,1974 C4526.64,1827.67 4449.8,1385.19 4559,1272 C4712.39,1113 5250.47,1043.15 5684.26,1012.47 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5689.36,1012.12,5680.1068,1008.7469,5684.3718,1012.463,5680.6556,1016.728,5689.36,1012.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M3812.8,2197.52 C3706.09,1952.7 3553.94,1485.9 3827,1272 C3970.79,1159.36 5010.98,1070.97 5689.27,1024.52 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3818.16,2209.73,3819.4085,2202.6278,3813.3329,2198.7437,3812.0843,2205.8459,3818.16,2209.73" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3731" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="3741" y="1749.5669">connSet_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M3937.06,2209.59 C3959.47,2138.99 3985.44,2052.58 4005,1974 C4085.5,1650.53 3983.85,1444.64 4269,1272 C4500.74,1131.7 5179.28,1057.65 5684.04,1020.89 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5689.23,1020.51,5679.9577,1017.1897,5684.2438,1020.8815,5680.552,1025.1676,5689.23,1020.51" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4072" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="4082" y="1749.5669">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M3868.96,2209.87 C3842.81,2004.17 3805.62,1638.47 3853,1516 C3905.9,1379.26 3944.97,1339.74 4075,1272 C4346.55,1130.53 5128.96,1055.48 5683.91,1018.89 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5689.2,1018.54,5679.9564,1015.1405,5684.2108,1018.8688,5680.4825,1023.1232,5689.2,1018.54" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3856" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="3866" y="1749.5669">connectionCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M4059.3,2209.99 C4124.95,2144.76 4193.97,2062.5 4235,1974 C4321.35,1787.75 4214.39,1704.81 4295,1516 C4349.62,1388.07 4370.68,1341.8 4491,1272 C4689.76,1156.69 5244.97,1080.59 5684.31,1036.54 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5689.47,1036.02,5680.1149,1032.9407,5684.4951,1036.5203,5680.9155,1040.9006,5689.47,1036.02" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4298" y="1742.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="4308" y="1749.5669">writeCompleteCallback_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M4038.87,2501.12 C4062.71,2518.93 4088.09,2535.29 4114,2548 C4172.3,2576.59 4203.06,2541.84 4257,2578 C4264.81,2583.24 4272.39,2588.93 4279.72,2594.99 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4283.77,2598.4,4279.4491,2589.5496,4279.9406,2595.185,4274.3052,2595.6766,4283.77,2598.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M4066.44,2501.2 C4092.51,2518.55 4119.78,2534.77 4147,2548 C4192.58,2570.15 4215.77,2548.54 4257,2578 C4264.85,2583.61 4272.47,2589.66 4279.86,2596.08 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4283.94,2599.68,4279.8538,2590.7188,4280.1967,2596.3653,4274.5502,2596.7082,4283.94,2599.68" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4150" y="2537.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="4160" y="2544.0669">recvMessageCallback_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M4515.61,2494.08 C4635.38,2515.75 4760.15,2535.2 4878,2548 C5009.82,2562.32 5946.59,2532.12 6071,2578 C6191.68,2622.5 6301.26,2729.4 6360.59,2795.31 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4502.54,2491.7,4507.7262,2496.7103,4514.3458,2493.8501,4509.1596,2488.8398,4502.54,2491.7" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4881" y="2537.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="4891" y="2544.0669">acceptorPtr_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M4233.52,2505.37 C4283.9,2522.38 4335.74,2537.4 4386,2548 C4521.84,2576.66 4877.32,2537.14 5010,2578 C5158.05,2623.59 5306.87,2729.86 5389.37,2795.4 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4221.09,2501.12,4225.4755,2506.8443,4232.4462,2504.9977,4228.0607,2499.2735,4221.09,2501.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4389" y="2537.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="4399" y="2544.0669">timingWheelMap_</text><!--MD5=[39c28ec758c34923c0a34ba81bb41a0b]
reverse link C_0001423170502760786790 to C_0001829426703641465340--><path d="M3636.91,2509.75 C3612.47,2530.78 3589.54,2553.6 3570,2578 C3509.32,2653.75 3477.57,2767.16 3465.23,2820.61 " fill="none" id="C_0001423170502760786790&lt;-C_0001829426703641465340" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3647.1,2501.17,3639.9339,2501.9745,3637.9204,2508.8988,3645.0865,2508.0943,3647.1,2501.17" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3615" y="2537.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="3625" y="2544.0669">initObj</text><!--MD5=[1649a1f296a88b0de2efee46bd57fcfa]
link C_0001829426703641465340 to C_0001423170502760786790--><path d="M3464.39,2820.68 C3476.72,2759.82 3512.03,2619.61 3589,2531 C3594.82,2524.3 3600.97,2517.79 3607.38,2511.47 " fill="none" id="C_0001829426703641465340-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3612.6028" cy="2506.5324" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3606.7956" x2="3618.41" y1="2512.0348" y2="2501.03"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3607.1004" x2="3618.1052" y1="2500.7252" y2="2512.3396"/><!--MD5=[439a59fd46d4733c0760632f943ec316]
link C_0001423170502760786790 to C_0000626107303889580949--><path d="M4502.61,2479.69 C4559.37,2488.12 4616.14,2495.45 4671,2501 C4846.25,2518.73 6085.49,2486.8 6256,2531 C6271.59,2535.04 6272.51,2543.6 6288,2548 C6385.68,2575.77 6659.19,2522.14 6744,2578 C6830.97,2635.28 6866.26,2764.68 6878.01,2822.12 " fill="none" id="C_0001423170502760786790-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6879.01,2827.12,6881.1565,2817.5079,6878.0239,2822.2182,6873.3136,2819.0856,6879.01,2827.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6291" y="2537.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="6301" y="2544.0669">sslCtxPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M2852.52,84.68 C2859,88.02 2865.58,91.2 2872,94 C2911.81,111.36 2923.69,110.6 2965,124 C3213.13,204.49 3523,45.14 3523,306 C3523,306 3523,306 3523,1746 C3523,1923.98 3639.41,2094.75 3740.93,2209.83 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2849.05,90.76,2834.79,75.09,2855.71,78.45,2849.05,90.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1df2832d67af377b0616a9604f38e5b8]
link C_0000741797986785144168 to C_0001897340460211641725--><path d="M7645.78,3391.1 C7616.32,3432.21 7565.06,3500.46 7514,3553 C7477.49,3590.57 7435.91,3628.34 7395.41,3662.96 " fill="none" id="C_0000741797986785144168-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7389.8355" cy="3667.6888" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7395.931" x2="7383.74" y1="3662.5076" y2="3672.87"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7395.0167" x2="7384.6543" y1="3673.7843" y2="3661.5933"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M6357.58,2907.75 C6296.91,2971.62 6187.63,3074.44 6071,3125 C5981.27,3163.9 5942.85,3116.37 5853,3155 C5788.92,3182.55 5508.41,3411.91 5293.35,3591.76 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5289.23,3595.2,5298.7008,3592.4973,5293.0664,3591.9934,5293.5703,3586.3591,5289.23,3595.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M6348.63,2907.82 C6221.67,3026.46 5908.16,3310.45 5614,3506 C5513.29,3572.95 5396.22,3636.88 5293.74,3688.77 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5289.18,3691.07,5299.0169,3690.5851,5293.6435,3688.8168,5295.4119,3683.4435,5289.18,3691.07" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6017,3349.5664,6021,3353.5664,6017,3357.5664,6013,3353.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6024" y="3358.5669">loop_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M6381.72,2907.68 C6324.89,3040.95 6205.38,3381.95 6384,3553 C6537.89,3700.37 6774.97,3763.62 6955.21,3790.74 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6960.26,3791.49,6951.9544,3786.1968,6955.3155,3790.7469,6950.7655,3794.108,6960.26,3791.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M6388.13,2920.54 C6356.99,3048.51 6310.08,3328.13 6437,3506 C6556.64,3673.67 6783.49,3749.19 6960.1,3783.19 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6391.27,2907.9,6385.9381,2912.755,6388.3689,2919.544,6393.7008,2914.6891,6391.27,2907.9" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6443,3349.5664,6447,3353.5664,6443,3357.5664,6439,3353.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="6450" y="3358.5669">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M6420.69,2907.8 C6437.64,2976.63 6467.17,3097.82 6491,3202 C6521.82,3336.78 6470.83,3397.88 6557,3506 C6656.15,3630.39 6817.96,3706.56 6955.33,3751.67 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6960.21,3753.26,6952.9068,3746.6522,6955.4595,3751.7003,6950.4113,3754.253,6960.21,3753.26" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6563,3349.5664,6567,3353.5664,6563,3357.5664,6559,3353.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="6570" y="3358.5669">newConnectionCallback_</text><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M6497.33,2915.17 C6579.31,2971.49 6704,3055.74 6815,3125 C6891.31,3172.61 6977.59,3223.14 7049.73,3264.5 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6486.55,2907.76,6489.2259,2914.4562,6496.4362,2914.5617,6493.7603,2907.8655,6486.55,2907.76" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6895,3159.0664,6899,3163.0664,6895,3167.0664,6891,3163.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="6902" y="3168.0669">sock_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M6373.68,2919.53 C6341.67,2988.38 6296.02,3099.66 6281,3202 C6194.01,3794.9 6492.69,4001.21 6252,4550 C6226.5,4608.13 6182.99,4660.27 6137.02,4703.58 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6379.28,2907.6,6373.107,2911.3275,6374.1736,2918.4593,6380.3466,2914.7318,6379.28,2907.6" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6349,3807.5664,6353,3811.5664,6349,3815.5664,6345,3811.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="6356" y="3816.5669">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M2847.44,84.66 C2855.39,88.49 2863.72,91.81 2872,94 C2992.12,125.77 7220.85,118.99 7345,124 C7531.14,131.52 7604.99,56.33 7763,155 C7908.8,246.04 7896.28,328.57 7958,489 C8157.05,1006.42 8018.61,1620.78 8021,2210 C8021.53,2339.33 8111.41,2408.52 8021,2501 C7969.69,2553.49 6766.86,2500.69 6700,2531 C6577.82,2586.4 6483.73,2719.55 6437.85,2795.32 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.03,90.78,2829.79,75.08,2850.71,78.47,2844.03,90.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M2847.44,84.67 C2855.39,88.5 2863.72,91.81 2872,94 C3008.97,130.17 7830.37,120.52 7972,124 C8131.21,127.91 8545.53,83.83 8688,155 C8765.69,193.81 8812,219.16 8812,306 C8812,306 8812,306 8812,4837.5 C8812,5034.93 5832.87,5152.49 4887.34,5184.83 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2844.03,90.78,2829.79,75.09,2850.71,78.48,2844.03,90.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M4792.71,4867.28 C4763.03,4918.39 4701.26,5024.78 4656.24,5102.32 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4653.57,5106.91,4661.5493,5101.1367,4656.0814,5102.5865,4654.6316,5097.1185,4653.57,5106.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1539dbdfbe16f81827b40dadcd14d4c5]
link C_0000253546837558644771 to C_0001897340460211641725--><path d="M7936.06,3391.03 C7908.31,3423.94 7863.94,3472.44 7818,3506 C7710.71,3584.38 7580.26,3652.58 7467.5,3704.5 " fill="none" id="C_0000253546837558644771-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7461.1032" cy="3707.4183" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7468.3765" x2="7453.83" y1="3704.0867" y2="3710.75"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7464.4349" x2="7457.7716" y1="3714.6916" y2="3700.1451"/><!--MD5=[3b070bf8e03b5bc8dd457a00435e48a3]
@startuml
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
}
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
{static} +date() : const Date
{static} +now() : const Date
{static} +timezoneOffset() : int64_t
+after(double second) const : const Date
+roundSecond() const : const Date
+roundDay() const : const Date
+~Date() : void
+operator==(const Date & date) const : bool
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
+secondsSinceEpoch() const : int64_t
+tmStruct() const : struct tm
+toFormattedString(bool showMicroseconds) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbStringLocal() const : std::string
+toDbString() const : std::string
{static} +fromDbStringLocal(const std::string & datetime) : Date
{static} +fromDbString(const std::string & datetime) : Date
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+isSameSecond(const Date & date) const : bool
+swap(Date & that) : void
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+output(const char * msg, const uint64_t len) : void
+flush() : void
+startLogging() : void
+setFileSizeLimit(uint64_t limit) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+~AsyncFileLogger() : void
+AsyncFileLogger() : void
}
class "AsyncFileLogger::LoggerFile" as C_0000923080849258138681
class C_0000923080849258138681 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName) : void
+~LoggerFile() : void
+writeLog(const StringPtr buf) : void
+getLength() : uint64_t
+operator bool() const : bool
+flush() : void
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue<T>() : void
+~MpscQueue<T>() : void
+enqueue(T && input) : void
+enqueue(const T & input) : void
+dequeue(T & output) : bool
+empty() : bool
}
class "MpscQueue<std::function<>>" as C_0000913287266699074255
class C_0000913287266699074255 {
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
+loop() : void
+quit() : void
+assertInLoopThread() : void
+resetTimerQueue() : void
+resetAfterFork() : void
+isInLoopThread() const : bool
{static} +getEventLoopOfCurrentThread() : EventLoop *
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+runAt(const Date & time, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+invalidateTimer(TimerId id) : void
+moveToCurrentThread() : void
+updateChannel(Channel * chl) : void
+removeChannel(Channel * chl) : void
+index() : size_t
+setIndex(size_t index) : void
+isRunning() : bool
+isCallingFunctions() : bool
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+runInLoop(Functor && f) : void
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
+wait() : void
+getLoop() const : EventLoop *
+run() : void
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
+start() : void
+wait() : void
+size() : size_t
+getNextLoop() : EventLoop *
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
+assertInLoopThread() : void
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +updateChannel(Channel * channel) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{static} +newPoller(EventLoop * loop) : Poller *
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setCloseCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+fd() const : int
+events() const : int
+revents() const : int
+isNoneEvent() const : bool
+disableAll() : void
+remove() : void
+ownerLoop() : EventLoop *
+enableReading() : void
+disableReading() : void
+enableWriting() : void
+disableWriting() : void
+isWriting() const : bool
+isReading() const : bool
+updateEvents(int events) : void
+tie(const std::shared_ptr<void> & obj) : void
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
+peek() const : const char *
+beginWrite() const : const char *
+beginWrite() : char *
+peekInt8() const : uint8_t
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+read(size_t len) : std::string
+readInt8() : uint8_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+swap(MsgBuffer & buf) : void
+readableBytes() const : size_t
+writableBytes() const : size_t
+append(const MsgBuffer & buf) : void
+append(const char * buf, size_t len) : void
+append(const std::string & buf) : void
+appendInt8(const uint8_t b) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+addInFront(const char * buf, size_t len) : void
+addInFrontInt8(const uint8_t b) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+retrieveAll() : void
+retrieve(size_t len) : void
+readFd(int fd, int * retErrno) : ssize_t
+retrieveUntil(const char * end) : void
+findCRLF() const : const char *
+ensureWritableBytes(size_t len) : void
+hasWritten(size_t len) : void
+unwrite(size_t offset) : void
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
+append(const char (&)[N] buf) : void
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+getName() const : std::string
+syncTaskInQueue(const std::function<void ()> & task) : void
+~TaskQueue() : void
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+waitAllTasksFinished() : void
+SerialTaskQueue() : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
+isRuningTask() : bool
+getTaskCount() : size_t
+stop() : void
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer<SIZE>() : void
+~FixedBuffer<SIZE>() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(bool v) : LogStream::self &
+operator<<(short ) : LogStream::self &
+operator<<(unsigned short ) : LogStream::self &
+operator<<(int ) : LogStream::self &
+operator<<(unsigned int ) : LogStream::self &
+operator<<(long ) : LogStream::self &
+operator<<(unsigned long ) : LogStream::self &
+operator<<(const long long & ) : LogStream::self &
+operator<<(const unsigned long long & ) : LogStream::self &
+operator<<(const void * ) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(const double & ) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
+operator<<(const char (&)[N] buf) : LogStream::self &
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+data() const : const char *
+length() const : int
+Fmt(const char * fmt, T val) : void
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+~Logger() : void
+setIndex(int index) : Logger &
+stream() : LogStream &
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +logLevel() : Logger::LogLevel
}
enum "Logger::LogLevel" as C_0001184349029950147049
enum C_0001184349029950147049 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0002198968118661318449
class C_0002198968118661318449 {
+SourceFile(const char * filename) : void
+SourceFile(const char (&)[N] arr) : void
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
+setIndex(int index) : RawLogger &
+stream() : LogStream &
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+getTaskCount() : size_t
+stop() : void
+~ConcurrentTaskQueue() : void
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
+family() const : sa_family_t
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
+isIpV6() const : bool
+isIntranetIp() const : bool
+isLoopbackIp() const : bool
+getSockAddr() const : const struct sockaddr *
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+ipNetEndian() const : uint32_t
+ip6NetEndian() const : const uint32_t *
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+isUnspecified() const : bool
}
class "InetAddress::(anonymous_2030796)" as C_0001238571308552245455
class C_0001238571308552245455 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
{abstract} +shutdown() = 0 : void
{abstract} +forceClose() = 0 : void
{abstract} +getLoop() = 0 : EventLoop *
+setContext(const std::shared_ptr<void> & context) : void
+setContext(std::shared_ptr<void> && context) : void
+hasContext() const : bool
+clearContext() : void
{abstract} +keepAlive() = 0 : void
{abstract} +isKeepAlive() = 0 : bool
{abstract} +bytesSent() const = 0 : size_t
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +startClientEncryption(std::function<void ()> callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) = 0 : void
{abstract} +startServerEncryption(const std::shared_ptr<SSLContext> & ctx, std::function<void ()> callback) = 0 : void
+getContext() : std::shared_ptr<T>
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
+connect() : void
+disconnect() : void
+stop() : void
+connection() const : TcpConnectionPtr
+getLoop() const : EventLoop *
+retry() const : bool
+enableRetry() : void
+name() const : const std::string &
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = = {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
}
class "TcpClient::IgnoreSigPipe" as C_0002033458902174399063
class C_0002033458902174399063 {
+IgnoreSigPipe() : void
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+serverAddress() const : const InetAddress &
+start() : void
+restart() : void
+stop() : void
}
enum "Connector::Status" as C_0002045450139033818398
enum C_0002045450139033818398 {
Disconnected
Connecting
Connected
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
+getLoop() : EventLoop *
+~TimingWheel() : void
}
class "TimingWheel::CallbackEntry" as C_0001504852334691167098
class C_0001504852334691167098 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
}
enum "SSLStatus" as C_0001515554933771522998
enum C_0001515554933771522998 {
Handshaking
Connecting
Connected
DisConnecting
DisConnected
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr) : void
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, const std::shared_ptr<SSLContext> & ctxPtr, bool isServer = true, bool validateCert = true, const std::string & hostname = "") : void
+~TcpConnectionImpl() : void
+send(const char * msg, size_t len) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+connected() const : bool
+disconnected() const : bool
+getRecvBuffer() : MsgBuffer *
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+keepAlive() : void
+isKeepAlive() : bool
+setTcpNoDelay(bool on) : void
+shutdown() : void
+forceClose() : void
+getLoop() : EventLoop *
+bytesSent() const : size_t
+bytesReceived() const : size_t
+startClientEncryption(std::function<void ()> callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
+startServerEncryption(const std::shared_ptr<SSLContext> & ctx, std::function<void ()> callback) : void
+isSSLConnection() const : bool
}
class "TcpConnectionImpl::KickoffEntry" as C_0000054046898195558381
class C_0000054046898195558381 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
}
class "TcpConnectionImpl::BufferNode" as C_0000943181451128697972
class C_0000943181451128697972 {
+isFile() const : bool
+~BufferNode() : void
+sendFd_ : int
+offset_ : off_t
+fileBytesToSend_ : ssize_t
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
+nDataWritten_ : std::size_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
}
enum "TcpConnectionImpl::ConnStatus" as C_0000198777833674414676
enum C_0000198777833674414676 {
Disconnected
Connecting
Connected
Disconnecting
}
class "TcpConnectionImpl::SSLEncryption" as C_0001847734957165426408
class C_0001847734957165426408 {
+statusOfSSL_ : SSLStatus
+sslCtxPtr_ : std::shared_ptr<SSLContext>
+sslPtr_ : std::unique_ptr<SSLConn>
+sendBufferPtr_ : std::unique_ptr<std::array<char,8192>>
+isServer_ : bool
+isUpgrade_ : bool
+upgradeCallback_ : std::function<void ()>
+hostname_ : std::string
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
{static} +createNonblockingSocketOrDie(int family) : int
{static} +getSocketError(int sockfd) : int
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +isSelfConnect(int sockfd) : bool
+Socket(int sockfd) : void
+~Socket() : void
+bindAddress(const InetAddress & localaddr) : void
+listen() : void
+accept(InetAddress * peeraddr) : int
+closeWrite() : void
+read(char * buffer, uint64_t len) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
+setTcpNoDelay(bool on) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setKeepAlive(bool on) : void
+getSocketError() : int
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
}
class "SSLConn" as C_0001248784923817560723
class C_0001248784923817560723 {
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, const std::string & name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
+start() : void
+stop() : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+name() const : const std::string &
+ipPort() const : const std::string
+address() const : const InetAddress &
+getLoop() const : EventLoop *
+getIoLoops() const : std::vector<EventLoop *>
+kickoffIdleConnections(size_t timeout) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = = {}, const std::string & caPath = "") : void
}
class "InetAddress::(anonymous_2030836)" as C_0000741797986785144168
class C_0000741797986785144168 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
+addr() const : const InetAddress &
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
+listen() : void
}
class "TcpServer::IgnoreSigPipe" as C_0001829426703641465340
class C_0001829426703641465340 {
+IgnoreSigPipe() : void
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
+str_ : const char *
+len_ : const unsigned int
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
+run() const : void
+restart(const TimePoint & now) : void
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
+when() const : const TimePoint &
+isRepeat() : bool
+id() : TimerId
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
}
class "InetAddress::(anonymous_1188166)" as C_0000253546837558644771
class C_0000253546837558644771 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
C_0000630185754256426097 o- - C_0000923080849258138681 : #loggerFilePtr_
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0000923080849258138681 o- - C_0002032009232244826154 : #creationDate_
C_0000923080849258138681 - -+ C_0000630185754256426097
C_0001159823987743494688 <|- - C_0000923080849258138681
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000913287266699074255 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 ..> C_0000764690828649606524
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0000913287266699074255 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0000913287266699074255 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0000300034150397884642 ..> C_0001390130774830223499
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 ..> C_0001390130774830223499
C_0000607400095182694101 ..> C_0002026475275429760163
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0000607400095182694101 o- - C_0000157340721173102239 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0000764690828649606524 ..> C_0001390130774830223499
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 ..> C_0002198968118661318449
C_0002053752992472264214 ..> C_0001184349029950147049
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 o- - C_0002198968118661318449 : #sourceFile_
C_0002053752992472264214 o- - C_0001184349029950147049 : #level_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0001184349029950147049 - -+ C_0002053752992472264214
C_0002198968118661318449 - -+ C_0002053752992472264214
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001897340460211641725 o- - C_0001238571308552245455
C_0001238571308552245455 - -+ C_0001897340460211641725
C_0002230624932100089526 ..> C_0001289495020269537351
C_0002230624932100089526 ..> C_0000626107303889580949
C_0001156367011091191681 ..> C_0001390130774830223499
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 ..> C_0002230624932100089526
C_0001156367011091191681 ..> C_0001289495020269537351
C_0001156367011091191681 ..> C_0000434245188016003403
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 - -> C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 ..> C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 - -> C_0000626107303889580949 : -sslCtxPtr_
C_0001156367011091191681 - -> C_0002033458902174399063 : -initObj
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0002033458902174399063 - -+ C_0001156367011091191681
C_0001706043459252151324 ..> C_0001390130774830223499
C_0001706043459252151324 ..> C_0001897340460211641725
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001706043459252151324 o- - C_0002045450139033818398 : -status_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0002045450139033818398 - -+ C_0001706043459252151324
C_0000964465843177067305 ..> C_0001390130774830223499
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0001504852334691167098 - -+ C_0000964465843177067305
C_0000920759514274339356 ..> C_0001390130774830223499
C_0000920759514274339356 ..> C_0001897340460211641725
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001289495020269537351
C_0000920759514274339356 ..> C_0002230624932100089526
C_0000920759514274339356 ..> C_0000964465843177067305
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 ..> C_0000943181451128697972
C_0000920759514274339356 - -> C_0000054046898195558381 : -kickoffEntry_
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0000943181451128697972 : #writeBufferList_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 o- - C_0000198777833674414676 : #status_
C_0000920759514274339356 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0000920759514274339356 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #connectionCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #closeCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #writeCompleteCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0000920759514274339356 ..> C_0000434245188016003403 : #sslErrorCallback_
C_0000920759514274339356 o- - C_0001847734957165426408 : -sslEncryptionPtr_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0000054046898195558381 ..> C_0002230624932100089526
C_0000054046898195558381 - -> C_0002230624932100089526 : -conn_
C_0000054046898195558381 - -+ C_0000920759514274339356
C_0000943181451128697972 - -> C_0001289495020269537351 : +msgBuffer_
C_0000943181451128697972 - -+ C_0000920759514274339356
C_0000198777833674414676 - -+ C_0000920759514274339356
C_0001847734957165426408 o- - C_0001515554933771522998 : +statusOfSSL_
C_0001847734957165426408 - -> C_0000626107303889580949 : +sslCtxPtr_
C_0001847734957165426408 o- - C_0001248784923817560723 : +sslPtr_
C_0001847734957165426408 - -+ C_0000920759514274339356
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0001423170502760786790 ..> C_0001390130774830223499
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 ..> C_0002061035340998974559
C_0001423170502760786790 ..> C_0002230624932100089526
C_0001423170502760786790 ..> C_0001289495020269537351
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 o- - C_0001829426703641465340 : -initObj
C_0001423170502760786790 - -> C_0000626107303889580949 : -sslCtxPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0000741797986785144168 - -+ C_0001897340460211641725
C_0000184886692180276257 ..> C_0001390130774830223499
C_0000184886692180276257 ..> C_0001897340460211641725
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0001829426703641465340 - -+ C_0001423170502760786790
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0000253546837558644771 - -+ C_0001897340460211641725
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>