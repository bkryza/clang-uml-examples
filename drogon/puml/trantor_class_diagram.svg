<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4906px" preserveAspectRatio="none" style="width:10045px;height:4906px;" version="1.1" viewBox="0 0 10045 4906" width="10045px" zoomAndPan="magnify"><defs><filter height="300%" id="f122zbfhn0rs4n" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="432.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="6611.5" y="3730"/><ellipse cx="7101.25" cy="3746" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7104.2188,3751.6406 Q7103.6406,3751.9375 7103,3752.0781 Q7102.3594,3752.2344 7101.6563,3752.2344 Q7099.1563,3752.2344 7097.8281,3750.5938 Q7096.5156,3748.9375 7096.5156,3745.8125 Q7096.5156,3742.6875 7097.8281,3741.0313 Q7099.1563,3739.375 7101.6563,3739.375 Q7102.3594,3739.375 7103,3739.5313 Q7103.6563,3739.6875 7104.2188,3739.9844 L7104.2188,3742.7031 Q7103.5938,3742.125 7103,3741.8594 Q7102.4063,3741.5781 7101.7813,3741.5781 Q7100.4375,3741.5781 7099.75,3742.6563 Q7099.0625,3743.7188 7099.0625,3745.8125 Q7099.0625,3747.9063 7099.75,3748.9844 Q7100.4375,3750.0469 7101.7813,3750.0469 Q7102.4063,3750.0469 7103,3749.7813 Q7103.5938,3749.5 7104.2188,3748.9219 L7104.2188,3751.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="7121.75" y="3750.1543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6612.5" x2="7628.5" y1="3762" y2="3762"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6612.5" x2="7628.5" y1="3770" y2="3770"/><ellipse cx="6622.5" cy="3781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="6631.5" y="3784.2104">Date() : void</text><ellipse cx="6622.5" cy="3793.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6631.5" y="3797.0151">Date(int64_t microSec) : void</text><ellipse cx="6622.5" cy="3806.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="6631.5" y="3809.8198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="6622.5" cy="3819.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="6631.5" y="3822.6245">date() : const Date</text><ellipse cx="6622.5" cy="3832.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="6631.5" y="3835.4292">now() : const Date</text><ellipse cx="6622.5" cy="3845.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="6631.5" y="3848.2339">timezoneOffset() : int64_t</text><ellipse cx="6622.5" cy="3857.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="6631.5" y="3861.0386">after(double second) const : const Date</text><ellipse cx="6622.5" cy="3870.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="6631.5" y="3873.8433">roundSecond() const : const Date</text><ellipse cx="6622.5" cy="3883.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="6631.5" y="3886.6479">roundDay() const : const Date</text><ellipse cx="6622.5" cy="3896.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="6631.5" y="3899.4526">~Date() : void</text><ellipse cx="6622.5" cy="3909.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="6631.5" y="3912.2573">operator==(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="3921.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="6631.5" y="3925.062">operator!=(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="3934.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6631.5" y="3937.8667">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="3947.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6631.5" y="3950.6714">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="3960.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="6631.5" y="3963.4761">operator&gt;=(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="3973.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="6631.5" y="3976.2808">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="3985.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="6631.5" y="3989.0854">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="6622.5" cy="3998.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="6631.5" y="4001.8901">secondsSinceEpoch() const : int64_t</text><ellipse cx="6622.5" cy="4011.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="6631.5" y="4014.6948">tmStruct() const : struct tm</text><ellipse cx="6622.5" cy="4024.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="6631.5" y="4027.4995">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="6622.5" cy="4037.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="6631.5" y="4040.3042">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="6622.5" cy="4049.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="6631.5" y="4053.1089">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><ellipse cx="6622.5" cy="4062.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="6631.5" y="4065.9136">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="6622.5" cy="4075.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6631.5" y="4078.7183">toDbStringLocal() const : std::string</text><ellipse cx="6622.5" cy="4088.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="6631.5" y="4091.5229">toDbString() const : std::string</text><ellipse cx="6622.5" cy="4101.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="6631.5" y="4104.3276">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="6622.5" cy="4113.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="6631.5" y="4117.1323">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="6622.5" cy="4126.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="6631.5" y="4129.937">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="6622.5" cy="4139.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="6631.5" y="4142.7417">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="6622.5" cy="4152.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="6631.5" y="4155.5464">swap(Date &amp; that) : void</text><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="278.4844" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="8392" y="3285"/><ellipse cx="8596.75" cy="3301" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8599.7188,3306.6406 Q8599.1406,3306.9375 8598.5,3307.0781 Q8597.8594,3307.2344 8597.1563,3307.2344 Q8594.6563,3307.2344 8593.3281,3305.5938 Q8592.0156,3303.9375 8592.0156,3300.8125 Q8592.0156,3297.6875 8593.3281,3296.0313 Q8594.6563,3294.375 8597.1563,3294.375 Q8597.8594,3294.375 8598.5,3294.5313 Q8599.1563,3294.6875 8599.7188,3294.9844 L8599.7188,3297.7031 Q8599.0938,3297.125 8598.5,3296.8594 Q8597.9063,3296.5781 8597.2813,3296.5781 Q8595.9375,3296.5781 8595.25,3297.6563 Q8594.5625,3298.7188 8594.5625,3300.8125 Q8594.5625,3302.9063 8595.25,3303.9844 Q8595.9375,3305.0469 8597.2813,3305.0469 Q8597.9063,3305.0469 8598.5,3304.7813 Q8599.0938,3304.5 8599.7188,3303.9219 L8599.7188,3306.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="8617.25" y="3305.1543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8393" x2="8884" y1="3317" y2="3317"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8393" x2="8884" y1="3325" y2="3325"/><ellipse cx="8403" cy="3336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="8412" y="3339.2104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="8403" cy="3348.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="8412" y="3352.0151">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="8403" cy="3361.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="8412" y="3364.8198">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="8403" cy="3374.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="8412" y="3377.6245">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><ellipse cx="8403" cy="3387.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="8412" y="3390.4292">family() const : sa_family_t</text><ellipse cx="8403" cy="3400.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="8412" y="3403.2339">toIp() const : std::string</text><ellipse cx="8403" cy="3412.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="8412" y="3416.0386">toIpPort() const : std::string</text><ellipse cx="8403" cy="3425.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="8412" y="3428.8433">toPort() const : uint16_t</text><ellipse cx="8403" cy="3438.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="8412" y="3441.6479">isIpV6() const : bool</text><ellipse cx="8403" cy="3451.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="8412" y="3454.4526">isIntranetIp() const : bool</text><ellipse cx="8403" cy="3464.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="8412" y="3467.2573">isLoopbackIp() const : bool</text><ellipse cx="8403" cy="3476.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="8412" y="3480.062">getSockAddr() const : const struct sockaddr *</text><ellipse cx="8403" cy="3489.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="8412" y="3492.8667">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="8403" cy="3502.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="8412" y="3505.6714">ipNetEndian() const : uint32_t</text><ellipse cx="8403" cy="3515.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="8412" y="3518.4761">ip6NetEndian() const : const uint32_t *</text><ellipse cx="8403" cy="3528.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="8412" y="3531.2808">portNetEndian() const : uint16_t</text><ellipse cx="8403" cy="3540.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="8412" y="3544.0854">setPortNetEndian(uint16_t port) : void</text><ellipse cx="8403" cy="3553.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="8412" y="3556.8901">isUnspecified() const : bool</text><!--MD5=[fc18972faf1c61d69feddadc1f33c92d]
class C_0000673025168912921705--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="73.6094" id="C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="8544" y="3909"/><ellipse cx="8587.8" cy="3925" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8590.7688,3930.6406 Q8590.1906,3930.9375 8589.55,3931.0781 Q8588.9094,3931.2344 8588.2063,3931.2344 Q8585.7063,3931.2344 8584.3781,3929.5938 Q8583.0656,3927.9375 8583.0656,3924.8125 Q8583.0656,3921.6875 8584.3781,3920.0313 Q8585.7063,3918.375 8588.2063,3918.375 Q8588.9094,3918.375 8589.55,3918.5313 Q8590.2063,3918.6875 8590.7688,3918.9844 L8590.7688,3921.7031 Q8590.1438,3921.125 8589.55,3920.8594 Q8588.9563,3920.5781 8588.3313,3920.5781 Q8586.9875,3920.5781 8586.3,3921.6563 Q8585.6125,3922.7188 8585.6125,3924.8125 Q8585.6125,3926.9063 8586.3,3927.9844 Q8586.9875,3929.0469 8588.3313,3929.0469 Q8588.9563,3929.0469 8589.55,3928.7813 Q8590.1438,3928.5 8590.7688,3927.9219 L8590.7688,3930.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="8608.2" y="3929.1543">InetAddress::()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8545" x2="8732" y1="3941" y2="3941"/><ellipse cx="8555" cy="3952" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="8564" y="3955.2104">addr_ : struct sockaddr_in</text><ellipse cx="8555" cy="3964.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="8564" y="3968.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8545" x2="8732" y1="3974.6094" y2="3974.6094"/><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="1971.5" y="53"/><ellipse cx="1986.5" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1989.4688,74.6406 Q1988.8906,74.9375 1988.25,75.0781 Q1987.6094,75.2344 1986.9063,75.2344 Q1984.4063,75.2344 1983.0781,73.5938 Q1981.7656,71.9375 1981.7656,68.8125 Q1981.7656,65.6875 1983.0781,64.0313 Q1984.4063,62.375 1986.9063,62.375 Q1987.6094,62.375 1988.25,62.5313 Q1988.9063,62.6875 1989.4688,62.9844 L1989.4688,65.7031 Q1988.8438,65.125 1988.25,64.8594 Q1987.6563,64.5781 1987.0313,64.5781 Q1985.6875,64.5781 1985,65.6563 Q1984.3125,66.7188 1984.3125,68.8125 Q1984.3125,70.9063 1985,71.9844 Q1985.6875,73.0469 1987.0313,73.0469 Q1987.6563,73.0469 1988.25,72.7813 Q1988.8438,72.5 1989.4688,71.9219 L1989.4688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2000.5" y="73.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1972.5" x2="2084.5" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1972.5" x2="2084.5" y1="93" y2="93"/><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="214.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1053" y="2737.5"/><ellipse cx="1099.25" cy="2753.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1102.2188,2759.1406 Q1101.6406,2759.4375 1101,2759.5781 Q1100.3594,2759.7344 1099.6563,2759.7344 Q1097.1563,2759.7344 1095.8281,2758.0938 Q1094.5156,2756.4375 1094.5156,2753.3125 Q1094.5156,2750.1875 1095.8281,2748.5313 Q1097.1563,2746.875 1099.6563,2746.875 Q1100.3594,2746.875 1101,2747.0313 Q1101.6563,2747.1875 1102.2188,2747.4844 L1102.2188,2750.2031 Q1101.5938,2749.625 1101,2749.3594 Q1100.4063,2749.0781 1099.7813,2749.0781 Q1098.4375,2749.0781 1097.75,2750.1563 Q1097.0625,2751.2188 1097.0625,2753.3125 Q1097.0625,2755.4063 1097.75,2756.4844 Q1098.4375,2757.5469 1099.7813,2757.5469 Q1100.4063,2757.5469 1101,2757.2813 Q1101.5938,2757 1102.2188,2756.4219 L1102.2188,2759.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1119.75" y="2757.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="1271" y="2734.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="1272" y="2746.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1054" x2="1317" y1="2769.5" y2="2769.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1054" x2="1317" y1="2777.5" y2="2777.5"/><ellipse cx="1064" cy="2788.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1073" y="2791.7104">FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="1064" cy="2801.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1073" y="2804.5151">~FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="1064" cy="2814.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1073" y="2817.3198">append(const char * buf, size_t len) : bool</text><ellipse cx="1064" cy="2826.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1073" y="2830.1245">data() const : const char *</text><ellipse cx="1064" cy="2839.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1073" y="2842.9292">length() const : int</text><ellipse cx="1064" cy="2852.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1073" y="2855.7339">current() : char *</text><ellipse cx="1064" cy="2865.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1073" y="2868.5386">avail() const : int</text><ellipse cx="1064" cy="2878.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1073" y="2881.3433">add(size_t len) : void</text><ellipse cx="1064" cy="2890.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1073" y="2894.1479">reset() : void</text><ellipse cx="1064" cy="2903.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1073" y="2906.9526">zeroBuffer() : void</text><ellipse cx="1064" cy="2916.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1073" y="2919.7573">debugString() : const char *</text><ellipse cx="1064" cy="2929.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1073" y="2932.562">setCookie(void (*)() cookie) : void</text><ellipse cx="1064" cy="2942.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1073" y="2945.3667">toString() const : std::string</text><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="1260.5" y="2305"/><ellipse cx="1275.5" cy="2321" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1278.4688,2326.6406 Q1277.8906,2326.9375 1277.25,2327.0781 Q1276.6094,2327.2344 1275.9063,2327.2344 Q1273.4063,2327.2344 1272.0781,2325.5938 Q1270.7656,2323.9375 1270.7656,2320.8125 Q1270.7656,2317.6875 1272.0781,2316.0313 Q1273.4063,2314.375 1275.9063,2314.375 Q1276.6094,2314.375 1277.25,2314.5313 Q1277.9063,2314.6875 1278.4688,2314.9844 L1278.4688,2317.7031 Q1277.8438,2317.125 1277.25,2316.8594 Q1276.6563,2316.5781 1276.0313,2316.5781 Q1274.6875,2316.5781 1274,2317.6563 Q1273.3125,2318.7188 1273.3125,2320.8125 Q1273.3125,2322.9063 1274,2323.9844 Q1274.6875,2325.0469 1276.0313,2325.0469 Q1276.6563,2325.0469 1277.25,2324.7813 Q1277.8438,2324.5 1278.4688,2323.9219 L1278.4688,2326.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1289.5" y="2325.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="1409.5" y="2302"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="1410.5" y="2314.1387">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1261.5" x2="1527.5" y1="2337" y2="2337"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1261.5" x2="1527.5" y1="2345" y2="2345"/><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="48" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="180" x="1073.5" y="583"/><ellipse cx="1088.5" cy="599" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1091.4688,604.6406 Q1090.8906,604.9375 1090.25,605.0781 Q1089.6094,605.2344 1088.9063,605.2344 Q1086.4063,605.2344 1085.0781,603.5938 Q1083.7656,601.9375 1083.7656,598.8125 Q1083.7656,595.6875 1085.0781,594.0313 Q1086.4063,592.375 1088.9063,592.375 Q1089.6094,592.375 1090.25,592.5313 Q1090.9063,592.6875 1091.4688,592.9844 L1091.4688,595.7031 Q1090.8438,595.125 1090.25,594.8594 Q1089.6563,594.5781 1089.0313,594.5781 Q1087.6875,594.5781 1087,595.6563 Q1086.3125,596.7188 1086.3125,598.8125 Q1086.3125,600.9063 1087,601.9844 Q1087.6875,603.0469 1089.0313,603.0469 Q1089.6563,603.0469 1090.25,602.7813 Q1090.8438,602.5 1091.4688,601.9219 L1091.4688,604.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1102.5" y="603.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="1222.5" y="580"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="1223.5" y="592.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1074.5" x2="1252.5" y1="615" y2="615"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1074.5" x2="1252.5" y1="623" y2="623"/><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="48" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="204" x="1144.5" y="1418"/><ellipse cx="1159.5" cy="1434" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1162.4688,1439.6406 Q1161.8906,1439.9375 1161.25,1440.0781 Q1160.6094,1440.2344 1159.9063,1440.2344 Q1157.4063,1440.2344 1156.0781,1438.5938 Q1154.7656,1436.9375 1154.7656,1433.8125 Q1154.7656,1430.6875 1156.0781,1429.0313 Q1157.4063,1427.375 1159.9063,1427.375 Q1160.6094,1427.375 1161.25,1427.5313 Q1161.9063,1427.6875 1162.4688,1427.9844 L1162.4688,1430.7031 Q1161.8438,1430.125 1161.25,1429.8594 Q1160.6563,1429.5781 1160.0313,1429.5781 Q1158.6875,1429.5781 1158,1430.6563 Q1157.3125,1431.7188 1157.3125,1433.8125 Q1157.3125,1435.9063 1158,1436.9844 Q1158.6875,1438.0469 1160.0313,1438.0469 Q1160.6563,1438.0469 1161.25,1437.7813 Q1161.8438,1437.5 1162.4688,1436.9219 L1162.4688,1439.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1173.5" y="1438.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="1293.5" y="1415"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="1294.5" y="1427.1387">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1145.5" x2="1347.5" y1="1450" y2="1450"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1145.5" x2="1347.5" y1="1458" y2="1458"/><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="342.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="1245.5" y="1572.5"/><ellipse cx="1398.75" cy="1588.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1401.7188,1594.1406 Q1401.1406,1594.4375 1400.5,1594.5781 Q1399.8594,1594.7344 1399.1563,1594.7344 Q1396.6563,1594.7344 1395.3281,1593.0938 Q1394.0156,1591.4375 1394.0156,1588.3125 Q1394.0156,1585.1875 1395.3281,1583.5313 Q1396.6563,1581.875 1399.1563,1581.875 Q1399.8594,1581.875 1400.5,1582.0313 Q1401.1563,1582.1875 1401.7188,1582.4844 L1401.7188,1585.2031 Q1401.0938,1584.625 1400.5,1584.3594 Q1399.9063,1584.0781 1399.2813,1584.0781 Q1397.9375,1584.0781 1397.25,1585.1563 Q1396.5625,1586.2188 1396.5625,1588.3125 Q1396.5625,1590.4063 1397.25,1591.4844 Q1397.9375,1592.5469 1399.2813,1592.5469 Q1399.9063,1592.5469 1400.5,1592.2813 Q1401.0938,1592 1401.7188,1591.4219 L1401.7188,1594.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1419.25" y="1592.6543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1246.5" x2="1626.5" y1="1604.5" y2="1604.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1246.5" x2="1626.5" y1="1612.5" y2="1612.5"/><ellipse cx="1256.5" cy="1623.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1265.5" y="1626.7104">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1636.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1265.5" y="1639.5151">operator&lt;&lt;(short ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1649.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1265.5" y="1652.3198">operator&lt;&lt;(unsigned short ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1661.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1265.5" y="1665.1245">operator&lt;&lt;(int ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1674.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="1265.5" y="1677.9292">operator&lt;&lt;(unsigned int ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1687.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1265.5" y="1690.7339">operator&lt;&lt;(long ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1700.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1265.5" y="1703.5386">operator&lt;&lt;(unsigned long ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1713.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="1265.5" y="1716.3433">operator&lt;&lt;(const long long &amp; ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1725.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1265.5" y="1729.1479">operator&lt;&lt;(const unsigned long long &amp; ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1738.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="1265.5" y="1741.9526">operator&lt;&lt;(const void * ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1751.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1265.5" y="1754.7573">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1764.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1265.5" y="1767.562">operator&lt;&lt;(const double &amp; ) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1777.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="1265.5" y="1780.3667">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1789.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1265.5" y="1793.1714">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1802.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1265.5" y="1805.9761">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1815.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1265.5" y="1818.7808">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1828.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="1265.5" y="1831.5854">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1841.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1265.5" y="1844.3901">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="1256.5" cy="1853.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1265.5" y="1857.1948">append(const char * data, size_t len) : void</text><ellipse cx="1256.5" cy="1866.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1265.5" y="1869.9995">bufferData() const : const char *</text><ellipse cx="1256.5" cy="1879.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1265.5" y="1882.8042">bufferLength() const : size_t</text><ellipse cx="1256.5" cy="1892.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1265.5" y="1895.6089">resetBuffer() : void</text><ellipse cx="1256.5" cy="1905.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1265.5" y="1908.4136">operator&lt;&lt;&lt;int N&gt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="14" y="34"/><ellipse cx="119.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M122.7188,55.6406 Q122.1406,55.9375 121.5,56.0781 Q120.8594,56.2344 120.1563,56.2344 Q117.6563,56.2344 116.3281,54.5938 Q115.0156,52.9375 115.0156,49.8125 Q115.0156,46.6875 116.3281,45.0313 Q117.6563,43.375 120.1563,43.375 Q120.8594,43.375 121.5,43.5313 Q122.1563,43.6875 122.7188,43.9844 L122.7188,46.7031 Q122.0938,46.125 121.5,45.8594 Q120.9063,45.5781 120.2813,45.5781 Q118.9375,45.5781 118.25,46.6563 Q117.5625,47.7188 117.5625,49.8125 Q117.5625,51.9063 118.25,52.9844 Q118.9375,54.0469 120.2813,54.0469 Q120.9063,54.0469 121.5,53.7813 Q122.0938,53.5 122.7188,52.9219 L122.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="140.25" y="54.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15" x2="256" y1="66" y2="66"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="15" x2="256" y1="74" y2="74"/><ellipse cx="25" cy="85" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="34" y="88.2104">data() const : const char *</text><ellipse cx="25" cy="97.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="34" y="101.0151">length() const : int</text><ellipse cx="25" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="34" y="113.8198">Fmt&lt;T&gt;(const char * fmt, T val) : void</text><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="240.0703" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="1633.5" y="268"/><ellipse cx="2002.75" cy="284" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2005.7188,289.6406 Q2005.1406,289.9375 2004.5,290.0781 Q2003.8594,290.2344 2003.1563,290.2344 Q2000.6563,290.2344 1999.3281,288.5938 Q1998.0156,286.9375 1998.0156,283.8125 Q1998.0156,280.6875 1999.3281,279.0313 Q2000.6563,277.375 2003.1563,277.375 Q2003.8594,277.375 2004.5,277.5313 Q2005.1563,277.6875 2005.7188,277.9844 L2005.7188,280.7031 Q2005.0938,280.125 2004.5,279.8594 Q2003.9063,279.5781 2003.2813,279.5781 Q2001.9375,279.5781 2001.25,280.6563 Q2000.5625,281.7188 2000.5625,283.8125 Q2000.5625,285.9063 2001.25,286.9844 Q2001.9375,288.0469 2003.2813,288.0469 Q2003.9063,288.0469 2004.5,287.7813 Q2005.0938,287.5 2005.7188,286.9219 L2005.7188,289.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="2023.25" y="288.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1634.5" x2="2422.5" y1="300" y2="300"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1634.5" x2="2422.5" y1="308" y2="308"/><ellipse cx="1644.5" cy="319" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="1653.5" y="322.2104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="1644.5" cy="331.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1653.5" y="335.0151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="1644.5" cy="344.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="1653.5" y="347.8198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="1644.5" cy="357.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1653.5" y="360.6245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="1644.5" cy="370.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1653.5" y="373.4292">Logger() : void</text><ellipse cx="1644.5" cy="383.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1653.5" y="386.2339">Logger(Logger::LogLevel level) : void</text><ellipse cx="1644.5" cy="395.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1653.5" y="399.0386">Logger(bool isSysErr) : void</text><ellipse cx="1644.5" cy="408.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1653.5" y="411.8433">~Logger() : void</text><ellipse cx="1644.5" cy="421.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1653.5" y="424.6479">setIndex(int index) : Logger &amp;</text><ellipse cx="1644.5" cy="434.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1653.5" y="437.4526">stream() : LogStream &amp;</text><ellipse cx="1644.5" cy="447.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="1653.5" y="450.2573">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="1644.5" cy="459.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="1653.5" y="463.062">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="1644.5" cy="472.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="1653.5" y="475.8667">logLevel() : Logger::LogLevel</text><ellipse cx="1644.5" cy="485.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="1653.5" y="488.6714">displayLocalTime() : bool</text><ellipse cx="1644.5" cy="498.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="1653.5" y="501.4761">setDisplayLocalTime(bool showLocalTime) : void</text><!--MD5=[a2beb77350952d649324ef19949173b2]
class C_0002131283840621188296--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="137.6328" id="C_0002131283840621188296" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="8553.5" y="8"/><ellipse cx="8568.5" cy="24" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8572.6094,30 L8564.8906,30 L8564.8906,17.6094 L8572.6094,17.6094 L8572.6094,19.7656 L8567.3438,19.7656 L8567.3438,22.4375 L8572.1094,22.4375 L8572.1094,24.5938 L8567.3438,24.5938 L8567.3438,27.8438 L8572.6094,27.8438 L8572.6094,30 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="8582.5" y="28.1543">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8554.5" x2="8688.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="8559.5" y="54.2104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="8559.5" y="67.0151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="8559.5" y="79.8198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="8559.5" y="92.6245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="8559.5" y="105.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="8559.5" y="118.2339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="8559.5" y="131.0386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8554.5" x2="8688.5" y1="137.6328" y2="137.6328"/><!--MD5=[80f13d7cbf12b8f5b3c51061955ccb60]
class C_0000979080797342806546--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="99.2188" id="C_0000979080797342806546" style="stroke: #A80036; stroke-width: 1.5;" width="304" x="8724.5" y="27.5"/><ellipse cx="8814.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8817.2188,49.1406 Q8816.6406,49.4375 8816,49.5781 Q8815.3594,49.7344 8814.6563,49.7344 Q8812.1563,49.7344 8810.8281,48.0938 Q8809.5156,46.4375 8809.5156,43.3125 Q8809.5156,40.1875 8810.8281,38.5313 Q8812.1563,36.875 8814.6563,36.875 Q8815.3594,36.875 8816,37.0313 Q8816.6563,37.1875 8817.2188,37.4844 L8817.2188,40.2031 Q8816.5938,39.625 8816,39.3594 Q8815.4063,39.0781 8814.7813,39.0781 Q8813.4375,39.0781 8812.75,40.1563 Q8812.0625,41.2188 8812.0625,43.3125 Q8812.0625,45.4063 8812.75,46.4844 Q8813.4375,47.5469 8814.7813,47.5469 Q8815.4063,47.5469 8816,47.2813 Q8816.5938,47 8817.2188,46.4219 L8817.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="8834.75" y="47.6543">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8725.5" x2="9027.5" y1="59.5" y2="59.5"/><ellipse cx="8735.5" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="8744.5" y="73.7104">data_ : const char *</text><ellipse cx="8735.5" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="8744.5" y="86.5151">size_ : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8725.5" x2="9027.5" y1="93.1094" y2="93.1094"/><ellipse cx="8735.5" cy="104.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="8744.5" y="107.3198">SourceFile(const char * filename = nullptr) : void</text><ellipse cx="8735.5" cy="116.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="8744.5" y="120.1245">SourceFile&lt;int N&gt;(const char (&amp;)[N] arr) : void</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="1245.5" y="981.5"/><ellipse cx="1316.25" cy="997.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1319.2188,1003.1406 Q1318.6406,1003.4375 1318,1003.5781 Q1317.3594,1003.7344 1316.6563,1003.7344 Q1314.1563,1003.7344 1312.8281,1002.0938 Q1311.5156,1000.4375 1311.5156,997.3125 Q1311.5156,994.1875 1312.8281,992.5313 Q1314.1563,990.875 1316.6563,990.875 Q1317.3594,990.875 1318,991.0313 Q1318.6563,991.1875 1319.2188,991.4844 L1319.2188,994.2031 Q1318.5938,993.625 1318,993.3594 Q1317.4063,993.0781 1316.7813,993.0781 Q1315.4375,993.0781 1314.75,994.1563 Q1314.0625,995.2188 1314.0625,997.3125 Q1314.0625,999.4063 1314.75,1000.4844 Q1315.4375,1001.5469 1316.7813,1001.5469 Q1317.4063,1001.5469 1318,1001.2813 Q1318.5938,1001 1319.2188,1000.4219 L1319.2188,1003.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1336.75" y="1001.6543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1246.5" x2="1462.5" y1="1013.5" y2="1013.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1246.5" x2="1462.5" y1="1021.5" y2="1021.5"/><ellipse cx="1256.5" cy="1032.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1265.5" y="1035.7104">~RawLogger() : void</text><ellipse cx="1256.5" cy="1045.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1265.5" y="1048.5151">setIndex(int index) : RawLogger &amp;</text><ellipse cx="1256.5" cy="1058.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1265.5" y="1061.3198">stream() : LogStream &amp;</text><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="124.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="3164.5" y="4386"/><ellipse cx="3221.25" cy="4402" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3224.2188,4407.6406 Q3223.6406,4407.9375 3223,4408.0781 Q3222.3594,4408.2344 3221.6563,4408.2344 Q3219.1563,4408.2344 3217.8281,4406.5938 Q3216.5156,4404.9375 3216.5156,4401.8125 Q3216.5156,4398.6875 3217.8281,4397.0313 Q3219.1563,4395.375 3221.6563,4395.375 Q3222.3594,4395.375 3223,4395.5313 Q3223.6563,4395.6875 3224.2188,4395.9844 L3224.2188,4398.7031 Q3223.5938,4398.125 3223,4397.8594 Q3222.4063,4397.5781 3221.7813,4397.5781 Q3220.4375,4397.5781 3219.75,4398.6563 Q3219.0625,4399.7188 3219.0625,4401.8125 Q3219.0625,4403.9063 3219.75,4404.9844 Q3220.4375,4406.0469 3221.7813,4406.0469 Q3222.4063,4406.0469 3223,4405.7813 Q3223.5938,4405.5 3224.2188,4404.9219 L3224.2188,4407.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="3241.75" y="4406.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="3364.5" y="4383"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="3365.5" y="4395.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3165.5" x2="3369.5" y1="4418" y2="4418"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3165.5" x2="3369.5" y1="4426" y2="4426"/><ellipse cx="3175.5" cy="4437" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3184.5" y="4440.2104">MpscQueue&lt;T&gt;() : void</text><ellipse cx="3175.5" cy="4449.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3184.5" y="4453.0151">~MpscQueue&lt;T&gt;() : void</text><ellipse cx="3175.5" cy="4462.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3184.5" y="4465.8198">enqueue(T &amp;&amp; input) : void</text><ellipse cx="3175.5" cy="4475.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3184.5" y="4478.6245">enqueue(const T &amp; input) : void</text><ellipse cx="3175.5" cy="4488.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3184.5" y="4491.4292">dequeue(T &amp; output) : bool</text><ellipse cx="3175.5" cy="4501.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="3184.5" y="4504.2339">empty() : bool</text><!--MD5=[9e2b872a1cb524987dcee0b8ea8bcdce]
class C_0000223701637084171141--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="112.0234" id="C_0000223701637084171141" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="3423.5" y="3890"/><ellipse cx="3456.95" cy="3906" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3459.9188,3911.6406 Q3459.3406,3911.9375 3458.7,3912.0781 Q3458.0594,3912.2344 3457.3563,3912.2344 Q3454.8563,3912.2344 3453.5281,3910.5938 Q3452.2156,3908.9375 3452.2156,3905.8125 Q3452.2156,3902.6875 3453.5281,3901.0313 Q3454.8563,3899.375 3457.3563,3899.375 Q3458.0594,3899.375 3458.7,3899.5313 Q3459.3563,3899.6875 3459.9188,3899.9844 L3459.9188,3902.7031 Q3459.2938,3902.125 3458.7,3901.8594 Q3458.1063,3901.5781 3457.4813,3901.5781 Q3456.1375,3901.5781 3455.45,3902.6563 Q3454.7625,3903.7188 3454.7625,3905.8125 Q3454.7625,3907.9063 3455.45,3908.9844 Q3456.1375,3910.0469 3457.4813,3910.0469 Q3458.1063,3910.0469 3458.7,3909.7813 Q3459.2938,3909.5 3459.9188,3908.9219 L3459.9188,3911.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="3475.05" y="3910.1543">MpscQueue::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3424.5" x2="3646.5" y1="3922" y2="3922"/><ellipse cx="3434.5" cy="3933" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3443.5" y="3936.2104">dataPtr_ : T *</text><ellipse cx="3434.5" cy="3945.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="3443.5" y="3949.0151">next_ : std::atomic&lt;BufferNode *&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3424.5" x2="3646.5" y1="3955.6094" y2="3955.6094"/><ellipse cx="3434.5" cy="3966.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3443.5" y="3969.8198">BufferNode() = default : void</text><ellipse cx="3434.5" cy="3979.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="3443.5" y="3982.6245">BufferNode(const T &amp; data) : void</text><ellipse cx="3434.5" cy="3992.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3443.5" y="3995.4292">BufferNode(T &amp;&amp; data) : void</text><!--MD5=[dad06bf4fbec639e9a802a58181f4e4a]
class C_0002185746167032660910--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="48" id="C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="3146.5" y="3922"/><ellipse cx="3161.5" cy="3938" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3164.4688,3943.6406 Q3163.8906,3943.9375 3163.25,3944.0781 Q3162.6094,3944.2344 3161.9063,3944.2344 Q3159.4063,3944.2344 3158.0781,3942.5938 Q3156.7656,3940.9375 3156.7656,3937.8125 Q3156.7656,3934.6875 3158.0781,3933.0313 Q3159.4063,3931.375 3161.9063,3931.375 Q3162.6094,3931.375 3163.25,3931.5313 Q3163.9063,3931.6875 3164.4688,3931.9844 L3164.4688,3934.7031 Q3163.8438,3934.125 3163.25,3933.8594 Q3162.6563,3933.5781 3162.0313,3933.5781 Q3160.6875,3933.5781 3160,3934.6563 Q3159.3125,3935.7188 3159.3125,3937.8125 Q3159.3125,3939.9063 3160,3940.9844 Q3160.6875,3942.0469 3162.0313,3942.0469 Q3162.6563,3942.0469 3163.25,3941.7813 Q3163.8438,3941.5 3164.4688,3940.9219 L3164.4688,3943.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="3175.5" y="3942.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="135" x="3256.5" y="3919"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="3257.5" y="3931.1387">std::function&lt;void()&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3147.5" x2="3387.5" y1="3954" y2="3954"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3147.5" x2="3387.5" y1="3962" y2="3962"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="457.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="4451.5" y="3195"/><ellipse cx="4669.75" cy="3211" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4672.7188,3216.6406 Q4672.1406,3216.9375 4671.5,3217.0781 Q4670.8594,3217.2344 4670.1563,3217.2344 Q4667.6563,3217.2344 4666.3281,3215.5938 Q4665.0156,3213.9375 4665.0156,3210.8125 Q4665.0156,3207.6875 4666.3281,3206.0313 Q4667.6563,3204.375 4670.1563,3204.375 Q4670.8594,3204.375 4671.5,3204.5313 Q4672.1563,3204.6875 4672.7188,3204.9844 L4672.7188,3207.7031 Q4672.0938,3207.125 4671.5,3206.8594 Q4670.9063,3206.5781 4670.2813,3206.5781 Q4668.9375,3206.5781 4668.25,3207.6563 Q4667.5625,3208.7188 4667.5625,3210.8125 Q4667.5625,3212.9063 4668.25,3213.9844 Q4668.9375,3215.0469 4670.2813,3215.0469 Q4670.9063,3215.0469 4671.5,3214.7813 Q4672.0938,3214.5 4672.7188,3213.9219 L4672.7188,3216.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="4690.25" y="3215.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4452.5" x2="4960.5" y1="3227" y2="3227"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4452.5" x2="4960.5" y1="3235" y2="3235"/><ellipse cx="4462.5" cy="3246" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4471.5" y="3249.2104">EventLoop() : void</text><ellipse cx="4462.5" cy="3258.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4471.5" y="3262.0151">~EventLoop() : void</text><ellipse cx="4462.5" cy="3271.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4471.5" y="3274.8198">loop() : void</text><ellipse cx="4462.5" cy="3284.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4471.5" y="3287.6245">quit() : void</text><ellipse cx="4462.5" cy="3297.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4471.5" y="3300.4292">assertInLoopThread() : void</text><ellipse cx="4462.5" cy="3310.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4471.5" y="3313.2339">resetTimerQueue() : void</text><ellipse cx="4462.5" cy="3322.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4471.5" y="3326.0386">resetAfterFork() : void</text><ellipse cx="4462.5" cy="3335.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4471.5" y="3338.8433">isInLoopThread() const : bool</text><ellipse cx="4462.5" cy="3348.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="4471.5" y="3351.6479">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="4462.5" cy="3361.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4471.5" y="3364.4526">queueInLoop(const Func &amp; f) : void</text><ellipse cx="4462.5" cy="3374.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4471.5" y="3377.2573">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="4462.5" cy="3386.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4471.5" y="3390.062">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3399.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4471.5" y="3402.8667">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3412.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4471.5" y="3415.6714">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3425.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4471.5" y="3428.4761">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3438.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="4471.5" y="3441.2808">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3450.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="4471.5" y="3454.0854">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3463.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4471.5" y="3466.8901">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3476.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4471.5" y="3479.6948">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3489.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="4471.5" y="3492.4995">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3502.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="4471.5" y="3505.3042">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4462.5" cy="3514.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4471.5" y="3518.1089">invalidateTimer(TimerId id) : void</text><ellipse cx="4462.5" cy="3527.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4471.5" y="3530.9136">moveToCurrentThread() : void</text><ellipse cx="4462.5" cy="3540.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4471.5" y="3543.7183">updateChannel(Channel * chl) : void</text><ellipse cx="4462.5" cy="3553.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4471.5" y="3556.5229">removeChannel(Channel * chl) : void</text><ellipse cx="4462.5" cy="3566.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4471.5" y="3569.3276">index() : size_t</text><ellipse cx="4462.5" cy="3578.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4471.5" y="3582.1323">setIndex(size_t index) : void</text><ellipse cx="4462.5" cy="3591.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4471.5" y="3594.937">isRunning() : bool</text><ellipse cx="4462.5" cy="3604.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4471.5" y="3607.7417">isCallingFunctions() : bool</text><ellipse cx="4462.5" cy="3617.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4471.5" y="3620.5464">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="4462.5" cy="3630.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4471.5" y="3633.3511">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="4462.5" cy="3642.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="4471.5" y="3646.1558">runInLoop&lt;Functor&gt;(Functor &amp;&amp; f) : void</text><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="112.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="3011.5" y="2022"/><ellipse cx="3189.75" cy="2038" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3192.7188,2043.6406 Q3192.1406,2043.9375 3191.5,2044.0781 Q3190.8594,2044.2344 3190.1563,2044.2344 Q3187.6563,2044.2344 3186.3281,2042.5938 Q3185.0156,2040.9375 3185.0156,2037.8125 Q3185.0156,2034.6875 3186.3281,2033.0313 Q3187.6563,2031.375 3190.1563,2031.375 Q3190.8594,2031.375 3191.5,2031.5313 Q3192.1563,2031.6875 3192.7188,2031.9844 L3192.7188,2034.7031 Q3192.0938,2034.125 3191.5,2033.8594 Q3190.9063,2033.5781 3190.2813,2033.5781 Q3188.9375,2033.5781 3188.25,2034.6563 Q3187.5625,2035.7188 3187.5625,2037.8125 Q3187.5625,2039.9063 3188.25,2040.9844 Q3188.9375,2042.0469 3190.2813,2042.0469 Q3190.9063,2042.0469 3191.5,2041.7813 Q3192.0938,2041.5 3192.7188,2040.9219 L3192.7188,2043.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="3210.25" y="2042.1543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3012.5" x2="3484.5" y1="2054" y2="2054"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3012.5" x2="3484.5" y1="2062" y2="2062"/><ellipse cx="3022.5" cy="2073" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="3031.5" y="2076.2104">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="3022.5" cy="2085.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="3031.5" y="2089.0151">~EventLoopThread() : void</text><ellipse cx="3022.5" cy="2098.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="3031.5" y="2101.8198">wait() : void</text><ellipse cx="3022.5" cy="2111.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3031.5" y="2114.6245">getLoop() const : EventLoop *</text><ellipse cx="3022.5" cy="2124.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="3031.5" y="2127.4292">run() : void</text><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="150.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="3637" y="949.5"/><ellipse cx="3860.25" cy="965.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3863.2188,971.1406 Q3862.6406,971.4375 3862,971.5781 Q3861.3594,971.7344 3860.6563,971.7344 Q3858.1563,971.7344 3856.8281,970.0938 Q3855.5156,968.4375 3855.5156,965.3125 Q3855.5156,962.1875 3856.8281,960.5313 Q3858.1563,958.875 3860.6563,958.875 Q3861.3594,958.875 3862,959.0313 Q3862.6563,959.1875 3863.2188,959.4844 L3863.2188,962.2031 Q3862.5938,961.625 3862,961.3594 Q3861.4063,961.0781 3860.7813,961.0781 Q3859.4375,961.0781 3858.75,962.1563 Q3858.0625,963.2188 3858.0625,965.3125 Q3858.0625,967.4063 3858.75,968.4844 Q3859.4375,969.5469 3860.7813,969.5469 Q3861.4063,969.5469 3862,969.2813 Q3862.5938,969 3863.2188,968.4219 L3863.2188,971.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="3880.75" y="969.6543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3638" x2="4227" y1="981.5" y2="981.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3638" x2="4227" y1="989.5" y2="989.5"/><ellipse cx="3648" cy="1000.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3657" y="1003.7104">EventLoopThreadPool() : void</text><ellipse cx="3648" cy="1013.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="3657" y="1016.5151">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><ellipse cx="3648" cy="1026.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="3657" y="1029.3198">start() : void</text><ellipse cx="3648" cy="1038.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="3657" y="1042.1245">wait() : void</text><ellipse cx="3648" cy="1051.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3657" y="1054.9292">size() : size_t</text><ellipse cx="3648" cy="1064.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3657" y="1067.7339">getNextLoop() : EventLoop *</text><ellipse cx="3648" cy="1077.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3657" y="1080.5386">getLoop(size_t id) : EventLoop *</text><ellipse cx="3648" cy="1090.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3657" y="1093.3433">getLoops() const : std::vector&lt;EventLoop *&gt;</text><!--MD5=[30a24a86207ab2bd070e7504d6a3d0fc]
class C_0001189407896771082466--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="73.6094" id="C_0001189407896771082466" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="292" y="40"/><ellipse cx="307" cy="56" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M309.9688,61.6406 Q309.3906,61.9375 308.75,62.0781 Q308.1094,62.2344 307.4063,62.2344 Q304.9063,62.2344 303.5781,60.5938 Q302.2656,58.9375 302.2656,55.8125 Q302.2656,52.6875 303.5781,51.0313 Q304.9063,49.375 307.4063,49.375 Q308.1094,49.375 308.75,49.5313 Q309.4063,49.6875 309.9688,49.9844 L309.9688,52.7031 Q309.3438,52.125 308.75,51.8594 Q308.1563,51.5781 307.5313,51.5781 Q306.1875,51.5781 305.5,52.6563 Q304.8125,53.7188 304.8125,55.8125 Q304.8125,57.9063 305.5,58.9844 Q306.1875,60.0469 307.5313,60.0469 Q308.1563,60.0469 308.75,59.7813 Q309.3438,59.5 309.9688,58.9219 L309.9688,61.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="321" y="60.1543">InetAddress::(anonymous_2577662)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="293" x2="550" y1="72" y2="72"/><ellipse cx="303" cy="83" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="312" y="86.2104">addr_ : struct sockaddr_in</text><ellipse cx="303" cy="95.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="312" y="99.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="293" x2="550" y1="105.6094" y2="105.6094"/><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="547.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="6887.5" y="2571"/><ellipse cx="7010.25" cy="2587" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7013.2188,2592.6406 Q7012.6406,2592.9375 7012,2593.0781 Q7011.3594,2593.2344 7010.6563,2593.2344 Q7008.1563,2593.2344 7006.8281,2591.5938 Q7005.5156,2589.9375 7005.5156,2586.8125 Q7005.5156,2583.6875 7006.8281,2582.0313 Q7008.1563,2580.375 7010.6563,2580.375 Q7011.3594,2580.375 7012,2580.5313 Q7012.6563,2580.6875 7013.2188,2580.9844 L7013.2188,2583.7031 Q7012.5938,2583.125 7012,2582.8594 Q7011.4063,2582.5781 7010.7813,2582.5781 Q7009.4375,2582.5781 7008.75,2583.6563 Q7008.0625,2584.7188 7008.0625,2586.8125 Q7008.0625,2588.9063 7008.75,2589.9844 Q7009.4375,2591.0469 7010.7813,2591.0469 Q7011.4063,2591.0469 7012,2590.7813 Q7012.5938,2590.5 7013.2188,2589.9219 L7013.2188,2592.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="7030.75" y="2591.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6888.5" x2="7202.5" y1="2603" y2="2603"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6888.5" x2="7202.5" y1="2611" y2="2611"/><ellipse cx="6898.5" cy="2622" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="6907.5" y="2625.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><ellipse cx="6898.5" cy="2634.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6907.5" y="2638.0151">peek() const : const char *</text><ellipse cx="6898.5" cy="2647.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="6907.5" y="2650.8198">beginWrite() const : const char *</text><ellipse cx="6898.5" cy="2660.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6907.5" y="2663.6245">beginWrite() : char *</text><ellipse cx="6898.5" cy="2673.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6907.5" y="2676.4292">peekInt8() const : uint8_t</text><ellipse cx="6898.5" cy="2686.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6907.5" y="2689.2339">peekInt16() const : uint16_t</text><ellipse cx="6898.5" cy="2698.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6907.5" y="2702.0386">peekInt32() const : uint32_t</text><ellipse cx="6898.5" cy="2711.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6907.5" y="2714.8433">peekInt64() const : uint64_t</text><ellipse cx="6898.5" cy="2724.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6907.5" y="2727.6479">read(size_t len) : std::string</text><ellipse cx="6898.5" cy="2737.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="6907.5" y="2740.4526">readInt8() : uint8_t</text><ellipse cx="6898.5" cy="2750.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6907.5" y="2753.2573">readInt16() : uint16_t</text><ellipse cx="6898.5" cy="2762.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6907.5" y="2766.062">readInt32() : uint32_t</text><ellipse cx="6898.5" cy="2775.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6907.5" y="2778.8667">readInt64() : uint64_t</text><ellipse cx="6898.5" cy="2788.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="6907.5" y="2791.6714">swap(MsgBuffer &amp; buf) : void</text><ellipse cx="6898.5" cy="2801.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6907.5" y="2804.4761">readableBytes() const : size_t</text><ellipse cx="6898.5" cy="2814.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6907.5" y="2817.2808">writableBytes() const : size_t</text><ellipse cx="6898.5" cy="2826.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="6907.5" y="2830.0854">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="6898.5" cy="2839.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="6907.5" y="2842.8901">append(const char * buf, size_t len) : void</text><ellipse cx="6898.5" cy="2852.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="6907.5" y="2855.6948">append(const std::string &amp; buf) : void</text><ellipse cx="6898.5" cy="2865.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6907.5" y="2868.4995">appendInt8(const uint8_t b) : void</text><ellipse cx="6898.5" cy="2878.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="6907.5" y="2881.3042">appendInt16(const uint16_t s) : void</text><ellipse cx="6898.5" cy="2890.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6907.5" y="2894.1089">appendInt32(const uint32_t i) : void</text><ellipse cx="6898.5" cy="2903.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6907.5" y="2906.9136">appendInt64(const uint64_t l) : void</text><ellipse cx="6898.5" cy="2916.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="6907.5" y="2919.7183">addInFront(const char * buf, size_t len) : void</text><ellipse cx="6898.5" cy="2929.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6907.5" y="2932.5229">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="6898.5" cy="2942.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="6907.5" y="2945.3276">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="6898.5" cy="2954.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="6907.5" y="2958.1323">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="6898.5" cy="2967.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="6907.5" y="2970.937">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="6898.5" cy="2980.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="6907.5" y="2983.7417">retrieveAll() : void</text><ellipse cx="6898.5" cy="2993.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="6907.5" y="2996.5464">retrieve(size_t len) : void</text><ellipse cx="6898.5" cy="3006.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="6907.5" y="3009.3511">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="6898.5" cy="3018.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="6907.5" y="3022.1558">retrieveUntil(const char * end) : void</text><ellipse cx="6898.5" cy="3031.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="6907.5" y="3034.9604">findCRLF() const : const char *</text><ellipse cx="6898.5" cy="3044.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6907.5" y="3047.7651">ensureWritableBytes(size_t len) : void</text><ellipse cx="6898.5" cy="3057.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="6907.5" y="3060.5698">hasWritten(size_t len) : void</text><ellipse cx="6898.5" cy="3070.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="6907.5" y="3073.3745">unwrite(size_t offset) : void</text><ellipse cx="6898.5" cy="3082.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="6907.5" y="3086.1792">operator[](size_t offset) const : const char &amp;</text><ellipse cx="6898.5" cy="3095.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6907.5" y="3098.9839">operator[](size_t offset) : char &amp;</text><ellipse cx="6898.5" cy="3108.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="6907.5" y="3111.7886">append&lt;int N&gt;(const char (&amp;)[N] buf) : void</text><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="4676.5" y="2801.5"/><ellipse cx="4713.55" cy="2817.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4717.6594,2823.5 L4709.9406,2823.5 L4709.9406,2811.1094 L4717.6594,2811.1094 L4717.6594,2813.2656 L4712.3938,2813.2656 L4712.3938,2815.9375 L4717.1594,2815.9375 L4717.1594,2818.0938 L4712.3938,2818.0938 L4712.3938,2821.3438 L4717.6594,2821.3438 L4717.6594,2823.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="4732.45" y="2821.6543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4677.5" x2="4809.5" y1="2833.5" y2="2833.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="4682.5" y="2847.7104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4682.5" y="2860.5151">kSSLInvalidCertificate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="4682.5" y="2873.3198">kSSLProtocolError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4677.5" x2="4809.5" y1="2879.9141" y2="2879.9141"/><!--MD5=[bc555c99f0e75025e1dcf95caffae609]
class C_0001660397537883119469--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="99.2188" id="C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="6295" y="2795"/><ellipse cx="6390.25" cy="2811" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6390.3594,2806.3438 L6389.2031,2811.4219 L6391.5313,2811.4219 L6390.3594,2806.3438 Z M6388.875,2804.1094 L6391.8594,2804.1094 L6395.2188,2816.5 L6392.7656,2816.5 L6392,2813.4375 L6388.7188,2813.4375 L6387.9688,2816.5 L6385.5313,2816.5 L6388.875,2804.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="6410.75" y="2815.1543">Certificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6296" x2="6557" y1="2827" y2="2827"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6296" x2="6557" y1="2835" y2="2835"/><ellipse cx="6306" cy="2846" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="6315" y="2849.2104">~Certificate() = default : void</text><ellipse cx="6306" cy="2858.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="6315" y="2862.0151">sha1Fingerprint() const = 0 : std::string</text><ellipse cx="6306" cy="2871.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="6315" y="2874.8198">sha256Fingerprint() const = 0 : std::string</text><ellipse cx="6306" cy="2884.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="6315" y="2887.6245">pem() const = 0 : std::string</text><!--MD5=[5368604bbb4530f9ed0e170f7ad54dab]
class C_0002100370281243872283--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="355.3125" id="C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.5;" width="637" x="4004" y="2667"/><ellipse cx="4290.25" cy="2683" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4293.2188,2688.6406 Q4292.6406,2688.9375 4292,2689.0781 Q4291.3594,2689.2344 4290.6563,2689.2344 Q4288.1563,2689.2344 4286.8281,2687.5938 Q4285.5156,2685.9375 4285.5156,2682.8125 Q4285.5156,2679.6875 4286.8281,2678.0313 Q4288.1563,2676.375 4290.6563,2676.375 Q4291.3594,2676.375 4292,2676.5313 Q4292.6563,2676.6875 4293.2188,2676.9844 L4293.2188,2679.7031 Q4292.5938,2679.125 4292,2678.8594 Q4291.4063,2678.5781 4290.7813,2678.5781 Q4289.4375,2678.5781 4288.75,2679.6563 Q4288.0625,2680.7188 4288.0625,2682.8125 Q4288.0625,2684.9063 4288.75,2685.9844 Q4289.4375,2687.0469 4290.7813,2687.0469 Q4291.4063,2687.0469 4292,2686.7813 Q4292.5938,2686.5 4293.2188,2685.9219 L4293.2188,2688.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="4310.75" y="2687.1543">TLSPolicy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4005" x2="4640" y1="2699" y2="2699"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4005" x2="4640" y1="2707" y2="2707"/><ellipse cx="4015" cy="2718" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="560" x="4024" y="2721.2104">setConfCmds(const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2730.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="4024" y="2734.0151">setHostname(const std::string &amp; hostname) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2743.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4024" y="2746.8198">setCertPath(const std::string &amp; certPath) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2756.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4024" y="2759.6245">setKeyPath(const std::string &amp; keyPath) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2769.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="4024" y="2772.4292">setCaPath(const std::string &amp; caPath) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2782.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4024" y="2785.2339">setUseOldTLS(bool useOldTLS) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2794.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="4024" y="2798.0386">setAlpnProtocols(const std::vector&lt;std::string&gt; &amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2807.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="4024" y="2810.8433">setAlpnProtocols(std::vector&lt;std::string&gt; &amp;&amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2820.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4024" y="2823.6479">setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2833.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4024" y="2836.4526">setValidate(bool enable) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2846.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="4024" y="2849.2573">setAllowBrokenChain(bool allow) : TLSPolicy &amp;</text><ellipse cx="4015" cy="2858.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="4024" y="2862.062">getConfCmds() const : const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp;</text><ellipse cx="4015" cy="2871.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4024" y="2874.8667">getHostname() const : const std::string &amp;</text><ellipse cx="4015" cy="2884.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="4024" y="2887.6714">getCertPath() const : const std::string &amp;</text><ellipse cx="4015" cy="2897.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="4024" y="2900.4761">getKeyPath() const : const std::string &amp;</text><ellipse cx="4015" cy="2910.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4024" y="2913.2808">getCaPath() const : const std::string &amp;</text><ellipse cx="4015" cy="2922.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4024" y="2926.0854">getUseOldTLS() const : bool</text><ellipse cx="4015" cy="2935.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4024" y="2938.8901">getValidate() const : bool</text><ellipse cx="4015" cy="2948.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4024" y="2951.6948">getAllowBrokenChain() const : bool</text><ellipse cx="4015" cy="2961.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="4024" y="2964.4995">getAlpnProtocols() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="4015" cy="2974.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4024" y="2977.3042">getAlpnProtocols() : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="4015" cy="2986.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="4024" y="2990.1089">getUseSystemCertStore() const : bool</text><ellipse cx="4015" cy="2999.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="611" x="4024" y="3002.9136">defaultServerPolicy(const std::string &amp; certPath, const std::string &amp; keyPath) : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="4015" cy="3012.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="478" x="4024" y="3015.7183">defaultClientPolicy(const std::string &amp; hostname = "") : std::shared_ptr&lt;TLSPolicy&gt;</text><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="726.6484" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1413" x="4636" y="661"/><ellipse cx="5291.75" cy="677" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5291.8594,672.3438 L5290.7031,677.4219 L5293.0313,677.4219 L5291.8594,672.3438 Z M5290.375,670.1094 L5293.3594,670.1094 L5296.7188,682.5 L5294.2656,682.5 L5293.5,679.4375 L5290.2188,679.4375 L5289.4688,682.5 L5287.0313,682.5 L5290.375,670.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="5312.25" y="681.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4637" x2="6048" y1="693" y2="693"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4637" x2="6048" y1="701" y2="701"/><ellipse cx="4647" cy="712" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="4656" y="715.2104">TcpConnection() = default : void</text><ellipse cx="4647" cy="724.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4656" y="728.0151">~TcpConnection() : void</text><ellipse cx="4647" cy="737.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="4656" y="740.8198">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="4647" cy="750.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="4656" y="753.6245">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="4647" cy="763.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="4656" y="766.4292">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="4647" cy="776.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="4656" y="779.2339">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="4647" cy="788.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="4656" y="792.0386">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="4647" cy="801.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="4656" y="804.8433">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="4647" cy="814.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4656" y="817.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4647" cy="827.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4656" y="830.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4647" cy="840.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="4656" y="843.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4647" cy="852.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="4656" y="856.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4647" cy="865.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="4656" y="868.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="4647" cy="878.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4656" y="881.6714">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4647" cy="891.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4656" y="894.4761">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4647" cy="904.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4656" y="907.2808">connected() const = 0 : bool</text><ellipse cx="4647" cy="916.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4656" y="920.0854">disconnected() const = 0 : bool</text><ellipse cx="4647" cy="929.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="4656" y="932.8901">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="4647" cy="942.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4656" y="945.6948">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="4647" cy="955.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="4656" y="958.4995">shutdown() = 0 : void</text><ellipse cx="4647" cy="968.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="4656" y="971.3042">forceClose() = 0 : void</text><ellipse cx="4647" cy="980.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="4656" y="984.1089">getLoop() = 0 : EventLoop *</text><ellipse cx="4647" cy="993.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="4656" y="996.9136">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="4647" cy="1006.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4656" y="1009.7183">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="4647" cy="1019.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="242" x="4656" y="1022.5229">applicationProtocol() const = 0 : std::string</text><ellipse cx="4647" cy="1032.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4656" y="1035.3276">hasContext() const : bool</text><ellipse cx="4647" cy="1044.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4656" y="1048.1323">clearContext() : void</text><ellipse cx="4647" cy="1057.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="4656" y="1060.937">keepAlive() = 0 : void</text><ellipse cx="4647" cy="1070.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="4656" y="1073.7417">isKeepAlive() = 0 : bool</text><ellipse cx="4647" cy="1083.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="4656" y="1086.5464">bytesSent() const = 0 : size_t</text><ellipse cx="4647" cy="1096.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="4656" y="1099.3511">bytesReceived() const = 0 : size_t</text><ellipse cx="4647" cy="1108.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4656" y="1112.1558">isSSLConnection() const = 0 : bool</text><ellipse cx="4647" cy="1121.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="4656" y="1124.9604">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="4647" cy="1134.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="4656" y="1137.7651">peerCertificate() const = 0 : CertificatePtr</text><ellipse cx="4647" cy="1147.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="4656" y="1150.5698">sniName() const = 0 : std::string</text><ellipse cx="4647" cy="1160.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="772" x="4656" y="1163.3745">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) = 0 : void</text><ellipse cx="4647" cy="1172.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1387" x="4656" y="1176.1792">startClientEncryption(std::function&lt;void (const TcpConnectionPtr &amp;)&gt; &amp;&amp; callback, bool useOldTLS = false, bool validateCert = true, const std::string &amp; hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="4656" y="1188.9839">{}) : void</text><ellipse cx="4647" cy="1198.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4656" y="1201.7886">setValidationPolicy(TLSPolicy &amp;&amp; policy) : void</text><ellipse cx="4647" cy="1211.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4656" y="1214.5933">setRecvMsgCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="4647" cy="1224.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4656" y="1227.3979">setRecvMsgCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="4647" cy="1236.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4656" y="1240.2026">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="4647" cy="1249.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4656" y="1253.0073">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4647" cy="1262.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="4656" y="1265.812">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="4647" cy="1275.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4656" y="1278.6167">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="4647" cy="1288.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="4656" y="1291.4214">setCloseCallback(const CloseCallback &amp; cb) : void</text><ellipse cx="4647" cy="1301.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4656" y="1304.2261">setCloseCallback(CloseCallback &amp;&amp; cb) : void</text><ellipse cx="4647" cy="1313.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4656" y="1317.0308">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="4647" cy="1326.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4656" y="1329.8354">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4647" cy="1339.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4656" y="1342.6401">connectEstablished() = 0 : void</text><ellipse cx="4647" cy="1352.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="170" x="4656" y="1355.4448">connectDestroyed() = 0 : void</text><ellipse cx="4647" cy="1365.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="547" x="4656" y="1368.2495">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) = 0 : void</text><ellipse cx="4647" cy="1377.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4656" y="1381.0542">getContext&lt;T&gt;() : std::shared_ptr&lt;T&gt;</text><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="112.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="5386.5" y="2273"/><ellipse cx="5690.25" cy="2289" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5693.2188,2294.6406 Q5692.6406,2294.9375 5692,2295.0781 Q5691.3594,2295.2344 5690.6563,2295.2344 Q5688.1563,2295.2344 5686.8281,2293.5938 Q5685.5156,2291.9375 5685.5156,2288.8125 Q5685.5156,2285.6875 5686.8281,2284.0313 Q5688.1563,2282.375 5690.6563,2282.375 Q5691.3594,2282.375 5692,2282.5313 Q5692.6563,2282.6875 5693.2188,2282.9844 L5693.2188,2285.7031 Q5692.5938,2285.125 5692,2284.8594 Q5691.4063,2284.5781 5690.7813,2284.5781 Q5689.4375,2284.5781 5688.75,2285.6563 Q5688.0625,2286.7188 5688.0625,2288.8125 Q5688.0625,2290.9063 5688.75,2291.9844 Q5689.4375,2293.0469 5690.7813,2293.0469 Q5691.4063,2293.0469 5692,2292.7813 Q5692.5938,2292.5 5693.2188,2291.9219 L5693.2188,2294.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="5710.75" y="2293.1543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5387.5" x2="6079.5" y1="2305" y2="2305"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5387.5" x2="6079.5" y1="2313" y2="2313"/><ellipse cx="5397.5" cy="2324" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="5406.5" y="2327.2104">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="5397.5" cy="2336.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5406.5" y="2340.0151">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5397.5" cy="2349.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="5406.5" y="2352.8198">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5397.5" cy="2362.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5406.5" y="2365.6245">getLoop() : EventLoop *</text><ellipse cx="5397.5" cy="2375.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5406.5" y="2378.4292">~TimingWheel() : void</text><!--MD5=[1a78d5db763eaae95321a32dcf46614d]
class C_0002013739811805694444--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="73.6094" id="C_0002013739811805694444" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="5656.5" y="1707"/><ellipse cx="5710.25" cy="1723" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5713.2188,1728.6406 Q5712.6406,1728.9375 5712,1729.0781 Q5711.3594,1729.2344 5710.6563,1729.2344 Q5708.1563,1729.2344 5706.8281,1727.5938 Q5705.5156,1725.9375 5705.5156,1722.8125 Q5705.5156,1719.6875 5706.8281,1718.0313 Q5708.1563,1716.375 5710.6563,1716.375 Q5711.3594,1716.375 5712,1716.5313 Q5712.6563,1716.6875 5713.2188,1716.9844 L5713.2188,1719.7031 Q5712.5938,1719.125 5712,1718.8594 Q5711.4063,1718.5781 5710.7813,1718.5781 Q5709.4375,1718.5781 5708.75,1719.6563 Q5708.0625,1720.7188 5708.0625,1722.8125 Q5708.0625,1724.9063 5708.75,1725.9844 Q5709.4375,1727.0469 5710.7813,1727.0469 Q5711.4063,1727.0469 5712,1726.7813 Q5712.5938,1726.5 5713.2188,1725.9219 L5713.2188,1728.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="5730.75" y="1727.1543">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5657.5" x2="5941.5" y1="1739" y2="1739"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5657.5" x2="5941.5" y1="1747" y2="1747"/><ellipse cx="5667.5" cy="1758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5676.5" y="1761.2104">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="5667.5" cy="1770.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5676.5" y="1774.0151">~CallbackEntry() : void</text><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="329.7031" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="985" x="5252" y="223"/><ellipse cx="5709.25" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5712.2188,244.6406 Q5711.6406,244.9375 5711,245.0781 Q5710.3594,245.2344 5709.6563,245.2344 Q5707.1563,245.2344 5705.8281,243.5938 Q5704.5156,241.9375 5704.5156,238.8125 Q5704.5156,235.6875 5705.8281,234.0313 Q5707.1563,232.375 5709.6563,232.375 Q5710.3594,232.375 5711,232.5313 Q5711.6563,232.6875 5712.2188,232.9844 L5712.2188,235.7031 Q5711.5938,235.125 5711,234.8594 Q5710.4063,234.5781 5709.7813,234.5781 Q5708.4375,234.5781 5707.75,235.6563 Q5707.0625,236.7188 5707.0625,238.8125 Q5707.0625,240.9063 5707.75,241.9844 Q5708.4375,243.0469 5709.7813,243.0469 Q5710.4063,243.0469 5711,242.7813 Q5711.5938,242.5 5712.2188,241.9219 L5712.2188,244.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="5729.75" y="243.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5253" x2="6236" y1="255" y2="255"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5253" x2="6236" y1="263" y2="263"/><ellipse cx="5263" cy="274" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="745" x="5272" y="277.2104">TcpServer(EventLoop * loop, const InetAddress &amp; address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="5263" cy="286.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5272" y="290.0151">~TcpServer() : void</text><ellipse cx="5263" cy="299.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5272" y="302.8198">start() : void</text><ellipse cx="5263" cy="312.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5272" y="315.6245">stop() : void</text><ellipse cx="5263" cy="325.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5272" y="328.4292">setIoLoopNum(size_t num) : void</text><ellipse cx="5263" cy="338.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5272" y="341.2339">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="5263" cy="350.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5272" y="354.0386">setIoLoops(const std::vector&lt;EventLoop *&gt; &amp; ioLoops) : void</text><ellipse cx="5263" cy="363.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="5272" y="366.8433">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5263" cy="376.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="5272" y="379.6479">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5263" cy="389.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5272" y="392.4526">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5263" cy="402.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5272" y="405.2573">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5263" cy="414.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5272" y="418.062">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5263" cy="427.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5272" y="430.8667">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5263" cy="440.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5272" y="443.6714">name() const : const std::string &amp;</text><ellipse cx="5263" cy="453.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5272" y="456.4761">ipPort() const : std::string</text><ellipse cx="5263" cy="466.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5272" y="469.2808">address() const : const InetAddress &amp;</text><ellipse cx="5263" cy="478.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5272" y="482.0854">getLoop() const : EventLoop *</text><ellipse cx="5263" cy="491.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="5272" y="494.8901">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="5263" cy="504.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="5272" y="507.6948">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="5263" cy="517.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="959" x="5272" y="520.4995">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5272" y="533.3042">{}, const std::string &amp; caPath = "") : void</text><ellipse cx="5263" cy="542.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5272" y="546.1089">enableSSL(TLSPolicyPtr policy) : void</text><!--MD5=[094a28402c24830a9b549b01e4879f1e]
class C_0001489562721151066050--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="60.8047" id="C_0001489562721151066050" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="8330.5" y="46.5"/><ellipse cx="8345.5" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8348.4688,68.1406 Q8347.8906,68.4375 8347.25,68.5781 Q8346.6094,68.7344 8345.9063,68.7344 Q8343.4063,68.7344 8342.0781,67.0938 Q8340.7656,65.4375 8340.7656,62.3125 Q8340.7656,59.1875 8342.0781,57.5313 Q8343.4063,55.875 8345.9063,55.875 Q8346.6094,55.875 8347.25,56.0313 Q8347.9063,56.1875 8348.4688,56.4844 L8348.4688,59.2031 Q8347.8438,58.625 8347.25,58.3594 Q8346.6563,58.0781 8346.0313,58.0781 Q8344.6875,58.0781 8344,59.1563 Q8343.3125,60.2188 8343.3125,62.3125 Q8343.3125,64.4063 8344,65.4844 Q8344.6875,66.5469 8346.0313,66.5469 Q8346.6563,66.5469 8347.25,66.2813 Q8347.8438,66 8348.4688,65.4219 L8348.4688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="8359.5" y="66.6543">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8331.5" x2="8517.5" y1="78.5" y2="78.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8331.5" x2="8517.5" y1="86.5" y2="86.5"/><ellipse cx="8341.5" cy="97.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="8350.5" y="100.7104">IgnoreSigPipe() : void</text><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="304.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="8790.5" y="2692.5"/><ellipse cx="8921.75" cy="2708.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8924.7188,2714.1406 Q8924.1406,2714.4375 8923.5,2714.5781 Q8922.8594,2714.7344 8922.1563,2714.7344 Q8919.6563,2714.7344 8918.3281,2713.0938 Q8917.0156,2711.4375 8917.0156,2708.3125 Q8917.0156,2705.1875 8918.3281,2703.5313 Q8919.6563,2701.875 8922.1563,2701.875 Q8922.8594,2701.875 8923.5,2702.0313 Q8924.1563,2702.1875 8924.7188,2702.4844 L8924.7188,2705.2031 Q8924.0938,2704.625 8923.5,2704.3594 Q8922.9063,2704.0781 8922.2813,2704.0781 Q8920.9375,2704.0781 8920.25,2705.1563 Q8919.5625,2706.2188 8919.5625,2708.3125 Q8919.5625,2710.4063 8920.25,2711.4844 Q8920.9375,2712.5469 8922.2813,2712.5469 Q8922.9063,2712.5469 8923.5,2712.2813 Q8924.0938,2712 8924.7188,2711.4219 L8924.7188,2714.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="8942.25" y="2712.6543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8791.5" x2="9103.5" y1="2724.5" y2="2724.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8791.5" x2="9103.5" y1="2732.5" y2="2732.5"/><ellipse cx="8801.5" cy="2743.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="8810.5" y="2746.7104">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="8801.5" cy="2756.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="8810.5" y="2759.5151">getSocketError(int sockfd) : int</text><ellipse cx="8801.5" cy="2769.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="8810.5" y="2772.3198">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="8801.5" cy="2781.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="8810.5" y="2785.1245">isSelfConnect(int sockfd) : bool</text><ellipse cx="8801.5" cy="2794.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="8810.5" y="2797.9292">Socket(int sockfd) : void</text><ellipse cx="8801.5" cy="2807.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="8810.5" y="2810.7339">~Socket() : void</text><ellipse cx="8801.5" cy="2820.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="8810.5" y="2823.5386">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="8801.5" cy="2833.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="8810.5" y="2836.3433">listen() : void</text><ellipse cx="8801.5" cy="2845.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="8810.5" y="2849.1479">accept(InetAddress * peeraddr) : int</text><ellipse cx="8801.5" cy="2858.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="8810.5" y="2861.9526">closeWrite() : void</text><ellipse cx="8801.5" cy="2871.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="8810.5" y="2874.7573">read(char * buffer, uint64_t len) : int</text><ellipse cx="8801.5" cy="2884.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="8810.5" y="2887.562">fd() : int</text><ellipse cx="8801.5" cy="2897.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="8810.5" y="2900.3667">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="8801.5" cy="2909.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="8810.5" y="2913.1714">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="8801.5" cy="2922.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="8810.5" y="2925.9761">setTcpNoDelay(bool on) : void</text><ellipse cx="8801.5" cy="2935.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="8810.5" y="2938.7808">setReuseAddr(bool on) : void</text><ellipse cx="8801.5" cy="2948.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="8810.5" y="2951.5854">setReusePort(bool on) : void</text><ellipse cx="8801.5" cy="2961.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="8810.5" y="2964.3901">setKeepAlive(bool on) : void</text><ellipse cx="8801.5" cy="2973.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="8810.5" y="2977.1948">getSocketError() : int</text><ellipse cx="8801.5" cy="2986.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="8810.5" y="2989.9995">setNonBlockAndCloseOnExec(int sockfd) : void</text><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="419.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="4972.5" y="4239"/><ellipse cx="5124.75" cy="4255" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5127.7188,4260.6406 Q5127.1406,4260.9375 5126.5,4261.0781 Q5125.8594,4261.2344 5125.1563,4261.2344 Q5122.6563,4261.2344 5121.3281,4259.5938 Q5120.0156,4257.9375 5120.0156,4254.8125 Q5120.0156,4251.6875 5121.3281,4250.0313 Q5122.6563,4248.375 5125.1563,4248.375 Q5125.8594,4248.375 5126.5,4248.5313 Q5127.1563,4248.6875 5127.7188,4248.9844 L5127.7188,4251.7031 Q5127.0938,4251.125 5126.5,4250.8594 Q5125.9063,4250.5781 5125.2813,4250.5781 Q5123.9375,4250.5781 5123.25,4251.6563 Q5122.5625,4252.7188 5122.5625,4254.8125 Q5122.5625,4256.9063 5123.25,4257.9844 Q5123.9375,4259.0469 5125.2813,4259.0469 Q5125.9063,4259.0469 5126.5,4258.7813 Q5127.0938,4258.5 5127.7188,4257.9219 L5127.7188,4260.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5145.25" y="4259.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4973.5" x2="5335.5" y1="4271" y2="4271"/><ellipse cx="4983.5" cy="4282" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="4992.5" y="4285.2104">kNoneEvent : const int</text><ellipse cx="4983.5" cy="4294.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="4992.5" y="4298.0151">kReadEvent : const int</text><ellipse cx="4983.5" cy="4307.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="4992.5" y="4310.8198">kWriteEvent : const int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4973.5" x2="5335.5" y1="4317.4141" y2="4317.4141"/><ellipse cx="4983.5" cy="4328.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4992.5" y="4331.6245">Channel(EventLoop * loop, int fd) : void</text><ellipse cx="4983.5" cy="4341.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="4992.5" y="4344.4292">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4983.5" cy="4354.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="4992.5" y="4357.2339">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4983.5" cy="4366.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="4992.5" y="4370.0386">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4983.5" cy="4379.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="4992.5" y="4382.8433">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4983.5" cy="4392.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="4992.5" y="4395.6479">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4983.5" cy="4405.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4992.5" y="4408.4526">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4983.5" cy="4418.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="4992.5" y="4421.2573">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4983.5" cy="4430.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="4992.5" y="4434.062">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4983.5" cy="4443.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="4992.5" y="4446.8667">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4983.5" cy="4456.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4992.5" y="4459.6714">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4983.5" cy="4469.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4992.5" y="4472.4761">fd() const : int</text><ellipse cx="4983.5" cy="4482.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4992.5" y="4485.2808">events() const : int</text><ellipse cx="4983.5" cy="4494.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4992.5" y="4498.0854">revents() const : int</text><ellipse cx="4983.5" cy="4507.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4992.5" y="4510.8901">isNoneEvent() const : bool</text><ellipse cx="4983.5" cy="4520.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4992.5" y="4523.6948">disableAll() : void</text><ellipse cx="4983.5" cy="4533.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4992.5" y="4536.4995">remove() : void</text><ellipse cx="4983.5" cy="4546.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4992.5" y="4549.3042">ownerLoop() : EventLoop *</text><ellipse cx="4983.5" cy="4558.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4992.5" y="4562.1089">enableReading() : void</text><ellipse cx="4983.5" cy="4571.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4992.5" y="4574.9136">disableReading() : void</text><ellipse cx="4983.5" cy="4584.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4992.5" y="4587.7183">enableWriting() : void</text><ellipse cx="4983.5" cy="4597.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4992.5" y="4600.5229">disableWriting() : void</text><ellipse cx="4983.5" cy="4610.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4992.5" y="4613.3276">isWriting() const : bool</text><ellipse cx="4983.5" cy="4622.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4992.5" y="4626.1323">isReading() const : bool</text><ellipse cx="4983.5" cy="4635.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4992.5" y="4638.937">updateEvents(int events) : void</text><ellipse cx="4983.5" cy="4648.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4992.5" y="4651.7417">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="112.0234" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="8980.5" y="2273"/><ellipse cx="9267.25" cy="2289" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9270.2188,2294.6406 Q9269.6406,2294.9375 9269,2295.0781 Q9268.3594,2295.2344 9267.6563,2295.2344 Q9265.1563,2295.2344 9263.8281,2293.5938 Q9262.5156,2291.9375 9262.5156,2288.8125 Q9262.5156,2285.6875 9263.8281,2284.0313 Q9265.1563,2282.375 9267.6563,2282.375 Q9268.3594,2282.375 9269,2282.5313 Q9269.6563,2282.6875 9270.2188,2282.9844 L9270.2188,2285.7031 Q9269.5938,2285.125 9269,2284.8594 Q9268.4063,2284.5781 9267.7813,2284.5781 Q9266.4375,2284.5781 9265.75,2285.6563 Q9265.0625,2286.7188 9265.0625,2288.8125 Q9265.0625,2290.9063 9265.75,2291.9844 Q9266.4375,2293.0469 9267.7813,2293.0469 Q9268.4063,2293.0469 9269,2292.7813 Q9269.5938,2292.5 9270.2188,2291.9219 L9270.2188,2294.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="9287.75" y="2293.1543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8981.5" x2="9617.5" y1="2305" y2="2305"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8981.5" x2="9617.5" y1="2313" y2="2313"/><ellipse cx="8991.5" cy="2324" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="9000.5" y="2327.2104">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="8991.5" cy="2336.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="9000.5" y="2340.0151">~Acceptor() : void</text><ellipse cx="8991.5" cy="2349.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="9000.5" y="2352.8198">addr() const : const InetAddress &amp;</text><ellipse cx="8991.5" cy="2362.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="9000.5" y="2365.6245">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><ellipse cx="8991.5" cy="2375.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="9000.5" y="2378.4292">listen() : void</text><!--MD5=[bf31e704e42c877df2dec6bd5fd054fb]
class C_0000464040622375950341--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="278.4844" id="C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="6329" y="2190"/><ellipse cx="6530.25" cy="2206" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6530.3594,2201.3438 L6529.2031,2206.4219 L6531.5313,2206.4219 L6530.3594,2201.3438 Z M6528.875,2199.1094 L6531.8594,2199.1094 L6535.2188,2211.5 L6532.7656,2211.5 L6532,2208.4375 L6528.7188,2208.4375 L6527.9688,2211.5 L6525.5313,2211.5 L6528.875,2199.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="6550.75" y="2210.1543">TLSProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6330" x2="6811" y1="2222" y2="2222"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6330" x2="6811" y1="2230" y2="2230"/><ellipse cx="6340" cy="2241" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="6349" y="2244.2104">TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void</text><ellipse cx="6340" cy="2253.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="6349" y="2257.0151">~TLSProvider() = default : void</text><ellipse cx="6340" cy="2266.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="224" x="6349" y="2269.8198">recvData(MsgBuffer * buffer) = 0 : void</text><ellipse cx="6340" cy="2279.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="290" x="6349" y="2282.6245">sendData(const char * ptr, size_t size) = 0 : ssize_t</text><ellipse cx="6340" cy="2292.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="6349" y="2295.4292">close() = 0 : void</text><ellipse cx="6340" cy="2305.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="6349" y="2308.2339">startEncryption() = 0 : void</text><ellipse cx="6340" cy="2317.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="6349" y="2321.0386">sendBufferedData() : bool</text><ellipse cx="6340" cy="2330.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6349" y="2333.8433">getBufferedData() : MsgBuffer &amp;</text><ellipse cx="6340" cy="2343.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="6349" y="2346.6479">appendToWriteBuffer(const char * ptr, size_t size) : void</text><ellipse cx="6340" cy="2356.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="6349" y="2359.4526">setWriteCallback(TLSProvider::WriteCallback cb) : void</text><ellipse cx="6340" cy="2369.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="6349" y="2372.2573">setErrorCallback(TLSProvider::ErrorCallback cb) : void</text><ellipse cx="6340" cy="2381.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="6349" y="2385.062">setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void</text><ellipse cx="6340" cy="2394.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="6349" y="2397.8667">setMessageCallback(TLSProvider::MessageCallback cb) : void</text><ellipse cx="6340" cy="2407.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="6349" y="2410.6714">setCloseCallback(TLSProvider::CloseCallback cb) : void</text><ellipse cx="6340" cy="2420.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6349" y="2423.4761">getRecvBuffer() : MsgBuffer &amp;</text><ellipse cx="6340" cy="2433.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="6349" y="2436.2808">peerCertificate() const : const CertificatePtr &amp;</text><ellipse cx="6340" cy="2445.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="6349" y="2449.0854">applicationProtocol() const : const std::string &amp;</text><ellipse cx="6340" cy="2458.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6349" y="2461.8901">sniName() const : const std::string &amp;</text><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="496.1641" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1036" x="6312.5" y="1496"/><ellipse cx="6767.25" cy="1512" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6770.2188,1517.6406 Q6769.6406,1517.9375 6769,1518.0781 Q6768.3594,1518.2344 6767.6563,1518.2344 Q6765.1563,1518.2344 6763.8281,1516.5938 Q6762.5156,1514.9375 6762.5156,1511.8125 Q6762.5156,1508.6875 6763.8281,1507.0313 Q6765.1563,1505.375 6767.6563,1505.375 Q6768.3594,1505.375 6769,1505.5313 Q6769.6563,1505.6875 6770.2188,1505.9844 L6770.2188,1508.7031 Q6769.5938,1508.125 6769,1507.8594 Q6768.4063,1507.5781 6767.7813,1507.5781 Q6766.4375,1507.5781 6765.75,1508.6563 Q6765.0625,1509.7188 6765.0625,1511.8125 Q6765.0625,1513.9063 6765.75,1514.9844 Q6766.4375,1516.0469 6767.7813,1516.0469 Q6768.4063,1516.0469 6769,1515.7813 Q6769.5938,1515.5 6770.2188,1514.9219 L6770.2188,1517.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="6787.75" y="1516.1543">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6313.5" x2="7347.5" y1="1528" y2="1528"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6313.5" x2="7347.5" y1="1536" y2="1536"/><ellipse cx="6323.5" cy="1547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1010" x="6332.5" y="1550.2104">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void</text><ellipse cx="6323.5" cy="1559.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6332.5" y="1563.0151">~TcpConnectionImpl() : void</text><ellipse cx="6323.5" cy="1572.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="6332.5" y="1575.8198">send(const char * msg, size_t len) : void</text><ellipse cx="6323.5" cy="1585.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="6332.5" y="1588.6245">send(const void * msg, size_t len) : void</text><ellipse cx="6323.5" cy="1598.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6332.5" y="1601.4292">send(const std::string &amp; msg) : void</text><ellipse cx="6323.5" cy="1611.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="6332.5" y="1614.2339">send(std::string &amp;&amp; msg) : void</text><ellipse cx="6323.5" cy="1623.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="6332.5" y="1627.0386">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="6323.5" cy="1636.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="6332.5" y="1639.8433">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="6323.5" cy="1649.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="6332.5" y="1652.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="6323.5" cy="1662.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="6332.5" y="1665.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="6323.5" cy="1675.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="6332.5" y="1678.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="6323.5" cy="1687.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="6332.5" y="1691.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="6323.5" cy="1700.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="6332.5" y="1703.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="6323.5" cy="1713.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="6332.5" y="1716.6714">localAddr() const : const InetAddress &amp;</text><ellipse cx="6323.5" cy="1726.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="6332.5" y="1729.4761">peerAddr() const : const InetAddress &amp;</text><ellipse cx="6323.5" cy="1739.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6332.5" y="1742.2808">connected() const : bool</text><ellipse cx="6323.5" cy="1751.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="6332.5" y="1755.0854">disconnected() const : bool</text><ellipse cx="6323.5" cy="1764.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="6332.5" y="1767.8901">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="6323.5" cy="1777.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="6332.5" y="1780.6948">keepAlive() : void</text><ellipse cx="6323.5" cy="1790.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="6332.5" y="1793.4995">isKeepAlive() : bool</text><ellipse cx="6323.5" cy="1803.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6332.5" y="1806.3042">setTcpNoDelay(bool on) : void</text><ellipse cx="6323.5" cy="1815.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6332.5" y="1819.1089">shutdown() : void</text><ellipse cx="6323.5" cy="1828.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6332.5" y="1831.9136">forceClose() : void</text><ellipse cx="6323.5" cy="1841.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6332.5" y="1844.7183">getLoop() : EventLoop *</text><ellipse cx="6323.5" cy="1854.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="6332.5" y="1857.5229">bytesSent() const : size_t</text><ellipse cx="6323.5" cy="1867.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6332.5" y="1870.3276">bytesReceived() const : size_t</text><ellipse cx="6323.5" cy="1879.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="6332.5" y="1883.1323">isSSLConnection() const : bool</text><ellipse cx="6323.5" cy="1892.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6332.5" y="1895.937">connectEstablished() : void</text><ellipse cx="6323.5" cy="1905.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="6332.5" y="1908.7417">connectDestroyed() : void</text><ellipse cx="6323.5" cy="1918.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="6332.5" y="1921.5464">getRecvBuffer() : MsgBuffer *</text><ellipse cx="6323.5" cy="1931.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="6332.5" y="1934.3511">applicationProtocol() const : std::string</text><ellipse cx="6323.5" cy="1943.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6332.5" y="1947.1558">peerCertificate() const : CertificatePtr</text><ellipse cx="6323.5" cy="1956.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6332.5" y="1959.9604">sniName() const : std::string</text><ellipse cx="6323.5" cy="1969.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="749" x="6332.5" y="1972.7651">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) : void</text><ellipse cx="6323.5" cy="1982.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="6332.5" y="1985.5698">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) : void</text><!--MD5=[fd31fd44dd4b53895283cc4ebf0192ff]
class C_0002266895444343633259--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0002266895444343633259" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="4824" y="345"/><ellipse cx="4917.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4920.2188,366.6406 Q4919.6406,366.9375 4919,367.0781 Q4918.3594,367.2344 4917.6563,367.2344 Q4915.1563,367.2344 4913.8281,365.5938 Q4912.5156,363.9375 4912.5156,360.8125 Q4912.5156,357.6875 4913.8281,356.0313 Q4915.1563,354.375 4917.6563,354.375 Q4918.3594,354.375 4919,354.5313 Q4919.6563,354.6875 4920.2188,354.9844 L4920.2188,357.7031 Q4919.5938,357.125 4919,356.8594 Q4918.4063,356.5781 4917.7813,356.5781 Q4916.4375,356.5781 4915.75,357.6563 Q4915.0625,358.7188 4915.0625,360.8125 Q4915.0625,362.9063 4915.75,363.9844 Q4916.4375,365.0469 4917.7813,365.0469 Q4918.4063,365.0469 4919,364.7813 Q4919.5938,364.5 4920.2188,363.9219 L4920.2188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="4937.75" y="365.1543">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4825" x2="5216" y1="377" y2="377"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4825" x2="5216" y1="385" y2="385"/><ellipse cx="4835" cy="396" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="4844" y="399.2104">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="4835" cy="408.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4844" y="412.0151">reset() : void</text><ellipse cx="4835" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4844" y="424.8198">~KickoffEntry() : void</text><!--MD5=[87de1d9bdb2486f0ceeb68ee204e5830]
class C_0001029063960859366412--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="163.2422" id="C_0001029063960859366412" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="7482.5" y="943"/><ellipse cx="7574.25" cy="959" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7577.2188,964.6406 Q7576.6406,964.9375 7576,965.0781 Q7575.3594,965.2344 7574.6563,965.2344 Q7572.1563,965.2344 7570.8281,963.5938 Q7569.5156,961.9375 7569.5156,958.8125 Q7569.5156,955.6875 7570.8281,954.0313 Q7572.1563,952.375 7574.6563,952.375 Q7575.3594,952.375 7576,952.5313 Q7576.6563,952.6875 7577.2188,952.9844 L7577.2188,955.7031 Q7576.5938,955.125 7576,954.8594 Q7575.4063,954.5781 7574.7813,954.5781 Q7573.4375,954.5781 7572.75,955.6563 Q7572.0625,956.7188 7572.0625,958.8125 Q7572.0625,960.9063 7572.75,961.9844 Q7573.4375,963.0469 7574.7813,963.0469 Q7575.4063,963.0469 7576,962.7813 Q7576.5938,962.5 7577.2188,961.9219 L7577.2188,964.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="7594.75" y="963.1543">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7483.5" x2="7869.5" y1="975" y2="975"/><ellipse cx="7493.5" cy="986" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="7502.5" y="989.2104">sendFd_ : int</text><ellipse cx="7493.5" cy="998.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="7502.5" y="1002.0151">offset_ : off_t</text><ellipse cx="7493.5" cy="1011.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7502.5" y="1014.8198">fileBytesToSend_ : ssize_t</text><ellipse cx="7493.5" cy="1024.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="7502.5" y="1027.6245">nDataWritten_ : std::size_t</text><ellipse cx="7493.5" cy="1037.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="7502.5" y="1040.4292">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><ellipse cx="7493.5" cy="1050.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7502.5" y="1053.2339">closeConnection_ : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7483.5" x2="7869.5" y1="1059.8281" y2="1059.8281"/><ellipse cx="7493.5" cy="1070.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="7502.5" y="1074.0386">isFile() const : bool</text><ellipse cx="7493.5" cy="1083.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="7502.5" y="1086.8433">~BufferNode() : void</text><ellipse cx="7493.5" cy="1096.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="7502.5" y="1099.6479">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[8afb725b5f97df604240a26bac5b9bd6]
class C_0001727349338344491225--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="99.2188" id="C_0001727349338344491225" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="7080" y="975"/><ellipse cx="7095" cy="991" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7099.1094,997 L7091.3906,997 L7091.3906,984.6094 L7099.1094,984.6094 L7099.1094,986.7656 L7093.8438,986.7656 L7093.8438,989.4375 L7098.6094,989.4375 L7098.6094,991.5938 L7093.8438,991.5938 L7093.8438,994.8438 L7099.1094,994.8438 L7099.1094,997 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="7109" y="995.1543">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7081" x2="7310" y1="1007" y2="1007"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="7086" y="1021.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="7086" y="1034.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="7086" y="1046.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="7086" y="1059.6245">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7081" x2="7310" y1="1066.2188" y2="1066.2188"/><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="150.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="4326" y="3871"/><ellipse cx="4486.25" cy="3887" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4486.3594,3882.3438 L4485.2031,3887.4219 L4487.5313,3887.4219 L4486.3594,3882.3438 Z M4484.875,3880.1094 L4487.8594,3880.1094 L4491.2188,3892.5 L4488.7656,3892.5 L4488,3889.4375 L4484.7188,3889.4375 L4483.9688,3892.5 L4481.5313,3892.5 L4484.875,3880.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="4506.75" y="3891.1543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4327" x2="4688" y1="3903" y2="3903"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4327" x2="4688" y1="3911" y2="3911"/><ellipse cx="4337" cy="3922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4346" y="3925.2104">Poller(EventLoop * loop) : void</text><ellipse cx="4337" cy="3934.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4346" y="3938.0151">~Poller() : void</text><ellipse cx="4337" cy="3947.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4346" y="3950.8198">assertInLoopThread() : void</text><ellipse cx="4337" cy="3960.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="4346" y="3963.6245">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="4337" cy="3973.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="4346" y="3976.4292">updateChannel(Channel * channel) = 0 : void</text><ellipse cx="4337" cy="3986.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="4346" y="3989.2339">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="4337" cy="3998.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4346" y="4002.0386">resetAfterFork() : void</text><ellipse cx="4337" cy="4011.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="4346" y="4014.8433">newPoller(EventLoop * loop) : Poller *</text><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="137.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="3682" y="3877"/><ellipse cx="3944.75" cy="3893" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3947.7188,3898.6406 Q3947.1406,3898.9375 3946.5,3899.0781 Q3945.8594,3899.2344 3945.1563,3899.2344 Q3942.6563,3899.2344 3941.3281,3897.5938 Q3940.0156,3895.9375 3940.0156,3892.8125 Q3940.0156,3889.6875 3941.3281,3888.0313 Q3942.6563,3886.375 3945.1563,3886.375 Q3945.8594,3886.375 3946.5,3886.5313 Q3947.1563,3886.6875 3947.7188,3886.9844 L3947.7188,3889.7031 Q3947.0938,3889.125 3946.5,3888.8594 Q3945.9063,3888.5781 3945.2813,3888.5781 Q3943.9375,3888.5781 3943.25,3889.6563 Q3942.5625,3890.7188 3942.5625,3892.8125 Q3942.5625,3894.9063 3943.25,3895.9844 Q3943.9375,3897.0469 3945.2813,3897.0469 Q3945.9063,3897.0469 3946.5,3896.7813 Q3947.0938,3896.5 3947.7188,3895.9219 L3947.7188,3898.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="3965.25" y="3897.1543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3683" x2="4290" y1="3909" y2="3909"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3683" x2="4290" y1="3917" y2="3917"/><ellipse cx="3693" cy="3928" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3702" y="3931.2104">TimerQueue(EventLoop * loop) : void</text><ellipse cx="3693" cy="3940.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3702" y="3944.0151">~TimerQueue() : void</text><ellipse cx="3693" cy="3953.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="3702" y="3956.8198">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="3693" cy="3966.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="3702" y="3969.6245">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="3693" cy="3979.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="3702" y="3982.4292">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="3693" cy="3992.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="3702" y="3995.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="3693" cy="4004.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3702" y="4008.0386">reset() : void</text><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="6679.5" y="2820.5"/><ellipse cx="6694.5" cy="2836.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6697.4688,2842.1406 Q6696.8906,2842.4375 6696.25,2842.5781 Q6695.6094,2842.7344 6694.9063,2842.7344 Q6692.4063,2842.7344 6691.0781,2841.0938 Q6689.7656,2839.4375 6689.7656,2836.3125 Q6689.7656,2833.1875 6691.0781,2831.5313 Q6692.4063,2829.875 6694.9063,2829.875 Q6695.6094,2829.875 6696.25,2830.0313 Q6696.9063,2830.1875 6697.4688,2830.4844 L6697.4688,2833.2031 Q6696.8438,2832.625 6696.25,2832.3594 Q6695.6563,2832.0781 6695.0313,2832.0781 Q6693.6875,2832.0781 6693,2833.1563 Q6692.3125,2834.2188 6692.3125,2836.3125 Q6692.3125,2838.4063 6693,2839.4844 Q6693.6875,2840.5469 6695.0313,2840.5469 Q6695.6563,2840.5469 6696.25,2840.2813 Q6696.8438,2840 6697.4688,2839.4219 L6697.4688,2842.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="6708.5" y="2840.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6680.5" x2="6780.5" y1="2852.5" y2="2852.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6680.5" x2="6780.5" y1="2860.5" y2="2860.5"/><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="586" y="34"/><ellipse cx="710.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M713.7188,55.6406 Q713.1406,55.9375 712.5,56.0781 Q711.8594,56.2344 711.1563,56.2344 Q708.6563,56.2344 707.3281,54.5938 Q706.0156,52.9375 706.0156,49.8125 Q706.0156,46.6875 707.3281,45.0313 Q708.6563,43.375 711.1563,43.375 Q711.8594,43.375 712.5,43.5313 Q713.1563,43.6875 713.7188,43.9844 L713.7188,46.7031 Q713.0938,46.125 712.5,45.8594 Q711.9063,45.5781 711.2813,45.5781 Q709.9375,45.5781 709.25,46.6563 Q708.5625,47.7188 708.5625,49.8125 Q708.5625,51.9063 709.25,52.9844 Q709.9375,54.0469 711.2813,54.0469 Q711.9063,54.0469 712.5,53.7813 Q713.0938,53.5 713.7188,52.9219 L713.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="731.25" y="54.1543">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="587" x2="850" y1="66" y2="66"/><ellipse cx="597" cy="77" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="606" y="80.2104">str_ : const char *</text><ellipse cx="597" cy="89.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="606" y="93.0151">len_ : const unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="587" x2="850" y1="99.6094" y2="99.6094"/><ellipse cx="597" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="606" y="113.8198">T(const char * str, unsigned int len) : void</text><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="176.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="3829.5" y="4719"/><ellipse cx="4092.25" cy="4735" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4095.2188,4740.6406 Q4094.6406,4740.9375 4094,4741.0781 Q4093.3594,4741.2344 4092.6563,4741.2344 Q4090.1563,4741.2344 4088.8281,4739.5938 Q4087.5156,4737.9375 4087.5156,4734.8125 Q4087.5156,4731.6875 4088.8281,4730.0313 Q4090.1563,4728.375 4092.6563,4728.375 Q4093.3594,4728.375 4094,4728.5313 Q4094.6563,4728.6875 4095.2188,4728.9844 L4095.2188,4731.7031 Q4094.5938,4731.125 4094,4730.8594 Q4093.4063,4730.5781 4092.7813,4730.5781 Q4091.4375,4730.5781 4090.75,4731.6563 Q4090.0625,4732.7188 4090.0625,4734.8125 Q4090.0625,4736.9063 4090.75,4737.9844 Q4091.4375,4739.0469 4092.7813,4739.0469 Q4093.4063,4739.0469 4094,4738.7813 Q4094.5938,4738.5 4095.2188,4737.9219 L4095.2188,4740.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="4112.75" y="4739.1543">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3830.5" x2="4396.5" y1="4751" y2="4751"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3830.5" x2="4396.5" y1="4759" y2="4759"/><ellipse cx="3840.5" cy="4770" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="3849.5" y="4773.2104">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="3840.5" cy="4782.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="3849.5" y="4786.0151">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="3840.5" cy="4795.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3849.5" y="4798.8198">~Timer() : void</text><ellipse cx="3840.5" cy="4808.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3849.5" y="4811.6245">run() const : void</text><ellipse cx="3840.5" cy="4821.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="3849.5" y="4824.4292">restart(const TimePoint &amp; now) : void</text><ellipse cx="3840.5" cy="4834.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="3849.5" y="4837.2339">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="3840.5" cy="4846.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="3849.5" y="4850.0386">operator&gt;(const Timer &amp; t) const : bool</text><ellipse cx="3840.5" cy="4859.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3849.5" y="4862.8433">when() const : const TimePoint &amp;</text><ellipse cx="3840.5" cy="4872.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="3849.5" y="4875.6479">isRepeat() : bool</text><ellipse cx="3840.5" cy="4885.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3849.5" y="4888.4526">id() : TimerId</text><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="3630.5" y="4418"/><ellipse cx="3762.75" cy="4434" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3765.7188,4439.6406 Q3765.1406,4439.9375 3764.5,4440.0781 Q3763.8594,4440.2344 3763.1563,4440.2344 Q3760.6563,4440.2344 3759.3281,4438.5938 Q3758.0156,4436.9375 3758.0156,4433.8125 Q3758.0156,4430.6875 3759.3281,4429.0313 Q3760.6563,4427.375 3763.1563,4427.375 Q3763.8594,4427.375 3764.5,4427.5313 Q3765.1563,4427.6875 3765.7188,4427.9844 L3765.7188,4430.7031 Q3765.0938,4430.125 3764.5,4429.8594 Q3763.9063,4429.5781 3763.2813,4429.5781 Q3761.9375,4429.5781 3761.25,4430.6563 Q3760.5625,4431.7188 3760.5625,4433.8125 Q3760.5625,4435.9063 3761.25,4436.9844 Q3761.9375,4438.0469 3763.2813,4438.0469 Q3763.9063,4438.0469 3764.5,4437.7813 Q3765.0938,4437.5 3765.7188,4436.9219 L3765.7188,4439.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="3783.25" y="4438.1543">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3631.5" x2="4015.5" y1="4450" y2="4450"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3631.5" x2="4015.5" y1="4458" y2="4458"/><ellipse cx="3641.5" cy="4469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="3650.5" y="4472.2104">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><!--MD5=[126bacd0ed15124482552b070b9a279f]
class C_0000026148367911088234--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0000026148367911088234" style="stroke: #A80036; stroke-width: 1.5;" width="186" x="42.5" y="345"/><ellipse cx="95.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M98.2188,366.6406 Q97.6406,366.9375 97,367.0781 Q96.3594,367.2344 95.6563,367.2344 Q93.1563,367.2344 91.8281,365.5938 Q90.5156,363.9375 90.5156,360.8125 Q90.5156,357.6875 91.8281,356.0313 Q93.1563,354.375 95.6563,354.375 Q96.3594,354.375 97,354.5313 Q97.6563,354.6875 98.2188,354.9844 L98.2188,357.7031 Q97.5938,357.125 97,356.8594 Q96.4063,356.5781 95.7813,356.5781 Q94.4375,356.5781 93.75,357.6563 Q93.0625,358.7188 93.0625,360.8125 Q93.0625,362.9063 93.75,363.9844 Q94.4375,365.0469 95.7813,365.0469 Q96.4063,365.0469 97,364.7813 Q97.5938,364.5 98.2188,363.9219 L98.2188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="115.75" y="365.1543">ScopeExit</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="222.5" y="342"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="223.5" y="354.1387">F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43.5" x2="227.5" y1="377" y2="377"/><ellipse cx="53.5" cy="388" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="62.5" y="391.2104">f_ : F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43.5" x2="227.5" y1="397.8047" y2="397.8047"/><ellipse cx="53.5" cy="408.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="62.5" y="412.0151">ScopeExit&lt;F&gt;(F &amp;&amp; f) : void</text><ellipse cx="53.5" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="62.5" y="424.8198">~ScopeExit&lt;F&gt;() : void</text><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="112.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="2458.5" y="332"/><ellipse cx="2612.25" cy="348" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2612.3594,343.3438 L2611.2031,348.4219 L2613.5313,348.4219 L2612.3594,343.3438 Z M2610.875,341.1094 L2613.8594,341.1094 L2617.2188,353.5 L2614.7656,353.5 L2614,350.4375 L2610.7188,350.4375 L2609.9688,353.5 L2607.5313,353.5 L2610.875,341.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="2632.75" y="352.1543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2459.5" x2="2841.5" y1="364" y2="364"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2459.5" x2="2841.5" y1="372" y2="372"/><ellipse cx="2469.5" cy="383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="2478.5" y="386.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="2469.5" cy="395.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="2478.5" y="399.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="2469.5" cy="408.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2478.5" y="411.8198">getName() const : std::string</text><ellipse cx="2469.5" cy="421.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2478.5" y="424.6245">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2469.5" cy="434.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2478.5" y="437.4292">~TaskQueue() : void</text><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="137.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="1870" y="955.5"/><ellipse cx="2019.25" cy="971.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2022.2188,977.1406 Q2021.6406,977.4375 2021,977.5781 Q2020.3594,977.7344 2019.6563,977.7344 Q2017.1563,977.7344 2015.8281,976.0938 Q2014.5156,974.4375 2014.5156,971.3125 Q2014.5156,968.1875 2015.8281,966.5313 Q2017.1563,964.875 2019.6563,964.875 Q2020.3594,964.875 2021,965.0313 Q2021.6563,965.1875 2022.2188,965.4844 L2022.2188,968.2031 Q2021.5938,967.625 2021,967.3594 Q2020.4063,967.0781 2019.7813,967.0781 Q2018.4375,967.0781 2017.75,968.1563 Q2017.0625,969.2188 2017.0625,971.3125 Q2017.0625,973.4063 2017.75,974.4844 Q2018.4375,975.5469 2019.7813,975.5469 Q2020.4063,975.5469 2021,975.2813 Q2021.5938,975 2022.2188,974.4219 L2022.2188,977.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="2039.75" y="975.6543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1871" x2="2316" y1="987.5" y2="987.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1871" x2="2316" y1="995.5" y2="995.5"/><ellipse cx="1881" cy="1006.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="1890" y="1009.7104">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="1881" cy="1019.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="1890" y="1022.5151">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="1881" cy="1032.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="1890" y="1035.3198">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="1881" cy="1044.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1890" y="1048.1245">getName() const : std::string</text><ellipse cx="1881" cy="1057.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1890" y="1060.9292">getTaskCount() : size_t</text><ellipse cx="1881" cy="1070.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1890" y="1073.7339">stop() : void</text><ellipse cx="1881" cy="1083.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1890" y="1086.5386">~ConcurrentTaskQueue() : void</text><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="137.6328" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="2352.5" y="955.5"/><ellipse cx="2653.25" cy="971.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2656.2188,977.1406 Q2655.6406,977.4375 2655,977.5781 Q2654.3594,977.7344 2653.6563,977.7344 Q2651.1563,977.7344 2649.8281,976.0938 Q2648.5156,974.4375 2648.5156,971.3125 Q2648.5156,968.1875 2649.8281,966.5313 Q2651.1563,964.875 2653.6563,964.875 Q2654.3594,964.875 2655,965.0313 Q2655.6563,965.1875 2656.2188,965.4844 L2656.2188,968.2031 Q2655.5938,967.625 2655,967.3594 Q2654.4063,967.0781 2653.7813,967.0781 Q2652.4375,967.0781 2651.75,968.1563 Q2651.0625,969.2188 2651.0625,971.3125 Q2651.0625,973.4063 2651.75,974.4844 Q2652.4375,975.5469 2653.7813,975.5469 Q2654.4063,975.5469 2655,975.2813 Q2655.5938,975 2656.2188,974.4219 L2656.2188,977.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="2673.75" y="975.6543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2353.5" x2="3061.5" y1="987.5" y2="987.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2353.5" x2="3061.5" y1="995.5" y2="995.5"/><ellipse cx="2363.5" cy="1006.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="2372.5" y="1009.7104">output(const char * msg, const uint64_t len) : void</text><ellipse cx="2363.5" cy="1019.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2372.5" y="1022.5151">flush() : void</text><ellipse cx="2363.5" cy="1032.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2372.5" y="1035.3198">startLogging() : void</text><ellipse cx="2363.5" cy="1044.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2372.5" y="1048.1245">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="2363.5" cy="1057.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="2372.5" y="1060.9292">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="2363.5" cy="1070.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2372.5" y="1073.7339">~AsyncFileLogger() : void</text><ellipse cx="2363.5" cy="1083.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2372.5" y="1086.5386">AsyncFileLogger() : void</text><!--MD5=[d6dc5f302a37b6f3cec78b5e6a6182c8]
class C_0001453238540802541239--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="124.8281" id="C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="4122" y="325.5"/><ellipse cx="4365.25" cy="341.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4368.2188,347.1406 Q4367.6406,347.4375 4367,347.5781 Q4366.3594,347.7344 4365.6563,347.7344 Q4363.1563,347.7344 4361.8281,346.0938 Q4360.5156,344.4375 4360.5156,341.3125 Q4360.5156,338.1875 4361.8281,336.5313 Q4363.1563,334.875 4365.6563,334.875 Q4366.3594,334.875 4367,335.0313 Q4367.6563,335.1875 4368.2188,335.4844 L4368.2188,338.2031 Q4367.5938,337.625 4367,337.3594 Q4366.4063,337.0781 4365.7813,337.0781 Q4364.4375,337.0781 4363.75,338.1563 Q4363.0625,339.2188 4363.0625,341.3125 Q4363.0625,343.4063 4363.75,344.4844 Q4364.4375,345.5469 4365.7813,345.5469 Q4366.4063,345.5469 4367,345.2813 Q4367.5938,345 4368.2188,344.4219 L4368.2188,347.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="4385.75" y="345.6543">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4123" x2="4788" y1="357.5" y2="357.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4123" x2="4788" y1="365.5" y2="365.5"/><ellipse cx="4133" cy="376.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="4142" y="379.7104">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName) : void</text><ellipse cx="4133" cy="389.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4142" y="392.5151">~LoggerFile() : void</text><ellipse cx="4133" cy="402.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4142" y="405.3198">writeLog(const StringPtr buf) : void</text><ellipse cx="4133" cy="414.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4142" y="418.1245">getLength() : uint64_t</text><ellipse cx="4133" cy="427.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4142" y="430.9292">operator bool() const : bool</text><ellipse cx="4133" cy="440.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4142" y="443.7339">flush() : void</text><!--MD5=[fed249d7874c77c08dcf893861b9a747]
class C_0001166594284895168875--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="60.8047" id="C_0001166594284895168875" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="263.5" y="357.5"/><ellipse cx="301" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M303.9688,379.1406 Q303.3906,379.4375 302.75,379.5781 Q302.1094,379.7344 301.4063,379.7344 Q298.9063,379.7344 297.5781,378.0938 Q296.2656,376.4375 296.2656,373.3125 Q296.2656,370.1875 297.5781,368.5313 Q298.9063,366.875 301.4063,366.875 Q302.1094,366.875 302.75,367.0313 Q303.4063,367.1875 303.9688,367.4844 L303.9688,370.2031 Q303.3438,369.625 302.75,369.3594 Q302.1563,369.0781 301.5313,369.0781 Q300.1875,369.0781 299.5,370.1563 Q298.8125,371.2188 298.8125,373.3125 Q298.8125,375.4063 299.5,376.4844 Q300.1875,377.5469 301.5313,377.5469 Q302.1563,377.5469 302.75,377.2813 Q303.3438,377 303.9688,376.4219 L303.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="320" y="377.6543">utils::Hash128</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="264.5" x2="434.5" y1="389.5" y2="389.5"/><ellipse cx="274.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="283.5" y="403.7104">bytes : unsigned char[16]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="264.5" x2="434.5" y1="410.3047" y2="410.3047"/><!--MD5=[021cb10fbb8ce3370cd11a9cd6334df8]
class C_0001016092423778930091--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="60.8047" id="C_0001016092423778930091" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="470.5" y="357.5"/><ellipse cx="508" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M510.9688,379.1406 Q510.3906,379.4375 509.75,379.5781 Q509.1094,379.7344 508.4063,379.7344 Q505.9063,379.7344 504.5781,378.0938 Q503.2656,376.4375 503.2656,373.3125 Q503.2656,370.1875 504.5781,368.5313 Q505.9063,366.875 508.4063,366.875 Q509.1094,366.875 509.75,367.0313 Q510.4063,367.1875 510.9688,367.4844 L510.9688,370.2031 Q510.3438,369.625 509.75,369.3594 Q509.1563,369.0781 508.5313,369.0781 Q507.1875,369.0781 506.5,370.1563 Q505.8125,371.2188 505.8125,373.3125 Q505.8125,375.4063 506.5,376.4844 Q507.1875,377.5469 508.5313,377.5469 Q509.1563,377.5469 509.75,377.2813 Q510.3438,377 510.9688,376.4219 L510.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="527" y="377.6543">utils::Hash160</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="471.5" x2="641.5" y1="389.5" y2="389.5"/><ellipse cx="481.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="490.5" y="403.7104">bytes : unsigned char[20]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="471.5" x2="641.5" y1="410.3047" y2="410.3047"/><!--MD5=[8c8e5215c80d1cd8a8ee6133aa829fcf]
class C_0000080756732781028581--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="60.8047" id="C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="9862.5" y="357.5"/><ellipse cx="9900" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9902.9688,379.1406 Q9902.3906,379.4375 9901.75,379.5781 Q9901.1094,379.7344 9900.4063,379.7344 Q9897.9063,379.7344 9896.5781,378.0938 Q9895.2656,376.4375 9895.2656,373.3125 Q9895.2656,370.1875 9896.5781,368.5313 Q9897.9063,366.875 9900.4063,366.875 Q9901.1094,366.875 9901.75,367.0313 Q9902.4063,367.1875 9902.9688,367.4844 L9902.9688,370.2031 Q9902.3438,369.625 9901.75,369.3594 Q9901.1563,369.0781 9900.5313,369.0781 Q9899.1875,369.0781 9898.5,370.1563 Q9897.8125,371.2188 9897.8125,373.3125 Q9897.8125,375.4063 9898.5,376.4844 Q9899.1875,377.5469 9900.5313,377.5469 Q9901.1563,377.5469 9901.75,377.2813 Q9902.3438,377 9902.9688,376.4219 L9902.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="9919" y="377.6543">utils::Hash256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9863.5" x2="10033.5" y1="389.5" y2="389.5"/><ellipse cx="9873.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="9882.5" y="403.7104">bytes : unsigned char[32]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9863.5" x2="10033.5" y1="410.3047" y2="410.3047"/><!--MD5=[a74ca64b85c4b088ee21340913b25922]
class C_0000195316585713148470--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="99.2188" id="C_0000195316585713148470" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="9829.5" y="27.5"/><ellipse cx="9858.9" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9861.8688,49.1406 Q9861.2906,49.4375 9860.65,49.5781 Q9860.0094,49.7344 9859.3063,49.7344 Q9856.8063,49.7344 9855.4781,48.0938 Q9854.1656,46.4375 9854.1656,43.3125 Q9854.1656,40.1875 9855.4781,38.5313 Q9856.8063,36.875 9859.3063,36.875 Q9860.0094,36.875 9860.65,37.0313 Q9861.3063,37.1875 9861.8688,37.4844 L9861.8688,40.2031 Q9861.2438,39.625 9860.65,39.3594 Q9860.0563,39.0781 9859.4313,39.0781 Q9858.0875,39.0781 9857.4,40.1563 Q9856.7125,41.2188 9856.7125,43.3125 Q9856.7125,45.4063 9857.4,46.4844 Q9858.0875,47.5469 9859.4313,47.5469 Q9860.0563,47.5469 9860.65,47.2813 Q9861.2438,47 9861.8688,46.4219 L9861.8688,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="9876.1" y="47.6543">utils::RngState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9830.5" x2="9984.5" y1="59.5" y2="59.5"/><ellipse cx="9840.5" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="9849.5" y="73.7104">secret : utils::Hash256</text><ellipse cx="9840.5" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="9849.5" y="86.5151">prev : utils::Hash256</text><ellipse cx="9840.5" cy="96.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="9849.5" y="99.3198">time : int64_t</text><ellipse cx="9840.5" cy="108.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="9849.5" y="112.1245">counter : uint64_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9830.5" x2="9984.5" y1="118.7188" y2="118.7188"/><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="176.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="3098" y="936.5"/><ellipse cx="3222.75" cy="952.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3225.7188,958.1406 Q3225.1406,958.4375 3224.5,958.5781 Q3223.8594,958.7344 3223.1563,958.7344 Q3220.6563,958.7344 3219.3281,957.0938 Q3218.0156,955.4375 3218.0156,952.3125 Q3218.0156,949.1875 3219.3281,947.5313 Q3220.6563,945.875 3223.1563,945.875 Q3223.8594,945.875 3224.5,946.0313 Q3225.1563,946.1875 3225.7188,946.4844 L3225.7188,949.2031 Q3225.0938,948.625 3224.5,948.3594 Q3223.9063,948.0781 3223.2813,948.0781 Q3221.9375,948.0781 3221.25,949.1563 Q3220.5625,950.2188 3220.5625,952.3125 Q3220.5625,954.4063 3221.25,955.4844 Q3221.9375,956.5469 3223.2813,956.5469 Q3223.9063,956.5469 3224.5,956.2813 Q3225.0938,956 3225.7188,955.4219 L3225.7188,958.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="3243.25" y="956.6543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3099" x2="3460" y1="968.5" y2="968.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3099" x2="3460" y1="976.5" y2="976.5"/><ellipse cx="3109" cy="987.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="3118" y="990.7104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="3109" cy="1000.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="3118" y="1003.5151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="3109" cy="1013.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3118" y="1016.3198">getName() const : std::string</text><ellipse cx="3109" cy="1025.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3118" y="1029.1245">waitAllTasksFinished() : void</text><ellipse cx="3109" cy="1038.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3118" y="1041.9292">SerialTaskQueue() : void</text><ellipse cx="3109" cy="1051.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="3118" y="1054.7339">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="3109" cy="1064.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3118" y="1067.5386">~SerialTaskQueue() : void</text><ellipse cx="3109" cy="1077.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3118" y="1080.3433">isRuningTask() : bool</text><ellipse cx="3109" cy="1089.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3118" y="1093.1479">getTaskCount() : size_t</text><ellipse cx="3109" cy="1102.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3118" y="1105.9526">stop() : void</text><!--MD5=[76c042830f3e16645cab5271e28ba169]
class C_0000089957972753266749--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="73.6094" id="C_0000089957972753266749" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="6" y="987.5"/><ellipse cx="21" cy="1003.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,1009.1406 Q23.3906,1009.4375 22.75,1009.5781 Q22.1094,1009.7344 21.4063,1009.7344 Q18.9063,1009.7344 17.5781,1008.0938 Q16.2656,1006.4375 16.2656,1003.3125 Q16.2656,1000.1875 17.5781,998.5313 Q18.9063,996.875 21.4063,996.875 Q22.1094,996.875 22.75,997.0313 Q23.4063,997.1875 23.9688,997.4844 L23.9688,1000.2031 Q23.3438,999.625 22.75,999.3594 Q22.1563,999.0781 21.5313,999.0781 Q20.1875,999.0781 19.5,1000.1563 Q18.8125,1001.2188 18.8125,1003.3125 Q18.8125,1005.4063 19.5,1006.4844 Q20.1875,1007.5469 21.5313,1007.5469 Q22.1563,1007.5469 22.75,1007.2813 Q23.3438,1007 23.9688,1006.4219 L23.9688,1009.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="35" y="1007.6543">InetAddress::(anonymous_2039330)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1019.5" y2="1019.5"/><ellipse cx="17" cy="1030.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="1033.7104">addr_ : struct sockaddr_in</text><ellipse cx="17" cy="1043.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="1046.5151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1053.1094" y2="1053.1094"/><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="329.7031" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="953" x="4256" y="2164"/><ellipse cx="4699.75" cy="2180" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4702.7188,2185.6406 Q4702.1406,2185.9375 4701.5,2186.0781 Q4700.8594,2186.2344 4700.1563,2186.2344 Q4697.6563,2186.2344 4696.3281,2184.5938 Q4695.0156,2182.9375 4695.0156,2179.8125 Q4695.0156,2176.6875 4696.3281,2175.0313 Q4697.6563,2173.375 4700.1563,2173.375 Q4700.8594,2173.375 4701.5,2173.5313 Q4702.1563,2173.6875 4702.7188,2173.9844 L4702.7188,2176.7031 Q4702.0938,2176.125 4701.5,2175.8594 Q4700.9063,2175.5781 4700.2813,2175.5781 Q4698.9375,2175.5781 4698.25,2176.6563 Q4697.5625,2177.7188 4697.5625,2179.8125 Q4697.5625,2181.9063 4698.25,2182.9844 Q4698.9375,2184.0469 4700.2813,2184.0469 Q4700.9063,2184.0469 4701.5,2183.7813 Q4702.0938,2183.5 4702.7188,2182.9219 L4702.7188,2185.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="4720.25" y="2184.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4257" x2="5208" y1="2196" y2="2196"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4257" x2="5208" y1="2204" y2="2204"/><ellipse cx="4267" cy="2215" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="4276" y="2218.2104">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="4267" cy="2227.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4276" y="2231.0151">~TcpClient() : void</text><ellipse cx="4267" cy="2240.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="4276" y="2243.8198">connect() : void</text><ellipse cx="4267" cy="2253.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4276" y="2256.6245">disconnect() : void</text><ellipse cx="4267" cy="2266.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="4276" y="2269.4292">stop() : void</text><ellipse cx="4267" cy="2279.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4276" y="2282.2339">connection() const : TcpConnectionPtr</text><ellipse cx="4267" cy="2291.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4276" y="2295.0386">getLoop() const : EventLoop *</text><ellipse cx="4267" cy="2304.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="4276" y="2307.8433">retry() const : bool</text><ellipse cx="4267" cy="2317.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4276" y="2320.6479">enableRetry() : void</text><ellipse cx="4267" cy="2330.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4276" y="2333.4526">name() const : const std::string &amp;</text><ellipse cx="4267" cy="2343.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4276" y="2346.2573">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="4267" cy="2355.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4276" y="2359.062">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4267" cy="2368.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="4276" y="2371.8667">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="4267" cy="2381.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="4276" y="2384.6714">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="4267" cy="2394.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="4276" y="2397.4761">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="4267" cy="2407.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="4276" y="2410.2808">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="4267" cy="2419.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4276" y="2423.0854">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="4267" cy="2432.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4276" y="2435.8901">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="4267" cy="2445.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4276" y="2448.6948">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4267" cy="2458.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="927" x="4276" y="2461.4995">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4276" y="2474.3042">{}, const std::string &amp; certPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="4474" y="2474.3042">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4698" y="2474.3042">, const std::string &amp; caPath = "") : void</text><ellipse cx="4267" cy="2483.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4276" y="2487.1089">enableSSL(TLSPolicyPtr policy) : void</text><!--MD5=[36897566f721d8b8c541721979fa9001]
class C_0001278908569830571044--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="60.8047" id="C_0001278908569830571044" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="4346" y="1713.5"/><ellipse cx="4361" cy="1729.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4363.9688,1735.1406 Q4363.3906,1735.4375 4362.75,1735.5781 Q4362.1094,1735.7344 4361.4063,1735.7344 Q4358.9063,1735.7344 4357.5781,1734.0938 Q4356.2656,1732.4375 4356.2656,1729.3125 Q4356.2656,1726.1875 4357.5781,1724.5313 Q4358.9063,1722.875 4361.4063,1722.875 Q4362.1094,1722.875 4362.75,1723.0313 Q4363.4063,1723.1875 4363.9688,1723.4844 L4363.9688,1726.2031 Q4363.3438,1725.625 4362.75,1725.3594 Q4362.1563,1725.0781 4361.5313,1725.0781 Q4360.1875,1725.0781 4359.5,1726.1563 Q4358.8125,1727.2188 4358.8125,1729.3125 Q4358.8125,1731.4063 4359.5,1732.4844 Q4360.1875,1733.5469 4361.5313,1733.5469 Q4362.1563,1733.5469 4362.75,1733.2813 Q4363.3438,1733 4363.9688,1732.4219 L4363.9688,1735.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="4375" y="1733.6543">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4347" x2="4528" y1="1745.5" y2="1745.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4347" x2="4528" y1="1753.5" y2="1753.5"/><ellipse cx="4357" cy="1764.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4366" y="1767.7104">IgnoreSigPipe() : void</text><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="188.8516" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="7724" y="2750"/><ellipse cx="7930.75" cy="2766" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7933.7188,2771.6406 Q7933.1406,2771.9375 7932.5,2772.0781 Q7931.8594,2772.2344 7931.1563,2772.2344 Q7928.6563,2772.2344 7927.3281,2770.5938 Q7926.0156,2768.9375 7926.0156,2765.8125 Q7926.0156,2762.6875 7927.3281,2761.0313 Q7928.6563,2759.375 7931.1563,2759.375 Q7931.8594,2759.375 7932.5,2759.5313 Q7933.1563,2759.6875 7933.7188,2759.9844 L7933.7188,2762.7031 Q7933.0938,2762.125 7932.5,2761.8594 Q7931.9063,2761.5781 7931.2813,2761.5781 Q7929.9375,2761.5781 7929.25,2762.6563 Q7928.5625,2763.7188 7928.5625,2765.8125 Q7928.5625,2767.9063 7929.25,2768.9844 Q7929.9375,2770.0469 7931.2813,2770.0469 Q7931.9063,2770.0469 7932.5,2769.7813 Q7933.0938,2769.5 7933.7188,2768.9219 L7933.7188,2771.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="7951.25" y="2770.1543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7725" x2="8210" y1="2782" y2="2782"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7725" x2="8210" y1="2790" y2="2790"/><ellipse cx="7735" cy="2801" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="7744" y="2804.2104">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="7735" cy="2813.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="7744" y="2817.0151">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="7735" cy="2826.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="7744" y="2829.8198">~Connector() : void</text><ellipse cx="7735" cy="2839.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="7744" y="2842.6245">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="7735" cy="2852.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="7744" y="2855.4292">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="7735" cy="2865.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="7744" y="2868.2339">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="7735" cy="2877.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="7744" y="2881.0386">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="7735" cy="2890.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="7744" y="2893.8433">serverAddress() const : const InetAddress &amp;</text><ellipse cx="7735" cy="2903.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="7744" y="2906.6479">start() : void</text><ellipse cx="7735" cy="2916.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="7744" y="2919.4526">restart() : void</text><ellipse cx="7735" cy="2929.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="7744" y="2932.2573">stop() : void</text><!--MD5=[e79edad503674c7fc854de75a75b6c70]
class C_0000000982196670174162--><rect fill="#FEFECE" filter="url(#f122zbfhn0rs4n)" height="86.4141" id="C_0000000982196670174162" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="8151.5" y="2286"/><ellipse cx="8166.5" cy="2302" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8170.6094,2308 L8162.8906,2308 L8162.8906,2295.6094 L8170.6094,2295.6094 L8170.6094,2297.7656 L8165.3438,2297.7656 L8165.3438,2300.4375 L8170.1094,2300.4375 L8170.1094,2302.5938 L8165.3438,2302.5938 L8165.3438,2305.8438 L8170.6094,2305.8438 L8170.6094,2308 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="8180.5" y="2306.1543">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8152.5" x2="8296.5" y1="2318" y2="2318"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="8157.5" y="2332.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="8157.5" y="2345.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="8157.5" y="2357.8198">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8152.5" x2="8296.5" y1="2364.4141" y2="2364.4141"/><!--MD5=[71937ae761f89ce4d5c0645a62fc4977]
reverse link C_0001897340460211641725 to C_0000673025168912921705--><path d="M8638.5,3576.47 C8638.5,3691.57 8638.5,3841.26 8638.5,3908.95 " fill="none" id="C_0001897340460211641725&lt;-C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8638.5,3563.33,8634.5,3569.33,8638.5,3575.33,8642.5,3569.33,8638.5,3563.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M1951.35,77.71 C1755.88,78.89 1250.21,94.53 1159.5,223 C952.4,516.31 1050.5,664.44 1050.5,1023.5 C1050.5,1023.5 1050.5,1023.5 1050.5,2330 C1050.5,2474.72 1101.28,2635.07 1140.55,2737.44 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1951.42,70.71,1971.45,77.64,1951.48,84.71,1951.42,70.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M1385.11,2353.06 C1359.41,2416.22 1286.44,2595.49 1236.24,2718.85 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1242.72,2721.49,1228.69,2737.38,1229.75,2716.22,1242.72,2721.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M1158.38,631.11 C1156.53,640.36 1154.63,651.14 1153.5,661 C1114.12,1005.72 1121.5,1094.04 1121.5,1441 C1121.5,1441 1121.5,1441 1121.5,2330 C1121.5,2463 1142.9,2613.9 1160.96,2717.52 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1167.86,2716.36,1164.46,2737.27,1154.07,2718.8,1167.86,2716.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M1951.2,82.66 C1764.64,94.62 1301.35,128.79 1250.5,176 C1190,232.16 1169.58,501.47 1164.74,582.74 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1950.83,75.67,1971.23,81.4,1951.71,89.64,1950.83,75.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M1236.47,1466.04 C1232.96,1475.19 1229.42,1485.92 1227.5,1496 C1143.48,1938.4 1162.03,2476.91 1176.43,2717.21 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1183.43,2717.06,1177.68,2737.45,1169.46,2717.92,1183.43,2717.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M1951.01,84.62 C1794.42,99.58 1448.21,141.26 1366.5,223 C1233.56,355.99 1344.71,466.01 1254.5,631 C1245.89,646.74 1233.93,644.25 1227.5,661 C1111.74,962.66 1172.16,1069.66 1227.5,1388 C1229.26,1398.11 1232.77,1408.84 1236.3,1417.99 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1950.8,77.61,1971.36,82.72,1952.09,91.55,1950.8,77.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M1423.26,1928.82 C1413.32,2066.82 1400.68,2242.28 1396.18,2304.68 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1424.21,1915.59,1419.7913,1921.2887,1423.3522,1927.5593,1427.7709,1921.8606,1424.21,1915.59" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1418.5" y="2075.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="1428.5" y="2082.5669">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M1951.12,78.7 C1705.4,81.73 954.67,97.39 882.5,176 C769.18,299.42 849.88,388.65 882.5,553 C960.66,946.86 923,1126.25 1227.5,1388 C1269.84,1424.4 1309.62,1378.92 1349.5,1418 C1390.91,1458.57 1413.29,1516.53 1425.17,1572.3 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1951.21,71.7,1971.29,78.47,1951.38,85.7,1951.21,71.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b07c5dc99de1fec75297894171ba3abd]
link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1792.81,508.26 C1765.36,530.05 1740.19,554.93 1720.5,583 C1489.89,911.8 1634.6,1078.65 1528.5,1466 C1519.44,1499.07 1508.74,1534.02 1497.9,1567.53 " fill="none" id="C_0002053752992472264214-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1496.3,1572.47,1502.8814,1565.143,1497.8425,1567.7139,1495.2717,1562.675,1496.3,1572.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1873.45,517.37 C1832.12,559.09 1791.5,608.33 1764.5,661 C1614.76,953.09 1744.85,1078.87 1634.5,1388 C1612.08,1450.81 1579.23,1515.62 1546.71,1572.4 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1882.84,508.04,1875.7657,509.4377,1874.335,516.5055,1881.4093,515.1078,1882.84,508.04" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1770.5,1020.0664,1774.5,1024.0664,1770.5,1028.0664,1766.5,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1777.5" y="1029.0669">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M2297.81,512.56 C2344.51,529.22 2393.25,543.74 2440.5,553 C2638.24,591.76 5866.06,577.85 6067.5,583 C6073.82,583.16 7882.9,656.65 7887.5,661 C8158.52,917.19 7951.75,1123.53 7970.5,1496 C7981.65,1717.5 8104.66,2316.65 7971.5,2494 C7897.86,2592.08 7780.47,2473.17 7706.5,2571 C7686.6,2597.32 7713,3133.72 7702.5,3165 C7630.24,3380.23 7473.49,3584.42 7340.85,3729.86 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2285.34,508.04,2289.6194,513.844,2296.6229,512.1261,2292.3435,506.3221,2285.34,508.04" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8039.5,2324.5664,8043.5,2328.5664,8039.5,2332.5664,8035.5,2328.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="8046.5" y="2333.5669">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M1628.87,508.21 C1592.63,529.32 1558.66,554.05 1529.5,583 C1414.89,696.77 1373.16,894.98 1359.92,981.31 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1633.3,505.65,1623.5045,506.6735,1628.9667,508.1445,1627.4957,513.6067,1633.3,505.65" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1535.5" cy="607.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="1542.5" y="611.5669">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M2028.5,121.45 C2028.5,159.41 2028.5,216.34 2028.5,267.76 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2021.5,121.23,2028.5,101.23,2035.5,121.23,2021.5,121.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2546ce8b172ab3415fe98599ef34be58]
link C_0002131283840621188296 to C_0002053752992472264214--><path d="M8553.41,137.84 C8547.6,141.05 8541.6,143.84 8535.5,146 C8216.34,259.2 2772.67,157.14 2440.5,223 C2394.05,232.21 2346.13,246.46 2300.14,262.8 " fill="none" id="C_0002131283840621188296-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2293.4539" cy="265.2213" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2300.9778" x2="2285.93" y1="262.5027" y2="267.94"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2296.1725" x2="2290.7352" y1="272.7452" y2="257.6975"/><!--MD5=[93922583ef61aedd7e4cac59826dbbbd]
link C_0000979080797342806546 to C_0002053752992472264214--><path d="M8769.74,126.51 C8749.12,134.21 8727.41,141.2 8706.5,146 C8417.28,212.34 8337.02,181.75 8040.5,193 C7885.05,198.9 2593.2,193.3 2440.5,223 C2393.76,232.09 2345.55,246.36 2299.32,262.78 " fill="none" id="C_0000979080797342806546-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2292.563" cy="265.2189" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2300.086" x2="2285.04" y1="262.4978" y2="267.94"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2295.2841" x2="2289.8419" y1="272.7419" y2="257.6959"/><!--MD5=[1e053e636c9893712341ad3f59f5b138]
link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1359.32,1067.7 C1370.24,1163.24 1397.38,1400.66 1416.37,1566.83 " fill="none" id="C_0000716430590791918928-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1416.98,1572.22,1419.923,1562.8211,1416.4074,1567.2529,1411.9757,1563.7373,1416.98,1572.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1367.78,1080.45 C1385.35,1155.98 1415.62,1296.35 1428.5,1418 C1433.79,1467.95 1436.37,1522.45 1437.48,1572.3 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1364.75,1067.57,1362.2199,1074.3227,1367.4801,1079.2553,1370.0102,1072.5026,1364.75,1067.57" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1435.5" y="1439.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1445.5" y="1446.5669">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M1951.46,84 C1832.03,94.87 1610.11,121.92 1554.5,176 C1322.3,401.82 1338.68,843.27 1350.2,981.25 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1950.92,77.02,1971.46,82.24,1952.15,90.96,1950.92,77.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M1951.19,79.24 C1666.85,85.85 695.5,127.43 695.5,387 C695.5,387 695.5,387 695.5,3947 C695.5,4203.03 2684.52,4395.81 3164.29,4438.59 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1951.08,72.24,1971.22,78.81,1951.38,86.24,1951.08,72.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ffc230e37c5c4ce1f573c198139c7155]
link C_0000223701637084171141 to C_0000912667184903365399--><path d="M3505.8,4002.47 C3457.52,4092.63 3361.99,4271.04 3307.69,4372.44 " fill="none" id="C_0000223701637084171141-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3304.2473" cy="4378.8679" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3308.0247" x2="3300.47" y1="4371.8159" y2="4385.92"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3311.2994" x2="3297.1953" y1="4382.6453" y2="4375.0906"/><!--MD5=[f80622055e9d57665d4031fadfdf3e69]
link C_0002185746167032660910 to C_0000912667184903365399--><path d="M3267.5,3970.14 C3267.5,4039.6 3267.5,4248.74 3267.5,4365.84 " fill="none" id="C_0002185746167032660910-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3274.5,4365.88,3267.5,4385.88,3260.5,4365.88,3274.5,4365.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M4961.7,3479.97 C5350.96,3563.82 6101.01,3725.39 6606.24,3834.22 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6611.43,3835.34,6603.4633,3829.5494,6606.5402,3834.2963,6601.7933,3837.3731,6611.43,3835.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4961.77,3642.07 C4984.54,3669.78 5005.12,3699.27 5021.5,3730 C5045.1,3774.29 5090.45,4038.69 5121.57,4233.72 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5122.4,4238.89,5124.9107,4229.3665,5121.6011,4233.9542,5117.0134,4230.6447,5122.4,4238.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4962,3578.08 C5013.34,3620.79 5061.1,3671.73 5092.5,3730 C5175.44,3883.92 5186.27,4083.78 5179.02,4233.46 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5178.75,4238.76,5183.207,4229.9773,5179.0068,4233.7666,5175.2175,4229.5664,5178.75,4238.76" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5184.5" y="3943.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="5194.5" y="3950.5669">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4961.58,3487.42 C5087.74,3532.57 5228.69,3607.77 5303.5,3730 C5396.71,3882.3 5342.93,4083.26 5275.32,4233.76 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5273.11,4238.64,5280.4757,4232.1019,5275.179,4234.0882,5273.1928,4228.7915,5273.11,4238.64" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5356.5" y="3943.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5366.5" y="3950.5669">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4974.85,3448.04 C5161.46,3479.66 5397.76,3554.3 5519.5,3730 C5628.85,3887.82 5603.62,3989.41 5519.5,4162 C5480.64,4241.73 5407.55,4305.74 5336.93,4352.78 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4961.79,3445.88,4967.0543,3450.8082,4973.6281,3447.8442,4968.3638,3442.9161,4961.79,3445.88" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5595.5" y="3943.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="5605.5" y="3950.5669">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M4972.23,4354.27 C4911.83,4316.05 4848.59,4267.03 4803.5,4209 C4738.6,4125.47 4716.69,3857.94 4709.53,3658.49 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4709.35,3653.2,4705.6607,3662.3318,4709.5213,3658.1971,4713.656,3662.0577,4709.35,3653.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M4972.36,4307.04 C4928.4,4264.85 4885.73,4215.43 4856.5,4162 C4762.59,3990.32 4810.78,3921.7 4771.5,3730 C4766.73,3706.73 4761.69,3682.47 4756.6,3658.26 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4755.52,3653.09,4753.4542,3662.7198,4756.5472,3657.9834,4761.2836,3661.0763,4755.52,3653.09" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4859.5" y="3943.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4869.5" y="3950.5669">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M4982.1,4234.38 C4968.63,4210.89 4956.71,4186.56 4947.5,4162 C4879.83,3981.49 4972.34,3911.91 4908.5,3730 C4899.4,3704.08 4887.62,3678.21 4874.31,3653.12 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4984.63,4238.76,4983.5684,4228.9685,4982.1186,4234.4365,4976.6507,4232.9867,4984.63,4238.76" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4953.5" cy="3946.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4960.5" y="3950.5669">«friend»</text><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M4614.46,3665.5 C4585.95,3740 4556.62,3816.65 4535.9,3870.8 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4619.22,3653.08,4613.3367,3657.2497,4614.9229,3664.2842,4620.8062,3660.1145,4619.22,3653.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4610.5" y="3689.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="4620.5" y="3696.0669">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M4570.42,3870.92 C4606.08,3824.76 4648.12,3762.44 4671.5,3700 C4676.54,3686.54 4680.88,3672.47 4684.62,3658.12 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4685.86,3653.25,4679.7483,3660.9732,4684.6171,3658.0931,4687.4972,3662.9618,4685.86,3653.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M4495.8,3870.91 C4490.23,3817.26 4488.69,3743.79 4509.5,3683 C4512.39,3674.56 4515.67,3666.19 4519.29,3657.89 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4521.34,3653.29,4514.0257,3659.8855,4519.3067,3657.8579,4521.3343,3663.1389,4521.34,3653.29" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4512.5" y="3689.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="4522.5" y="3696.0669">ownerLoop_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M4438.66,3482.41 C4070.39,3562.13 3448,3699.96 3405.5,3730 C3335.41,3779.53 3292.43,3877.02 3275.63,3921.67 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4451.38,3479.66,4444.668,3477.024,4439.6532,3482.2059,4446.3652,3484.8419,4451.38,3479.66" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3542.5" y="3689.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="3552.5" y="3696.0669">funcs_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M4438.17,3451.28 C4107.2,3488.24 3568.65,3564.6 3408.5,3683 C3325.43,3744.42 3286.1,3869.78 3272.86,3921.69 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4451.32,3449.82,4444.9166,3446.5039,4439.3928,3451.1394,4445.7962,3454.4554,4451.32,3449.82" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3411.5" y="3689.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="3421.5" y="3696.0669">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M4440.8,3616.9 C4314.71,3707.96 4172.02,3811.01 4080.76,3876.93 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4451.39,3609.25,4444.1837,3609.5138,4441.6556,3616.2672,4448.8619,3616.0034,4451.39,3609.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4349.5" y="3689.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="4359.5" y="3696.0669">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M3952.71,3876.82 C3929.81,3819.87 3910.3,3739.2 3950.5,3683 C4062.36,3526.63 4274.77,3463.96 4446.03,3439.36 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4451.08,3438.64,4441.6091,3435.9377,4446.1291,3439.3391,4442.7277,3443.8591,4451.08,3438.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M4059.09,3876.76 C4119.06,3821.79 4207.52,3743.92 4290.5,3683 C4339.73,3646.86 4394.09,3610.69 4446.83,3577.34 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4451.28,3574.53,4441.5314,3575.9316,4447.0464,3577.1903,4445.7878,3582.7053,4451.28,3574.53" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4296.5,3687.0664,4300.5,3691.0664,4296.5,3695.0664,4292.5,3691.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4303.5" y="3696.0669">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M4961.97,3385.45 C4983.26,3393.75 4996.5,3406.6 4996.5,3424 C4996.5,3440.04 4985.25,3452.22 4966.81,3460.52 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4961.97,3462.55,4971.8164,3462.77,4966.5833,3460.6219,4968.7314,3455.3887,4961.97,3462.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5004.5" y="3421.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="5014.5" y="3428.5669">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M1951.24,85.53 C1811.36,101.08 1525.89,142.22 1475.5,223 C1379.52,376.85 1460.54,450.28 1475.5,631 C1476.61,644.47 1478.85,647.58 1480.5,661 C1500.28,821.86 1471.26,1240.54 1538.5,1388 C1566.4,1449.19 1617.14,1434.56 1644.5,1496 C1749.75,1732.34 1680.5,1818.28 1680.5,2077 C1680.5,2077 1680.5,2077 1680.5,2845.5 C1680.5,3126.66 3722.19,3335.57 4451.44,3401.22 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1950.54,78.57,1971.18,83.38,1952.04,92.49,1950.54,78.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3262.41,2134.14 C3283.08,2217.87 3321.89,2382.35 3344.5,2524 C3389.66,2806.86 3218.54,2953.31 3411.5,3165 C3547.39,3314.08 4108.45,3380.12 4445.89,3406.83 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4451.33,3407.26,4442.6787,3402.5531,4446.346,3406.8601,4442.0389,3410.5274,4451.33,3407.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3311.5,2134.15 C3319.24,2143.42 3326.26,2153.47 3331.5,2164 C3431.69,2365.42 3328.11,3001.38 3482.5,3165 C3611.66,3301.88 4126.94,3371.67 4446.33,3402.48 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4451.49,3402.97,4442.9065,3398.1405,4446.5122,3402.4993,4442.1534,3406.105,4451.49,3402.97" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3386.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3396.5" y="2537.0669">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3232.2,2146.88 C3212.27,2233.7 3179.69,2388.98 3167.5,2524 C3143.1,2794.34 3145.02,2902.07 3309.5,3118 C3445.55,3296.59 4086.73,3375.08 4451.34,3405.76 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3235.17,2134.06,3229.9204,2139.0039,3232.4649,2145.7511,3237.7145,2140.8073,3235.17,2134.06" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3170.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="3180.5" y="2537.0669">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M1951.2,89.5 C1826.31,109.85 1589.2,156.42 1540.5,223 C1445.06,353.48 1500.09,421.76 1488.5,583 C1486.97,604.28 1477.68,612.61 1488.5,631 C1502.42,654.66 1526.42,638.75 1542.5,661 C1735.1,927.59 1475.71,1130.66 1680.5,1388 C2016.09,1809.7 2662.48,1979.64 3011.35,2042.94 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1950.47,82.53,1971.32,86.29,1952.68,96.35,1950.47,82.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41719d421dd9fac5f1bf843a27c4c912]
link C_0002061035340998974559 to C_0001390130774830223499--><path d="M3924.41,1099.72 C3910.13,1196.19 3871.87,1364.31 3772.5,1466 C3746.83,1492.27 3717.38,1466.5 3695.5,1496 C3541.18,1704 3650.5,1818 3650.5,2077 C3650.5,2077 3650.5,2077 3650.5,2845.5 C3650.5,2988.9 3599.82,3058.18 3695.5,3165 C3794.5,3275.53 4180.84,3350.25 4446.2,3389.73 " fill="none" id="C_0002061035340998974559-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4451.27,3390.48,4442.9495,3385.2103,4446.3234,3389.7509,4441.7829,3393.1248,4451.27,3390.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M3863.85,1109.77 C3801.4,1187.82 3708.03,1308.09 3634.5,1418 C3489.63,1634.55 3339.73,1906.93 3277.88,2021.84 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3872.07,1099.52,3865.1965,1101.7005,3864.5656,1108.884,3871.4391,1106.7035,3872.07,1099.52" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3637.5" y="1439.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="3647.5" y="1446.5669">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M2105.98,80.24 C2256.75,86.99 2597.77,114.11 2859.5,223 C3287.32,401 3699.58,787.28 3861.03,949.46 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.26,87.21,2085.57,79.4,2105.84,73.22,2105.26,87.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M6049.15,1117.05 C6323.01,1174.6 6630.4,1267.73 6881.5,1418 C6906.33,1432.86 6899.37,1453.56 6925.5,1466 C6975.95,1490.02 7389.19,1455.33 7427.5,1496 C7581.64,1659.62 7357.55,2290.3 7262.5,2494 C7245.95,2529.46 7226.55,2565.75 7206.27,2600.89 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7203.53,2605.62,7211.495,2599.827,7206.0307,2601.2903,7204.5674,2595.8259,7203.53,2605.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M6049.18,1175.65 C6667.33,1307.8 7468.82,1481.47 7480.5,1496 C7620.61,1670.29 7482.85,2313.02 7351.5,2494 C7314.06,2545.59 7276.24,2526.6 7230.5,2571 C7222.65,2578.62 7214.95,2586.61 7207.41,2594.9 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7203.72,2598.98,7212.7139,2594.9662,7207.0648,2595.2635,7206.7675,2589.6145,7203.72,2598.98" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7517.5,2073.5664,7521.5,2077.5664,7517.5,2081.5664,7513.5,2077.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="7524.5" y="2082.5669">recvMsgCallback_</text><!--MD5=[3427b8ada0e3011132406bbf51a19799]
link C_0002230624932100089526 to C_0001897340460211641725--><path d="M6049.11,1187.21 C6359.03,1254.82 6727.76,1330.79 7062.5,1388 C7163.25,1405.22 7189.2,1404.42 7290.5,1418 C7544.36,1452.04 7663.66,1333.32 7861.5,1496 C8041.5,1644.01 7867.54,1826.4 8031.5,1992 C8192.71,2154.82 8355.56,2001.9 8517.5,2164 C8637.41,2284.03 8615.87,2356.77 8644.5,2524 C8689.65,2787.68 8671.65,3101.26 8654.83,3279.73 " fill="none" id="C_0002230624932100089526-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8654.35,3284.71,8659.1795,3276.1265,8654.8207,3279.7322,8651.215,3275.3734,8654.35,3284.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[475fc265529b86f5b89a981b424e962c]
link C_0002230624932100089526 to C_0001390130774830223499--><path d="M6049.35,1218.27 C6270.28,1280.16 6514.53,1350.26 6737.5,1418 C6803.26,1437.98 6817,1453.09 6884.5,1466 C6937.1,1476.06 7328.83,1456.97 7365.5,1496 C7440.97,1576.33 7425.94,1899.82 7365.5,1992 C7347.16,2019.97 7318.32,1996.66 7296.5,2022 C7253.86,2071.5 7271.29,2099.93 7258.5,2164 C7244.02,2236.55 7263.35,2438.44 7214.5,2494 C7161.04,2554.8 7117.54,2523.46 7038.5,2541 C6964.03,2557.52 6922.17,2515.82 6869.5,2571 C6700.24,2748.34 6970.48,2943.3 6798.5,3118 C6547.99,3372.48 5469.68,3416.31 4966.7,3422.7 " fill="none" id="C_0002230624932100089526-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4961.54,3422.76,4970.5962,3426.631,4966.5395,3422.6886,4970.4819,3418.6318,4961.54,3422.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cf3252f145f52c6ad0115ad3c523b41]
link C_0002230624932100089526 to C_0001660397537883119469--><path d="M5955.61,1388.32 C5980.17,1421.61 6000.92,1457.47 6016.5,1496 C6058.19,1599.15 6169.41,2409.11 6097.5,2494 C6044.06,2557.09 5861.46,2480.21 5917.5,2541 C5973.11,2601.33 6217.2,2525.53 6285.5,2571 C6361.34,2621.49 6398.78,2726.16 6415.28,2790.07 " fill="none" id="C_0002230624932100089526-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6416.53,2794.98,6418.1941,2785.2727,6415.3005,2790.1335,6410.4397,2787.2399,6416.53,2794.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[034c16a8c2edc6fa2a6ffe7ba8418e5f]
link C_0002230624932100089526 to C_0002100370281243872283--><path d="M4635.72,1354.59 C4596.83,1367.1 4557.93,1378.38 4519.5,1388 C4476.8,1398.69 4156.84,1388.14 4124.5,1418 C3934.77,1593.17 4128.3,1751.41 4034.5,1992 C4028.68,2006.93 4019.14,2006.66 4014.5,2022 C4000.08,2069.64 4013.28,2084.24 4014.5,2134 C4018.95,2315.05 3963.14,2374.54 4034.5,2541 C4053.18,2584.57 4081.09,2625.61 4112.31,2662.57 " fill="none" id="C_0002230624932100089526-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4115.74,2666.6,4112.9579,2657.1523,4112.5013,2662.7907,4106.8629,2662.3341,4115.74,2666.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d2ce2e8b37834b1fb03da04894a7c85]
reverse link C_0002230624932100089526 to C_0002100370281243872283--><path d="M4623.48,1355.62 C4588.63,1367.38 4553.85,1378.27 4519.5,1388 C4364.1,1432.04 4264.43,1363.19 4172.5,1496 C4090.9,1613.89 4069.36,1990.8 4076.5,2134 C4084.51,2294.6 4061.86,2341.38 4112.5,2494 C4132.23,2553.46 4163.41,2613.58 4195.78,2666.79 " fill="none" id="C_0002230624932100089526&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4635.82,1351.43,4628.8513,1349.5762,4624.4598,1355.2959,4631.4285,1357.1497,4635.82,1351.43" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4082.5,2073.5664,4086.5,2077.5664,4082.5,2081.5664,4078.5,2077.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="4089.5" y="2082.5669">tlsPolicy_</text><!--MD5=[c68e74942c9e75d7a1d457e6ff6d95fd]
link C_0002230624932100089526 to C_0000434245188016003403--><path d="M4635.9,1337.79 C4471.9,1413.37 4340.88,1477.8 4328.5,1496 C4248.65,1613.44 4366.55,2013.44 4291.5,2134 C4277.2,2156.98 4252.13,2140.62 4238.5,2164 C4164.63,2290.7 4140.43,2384.94 4238.5,2494 C4280.64,2540.86 4458.96,2510.42 4520.5,2524 C4583.77,2537.96 4613.28,2524.6 4658.5,2571 C4718.43,2632.5 4736.17,2735.58 4741.38,2795.79 " fill="none" id="C_0002230624932100089526-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4741.82,2801.12,4745.0588,2791.8189,4741.4048,2796.1373,4737.0864,2792.4833,4741.82,2801.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c68e74942c9e75d7a1d457e6ff6d95fd]
link C_0002230624932100089526 to C_0000434245188016003403--><path d="M4635.87,1348.45 C4596.81,1362.62 4557.85,1375.93 4519.5,1388 C4453.82,1408.67 4428.04,1385.19 4367.5,1418 C4324.95,1441.06 4314.71,1453.53 4291.5,1496 C4182.99,1694.58 4253.19,1779.1 4176.5,1992 C4171.45,2006.02 4164.92,2007.49 4161.5,2022 C4150.06,2070.45 4161.15,2084.22 4161.5,2134 C4162.61,2294.01 4064.05,2371.08 4166.5,2494 C4235.53,2576.82 4297.99,2524.22 4404.5,2541 C4460.64,2549.85 4614.77,2534.69 4658.5,2571 C4725.44,2626.58 4740.54,2734.09 4743.42,2796.16 " fill="none" id="C_0002230624932100089526-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4743.64,2801.29,4747.2771,2792.1373,4743.4402,2796.294,4739.2835,2792.4571,4743.64,2801.29" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4167.5,2073.5664,4171.5,2077.5664,4167.5,2081.5664,4163.5,2077.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="4174.5" y="2082.5669">sslErrorCallback_</text><!--MD5=[e6b06091bb23409738e196d39773d40c]
link C_0002230624932100089526 to C_0000964465843177067305--><path d="M5890.02,1388.24 C5916.95,1421.89 5940.6,1457.82 5959.5,1496 C6057.3,1693.56 6023.81,1781.15 5959.5,1992 C5926.38,2100.57 5845.15,2205.84 5789.66,2268.79 " fill="none" id="C_0002230624932100089526-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5786.04,2272.87,5795.0012,2268.7838,5789.3547,2269.1267,5789.0118,2263.4802,5786.04,2272.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6049.01,1016.11 C6071.32,1018.37 6084,1021.17 6084,1024.5 C6084,1027.57 6073.22,1030.19 6054.06,1032.35 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.01,1032.89,6058.3825,1035.916,6053.982,1032.3614,6057.5367,1027.9609,6049.01,1032.89" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6095,1020.0664,6099,1024.0664,6095,1028.0664,6091,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6102" y="1029.0669">recvMsgCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6049.27,996.7 C6151.47,1001.3 6221,1010.57 6221,1024.5 C6221,1038.2 6153.76,1047.39 6054.33,1052.07 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.27,1052.3,6058.4433,1055.8848,6054.2648,1052.0717,6058.0779,1047.8932,6049.27,1052.3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6232,1020.0664,6236,1024.0664,6232,1028.0664,6228,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6239" y="1029.0669">connectionCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6049.27,978.56 C6232.71,982.22 6375,997.54 6375,1024.5 C6375,1051.21 6235.34,1066.49 6054.37,1070.33 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.27,1070.44,6058.3484,1074.2587,6054.269,1070.3397,6058.188,1066.2603,6049.27,1070.44" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6386,1020.0664,6390,1024.0664,6386,1028.0664,6382,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="6393" y="1029.0669">closeCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6049.15,962.17 C6289.94,963.57 6492,984.34 6492,1024.5 C6492,1064.36 6292.89,1085.13 6054.43,1086.79 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.15,1086.83,6058.1727,1090.7785,6054.1499,1086.8014,6058.127,1082.7786,6049.15,1086.83" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6503,1020.0664,6507,1024.0664,6503,1028.0664,6499,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6510" y="1029.0669">writeCompleteCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6049.32,946.93 C6370.38,942.78 6668,968.64 6668,1024.5 C6668,1080.06 6373.57,1105.94 6054.49,1102.13 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.32,1102.07,6058.2619,1106.1982,6054.3195,1102.1414,6058.3762,1098.199,6049.32,1102.07" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6679,1020.0664,6683,1024.0664,6679,1028.0664,6675,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6686" y="1029.0669">highWaterMarkCallback_</text><!--MD5=[f31d6af3df8ec0838da9d6a34fa975ae]
reverse link C_0002230624932100089526 to C_0001156367011091191681--><path d="M4751.55,1392.43 C4729.45,1424.6 4711.02,1459.1 4697.5,1496 C4616.76,1716.43 4652.52,1991.95 4689.48,2164 " fill="none" id="C_0002230624932100089526&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4754.55,1388.11,4746.1346,1393.2268,4751.701,1392.2189,4752.7089,1397.7852,4754.55,1388.11" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4703.5" cy="1744.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4710.5" y="1748.5669">«friend»</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M4750.43,2163.8 C4778.61,1910.28 4832.08,1449.29 4851.5,1418 C4856.88,1409.33 4862.52,1400.78 4868.4,1392.34 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4871.3,1388.2,4862.8607,1393.2773,4868.4317,1392.2955,4869.4135,1397.8665,4871.3,1388.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M4902.03,2163.86 C4946.18,2112.7 4989.46,2053.47 5018.5,1992 C5114.17,1789.5 5036.97,1708.57 5107.5,1496 C5118.82,1461.89 5132.21,1427.15 5146.77,1392.78 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5148.74,1388.15,5141.5358,1394.8656,5146.7825,1392.7509,5148.8972,1397.9976,5148.74,1388.15" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5110.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5120.5" y="1748.5669">connectionCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M4785.84,2163.65 C4801.7,2109.48 4817.71,2048.61 4828.5,1992 C4869.98,1774.4 4783.35,1696.51 4877.5,1496 C4894.26,1460.31 4914.89,1425.73 4938.04,1392.6 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4941.18,1388.15,4932.7324,1393.2134,4938.305,1392.2408,4939.2776,1397.8134,4941.18,1388.15" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4880.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="4890.5" y="1748.5669">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5086.58,2163.8 C5152.75,2117.38 5214.04,2060.42 5255.5,1992 C5286.74,1940.44 5310.25,1644.37 5324.9,1393.35 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5325.2,1388.17,5320.6931,1396.9271,5324.9148,1393.1619,5328.68,1397.3835,5325.2,1388.17" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5321.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="5331.5" y="1748.5669">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5154.01,2158.72 C5172.82,2150.49 5191.39,2142.23 5209.5,2134 C5241.44,2119.49 5473.1,2021.87 5491.5,1992 C5549.31,1898.16 5508.34,1604.93 5491.5,1496 C5486.04,1460.65 5478.39,1424.31 5469.42,1388.25 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5141.94,2163.98,5149.0391,2165.246,5152.9381,2159.1799,5145.839,2157.9139,5141.94,2163.98" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5524.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="5534.5" y="1748.5669">connection_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M6053.86,1308.69 C6132.76,1343.9 6211.33,1380.69 6285.5,1418 C6333.23,1442.01 6382.44,1468.59 6430.85,1495.9 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6049.14,1306.59,6055.7355,1313.9043,6053.7079,1308.6233,6058.9889,1306.5957,6049.14,1306.59" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6368.5" cy="1442.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6375.5" y="1446.5669">«friend»</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6572.59,1496 C6534.44,1467.61 6494.48,1440.74 6454.5,1418 C6330.23,1347.33 6190.96,1285.71 6054.12,1233.55 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6049.25,1231.7,6056.2285,1238.6499,6053.9204,1233.4853,6059.085,1231.1773,6049.25,1231.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6640.9,1495.73 C6611.52,1466.9 6579.79,1440 6546.5,1418 C6398.28,1320.07 6223.67,1244.85 6054.1,1187.77 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.33,1186.17,6056.5972,1192.8174,6054.072,1187.7554,6059.1339,1185.2302,6049.33,1186.17" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6608.5,1437.5664,6612.5,1441.5664,6608.5,1445.5664,6604.5,1441.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6615.5" y="1446.5669">upgradeCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M6068.21,1252.44 C6188.66,1300.4 6309.92,1355.68 6419.5,1418 C6459.48,1440.74 6499.44,1467.61 6537.88,1496 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6065.31,1258.81,6049.28,1244.95,6070.45,1245.79,6065.31,1258.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a625fde3388fdef88cf72768c6dd1b6]
reverse link C_0002230624932100089526 to C_0001423170502760786790--><path d="M6052.78,709.13 C6074.64,684.91 6094.41,658.91 6111.5,631 C6129.04,602.36 6129.7,576.42 6118.78,553.09 " fill="none" id="C_0002230624932100089526&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6049.25,713,6058.2676,709.0399,6052.6169,709.3035,6052.3533,703.6528,6049.25,713" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6132.5" cy="607.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6139.5" y="611.5669">«friend»</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5421.7,553.22 C5413.31,562.66 5405.53,572.58 5398.5,583 C5383.29,605.57 5371.21,630.29 5361.68,656.14 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5359.93,660.98,5366.7527,653.8772,5361.6307,656.2781,5359.2297,651.1561,5359.93,660.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5453.6,563.25 C5448.28,569.65 5443.23,576.23 5438.5,583 C5421.74,606.97 5407.82,633.34 5396.28,660.88 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5462.19,553.35,5455.2367,555.2609,5454.3263,562.4143,5461.2796,560.5034,5462.19,553.35" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5441.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="5451.5" y="611.5669">connSet_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5574.96,553.28 C5567.06,563.08 5559.52,573.02 5552.5,583 C5536.15,606.26 5520.48,631 5505.59,656.41 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5503.02,660.83,5511.0076,655.0682,5505.5376,656.5101,5504.0957,651.0401,5503.02,660.83" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5555.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5565.5" y="611.5669">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5738.47,553.12 C5733.48,579.98 5725.88,606.88 5714.5,631 C5710.49,639.51 5706.21,647.95 5701.71,656.32 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5699.19,660.96,5706.9962,654.9548,5701.5733,656.5645,5699.9635,651.1416,5699.19,660.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5733.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5743.5" y="611.5669">connectionCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5886.9,553.19 C5895.1,579.01 5895.45,605.57 5882.5,631 C5878.12,639.6 5873.45,648.06 5868.51,656.38 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5865.75,660.99,5873.8104,655.3305,5868.3225,656.7025,5866.9505,651.2146,5865.75,660.99" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5896.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="5906.5" y="611.5669">writeCompleteCallback_</text><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5681.51,2385.33 C5544.52,2531.13 5167.47,2932.4 4924.41,3191.09 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4920.84,3194.88,4929.9211,3191.0677,4924.2668,3191.239,4924.0955,3185.5847,4920.84,3194.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5713.88,2385.05 C5662.07,2523.83 5509.35,2892.99 5276.5,3118 C5188.23,3203.3 5071.34,3271.39 4966.39,3321.4 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4961.72,3323.62,4971.5658,3323.3741,4966.2369,3321.4759,4968.1352,3316.147,4961.72,3323.62" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5637.5" y="2842.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5647.5" y="2849.0669">loop_</text><!--MD5=[64866fe38d904675f00d2ad62d2d950e]
link C_0002013739811805694444 to C_0000964465843177067305--><path d="M5795.42,1781.03 C5784.7,1875.76 5755.56,2133.1 5741.42,2258.05 " fill="none" id="C_0002013739811805694444-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5740.6293" cy="2265.0307" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5741.5287" x2="5739.73" y1="2257.0814" y2="2272.98"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5748.5786" x2="5732.6801" y1="2265.9301" y2="2264.1314"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5251.77,549.99 C5245.99,551.04 5240.23,552.05 5234.5,553 C5188.57,560.63 3591.38,550.03 3558.5,583 C3507.85,633.78 3508.2,3109.39 3553.5,3165 C3664.22,3300.92 4141.11,3370.36 4445.83,3401.49 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4451.2,3402.04,4442.6594,3397.1351,4446.2265,3401.5255,4441.8362,3405.0927,4451.2,3402.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5251.76,549.93 C5245.99,551 5240.23,552.03 5234.5,553 C5057.2,583.15 3737.82,525.56 3619.5,661 C3540.35,751.6 3579.5,1622.7 3579.5,1743 C3579.5,1743 3579.5,1743 3579.5,2845.5 C3579.5,2994.03 3546.14,3095.68 3677.5,3165 C3920.83,3293.41 4230.57,3359.81 4446.35,3392.84 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4451.43,3393.62,4443.1244,3388.3268,4446.4855,3392.8769,4441.9355,3396.238,4451.43,3393.62" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3582.5" y="2075.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3592.5" y="2082.5669">loop_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5251.74,549.84 C5245.97,550.94 5240.23,551.99 5234.5,553 C5145.36,568.67 4499.3,538.48 4420.5,583 C4101.73,763.1 4514.19,1139.28 4245.5,1388 C4192.11,1437.42 3987.62,1392.47 3919.5,1418 C3864.06,1438.78 3842.45,1445.52 3811.5,1496 C3674.93,1718.77 3721.5,1815.7 3721.5,2077 C3721.5,2077 3721.5,2077 3721.5,2845.5 C3721.5,2967.39 3685.79,3015.98 3752.5,3118 C3829.56,3235.84 4190.91,3326.65 4446.02,3377.46 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4451.27,3378.51,4443.2197,3372.8362,4446.3655,3377.5377,4441.664,3380.6834,4451.27,3378.51" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3724.5" y="2075.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="3734.5" y="2082.5669">ioLoops_</text><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M6237.19,409.6 C6912.01,442.93 8055.29,519.65 8183.5,661 C8413.02,914.04 8364.62,1911.09 8623.5,2134 C8695.28,2195.81 8772.41,2092.46 8834.5,2164 C8930.63,2274.77 8883.27,2355.68 8834.5,2494 C8819.89,2535.44 8789.88,2530.65 8772.5,2571 C8667.1,2815.71 8736.33,2902.36 8691.5,3165 C8685.13,3202.31 8677.34,3242.48 8669.71,3279.74 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8668.68,3284.74,8674.3989,3276.7216,8669.6798,3279.841,8666.5604,3275.1219,8668.68,3284.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M5251.76,549.92 C5245.98,550.99 5240.23,552.02 5234.5,553 C5173.75,563.37 4176.63,548.58 4125.5,583 C4004.09,664.72 3958.45,841.06 3941.75,944.13 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3940.93,949.28,3946.297,941.022,3941.7172,944.3424,3938.3968,939.7625,3940.93,949.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M5251.76,549.91 C5245.98,550.99 5240.23,552.02 5234.5,553 C5175.94,563.03 4215.96,551.63 4165.5,583 C4131.59,604.08 4025.4,823.87 3968.83,944.79 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3966.67,949.4,3974.1018,942.9372,3968.7852,944.8694,3966.8529,939.5528,3966.67,949.4" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4168.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="4178.5" y="611.5669">loopPoolPtr_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M6237.22,410.26 C6864.68,443.11 7879.46,517.91 7973.5,661 C8135.95,908.18 8084.9,1722.73 7962.5,1992 C7916.18,2093.91 7837.65,2068.96 7778.5,2164 C7697.53,2294.12 7792.83,2391.95 7678.5,2494 C7591.87,2571.32 7536.08,2522.19 7421.5,2541 C7330.2,2555.99 7292.95,2520.39 7215.5,2571 C7213.02,2572.62 7210.57,2574.29 7208.15,2576.01 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7203.82,2579.15,7213.4504,2577.0874,7207.8624,2576.2074,7208.7424,2570.6194,7203.82,2579.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M6237.21,410.6 C6776.07,438.23 7603.18,493.51 7904.5,583 C7975.4,604.06 8011.56,598.75 8051.5,661 C8370.99,1158.89 8292.65,1457.32 8039.5,1992 C8001.58,2072.1 7969.16,2079.21 7899.5,2134 C7879.13,2150.02 7865.29,2143.45 7849.5,2164 C7756.49,2285.01 7865.06,2388.78 7754.5,2494 C7688.36,2556.95 7644.65,2526.49 7554.5,2541 C7479.83,2553.01 7279.95,2531.43 7215.5,2571 C7212.98,2572.55 7210.48,2574.15 7208.02,2575.81 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7203.62,2578.84,7213.3025,2577.0374,7207.7402,2576.0074,7208.7703,2570.4451,7203.62,2578.84" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="8244.5" y="1748.5669">recvMessageCallback_</text><!--MD5=[e4cf3da0efa4c24e1326f4e1327196a8]
link C_0001423170502760786790 to C_0002100370281243872283--><path d="M5251.74,549.82 C5245.97,550.93 5240.22,551.99 5234.5,553 C5192.51,560.43 4498.72,553.96 4467.5,583 C4203.91,828.2 4635.91,1137.34 4377.5,1388 C4318.29,1445.44 4084.29,1387.85 4007.5,1418 C3955.36,1438.47 3933.55,1445.9 3908.5,1496 C3804.63,1703.71 3748.76,2364.34 3899.5,2541 C3928.24,2574.68 3955.63,2549.79 3994.5,2571 C4041.56,2596.68 4088.24,2629.64 4130.99,2663.7 " fill="none" id="C_0001423170502760786790-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4135.11,2667,4130.5731,2658.2583,4131.2029,2663.88,4125.5812,2664.5097,4135.11,2667" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79d79e4b28f578896d460465838bfe49]
reverse link C_0001423170502760786790 to C_0002100370281243872283--><path d="M5238.79,552.2 C5237.36,552.47 5235.93,552.74 5234.5,553 C5107.34,576.32 4774.85,538.4 4653.5,583 C4306.87,710.4 4716.53,1135 4447.5,1388 C4387.24,1444.66 4155.03,1392.04 4076.5,1418 C4068.73,1420.57 3955.47,1488.84 3951.5,1496 C3843.84,1690.09 3920.09,2283.52 3990.5,2494 C4012.01,2558.29 4053.14,2616.88 4099.33,2666.95 " fill="none" id="C_0001423170502760786790&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5251.72,549.72,5245.0718,546.927,5239.9366,551.9896,5246.5848,554.7826,5251.72,549.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3954.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="3964.5" y="1748.5669">policyPtr_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M6250.17,401.92 C6959.51,423.77 8183.36,476.43 8358.5,583 C9000.59,973.68 8564.5,1545.88 9032.5,2134 C9077.63,2190.72 9143.36,2238.75 9198.3,2272.83 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6237.16,401.52,6243.0341,405.7026,6249.1543,401.8891,6243.2802,397.7064,6237.16,401.52" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8782.5" y="1439.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="8792.5" y="1446.5669">acceptorPtr_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M5239.09,551.86 C5237.56,552.24 5236.03,552.62 5234.5,553 C5099.58,586.35 4707.88,554.58 4618.5,661 C4523.37,774.26 4550.64,1875.28 4641.5,1992 C4807.97,2205.85 4967.55,2084.07 5226.5,2164 C5340.53,2199.2 5468.38,2240.57 5567.16,2272.95 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5251.85,548.64,5245.0526,546.2328,5240.2161,551.5815,5247.0135,553.9887,5251.85,548.64" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4568.5" y="1439.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="4578.5" y="1446.5669">timingWheelMap_</text><!--MD5=[e097413d72e14ba218428e784ac5e60d]
reverse link C_0001423170502760786790 to C_0000626107303889580949--><path d="M6250.44,418.48 C6849.8,458.67 7781.03,539.82 7887.5,661 C8100.77,903.73 7978.11,1077.85 7887.5,1388 C7793.74,1708.95 7643.23,1728.8 7482.5,2022 C7371.34,2224.79 7444.6,2350.18 7263.5,2494 C7183.5,2557.53 7138.8,2521.63 7038.5,2541 C6963.6,2555.47 6930.81,2525.6 6869.5,2571 C6783.5,2634.68 6746.77,2766.94 6735.02,2820.37 " fill="none" id="C_0001423170502760786790&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6237.23,417.59,6242.9484,421.9832,6249.203,418.3944,6243.4846,414.0012,6237.23,417.59" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7851.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="7861.5" y="1748.5669">sslContextPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M2105.93,78.71 C2533.17,83.08 4606.11,109.85 5234.5,223 C5240.22,224.03 5245.97,225.11 5251.73,226.23 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.64,85.71,2085.71,78.51,2105.78,71.71,2105.64,85.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70ff9873eb8ad20d6f04092c12d73f6d]
link C_0001489562721151066050 to C_0001423170502760786790--><path d="M8330.3,88.86 C8004.23,126.46 6907.81,252.87 6251.99,328.49 " fill="none" id="C_0001489562721151066050-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6245.0068" cy="329.289" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6252.9536" x2="6237.06" y1="328.3679" y2="330.21"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6245.9278" x2="6244.0858" y1="337.2358" y2="321.3422"/><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M8866.52,2996.85 C8819.61,3084.51 8760.92,3194.21 8714.83,3280.35 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8712.37,3284.95,8720.1378,3278.8951,8714.7252,3280.5394,8713.0808,3275.1268,8712.37,3284.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M2105.73,78.43 C2667.04,81.69 6127.89,104.5 7175.5,176 C7797.75,218.47 8119.68,103.48 8518.5,583 C8925.6,1072.46 8540.86,1400.58 8776.5,1992 C8810.26,2076.74 8858.78,2077.76 8888.5,2164 C8948.55,2338.22 8957.39,2551.73 8955.1,2692.38 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.48,85.43,2085.52,78.31,2105.56,71.43,2105.48,85.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M2105.93,77.84 C2756.2,76.66 7316.57,72.25 8685.5,176 C8921.95,193.92 9731.5,149.87 9731.5,387 C9731.5,387 9731.5,387 9731.5,3947 C9731.5,4397.14 6188.02,4442.62 5336.75,4447.05 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.73,84.84,2085.71,77.87,2105.7,70.84,2105.73,84.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M9264.91,2385.12 C9236.96,2432.52 9199.13,2503.69 9179.5,2571 C9145.27,2688.35 9209.46,3033.12 9121.5,3118 C9083.83,3154.35 5908.56,3349.97 4966.88,3407.24 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4961.73,3407.56,4970.954,3411.0122,4966.721,3407.2597,4970.4735,3403.0267,4961.73,3407.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M9158.54,2385.07 C9000.5,2447.44 8761.4,2543.93 8724.5,2571 C8445.82,2775.48 8530.48,3008.09 8222.5,3165 C7934.73,3311.61 5731.43,3391.85 4966.84,3415.5 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4961.81,3415.65,4970.9312,3419.3653,4966.8075,3415.4929,4970.6799,3411.3693,4961.81,3415.65" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8730.5,2840.0664,8734.5,2844.0664,8730.5,2848.0664,8726.5,2844.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="8737.5" y="2849.0669">loop_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M9292.74,2385.13 C9271.21,2559.21 9204.45,3087.59 9183.5,3118 C9113.18,3220.05 8997.01,3291.77 8889.94,3339.91 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8885.18,3342.04,8895.0289,3342.0457,8889.7502,3340.012,8891.784,3334.7333,8885.18,3342.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M9303.29,2398.33 C9311.43,2566.92 9324.39,2997.74 9252.5,3118 C9174.02,3249.28 9019.63,3325.61 8885.3,3369.08 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9302.64,2385.22,9298.9416,2391.4104,9303.2333,2397.2053,9306.9318,2391.0149,9302.64,2385.22" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9316.5,2840.0664,9320.5,2844.0664,9316.5,2848.0664,9312.5,2844.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="9323.5" y="2849.0669">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M9325.99,2385.22 C9387.6,2522.44 9523.88,2884.68 9368.5,3118 C9262.67,3276.91 9056.54,3353.17 8890.24,3389.69 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8885.33,3390.76,8894.9779,3392.7393,8890.2139,3389.689,8893.2643,3384.925,8885.33,3390.76" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9446.5,2840.0664,9450.5,2844.0664,9446.5,2848.0664,9442.5,2844.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="9453.5" y="2849.0669">newConnectionCallback_</text><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M9211.35,2393.3 C9167.83,2428.02 9117.15,2474.1 9081.5,2524 C9045.31,2574.66 9016.48,2636.58 8994.97,2692.37 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9221.67,2385.17,9214.4814,2385.7392,9212.242,2392.5938,9219.4306,2392.0246,9221.67,2385.17" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9087.5,2528.0664,9091.5,2532.0664,9087.5,2536.0664,9083.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="9094.5" y="2537.0669">sock_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M9431.45,2391.76 C9501.1,2432.09 9580.1,2492 9619.5,2571 C9728.01,2788.55 9702.2,2889.39 9619.5,3118 C9516.82,3401.85 9018.53,4023.17 8750.5,4162 C8445.69,4319.88 6025.33,4416.74 5336.7,4441.3 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9419.92,2385.21,9423.1572,2391.6536,9430.3503,2391.1438,9427.1131,2384.7001,9419.92,2385.21" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9590.5,3419.5664,9594.5,3423.5664,9590.5,3427.5664,9586.5,3423.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="9597.5" y="3428.5669">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M2105.7,78.22 C2821.03,80.41 8273.71,99.54 8606.5,176 C8822.57,225.64 9058.5,165.3 9058.5,387 C9058.5,387 9058.5,387 9058.5,1745 C9058.5,1952.82 9190.9,2172.86 9259.43,2272.83 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.68,85.22,2085.7,78.16,2105.72,71.22,2105.68,85.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M6328.74,2220.74 C6296.66,2196.65 6267.87,2167.93 6247.5,2134 C6210.96,2073.15 6230.78,1565.09 6214.5,1496 C6205.83,1459.19 6206.88,1445.1 6180.5,1418 C6142.16,1378.61 6099.09,1342.74 6053.25,1310.14 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6049.1,1307.2,6054.1437,1315.6594,6053.184,1310.0845,6058.7589,1309.1249,6049.1,1307.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M6328.98,2220.12 C6289.94,2195.6 6252.29,2166.9 6221.5,2134 C6173.82,2083.04 6173.4,2059.18 6154.5,1992 C6119.76,1868.5 6164.74,1524.02 6092.5,1418 C6080.29,1400.09 6067,1382.93 6052.8,1366.51 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6049.17,1362.36,6052.0837,1371.768,6052.4615,1366.1238,6058.1057,1366.5016,6049.17,1362.36" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6160.5,1739.5664,6164.5,1743.5664,6160.5,1747.5664,6156.5,1743.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="6167.5" y="1748.5669">conn_</text><!--MD5=[66a28d60dde9122b674256fe47a8607b]
link C_0000464040622375950341 to C_0002100370281243872283--><path d="M6328.89,2429.97 C6255.8,2455.77 6174.49,2480.15 6097.5,2494 C5949.72,2520.58 4891.74,2485.93 4746.5,2524 C4654.6,2548.09 4567.97,2604.57 4497.27,2663.46 " fill="none" id="C_0000464040622375950341-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4493.06,2666.98,4502.5298,2664.2739,4496.8953,2663.7721,4497.3971,2658.1375,4493.06,2666.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[875d972240b01517ed889bd22efa83e7]
reverse link C_0000464040622375950341 to C_0002100370281243872283--><path d="M6316.4,2432.74 C6246.54,2456.94 6170.02,2479.79 6097.5,2494 C5940.37,2524.78 4807.92,2513.47 4658.5,2571 C4601.38,2592.99 4546.57,2628.6 4498.4,2666.93 " fill="none" id="C_0000464040622375950341&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6328.91,2428.37,6321.9267,2426.572,6317.581,2432.3266,6324.5644,2434.1246,6328.91,2428.37" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5304.5,2528.0664,5308.5,2532.0664,5304.5,2536.0664,5300.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5311.5" y="2537.0669">policyPtr_</text><!--MD5=[b652be82a647abba4b5fd8692aa6554f]
link C_0000464040622375950341 to C_0000626107303889580949--><path d="M6499.46,2468.1 C6495.23,2493.5 6497.47,2518.93 6511.5,2541 C6528.35,2567.51 6552.43,2549.68 6575.5,2571 C6652.75,2642.39 6701.7,2761.3 6721.06,2815.29 " fill="none" id="C_0000464040622375950341-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6722.84,2820.31,6723.6026,2810.4907,6721.1692,2815.5974,6716.0625,2813.164,6722.84,2820.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80034138ff2d0c3e947014f89ce57bda]
reverse link C_0000464040622375950341 to C_0000626107303889580949--><path d="M6669.65,2479.67 C6676.83,2494.28 6683.28,2509.18 6688.5,2524 C6725.85,2630.07 6730.44,2766.54 6730.69,2820.28 " fill="none" id="C_0000464040622375950341&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6663.75,2468.03,6662.8907,2475.1897,6669.1692,2478.7366,6670.0285,2471.5769,6663.75,2468.03" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6700.5,2528.0664,6704.5,2532.0664,6700.5,2536.0664,6696.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="6707.5" y="2537.0669">contextPtr_</text><!--MD5=[cbe65aa9ba09230aac132495b612a111]
link C_0000464040622375950341 to C_0001289495020269537351--><path d="M6812.24,2433.58 C6867.3,2455.17 6925.96,2476.62 6981.5,2494 C7038.09,2511.71 7074.59,2477.6 7111.5,2524 C7121.72,2536.84 7128.78,2550.87 7133.26,2565.65 " fill="none" id="C_0000464040622375950341-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7134.68,2570.69,7136.088,2560.9423,7133.3234,2565.8776,7128.3881,2563.1129,7134.68,2570.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M6742.43,2477.19 C6758.7,2492.63 6774.64,2508.39 6789.5,2524 C6822.58,2558.75 6856.01,2597.39 6887.31,2635.45 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6732.82,2468.14,6734.4534,2475.1637,6741.565,2476.3574,6739.9316,2469.3337,6732.82,2468.14" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6811.5,2528.0664,6815.5,2532.0664,6811.5,2536.0664,6807.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6818.5" y="2537.0669">recvBuffer_</text><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M6823.11,2456.45 C6850.9,2476.67 6877.17,2499.21 6899.5,2524 C6912.46,2538.39 6924.45,2554.12 6935.52,2570.64 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6812.39,2448.82,6814.9595,2455.5578,6822.1673,2455.7774,6819.5978,2449.0396,6812.39,2448.82" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6918.5,2528.0664,6922.5,2532.0664,6918.5,2536.0664,6914.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="6925.5" y="2537.0669">writeBuffer_</text><!--MD5=[33ce3cc340c214aeadfebc02526d05f3]
link C_0000464040622375950341 to C_0001660397537883119469--><path d="M6344.77,2468.11 C6308.02,2492.74 6280.01,2513.8 6274.5,2524 C6248.02,2573.01 6335.37,2712.97 6388.54,2790.39 " fill="none" id="C_0000464040622375950341-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6391.68,2794.94,6389.8546,2785.2618,6388.8377,2790.8265,6383.273,2789.8095,6391.68,2794.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ec1a6f5f84e6ef233285776a59af2fe]
reverse link C_0000464040622375950341 to C_0001660397537883119469--><path d="M6337.8,2478.19 C6326.05,2492.43 6315.73,2507.7 6307.5,2524 C6261.01,2616.07 6332.94,2730.83 6383.62,2794.73 " fill="none" id="C_0000464040622375950341&lt;-C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6346.61,2468,6339.6611,2469.9267,6338.7669,2477.0822,6345.7158,2475.1555,6346.61,2468" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6313.5,2528.0664,6317.5,2532.0664,6313.5,2536.0664,6309.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="6320.5" y="2537.0669">peerCertificate_</text><!--MD5=[59b32ea62ecf6e8b0ce93ada6106a262]
link C_0000464040622375950341 to C_0001390130774830223499--><path d="M6344.58,2468.14 C6303.92,2493.91 6271.49,2515.45 6262.5,2524 C6244.01,2541.59 6238.8,2547.23 6229.5,2571 C6180.96,2695.03 6241.63,3068.81 6149.5,3165 C5990.54,3330.95 5337.73,3391.16 4966.95,3412.23 " fill="none" id="C_0000464040622375950341-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4961.79,3412.52,4971.0035,3416,4966.7819,3412.2348,4970.5471,3408.0131,4961.79,3412.52" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6235.5,2840.0664,6239.5,2844.0664,6235.5,2848.0664,6231.5,2844.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6242.5" y="2849.0669">loop_</text><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M6553.35,1992.09 C6545.69,2001.94 6538.38,2011.92 6531.5,2022 C6501.35,2066.17 6529.72,2101.17 6487.5,2134 C6403.34,2199.45 6335.5,2100.99 6249.5,2164 C6119.24,2259.43 6175.59,2352.66 6097.5,2494 C5937.37,2783.81 5954.75,2918.49 5690.5,3118 C5477.71,3278.66 5179.07,3355.63 4966.72,3391.91 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4961.72,3392.75,4971.2586,3395.2025,4966.6508,3391.9211,4969.9323,3387.3133,4961.72,3392.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M6661.76,1992.06 C6612.72,2056.72 6563.11,2114 6528.5,2134 C6444.2,2182.72 6386.56,2101.99 6311.5,2164 C6192.09,2262.65 6258.14,2350.65 6199.5,2494 C6082.91,2778.99 6136.77,2922.97 5898.5,3118 C5757.16,3233.69 5272.72,3330.92 4966.65,3382.73 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4961.71,3383.56,4971.2486,3386.0125,4966.6408,3382.7311,4969.9223,3378.1233,4961.71,3383.56" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6193.5,2528.0664,6197.5,2532.0664,6193.5,2536.0664,6189.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6200.5" y="2537.0669">loop_</text><!--MD5=[cb9f027c3142c905f1a5f676e638bcfe]
link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7348.75,1866.22 C7508.52,1912.14 7658.12,1966.73 7717.5,2022 C7756.65,2058.44 7718.05,2102.81 7761.5,2134 C7817.08,2173.9 8326.2,2117.62 8376.5,2164 C8495.13,2273.38 8412.36,2363.03 8423.5,2524 C8441.73,2787.38 8349.04,2866.23 8428.5,3118 C8446.71,3175.69 8479.91,3232.19 8514.61,3280.56 " fill="none" id="C_0000920759514274339356-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8517.54,3284.62,8515.5158,3274.9814,8514.6136,3280.5659,8509.0291,3279.6637,8517.54,3284.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7361.59,1898.48 C7564.33,1957.97 7749.67,2013.89 7758.5,2022 C7797.88,2058.19 7759.03,2102.84 7802.5,2134 C7916.96,2216.04 8323.31,2078.89 8435.5,2164 C8576.14,2270.69 8497.57,2376.07 8560.5,2541 C8565.68,2554.58 8570.01,2556.89 8573.5,2571 C8605.99,2702.31 8625.17,3078.94 8633.52,3284.71 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7348.83,1894.73,7353.462,1900.2567,7360.3451,1898.1067,7355.7131,1892.58,7348.83,1894.73" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8566.5,2528.0664,8570.5,2532.0664,8566.5,2536.0664,8562.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="8573.5" y="2537.0669">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7361.04,1868.17 C7462.04,1906.85 7562.34,1957.07 7646.5,2022 C7693.74,2058.44 7668.69,2104.42 7720.5,2134 C7777.89,2166.76 8267.65,2117.39 8314.5,2164 C8433.47,2282.36 8323.16,2373.64 8335.5,2541 C8354.44,2797.83 8290.8,2879.73 8388.5,3118 C8413.24,3178.34 8454.18,3236 8495.84,3284.62 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7348.72,1863.51,7352.9161,1869.3745,7359.9434,1867.7567,7355.7473,1861.8922,7348.72,1863.51" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8341.5,2528.0664,8345.5,2532.0664,8341.5,2536.0664,8337.5,2532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="8348.5" y="2537.0669">peerAddr_</text><!--MD5=[76f47a1576e50ad875a2ac1674af8c7c]
link C_0000920759514274339356 to C_0002100370281243872283--><path d="M6312.14,1966.76 C6279.44,1976.4 6246.72,1984.96 6214.5,1992 C6147.99,2006.54 5657.8,1982.29 5602.5,2022 C5559.06,2053.19 5600.99,2101.52 5558.5,2134 C5461.18,2208.41 5373.89,2080.23 5284.5,2164 C5175.84,2265.83 5337.79,2395.05 5226.5,2494 C5182.59,2533.05 4753.06,2502.17 4698.5,2524 C4621.06,2554.98 4548.14,2608.61 4487.5,2663.18 " fill="none" id="C_0000920759514274339356-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4483.53,2666.77,4492.889,2663.7026,4487.2394,2663.4173,4487.5247,2657.7676,4483.53,2666.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M6885.31,1992.22 C6887.42,2002.28 6889.49,2012.23 6891.5,2022 C6934.47,2231.19 6884.85,2303.57 6981.5,2494 C6992.5,2515.68 7025.37,2522.58 7009.5,2541 C6950.53,2609.42 6876.4,2511.44 6808.5,2571 C6736.47,2634.19 6728.89,2758.9 6729.39,2814.99 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6729.46,2820.2,6733.331,2811.1438,6729.3886,2815.2005,6725.3318,2811.2581,6729.46,2820.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M6916.46,1992.21 C6919.87,2002.27 6923.22,2012.23 6926.5,2022 C6947.59,2084.9 6954.45,2100.16 6972.5,2164 C7013.56,2309.22 6950.36,2382.9 7052.5,2494 C7081.04,2525.04 7117.85,2489.8 7142.5,2524 C7151.94,2537.1 7158.18,2551.13 7161.8,2565.73 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7162.93,2570.7,7164.8286,2561.0359,7161.8182,2565.8252,7157.0289,2562.8148,7162.93,2570.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M6981.82,2004.13 C7058.04,2151.13 7141.21,2341.69 7174.5,2524 C7177.32,2539.45 7178.21,2555.09 7177.52,2570.71 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6975.65,1992.28,6974.8788,1999.4497,6981.2003,2002.9193,6981.9716,1995.7495,6975.65,1992.28" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7173.5,2324.5664,7177.5,2328.5664,7173.5,2332.5664,7169.5,2328.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="7180.5" y="2333.5669">readBuffer_</text><!--MD5=[757c398b52da5470305d11307157893e]
link C_0000920759514274339356 to C_0001660397537883119469--><path d="M6864.67,1992.26 C6884.76,2181.92 6894.97,2422.93 6829.5,2494 C6775.26,2552.88 6528.6,2468.93 6470.5,2524 C6398.77,2591.99 6405.04,2718.12 6415.85,2789.89 " fill="none" id="C_0000920759514274339356-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6416.63,2794.96,6419.1943,2785.4508,6415.859,2790.0198,6411.29,2786.6845,6416.63,2794.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M6514.01,1992.06 C6505.77,2001.87 6497.91,2011.85 6490.5,2022 C6458.96,2065.19 6488.95,2101.47 6446.5,2134 C6398.94,2170.46 6236.82,2150.2 6178.5,2164 C6069.28,2189.84 5950.21,2234.66 5862.74,2270.92 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5858.07,2272.86,5867.9158,2273.1059,5862.6883,2270.944,5864.8502,2265.7166,5858.07,2272.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M6314.35,1992.08 C6304.97,2001.71 6295.99,2011.68 6287.5,2022 C6254.6,2061.97 6290.66,2096 6255.5,2134 C6253.82,2135.81 6041.11,2214.54 5887.77,2271.13 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5882.8,2272.97,5892.6275,2273.6176,5887.4927,2271.2441,5889.8661,2266.1093,5882.8,2272.97" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6290.5" y="2075.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="6300.5" y="2082.5669">timingWheelWeakPtr_</text><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M6312.44,1959.21 C6279.48,1970.82 6246.64,1981.87 6214.5,1992 C5949.85,2075.43 5879.64,2085.03 5606.5,2134 C5554.03,2143.41 5408.25,2128.48 5368.5,2164 C5255.96,2264.55 5394.14,2386.23 5288.5,2494 C5194.55,2589.85 5111.61,2501.98 4996.5,2571 C4899.31,2629.28 4816.45,2735.76 4773.97,2796.93 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4770.98,2801.26,4779.387,2796.1295,4773.8223,2797.1465,4772.8054,2791.5818,4770.98,2801.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M7158.51,2002.16 C7201.21,2051.05 7238.67,2105.43 7263.5,2164 C7323.23,2304.93 7205.85,3287.23 7148.96,3729.75 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7149.62,1992.14,7150.6087,1999.283,7157.5825,2001.1176,7156.5938,1993.9746,7149.62,1992.14" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7273.5" y="2842.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="7283.5" y="2849.0669">lastTimingWheelUpdateTime_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M7223.01,2002 C7229.03,2008.57 7234.87,2015.24 7240.5,2022 C7739.79,2621.6 7591.05,2951.71 7646.5,3730 C7660.15,3921.51 7774.3,4018.72 7646.5,4162 C7492.91,4334.19 5885.65,4416.95 5336.91,4440.34 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7214.07,1992.46,7215.253,1999.5734,7222.2742,2001.2173,7221.0912,1994.1039,7214.07,1992.46" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7635.5,3152.0664,7639.5,3156.0664,7635.5,3160.0664,7631.5,3156.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="7642.5" y="3161.0669">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M7361.44,1913.61 C7466.73,1942.93 7577.01,1970.77 7681.5,1992 C8084,2073.8 8262.41,1915.58 8589.5,2164 C8680.49,2233.1 8810.09,2514.2 8885.83,2692.49 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7348.63,1910.03,7353.3309,1915.4982,7360.1865,1913.2621,7355.4856,1907.7939,7348.63,1910.03" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8801.5,2324.5664,8805.5,2328.5664,8801.5,2332.5664,8797.5,2328.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="8808.5" y="2333.5669">socketPtr_</text><!--MD5=[b5fd39cbf5d90566dc2e46b01562db6a]
reverse link C_0000920759514274339356 to C_0000464040622375950341--><path d="M6714.92,2004.17 C6686.38,2068.17 6656.89,2134.28 6632.07,2189.94 " fill="none" id="C_0000920759514274339356&lt;-C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6720.24,1992.24,6714.1415,1996.0881,6715.348,2003.1976,6721.4465,1999.3495,6720.24,1992.24" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6706.5,2073.5664,6710.5,2077.5664,6706.5,2081.5664,6702.5,2077.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="6713.5" y="2082.5669">tlsProviderPtr_</text><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M6307.22,1968.5 C6276.16,1977.48 6245.11,1985.43 6214.5,1992 C6135.56,2008.93 5552.75,1973.1 5488.5,2022 C5446.89,2053.67 5492.53,2100.36 5452.5,2134 C5415.4,2165.18 5283.73,2153.13 5236.5,2164 C5227.42,2166.09 5218.27,2168.27 5209.07,2170.53 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6312.2,1967.05,6302.44,1965.73,6307.4,1968.45,6304.68,1973.41,6312.2,1967.05" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5494.5" cy="2078.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5501.5" y="2082.5669">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M7254.28,1491.92 C7283.52,1460.38 7309.05,1425.75 7328.5,1388 C7402.49,1244.39 7432.62,784.53 7328.5,661 C7190.54,497.33 6648.92,432.14 6237.08,406.18 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7250.7,1495.76,7259.7731,1491.9287,7254.1192,1492.1119,7253.9361,1486.458,7250.7,1495.76" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7402.5" cy="1025.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="7409.5" y="1029.0669">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M2105.94,78.29 C2646.23,80.61 5842.72,99.49 6254.5,223 C6612.91,330.5 6790.24,334.77 6973.5,661 C7118.5,919.12 7033.23,1265.23 6944.76,1495.76 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.7,85.29,2085.73,78.2,2105.75,71.29,2105.7,85.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c532aab217e61acf8b6b084ec7b46eb]
link C_0002266895444343633259 to C_0000920759514274339356--><path d="M5064.67,431.22 C5131.77,491.73 5266.36,599.32 5405.5,631 C5446.51,640.34 6890.05,630.96 6919.5,661 C7032.6,776.36 6939.29,1227.66 6919.5,1388 C6915.75,1418.35 6910.27,1449.84 6903.84,1480.96 " fill="none" id="C_0002266895444343633259-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6902.3638" cy="1487.8828" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6904.0177" x2="6900.71" y1="1480.0556" y2="1495.71"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6910.191" x2="6894.5367" y1="1489.5367" y2="1486.229"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M4981.36,431.2 C4941.64,470.8 4876.21,527.62 4806.5,553 C4736.06,578.65 4184.31,528.83 4132.5,583 C4117.75,598.42 4118.36,615.02 4132.5,631 C4168.85,672.08 4324.23,647.93 4377.5,661 C4460.66,681.4 4546.44,706.84 4630.96,734.72 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4635.76,736.3,4628.4688,729.6789,4631.0123,734.7317,4625.9595,737.2752,4635.76,736.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M5041.88,431.12 C5066.64,479.91 5109.98,565.32 5156.18,656.35 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5158.52,660.97,5158.0225,651.1337,5156.2611,656.5094,5150.8854,654.748,5158.52,660.97" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5146.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="5156.5" y="611.5669">conn_</text><!--MD5=[a2e7476096c2077970c9b111225cac20]
link C_0001029063960859366412 to C_0000920759514274339356--><path d="M7644.32,1106.29 C7602.4,1202.77 7520.84,1363.88 7407.5,1466 C7392.7,1479.34 7377.14,1492.16 7361,1504.49 " fill="none" id="C_0001029063960859366412-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7354.95" cy="1509.01" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7361.35" x2="7348.55" y1="1504.21" y2="1513.81"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7359.75" x2="7350.15" y1="1515.41" y2="1502.61"/><!--MD5=[803a46c0407296c3d5232650b81b89e3]
link C_0001029063960859366412 to C_0001289495020269537351--><path d="M7675.25,1106.04 C7673.04,1271.89 7669.71,1663.54 7681.5,1992 C7681.98,2005.35 7683.06,2008.64 7683.5,2022 C7685.16,2071.75 7688.01,2084.43 7683.5,2134 C7668.77,2296 7728.02,2374.64 7617.5,2494 C7589.7,2524.02 7479.59,2532.86 7439.5,2541 C7347.54,2559.68 7310.08,2521.27 7230.5,2571 C7222.62,2575.92 7215,2581.32 7207.63,2587.1 " fill="none" id="C_0001029063960859366412-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7203.57,2590.36,7213.0988,2587.8697,7207.4771,2587.24,7208.1069,2581.6183,7203.57,2590.36" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7692.5" cy="2078.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="7699.5" y="2082.5669">msgBuffer_</text><!--MD5=[78f71baf9803b06041c9b46669fccd94]
link C_0001727349338344491225 to C_0000920759514274339356--><path d="M7185.78,1074.07 C7167.75,1157.76 7124.27,1332.97 7052.5,1466 C7049.5,1471.57 7046.38,1477.13 7043.15,1482.69 " fill="none" id="C_0001727349338344491225-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7039.5491" cy="1488.764" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7043.6381" x2="7035.46" y1="1481.888" y2="1495.64"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7046.4251" x2="7032.673" y1="1492.853" y2="1484.6749"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M4554.34,4021.21 C4592.66,4077.71 4650.91,4154.74 4715.5,4209 C4790.71,4272.18 4885.28,4326.14 4967.37,4366.66 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4972.26,4369.07,4965.9603,4361.4995,4967.7765,4366.8568,4962.4191,4368.6731,4972.26,4369.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M1951.09,83.99 C1708.56,104.85 979.5,184.41 979.5,387 C979.5,387 979.5,387 979.5,2079 C979.5,2310.22 882.48,2944.66 1035.5,3118 C1973.05,4180.03 2801.82,3325.01 4172.5,3683 C4234.38,3699.16 4254.95,3695.04 4308.5,3730 C4365.78,3767.4 4417.8,3824.85 4454.28,3870.95 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1950.84,76.98,1971.36,82.28,1952.01,90.93,1950.84,76.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6fae28fa9ff5d7f68f4068664152934]
link C_0000607400095182694101 to C_0002026475275429760163--><path d="M3997.84,4015.09 C4007.6,4074.23 4021.9,4162.21 4033.5,4239 C4058.74,4406.16 4085.75,4601.43 4101.04,4713.7 " fill="none" id="C_0000607400095182694101-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4101.76,4718.99,4104.5158,4709.5346,4101.0889,4714.0352,4096.5882,4710.6083,4101.76,4718.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M4021.31,4027.49 C4044.69,4085.24 4073.95,4165.5 4089.5,4239 C4130.92,4434.83 4116.72,4487.99 4124.5,4688 C4124.89,4697.97 4124.73,4708.4 4124.23,4718.75 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4016.27,4015.15,4014.8363,4022.2172,4020.8085,4026.2587,4022.2421,4019.1915,4016.27,4015.15" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4129.5,4444.0664,4133.5,4448.0664,4129.5,4452.0664,4125.5,4448.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="4136.5" y="4453.0669">timers_</text><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M4074.6,4015.09 C4137.25,4061.14 4224.81,4120.84 4308.5,4162 C4525.55,4268.75 4792.31,4351.44 4967.55,4399.73 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4972.44,4401.08,4964.8284,4394.8299,4967.6202,4399.7499,4962.7002,4402.5417,4972.44,4401.08" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4402.5,4196.0664,4406.5,4200.0664,4402.5,4204.0664,4398.5,4200.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="4409.5" y="4205.0669">timerfdChannelPtr_</text><!--MD5=[94ff915feb725d4dab9cf4cca4f2b7b9]
reverse link C_0000607400095182694101 to C_0000157340721173102239--><path d="M3960.32,4027.39 C3923.37,4140.83 3857.71,4342.46 3833.14,4417.91 " fill="none" id="C_0000607400095182694101&lt;-C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3964.35,4015.02,3958.6873,4019.4847,3960.6305,4026.429,3966.2933,4021.9643,3964.35,4015.02" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3911.5,4196.0664,3915.5,4200.0664,3911.5,4204.0664,3907.5,4200.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="3918.5" y="4205.0669">timers_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M1951.11,79.84 C1717,86.11 1027.83,110.04 953.5,176 C881.78,239.64 908.5,291.11 908.5,387 C908.5,387 908.5,387 908.5,3425 C908.5,3799.55 2205.94,3614.4 2578.5,3653 C2638.66,3659.23 3607.27,3710.41 3664.5,3730 C3756.88,3761.62 3848.09,3826.57 3909.71,3876.85 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1951.17,72.83,1971.35,79.31,1951.54,86.83,1951.17,72.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M2106.14,78.48 C2772.76,82.69 7541.94,114.66 8975.5,176 C9267.98,188.51 9365.13,103.78 9632.5,223 C9728.38,265.75 9802.5,282.02 9802.5,387 C9802.5,387 9802.5,387 9802.5,4449.5 C9802.5,4723.34 5548.35,4790.16 4397.56,4803.23 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.84,85.48,2085.88,78.35,2105.92,71.48,2105.84,85.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M3847.73,4479.28 C3889.39,4530.49 3976.19,4637.21 4039.29,4714.78 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4042.66,4718.91,4040.072,4709.4073,4039.5,4715.0351,4033.8722,4714.4632,4042.66,4718.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M2104.96,96.88 C2190.11,119.69 2330.27,162.68 2440.5,223 C2495.28,252.98 2550.69,296.95 2590.82,331.81 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2103.14,103.64,2085.58,91.78,2106.7,90.1,2103.14,103.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M2559.5,456.4 C2492.96,508.16 2402.78,583.68 2334.5,661 C2251.46,755.03 2174.78,879.54 2131.13,955.46 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2555.34,450.76,2575.45,444.09,2563.89,461.85,2555.34,450.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M1951.25,79.95 C1854.37,87.06 1691.75,115.42 1615.5,223 C1530.69,342.66 1519.8,441.86 1615.5,553 C1826.34,797.88 2044.96,517.51 2334.5,661 C2474.27,730.27 2595.26,871.12 2659.16,955.4 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1951.06,72.95,1971.46,78.71,1951.92,86.93,1951.06,72.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f292eacf5c00648cb4d50d7f5f818066]
link C_0001453238540802541239 to C_0000630185754256426097--><path d="M4121.97,402.05 C3832.06,425.37 3408.3,489 3080.5,661 C2949.28,729.85 2833.02,859.39 2766.46,943.52 " fill="none" id="C_0001453238540802541239-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2762.1379" cy="949.0358" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2767.0757" x2="2757.2" y1="942.7415" y2="955.33"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2768.4321" x2="2755.8436" y1="953.9736" y2="944.0979"/><!--MD5=[96ea509b2ad1947f9d7bb54a63b044ef]
reverse link C_0001453238540802541239 to C_0002032009232244826154--><path d="M4569.52,457 C4636.14,492.9 4723.26,533.47 4806.5,553 C4942.95,585.01 5927.43,578.33 6067.5,583 C6070.66,583.11 7885.25,658.78 7887.5,661 C8019.62,791.67 7927.5,1310.24 7932.5,1496 C7938.43,1716.36 7982.93,1777.4 7932.5,1992 C7899.63,2131.89 7697.33,2437.36 7644.5,2571 C7551.2,2807.03 7632.5,2914.74 7480.5,3118 C7465.88,3137.55 7449.93,3129.08 7434.5,3148 C7359.55,3239.92 7256.1,3526.68 7188.76,3729.82 " fill="none" id="C_0001453238540802541239&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4557.75,450.59,4561.107,456.972,4568.2893,456.3279,4564.9323,449.9459,4557.75,450.59" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7865.5,2324.5664,7869.5,2328.5664,7865.5,2332.5664,7861.5,2328.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="7872.5" y="2333.5669">creationDate_</text><!--MD5=[ab1296281abef24fab0757a8cbe429c3]
reverse link C_0001159823987743494688 to C_0001453238540802541239--><path d="M2105.73,79.47 C2457.82,86.49 3902.18,118.57 4095.5,176 C4200.36,207.15 4306.77,274.96 4376.42,325.35 " fill="none" id="C_0001159823987743494688&lt;-C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.39,86.47,2085.54,79.08,2105.67,72.47,2105.39,86.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M9865.17,138.79 C9857.7,155.88 9853.44,174.79 9857.5,193 C9871.3,254.91 9907.08,320.41 9929.45,357.25 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9871.1,126.7,9864.8691,130.3299,9865.8233,137.4776,9872.0542,133.8477,9871.1,126.7" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9863.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="9870.5" y="189.0669">secret</text><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M9915.69,139.71 C9924.44,205.64 9937.94,307.38 9944.56,357.3 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9913.95,126.62,9910.7762,133.0951,9915.5325,138.5152,9918.7063,132.0401,9913.95,126.62" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9928.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="9935.5" y="189.0669">prev</text><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M3276.53,1126.19 C3270.11,1344.05 3255.1,1853.14 3250.13,2021.7 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3276.92,1112.89,3272.7438,1118.7687,3276.5641,1124.8847,3280.7403,1119.006,3276.92,1112.89" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3273.5,1437.5664,3277.5,1441.5664,3273.5,1445.5664,3269.5,1441.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="3280.5" y="1446.5669">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M2788.06,453.28 C2879.08,500.94 2996.5,572.79 3079.5,661 C3155.72,742.01 3212.87,857.54 3246.16,936.26 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2784.79,459.47,2770.23,444.08,2791.21,447.03,2784.79,459.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M4255.93,2375.75 C4063.69,2404.96 3873.33,2451.44 3814.5,2524 C3724.62,2634.86 3750.94,3066.79 3854.5,3165 C4014.07,3316.33 4259.47,3379.14 4446,3405.08 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4451.22,3405.8,4442.853,3400.6045,4446.2672,3405.1149,4441.7568,3408.5291,4451.22,3405.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M4255.91,2424.74 C4112.43,2463.53 3981.48,2513.03 3938.5,2571 C3793.69,2766.28 3801.96,2916.86 3938.5,3118 C4051.46,3284.4 4271,3360.02 4446.53,3394.38 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4451.45,3395.33,4443.3649,3389.7058,4446.5396,3394.3879,4441.8575,3397.5625,4451.45,3395.33" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3941.5" y="2842.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3951.5" y="2849.0669">loop_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M5209.33,2465.92 C5262.67,2477.25 5316.51,2487.02 5368.5,2494 C5526.03,2515.15 8111.85,2463.04 8228.5,2571 C8424.05,2751.98 8176.96,2933.86 8309.5,3165 C8334.5,3208.59 8370.03,3247.47 8408.58,3281.01 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8412.81,3284.65,8408.5964,3275.748,8409.0198,3281.389,8403.3788,3281.8123,8412.81,3284.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5209.39,2465.49 C5262.72,2476.9 5316.54,2486.8 5368.5,2494 C5657.6,2534.03 6395.6,2465.33 6681.5,2524 C6684.93,2524.7 6795.63,2569 6798.5,2571 C6828.34,2591.78 6857.12,2616.79 6883.85,2643.13 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6887.44,2646.69,6883.8859,2637.5048,6883.8973,2643.1616,6878.2405,2643.173,6887.44,2646.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5209.43,2465.21 C5262.75,2476.67 5316.56,2486.66 5368.5,2494 C5836.05,2560.03 5960.26,2481.19 6430.5,2524 C6479.77,2528.48 6491.48,2534.36 6540.5,2541 C6654.9,2556.49 6695.85,2518.19 6798.5,2571 C6828.94,2586.66 6857.47,2607.71 6883.54,2631.21 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6887.37,2634.69,6883.429,2625.664,6883.6807,2631.3153,6878.0294,2631.5669,6887.37,2634.69" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6543.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="6553.5" y="2537.0669">messageCallback_</text><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M4736.02,2494.24 C4738.27,2599.2 4741.02,2727.96 4742.48,2796.05 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4742.59,2801.24,4746.4092,2792.1618,4742.49,2796.241,4738.4108,2792.3218,4742.59,2801.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M4742.46,2494.03 C4742.87,2504.17 4743.22,2514.22 4743.5,2524 C4746.24,2620.67 4745.25,2733.86 4744.34,2796.23 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4744.26,2801.37,4748.3882,2792.4281,4744.3314,2796.3705,4740.389,2792.3138,4744.26,2801.37" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4747.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="4757.5" y="2537.0669">sslErrorCallback_</text><!--MD5=[3f61ba6780eb7bfc931522a20294fda2]
link C_0001156367011091191681 to C_0002100370281243872283--><path d="M4558.44,2494.1 C4549.45,2504.02 4540.75,2514.03 4532.5,2524 C4496.98,2566.95 4462.17,2616.09 4431.42,2662.75 " fill="none" id="C_0001156367011091191681-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4428.65,2666.97,4436.9285,2661.6346,4431.3905,2662.7879,4430.2372,2657.2499,4428.65,2666.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b307344d3c58e3733026c6c7a02db5d]
reverse link C_0001156367011091191681 to C_0002100370281243872283--><path d="M4439.04,2504.24 C4433.25,2510.65 4427.72,2517.24 4422.5,2524 C4390.53,2565.41 4368.68,2617.19 4353.79,2666.93 " fill="none" id="C_0001156367011091191681&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4448.34,2494.31,4441.3189,2495.9543,4440.1362,2503.0677,4447.1574,2501.4235,4448.34,2494.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4425.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="4435.5" y="2537.0669">tlsPolicyPtr_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M5222.18,2468.43 C5271.31,2478.65 5320.69,2487.49 5368.5,2494 C5834.51,2557.45 7035.01,2429.41 7483.5,2571 C7611.2,2611.32 7742.79,2688.08 7836.46,2749.89 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5209.35,2465.73,5214.3993,2470.8783,5221.0936,2468.1975,5216.0443,2463.0492,5209.35,2465.73" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7331.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="7341.5" y="2537.0669">connector_</text><!--MD5=[f423207d0e32839dd54b5872c5e0f583]
reverse link C_0001156367011091191681 to C_0000626107303889580949--><path d="M5222.21,2465.5 C5271.38,2476.33 5320.76,2486.11 5368.5,2494 C5642.46,2539.29 5714.38,2523.43 5991.5,2541 C6056.34,2545.11 6520.19,2536.9 6575.5,2571 C6669.32,2628.84 6711.7,2765.68 6725.31,2820.35 " fill="none" id="C_0001156367011091191681&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5209.37,2462.65,5214.3557,2467.8599,5221.0824,2465.2615,5216.0967,2460.0516,5209.37,2462.65" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5994.5" y="2530.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="6004.5" y="2537.0669">sslContextPtr_</text><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M2105.55,80.66 C2290.01,88.58 2770.31,118.42 3155.5,223 C3602.51,344.36 3673.91,488.07 4114.5,631 C4171.31,649.43 4208.28,614.29 4245.5,661 C4346.18,787.35 4352.91,1267.32 4245.5,1388 C4207.27,1430.95 4041.59,1395.92 3988.5,1418 C3937.1,1439.38 3914.68,1445.86 3890.5,1496 C3794.76,1694.57 3795.14,1793.25 3890.5,1992 C3959.26,2135.32 4104.83,2217.85 4255.89,2265.25 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.26,87.65,2085.56,79.84,2105.83,73.66,2105.26,87.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c243407103ec46e8c5ed77bbb7514164]
link C_0001278908569830571044 to C_0001156367011091191681--><path d="M4451.47,1774.81 C4473.38,1821.4 4517.38,1914.17 4556.5,1992 C4582.43,2043.58 4611.23,2099.24 4637.91,2150.13 " fill="none" id="C_0001278908569830571044-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4641.2928" cy="2156.566" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4637.5756" x2="4645.01" y1="2149.4821" y2="2163.65"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4648.3768" x2="4634.2089" y1="2152.8489" y2="2160.2832"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M7835.82,2939.02 C7742.12,3000.57 7610.76,3077.08 7483.5,3118 C7018.22,3267.6 5564.49,3370.68 4966.95,3407.77 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4961.7,3408.1,4970.924,3411.5522,4966.691,3407.7997,4970.4435,3403.5667,4961.7,3408.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M7837.71,2939.09 C7720.39,3017.38 7539.58,3122.83 7363.5,3165 C6502.71,3371.14 5447.47,3413.3 4967.01,3421.42 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4961.73,3421.51,4970.7972,3425.3551,4966.7293,3421.4243,4970.6601,3417.3563,4961.73,3421.51" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7420.5" y="3154.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="7430.5" y="3161.0669">loop_</text><!--MD5=[33283569ac1ba65b658e3f0b917458cb]
link C_0001706043459252151324 to C_0001897340460211641725--><path d="M8035.21,2939.34 C8086.5,3006.67 8161.13,3097.13 8238.5,3165 C8286.18,3206.83 8341.22,3246.76 8394.93,3282.18 " fill="none" id="C_0001706043459252151324-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8399.12,3284.94,8393.8044,3276.6488,8394.9445,3282.1896,8389.4037,3283.3296,8399.12,3284.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M7999.51,2951.62 C8024.37,3019.45 8064.63,3105.53 8123.5,3165 C8197.98,3240.25 8298.95,3297.38 8391.74,3338.52 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7995.04,2939.18,7993.2978,2946.1775,7999.0869,2950.477,8000.8291,2943.4795,7995.04,2939.18" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8126.5" y="3154.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="8136.5" y="3161.0669">serverAddr_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M7983.22,2939.35 C8019.08,3189.03 8077.47,3873.39 7708.5,4209 C7534.2,4367.55 5902.55,4426.95 5342.29,4442.78 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5336.98,4442.93,5346.0906,4446.6713,5341.978,4442.7872,5345.8621,4438.6746,5336.98,4442.93" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7978.5" y="3689.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="7988.5" y="3696.0669">channelPtr_</text><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M2105.85,78.27 C2512.68,80.06 4445.9,92.75 6024.5,176 C6282.76,189.62 6346.78,201.37 6604.5,223 C7024.16,258.23 8492.5,-34.14 8492.5,387 C8492.5,387 8492.5,387 8492.5,2079 C8492.5,2287.09 8557.49,2387.95 8416.5,2541 C8379.25,2581.43 8345.55,2546.18 8296.5,2571 C8206.66,2616.45 8119.59,2690.32 8057.61,2749.69 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2105.72,85.27,2085.75,78.19,2105.78,71.27,2105.72,85.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[255bb85fd16b3df7cc9a8a0088a159be]
link C_0000000982196670174162 to C_0001706043459252151324--><path d="M8203.47,2372.02 C8164.01,2450.86 8077.78,2623.16 8021.21,2736.19 " fill="none" id="C_0000000982196670174162-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="8018.0347" cy="2742.5131" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8021.6093" x2="8014.46" y1="2735.3561" y2="2749.67"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8025.1916" x2="8010.8777" y1="2746.0877" y2="2738.9384"/><!--MD5=[d22c1faad4bb12ef7d278fc06caaf1fc]
link C_0002131890502232898697 to C_0001189407896771082466--><!--MD5=[7472b64d3d15154068f18b5db4215155]
link C_0001189407896771082466 to C_0000394452884449343416--><!--MD5=[f4eddc478ce7a73432f25ec782c6220c]
link C_0002131890502232898697 to C_0000026148367911088234--><!--MD5=[5c3eea4b4e7d98e2452cb31c6c061d73]
link C_0000026148367911088234 to C_0001166594284895168875--><!--MD5=[afcd30e82584d6dad1d68d23a951a309]
link C_0001166594284895168875 to C_0001016092423778930091--><!--MD5=[6d1a4a9ada3993cb3e52a4628aee3aaa]
link C_0000026148367911088234 to C_0000089957972753266749--><!--MD5=[17f4d96750e0c5ddb56a8d32d7fbf1df]
@startuml
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
{static} +date() : const Date
{static} +now() : const Date
{static} +timezoneOffset() : int64_t
+after(double second) const : const Date
+roundSecond() const : const Date
+roundDay() const : const Date
+~Date() : void
+operator==(const Date & date) const : bool
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
+secondsSinceEpoch() const : int64_t
+tmStruct() const : struct tm
+toFormattedString(bool showMicroseconds) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbStringLocal() const : std::string
+toDbString() const : std::string
{static} +fromDbStringLocal(const std::string & datetime) : Date
{static} +fromDbString(const std::string & datetime) : Date
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+isSameSecond(const Date & date) const : bool
+swap(Date & that) : void
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
+family() const : sa_family_t
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
+isIpV6() const : bool
+isIntranetIp() const : bool
+isLoopbackIp() const : bool
+getSockAddr() const : const struct sockaddr *
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+ipNetEndian() const : uint32_t
+ip6NetEndian() const : const uint32_t *
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+isUnspecified() const : bool
}
class "InetAddress::()" as C_0000673025168912921705
class C_0000673025168912921705 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer<SIZE>() : void
+~FixedBuffer<SIZE>() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(bool v) : LogStream::self &
+operator<<(short ) : LogStream::self &
+operator<<(unsigned short ) : LogStream::self &
+operator<<(int ) : LogStream::self &
+operator<<(unsigned int ) : LogStream::self &
+operator<<(long ) : LogStream::self &
+operator<<(unsigned long ) : LogStream::self &
+operator<<(const long long & ) : LogStream::self &
+operator<<(const unsigned long long & ) : LogStream::self &
+operator<<(const void * ) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(const double & ) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
+operator<<<int N>(const char (&)[N] buf) : LogStream::self &
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+data() const : const char *
+length() const : int
+Fmt<T>(const char * fmt, T val) : void
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+Logger() : void
+Logger(Logger::LogLevel level) : void
+Logger(bool isSysErr) : void
+~Logger() : void
+setIndex(int index) : Logger &
+stream() : LogStream &
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +logLevel() : Logger::LogLevel
{static} +displayLocalTime() : bool
{static} +setDisplayLocalTime(bool showLocalTime) : void
}
enum "Logger::LogLevel" as C_0002131283840621188296
enum C_0002131283840621188296 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0000979080797342806546
class C_0000979080797342806546 {
+SourceFile(const char * filename = nullptr) : void
+SourceFile<int N>(const char (&)[N] arr) : void
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
+setIndex(int index) : RawLogger &
+stream() : LogStream &
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue<T>() : void
+~MpscQueue<T>() : void
+enqueue(T && input) : void
+enqueue(const T & input) : void
+dequeue(T & output) : bool
+empty() : bool
}
class "MpscQueue::BufferNode" as C_0000223701637084171141
class C_0000223701637084171141 {
+BufferNode() = default : void
+BufferNode(const T & data) : void
+BufferNode(T && data) : void
+dataPtr_ : T *
+next_ : std::atomic<BufferNode *>
}
class "MpscQueue<std::function<void()>>" as C_0002185746167032660910
class C_0002185746167032660910 {
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
+loop() : void
+quit() : void
+assertInLoopThread() : void
+resetTimerQueue() : void
+resetAfterFork() : void
+isInLoopThread() const : bool
{static} +getEventLoopOfCurrentThread() : EventLoop *
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+runAt(const Date & time, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+invalidateTimer(TimerId id) : void
+moveToCurrentThread() : void
+updateChannel(Channel * chl) : void
+removeChannel(Channel * chl) : void
+index() : size_t
+setIndex(size_t index) : void
+isRunning() : bool
+isCallingFunctions() : bool
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+runInLoop<Functor>(Functor && f) : void
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
+wait() : void
+getLoop() const : EventLoop *
+run() : void
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
+start() : void
+wait() : void
+size() : size_t
+getNextLoop() : EventLoop *
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
}
class "InetAddress::(anonymous_2577662)" as C_0001189407896771082466
class C_0001189407896771082466 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
+peek() const : const char *
+beginWrite() const : const char *
+beginWrite() : char *
+peekInt8() const : uint8_t
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+read(size_t len) : std::string
+readInt8() : uint8_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+swap(MsgBuffer & buf) : void
+readableBytes() const : size_t
+writableBytes() const : size_t
+append(const MsgBuffer & buf) : void
+append(const char * buf, size_t len) : void
+append(const std::string & buf) : void
+appendInt8(const uint8_t b) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+addInFront(const char * buf, size_t len) : void
+addInFrontInt8(const uint8_t b) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+retrieveAll() : void
+retrieve(size_t len) : void
+readFd(int fd, int * retErrno) : ssize_t
+retrieveUntil(const char * end) : void
+findCRLF() const : const char *
+ensureWritableBytes(size_t len) : void
+hasWritten(size_t len) : void
+unwrite(size_t offset) : void
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
+append<int N>(const char (&)[N] buf) : void
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
kSSLProtocolError
}
abstract "Certificate" as C_0001660397537883119469
abstract C_0001660397537883119469 {
+~Certificate() = default : void
{abstract} +sha1Fingerprint() const = 0 : std::string
{abstract} +sha256Fingerprint() const = 0 : std::string
{abstract} +pem() const = 0 : std::string
}
class "TLSPolicy" as C_0002100370281243872283
class C_0002100370281243872283 {
+setConfCmds(const std::vector<std::pair<std::string,std::string>> & sslConfCmds) : TLSPolicy &
+setHostname(const std::string & hostname) : TLSPolicy &
+setCertPath(const std::string & certPath) : TLSPolicy &
+setKeyPath(const std::string & keyPath) : TLSPolicy &
+setCaPath(const std::string & caPath) : TLSPolicy &
+setUseOldTLS(bool useOldTLS) : TLSPolicy &
+setAlpnProtocols(const std::vector<std::string> & alpnProtocols) : TLSPolicy &
+setAlpnProtocols(std::vector<std::string> && alpnProtocols) : TLSPolicy &
+setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &
+setValidate(bool enable) : TLSPolicy &
+setAllowBrokenChain(bool allow) : TLSPolicy &
+getConfCmds() const : const std::vector<std::pair<std::string,std::string>> &
+getHostname() const : const std::string &
+getCertPath() const : const std::string &
+getKeyPath() const : const std::string &
+getCaPath() const : const std::string &
+getUseOldTLS() const : bool
+getValidate() const : bool
+getAllowBrokenChain() const : bool
+getAlpnProtocols() const : const std::vector<std::string> &
+getAlpnProtocols() : const std::vector<std::string> &
+getUseSystemCertStore() const : bool
{static} +defaultServerPolicy(const std::string & certPath, const std::string & keyPath) : std::shared_ptr<TLSPolicy>
{static} +defaultClientPolicy(const std::string & hostname = "") : std::shared_ptr<TLSPolicy>
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
{abstract} +shutdown() = 0 : void
{abstract} +forceClose() = 0 : void
{abstract} +getLoop() = 0 : EventLoop *
+setContext(const std::shared_ptr<void> & context) : void
+setContext(std::shared_ptr<void> && context) : void
{abstract} +applicationProtocol() const = 0 : std::string
+hasContext() const : bool
+clearContext() : void
{abstract} +keepAlive() = 0 : void
{abstract} +isKeepAlive() = 0 : bool
{abstract} +bytesSent() const = 0 : size_t
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
{abstract} +peerCertificate() const = 0 : CertificatePtr
{abstract} +sniName() const = 0 : std::string
{abstract} +startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) = 0 : void
+startClientEncryption(std::function<void (const TcpConnectionPtr &)> && callback, bool useOldTLS = false, bool validateCert = true, const std::string & hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
+setValidationPolicy(TLSPolicy && policy) : void
+setRecvMsgCallback(const RecvMessageCallback & cb) : void
+setRecvMsgCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setCloseCallback(const CloseCallback & cb) : void
+setCloseCallback(CloseCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
{abstract} +connectEstablished() = 0 : void
{abstract} +connectDestroyed() = 0 : void
{abstract} +enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) = 0 : void
+getContext<T>() : std::shared_ptr<T>
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
+getLoop() : EventLoop *
+~TimingWheel() : void
}
class "TimingWheel::CallbackEntry" as C_0002013739811805694444
class C_0002013739811805694444 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
+start() : void
+stop() : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setIoLoops(const std::vector<EventLoop *> & ioLoops) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+name() const : const std::string &
+ipPort() const : std::string
+address() const : const InetAddress &
+getLoop() const : EventLoop *
+getIoLoops() const : std::vector<EventLoop *>
+kickoffIdleConnections(size_t timeout) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & caPath = "") : void
+enableSSL(TLSPolicyPtr policy) : void
}
class "TcpServer::IgnoreSigPipe" as C_0001489562721151066050
class C_0001489562721151066050 {
+IgnoreSigPipe() : void
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
{static} +createNonblockingSocketOrDie(int family) : int
{static} +getSocketError(int sockfd) : int
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +isSelfConnect(int sockfd) : bool
+Socket(int sockfd) : void
+~Socket() : void
+bindAddress(const InetAddress & localaddr) : void
+listen() : void
+accept(InetAddress * peeraddr) : int
+closeWrite() : void
+read(char * buffer, uint64_t len) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
+setTcpNoDelay(bool on) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setKeepAlive(bool on) : void
+getSocketError() : int
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setCloseCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+fd() const : int
+events() const : int
+revents() const : int
+isNoneEvent() const : bool
+disableAll() : void
+remove() : void
+ownerLoop() : EventLoop *
+enableReading() : void
+disableReading() : void
+enableWriting() : void
+disableWriting() : void
+isWriting() const : bool
+isReading() const : bool
+updateEvents(int events) : void
+tie(const std::shared_ptr<void> & obj) : void
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
+addr() const : const InetAddress &
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
+listen() : void
}
abstract "TLSProvider" as C_0000464040622375950341
abstract C_0000464040622375950341 {
+TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void
+~TLSProvider() = default : void
{abstract} +recvData(MsgBuffer * buffer) = 0 : void
{abstract} +sendData(const char * ptr, size_t size) = 0 : ssize_t
{abstract} +close() = 0 : void
{abstract} +startEncryption() = 0 : void
+sendBufferedData() : bool
+getBufferedData() : MsgBuffer &
+appendToWriteBuffer(const char * ptr, size_t size) : void
+setWriteCallback(TLSProvider::WriteCallback cb) : void
+setErrorCallback(TLSProvider::ErrorCallback cb) : void
+setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void
+setMessageCallback(TLSProvider::MessageCallback cb) : void
+setCloseCallback(TLSProvider::CloseCallback cb) : void
+getRecvBuffer() : MsgBuffer &
+peerCertificate() const : const CertificatePtr &
+applicationProtocol() const : const std::string &
+sniName() const : const std::string &
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void
+~TcpConnectionImpl() : void
+send(const char * msg, size_t len) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+connected() const : bool
+disconnected() const : bool
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+keepAlive() : void
+isKeepAlive() : bool
+setTcpNoDelay(bool on) : void
+shutdown() : void
+forceClose() : void
+getLoop() : EventLoop *
+bytesSent() const : size_t
+bytesReceived() const : size_t
+isSSLConnection() const : bool
+connectEstablished() : void
+connectDestroyed() : void
+getRecvBuffer() : MsgBuffer *
+applicationProtocol() const : std::string
+peerCertificate() const : CertificatePtr
+sniName() const : std::string
+startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) : void
+enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) : void
}
class "TcpConnectionImpl::KickoffEntry" as C_0002266895444343633259
class C_0002266895444343633259 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
}
class "TcpConnectionImpl::BufferNode" as C_0001029063960859366412
class C_0001029063960859366412 {
+isFile() const : bool
+~BufferNode() : void
+sendFd_ : int
+offset_ : off_t
+fileBytesToSend_ : ssize_t
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
+nDataWritten_ : std::size_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
+closeConnection_ : bool
}
enum "TcpConnectionImpl::ConnStatus" as C_0001727349338344491225
enum C_0001727349338344491225 {
Disconnected
Connecting
Connected
Disconnecting
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
+assertInLoopThread() : void
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +updateChannel(Channel * channel) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{static} +newPoller(EventLoop * loop) : Poller *
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
+str_ : const char *
+len_ : const unsigned int
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
+run() const : void
+restart(const TimePoint & now) : void
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
+when() const : const TimePoint &
+isRepeat() : bool
+id() : TimerId
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
}
class "ScopeExit<F>" as C_0000026148367911088234
class C_0000026148367911088234 {
+ScopeExit<F>(F && f) : void
+~ScopeExit<F>() : void
+f_ : F
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+getName() const : std::string
+syncTaskInQueue(const std::function<void ()> & task) : void
+~TaskQueue() : void
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+getTaskCount() : size_t
+stop() : void
+~ConcurrentTaskQueue() : void
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+output(const char * msg, const uint64_t len) : void
+flush() : void
+startLogging() : void
+setFileSizeLimit(uint64_t limit) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+~AsyncFileLogger() : void
+AsyncFileLogger() : void
}
class "AsyncFileLogger::LoggerFile" as C_0001453238540802541239
class C_0001453238540802541239 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName) : void
+~LoggerFile() : void
+writeLog(const StringPtr buf) : void
+getLength() : uint64_t
+operator bool() const : bool
+flush() : void
}
class "utils::Hash128" as C_0001166594284895168875
class C_0001166594284895168875 {
+bytes : unsigned char[16]
}
class "utils::Hash160" as C_0001016092423778930091
class C_0001016092423778930091 {
+bytes : unsigned char[20]
}
class "utils::Hash256" as C_0000080756732781028581
class C_0000080756732781028581 {
+bytes : unsigned char[32]
}
class "utils::RngState" as C_0000195316585713148470
class C_0000195316585713148470 {
+secret : utils::Hash256
+prev : utils::Hash256
+time : int64_t
+counter : uint64_t
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+waitAllTasksFinished() : void
+SerialTaskQueue() : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
+isRuningTask() : bool
+getTaskCount() : size_t
+stop() : void
}
class "InetAddress::(anonymous_2039330)" as C_0000089957972753266749
class C_0000089957972753266749 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
+connect() : void
+disconnect() : void
+stop() : void
+connection() const : TcpConnectionPtr
+getLoop() const : EventLoop *
+retry() const : bool
+enableRetry() : void
+name() const : const std::string &
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
+enableSSL(TLSPolicyPtr policy) : void
}
class "TcpClient::IgnoreSigPipe" as C_0001278908569830571044
class C_0001278908569830571044 {
+IgnoreSigPipe() : void
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+~Connector() : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+serverAddress() const : const InetAddress &
+start() : void
+restart() : void
+stop() : void
}
enum "Connector::Status" as C_0000000982196670174162
enum C_0000000982196670174162 {
Disconnected
Connecting
Connected
}
C_0001897340460211641725 o- - C_0000673025168912921705
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 ..> C_0001930690020065325250
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0002131283840621188296 - -+ C_0002053752992472264214
C_0000979080797342806546 - -+ C_0002053752992472264214
C_0000716430590791918928 ..> C_0001930690020065325250
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000223701637084171141 - -+ C_0000912667184903365399
C_0002185746167032660910 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 ..> C_0000764690828649606524
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 ..> C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0002061035340998974559 ..> C_0001390130774830223499
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0002230624932100089526 ..> C_0001289495020269537351
C_0002230624932100089526 ..> C_0001897340460211641725
C_0002230624932100089526 ..> C_0001390130774830223499
C_0002230624932100089526 ..> C_0001660397537883119469
C_0002230624932100089526 ..> C_0002100370281243872283
C_0002230624932100089526 ..> C_0000434245188016003403
C_0002230624932100089526 ..> C_0000964465843177067305
C_0002230624932100089526 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #connectionCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #closeCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #writeCompleteCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 ..> C_0000434245188016003403 : #sslErrorCallback_
C_0002230624932100089526 o- - C_0002100370281243872283 : #tlsPolicy_
C_0002230624932100089526 <.. C_0001156367011091191681 : +<<friend>>
C_0002230624932100089526 <.. C_0000920759514274339356 : +<<friend>>
C_0002230624932100089526 <.. C_0001423170502760786790 : +<<friend>>
C_0000964465843177067305 ..> C_0001390130774830223499
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0002013739811805694444 - -+ C_0000964465843177067305
C_0001423170502760786790 ..> C_0001390130774830223499
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 ..> C_0002061035340998974559
C_0001423170502760786790 ..> C_0002230624932100089526
C_0001423170502760786790 ..> C_0001289495020269537351
C_0001423170502760786790 ..> C_0002100370281243872283
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 - -> C_0001390130774830223499 : -ioLoops_
C_0001423170502760786790 o- - C_0002100370281243872283 : -policyPtr_
C_0001423170502760786790 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0001489562721151066050 - -+ C_0001423170502760786790
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0000764690828649606524 ..> C_0001390130774830223499
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0000184886692180276257 ..> C_0001390130774830223499
C_0000184886692180276257 ..> C_0001897340460211641725
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0000464040622375950341 ..> C_0002230624932100089526
C_0000464040622375950341 ..> C_0002100370281243872283
C_0000464040622375950341 ..> C_0000626107303889580949
C_0000464040622375950341 ..> C_0001289495020269537351
C_0000464040622375950341 ..> C_0001660397537883119469
C_0000464040622375950341 - -> C_0002230624932100089526 : #conn_
C_0000464040622375950341 o- - C_0002100370281243872283 : #policyPtr_
C_0000464040622375950341 o- - C_0000626107303889580949 : #contextPtr_
C_0000464040622375950341 o- - C_0001289495020269537351 : #recvBuffer_
C_0000464040622375950341 - -> C_0001390130774830223499 : #loop_
C_0000464040622375950341 o- - C_0001660397537883119469 : #peerCertificate_
C_0000464040622375950341 o- - C_0001289495020269537351 : #writeBuffer_
C_0000920759514274339356 ..> C_0001390130774830223499
C_0000920759514274339356 ..> C_0001897340460211641725
C_0000920759514274339356 ..> C_0002100370281243872283
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001289495020269537351
C_0000920759514274339356 ..> C_0002230624932100089526
C_0000920759514274339356 ..> C_0001660397537883119469
C_0000920759514274339356 ..> C_0000964465843177067305
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 o- - C_0000464040622375950341 : #tlsProviderPtr_
C_0000920759514274339356 - -> C_0002230624932100089526 : #upgradeCallback_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0002266895444343633259 - -+ C_0000920759514274339356
C_0002266895444343633259 ..> C_0002230624932100089526
C_0002266895444343633259 - -> C_0002230624932100089526 : -conn_
C_0001029063960859366412 - -+ C_0000920759514274339356
C_0001029063960859366412 - -> C_0001289495020269537351 : +msgBuffer_
C_0001727349338344491225 - -+ C_0000920759514274339356
C_0000300034150397884642 ..> C_0001390130774830223499
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 ..> C_0001390130774830223499
C_0000607400095182694101 ..> C_0002026475275429760163
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0000607400095182694101 o- - C_0000157340721173102239 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0001453238540802541239 - -+ C_0000630185754256426097
C_0001453238540802541239 o- - C_0002032009232244826154 : #creationDate_
C_0001159823987743494688 <|- - C_0001453238540802541239
C_0000195316585713148470 o- - C_0000080756732781028581 : +secret
C_0000195316585713148470 o- - C_0000080756732781028581 : +prev
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0001156367011091191681 ..> C_0001390130774830223499
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 ..> C_0002230624932100089526
C_0001156367011091191681 ..> C_0001289495020269537351
C_0001156367011091191681 ..> C_0000434245188016003403
C_0001156367011091191681 ..> C_0002100370281243872283
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 - -> C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 ..> C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 o- - C_0002100370281243872283 : -tlsPolicyPtr_
C_0001156367011091191681 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0001278908569830571044 - -+ C_0001156367011091191681
C_0001706043459252151324 ..> C_0001390130774830223499
C_0001706043459252151324 ..> C_0001897340460211641725
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0000000982196670174162 - -+ C_0001706043459252151324

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>