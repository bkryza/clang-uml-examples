<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5105px" preserveAspectRatio="none" style="width:9999px;height:5105px;" version="1.1" viewBox="0 0 9999 5105" width="9999px" zoomAndPan="magnify"><defs><filter height="300%" id="f19up9kfre2ukq" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="448.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="1925.5" y="4142"/><ellipse cx="2415.25" cy="4158" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2418.2188,4163.6406 Q2417.6406,4163.9375 2417,4164.0781 Q2416.3594,4164.2344 2415.6563,4164.2344 Q2413.1563,4164.2344 2411.8281,4162.5938 Q2410.5156,4160.9375 2410.5156,4157.8125 Q2410.5156,4154.6875 2411.8281,4153.0313 Q2413.1563,4151.375 2415.6563,4151.375 Q2416.3594,4151.375 2417,4151.5313 Q2417.6563,4151.6875 2418.2188,4151.9844 L2418.2188,4154.7031 Q2417.5938,4154.125 2417,4153.8594 Q2416.4063,4153.5781 2415.7813,4153.5781 Q2414.4375,4153.5781 2413.75,4154.6563 Q2413.0625,4155.7188 2413.0625,4157.8125 Q2413.0625,4159.9063 2413.75,4160.9844 Q2414.4375,4162.0469 2415.7813,4162.0469 Q2416.4063,4162.0469 2417,4161.7813 Q2417.5938,4161.5 2418.2188,4160.9219 L2418.2188,4163.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="2435.75" y="4162.1543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1926.5" x2="2942.5" y1="4174" y2="4174"/><ellipse cx="1936.5" cy="4185" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1945.5" y="4188.2104">Date() : void</text><ellipse cx="1936.5" cy="4197.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1945.5" y="4201.0151">Date(int64_t microSec) : void</text><ellipse cx="1936.5" cy="4210.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1945.5" y="4213.8198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="1936.5" cy="4223.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1945.5" y="4226.6245">~Date() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1926.5" x2="2942.5" y1="4233.2188" y2="4233.2188"/><ellipse cx="1936.5" cy="4244.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1945.5" y="4247.4292">operator!=(const Date &amp; date) const : bool</text><ellipse cx="1936.5" cy="4257.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1945.5" y="4260.2339">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="1936.5" cy="4269.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1945.5" y="4273.0386">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="1936.5" cy="4282.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1945.5" y="4285.8433">operator==(const Date &amp; date) const : bool</text><ellipse cx="1936.5" cy="4295.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1945.5" y="4298.6479">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="1936.5" cy="4308.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1945.5" y="4311.4526">operator&gt;=(const Date &amp; date) const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1926.5" x2="2942.5" y1="4318.0469" y2="4318.0469"/><ellipse cx="1936.5" cy="4329.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1945.5" y="4332.2573">after(double second) const : const Date</text><ellipse cx="1936.5" cy="4341.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="1945.5" y="4345.062">date() : const Date</text><ellipse cx="1936.5" cy="4354.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="1945.5" y="4357.8667">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="1936.5" cy="4367.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="1945.5" y="4370.6714">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="1936.5" cy="4380.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1945.5" y="4383.4761">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="1936.5" cy="4393.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1945.5" y="4396.2808">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="1936.5" cy="4405.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="1945.5" y="4409.0854">now() : const Date</text><ellipse cx="1936.5" cy="4418.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1945.5" y="4421.8901">roundDay() const : const Date</text><ellipse cx="1936.5" cy="4431.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1945.5" y="4434.6948">roundSecond() const : const Date</text><ellipse cx="1936.5" cy="4444.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1945.5" y="4447.4995">secondsSinceEpoch() const : int64_t</text><ellipse cx="1936.5" cy="4457.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1945.5" y="4460.3042">swap(Date &amp; that) : void</text><ellipse cx="1936.5" cy="4469.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="1945.5" y="4473.1089">timezoneOffset() : int64_t</text><ellipse cx="1936.5" cy="4482.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1945.5" y="4485.9136">tmStruct() const : struct tm</text><ellipse cx="1936.5" cy="4495.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="1945.5" y="4498.7183">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1936.5" cy="4508.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="1945.5" y="4511.5229">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="1936.5" cy="4521.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="1945.5" y="4524.3276">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1936.5" cy="4533.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1945.5" y="4537.1323">toDbString() const : std::string</text><ellipse cx="1936.5" cy="4546.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1945.5" y="4549.937">toDbStringLocal() const : std::string</text><ellipse cx="1936.5" cy="4559.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1945.5" y="4562.7417">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="1936.5" cy="4572.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="1945.5" y="4575.5464">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1926.5" x2="2942.5" y1="4582.1406" y2="4582.1406"/><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="286.4844" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="7238" y="3689"/><ellipse cx="7442.75" cy="3705" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7445.7188,3710.6406 Q7445.1406,3710.9375 7444.5,3711.0781 Q7443.8594,3711.2344 7443.1563,3711.2344 Q7440.6563,3711.2344 7439.3281,3709.5938 Q7438.0156,3707.9375 7438.0156,3704.8125 Q7438.0156,3701.6875 7439.3281,3700.0313 Q7440.6563,3698.375 7443.1563,3698.375 Q7443.8594,3698.375 7444.5,3698.5313 Q7445.1563,3698.6875 7445.7188,3698.9844 L7445.7188,3701.7031 Q7445.0938,3701.125 7444.5,3700.8594 Q7443.9063,3700.5781 7443.2813,3700.5781 Q7441.9375,3700.5781 7441.25,3701.6563 Q7440.5625,3702.7188 7440.5625,3704.8125 Q7440.5625,3706.9063 7441.25,3707.9844 Q7441.9375,3709.0469 7443.2813,3709.0469 Q7443.9063,3709.0469 7444.5,3708.7813 Q7445.0938,3708.5 7445.7188,3707.9219 L7445.7188,3710.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="7463.25" y="3709.1543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7239" x2="7730" y1="3721" y2="3721"/><ellipse cx="7249" cy="3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="7258" y="3735.2104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="7249" cy="3744.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="7258" y="3748.0151">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="7249" cy="3757.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="7258" y="3760.8198">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="7249" cy="3770.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="7258" y="3773.6245">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7239" x2="7730" y1="3780.2188" y2="3780.2188"/><ellipse cx="7249" cy="3791.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="7258" y="3794.4292">family() const : sa_family_t</text><ellipse cx="7249" cy="3804.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="7258" y="3807.2339">getSockAddr() const : const struct sockaddr *</text><ellipse cx="7249" cy="3816.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="7258" y="3820.0386">ip6NetEndian() const : const uint32_t *</text><ellipse cx="7249" cy="3829.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="7258" y="3832.8433">ipNetEndian() const : uint32_t</text><ellipse cx="7249" cy="3842.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7258" y="3845.6479">isIntranetIp() const : bool</text><ellipse cx="7249" cy="3855.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="7258" y="3858.4526">isIpV6() const : bool</text><ellipse cx="7249" cy="3868.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="7258" y="3871.2573">isLoopbackIp() const : bool</text><ellipse cx="7249" cy="3880.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="7258" y="3884.062">isUnspecified() const : bool</text><ellipse cx="7249" cy="3893.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="7258" y="3896.8667">portNetEndian() const : uint16_t</text><ellipse cx="7249" cy="3906.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7258" y="3909.6714">setPortNetEndian(uint16_t port) : void</text><ellipse cx="7249" cy="3919.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="7258" y="3922.4761">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="7249" cy="3932.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7258" y="3935.2808">toIp() const : std::string</text><ellipse cx="7249" cy="3944.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="7258" y="3948.0854">toIpPort() const : std::string</text><ellipse cx="7249" cy="3957.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="7258" y="3960.8901">toPort() const : uint16_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7239" x2="7730" y1="3967.4844" y2="3967.4844"/><!--MD5=[fc18972faf1c61d69feddadc1f33c92d]
class C_0000673025168912921705--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="73.6094" id="C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="7390" y="4329"/><ellipse cx="7433.8" cy="4345" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7436.7688,4350.6406 Q7436.1906,4350.9375 7435.55,4351.0781 Q7434.9094,4351.2344 7434.2063,4351.2344 Q7431.7063,4351.2344 7430.3781,4349.5938 Q7429.0656,4347.9375 7429.0656,4344.8125 Q7429.0656,4341.6875 7430.3781,4340.0313 Q7431.7063,4338.375 7434.2063,4338.375 Q7434.9094,4338.375 7435.55,4338.5313 Q7436.2063,4338.6875 7436.7688,4338.9844 L7436.7688,4341.7031 Q7436.1438,4341.125 7435.55,4340.8594 Q7434.9563,4340.5781 7434.3313,4340.5781 Q7432.9875,4340.5781 7432.3,4341.6563 Q7431.6125,4342.7188 7431.6125,4344.8125 Q7431.6125,4346.9063 7432.3,4347.9844 Q7432.9875,4349.0469 7434.3313,4349.0469 Q7434.9563,4349.0469 7435.55,4348.7813 Q7436.1438,4348.5 7436.7688,4347.9219 L7436.7688,4350.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="7454.2" y="4349.1543">InetAddress::()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7391" x2="7578" y1="4361" y2="4361"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7391" x2="7578" y1="4369" y2="4369"/><ellipse cx="7401" cy="4380" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7410" y="4383.2104">addr6_ : struct sockaddr_in6</text><ellipse cx="7401" cy="4392.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7410" y="4396.0151">addr_ : struct sockaddr_in</text><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="7272.5" y="53"/><ellipse cx="7287.5" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7290.4688,74.6406 Q7289.8906,74.9375 7289.25,75.0781 Q7288.6094,75.2344 7287.9063,75.2344 Q7285.4063,75.2344 7284.0781,73.5938 Q7282.7656,71.9375 7282.7656,68.8125 Q7282.7656,65.6875 7284.0781,64.0313 Q7285.4063,62.375 7287.9063,62.375 Q7288.6094,62.375 7289.25,62.5313 Q7289.9063,62.6875 7290.4688,62.9844 L7290.4688,65.7031 Q7289.8438,65.125 7289.25,64.8594 Q7288.6563,64.5781 7288.0313,64.5781 Q7286.6875,64.5781 7286,65.6563 Q7285.3125,66.7188 7285.3125,68.8125 Q7285.3125,70.9063 7286,71.9844 Q7286.6875,73.0469 7288.0313,73.0469 Q7288.6563,73.0469 7289.25,72.7813 Q7289.8438,72.5 7290.4688,71.9219 L7290.4688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="7301.5" y="73.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7273.5" x2="7385.5" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7273.5" x2="7385.5" y1="93" y2="93"/><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="222.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1296" y="3129.5"/><ellipse cx="1342.25" cy="3145.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1345.2188,3151.1406 Q1344.6406,3151.4375 1344,3151.5781 Q1343.3594,3151.7344 1342.6563,3151.7344 Q1340.1563,3151.7344 1338.8281,3150.0938 Q1337.5156,3148.4375 1337.5156,3145.3125 Q1337.5156,3142.1875 1338.8281,3140.5313 Q1340.1563,3138.875 1342.6563,3138.875 Q1343.3594,3138.875 1344,3139.0313 Q1344.6563,3139.1875 1345.2188,3139.4844 L1345.2188,3142.2031 Q1344.5938,3141.625 1344,3141.3594 Q1343.4063,3141.0781 1342.7813,3141.0781 Q1341.4375,3141.0781 1340.75,3142.1563 Q1340.0625,3143.2188 1340.0625,3145.3125 Q1340.0625,3147.4063 1340.75,3148.4844 Q1341.4375,3149.5469 1342.7813,3149.5469 Q1343.4063,3149.5469 1344,3149.2813 Q1344.5938,3149 1345.2188,3148.4219 L1345.2188,3151.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1362.75" y="3149.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="1514" y="3126.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="1515" y="3138.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1297" x2="1560" y1="3161.5" y2="3161.5"/><ellipse cx="1307" cy="3172.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1316" y="3175.7104">FixedBuffer() : void</text><ellipse cx="1307" cy="3185.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1316" y="3188.5151">~FixedBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1297" x2="1560" y1="3195.1094" y2="3195.1094"/><ellipse cx="1307" cy="3206.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1316" y="3209.3198">add(size_t len) : void</text><ellipse cx="1307" cy="3218.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1316" y="3222.1245">append(const char * buf, size_t len) : bool</text><ellipse cx="1307" cy="3231.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1316" y="3234.9292">avail() const : int</text><ellipse cx="1307" cy="3244.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1316" y="3247.7339">current() : char *</text><ellipse cx="1307" cy="3257.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1316" y="3260.5386">data() const : const char *</text><ellipse cx="1307" cy="3270.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1316" y="3273.3433">debugString() : const char *</text><ellipse cx="1307" cy="3282.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1316" y="3286.1479">length() const : int</text><ellipse cx="1307" cy="3295.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1316" y="3298.9526">reset() : void</text><ellipse cx="1307" cy="3308.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1316" y="3311.7573">setCookie(void (*)() cookie) : void</text><ellipse cx="1307" cy="3321.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1316" y="3324.562">toString() const : std::string</text><ellipse cx="1307" cy="3334.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1316" y="3337.3667">zeroBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1297" x2="1560" y1="3343.9609" y2="3343.9609"/><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="1223.5" y="2689"/><ellipse cx="1238.5" cy="2705" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1241.4688,2710.6406 Q1240.8906,2710.9375 1240.25,2711.0781 Q1239.6094,2711.2344 1238.9063,2711.2344 Q1236.4063,2711.2344 1235.0781,2709.5938 Q1233.7656,2707.9375 1233.7656,2704.8125 Q1233.7656,2701.6875 1235.0781,2700.0313 Q1236.4063,2698.375 1238.9063,2698.375 Q1239.6094,2698.375 1240.25,2698.5313 Q1240.9063,2698.6875 1241.4688,2698.9844 L1241.4688,2701.7031 Q1240.8438,2701.125 1240.25,2700.8594 Q1239.6563,2700.5781 1239.0313,2700.5781 Q1237.6875,2700.5781 1237,2701.6563 Q1236.3125,2702.7188 1236.3125,2704.8125 Q1236.3125,2706.9063 1237,2707.9844 Q1237.6875,2709.0469 1239.0313,2709.0469 Q1239.6563,2709.0469 1240.25,2708.7813 Q1240.8438,2708.5 1241.4688,2707.9219 L1241.4688,2710.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1252.5" y="2709.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="1372.5" y="2686"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="1373.5" y="2698.1387">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1224.5" x2="1490.5" y1="2721" y2="2721"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1224.5" x2="1490.5" y1="2729" y2="2729"/><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="222.4609" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1620" y="591"/><ellipse cx="1674.25" cy="607" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1677.2188,612.6406 Q1676.6406,612.9375 1676,613.0781 Q1675.3594,613.2344 1674.6563,613.2344 Q1672.1563,613.2344 1670.8281,611.5938 Q1669.5156,609.9375 1669.5156,606.8125 Q1669.5156,603.6875 1670.8281,602.0313 Q1672.1563,600.375 1674.6563,600.375 Q1675.3594,600.375 1676,600.5313 Q1676.6563,600.6875 1677.2188,600.9844 L1677.2188,603.7031 Q1676.5938,603.125 1676,602.8594 Q1675.4063,602.5781 1674.7813,602.5781 Q1673.4375,602.5781 1672.75,603.6563 Q1672.0625,604.7188 1672.0625,606.8125 Q1672.0625,608.9063 1672.75,609.9844 Q1673.4375,611.0469 1674.7813,611.0469 Q1675.4063,611.0469 1676,610.7813 Q1676.5938,610.5 1677.2188,609.9219 L1677.2188,612.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1694.75" y="611.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="1854" y="588"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="1855" y="600.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1621" x2="1884" y1="623" y2="623"/><ellipse cx="1631" cy="634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1640" y="637.2104">FixedBuffer() : void</text><ellipse cx="1631" cy="646.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1640" y="650.0151">~FixedBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1621" x2="1884" y1="656.6094" y2="656.6094"/><ellipse cx="1631" cy="667.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1640" y="670.8198">add(size_t len) : void</text><ellipse cx="1631" cy="680.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1640" y="683.6245">append(const char * buf, size_t len) : bool</text><ellipse cx="1631" cy="693.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1640" y="696.4292">avail() const : int</text><ellipse cx="1631" cy="706.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1640" y="709.2339">current() : char *</text><ellipse cx="1631" cy="718.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1640" y="722.0386">data() const : const char *</text><ellipse cx="1631" cy="731.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1640" y="734.8433">debugString() : const char *</text><ellipse cx="1631" cy="744.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1640" y="747.6479">length() const : int</text><ellipse cx="1631" cy="757.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1640" y="760.4526">reset() : void</text><ellipse cx="1631" cy="770.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1640" y="773.2573">setCookie(void (*)() cookie) : void</text><ellipse cx="1631" cy="782.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1640" y="786.062">toString() const : std::string</text><ellipse cx="1631" cy="795.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1640" y="798.8667">zeroBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1621" x2="1884" y1="805.4609" y2="805.4609"/><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="222.4609" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1691" y="1608"/><ellipse cx="1733.45" cy="1624" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1736.4188,1629.6406 Q1735.8406,1629.9375 1735.2,1630.0781 Q1734.5594,1630.2344 1733.8563,1630.2344 Q1731.3563,1630.2344 1730.0281,1628.5938 Q1728.7156,1626.9375 1728.7156,1623.8125 Q1728.7156,1620.6875 1730.0281,1619.0313 Q1731.3563,1617.375 1733.8563,1617.375 Q1734.5594,1617.375 1735.2,1617.5313 Q1735.8563,1617.6875 1736.4188,1617.9844 L1736.4188,1620.7031 Q1735.7938,1620.125 1735.2,1619.8594 Q1734.6063,1619.5781 1733.9813,1619.5781 Q1732.6375,1619.5781 1731.95,1620.6563 Q1731.2625,1621.7188 1731.2625,1623.8125 Q1731.2625,1625.9063 1731.95,1626.9844 Q1732.6375,1628.0469 1733.9813,1628.0469 Q1734.6063,1628.0469 1735.2,1627.7813 Q1735.7938,1627.5 1736.4188,1626.9219 L1736.4188,1629.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1753.55" y="1628.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="1901" y="1605"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="1902" y="1617.1387">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1692" x2="1955" y1="1640" y2="1640"/><ellipse cx="1702" cy="1651" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1711" y="1654.2104">FixedBuffer() : void</text><ellipse cx="1702" cy="1663.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1711" y="1667.0151">~FixedBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1692" x2="1955" y1="1673.6094" y2="1673.6094"/><ellipse cx="1702" cy="1684.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1711" y="1687.8198">add(size_t len) : void</text><ellipse cx="1702" cy="1697.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1711" y="1700.6245">append(const char * buf, size_t len) : bool</text><ellipse cx="1702" cy="1710.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1711" y="1713.4292">avail() const : int</text><ellipse cx="1702" cy="1723.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1711" y="1726.2339">current() : char *</text><ellipse cx="1702" cy="1735.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1711" y="1739.0386">data() const : const char *</text><ellipse cx="1702" cy="1748.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1711" y="1751.8433">debugString() : const char *</text><ellipse cx="1702" cy="1761.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1711" y="1764.6479">length() const : int</text><ellipse cx="1702" cy="1774.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1711" y="1777.4526">reset() : void</text><ellipse cx="1702" cy="1787.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1711" y="1790.2573">setCookie(void (*)() cookie) : void</text><ellipse cx="1702" cy="1799.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1711" y="1803.062">toString() const : std::string</text><ellipse cx="1702" cy="1812.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1711" y="1815.8667">zeroBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1692" x2="1955" y1="1822.4609" y2="1822.4609"/><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="350.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="1133.5" y="1936.5"/><ellipse cx="1286.75" cy="1952.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1289.7188,1958.1406 Q1289.1406,1958.4375 1288.5,1958.5781 Q1287.8594,1958.7344 1287.1563,1958.7344 Q1284.6563,1958.7344 1283.3281,1957.0938 Q1282.0156,1955.4375 1282.0156,1952.3125 Q1282.0156,1949.1875 1283.3281,1947.5313 Q1284.6563,1945.875 1287.1563,1945.875 Q1287.8594,1945.875 1288.5,1946.0313 Q1289.1563,1946.1875 1289.7188,1946.4844 L1289.7188,1949.2031 Q1289.0938,1948.625 1288.5,1948.3594 Q1287.9063,1948.0781 1287.2813,1948.0781 Q1285.9375,1948.0781 1285.25,1949.1563 Q1284.5625,1950.2188 1284.5625,1952.3125 Q1284.5625,1954.4063 1285.25,1955.4844 Q1285.9375,1956.5469 1287.2813,1956.5469 Q1287.9063,1956.5469 1288.5,1956.2813 Q1289.0938,1956 1289.7188,1955.4219 L1289.7188,1958.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1307.25" y="1956.6543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1134.5" x2="1514.5" y1="1968.5" y2="1968.5"/><ellipse cx="1144.5" cy="1979.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1153.5" y="1982.7104">operator&lt;&lt;(const void *) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="1992.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1153.5" y="1995.5151">operator&lt;&lt;&lt;int N&gt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2005.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1153.5" y="2008.3198">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2017.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="1153.5" y="2021.1245">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2030.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1153.5" y="2033.9292">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2043.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1153.5" y="2046.7339">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2056.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1153.5" y="2059.5386">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2069.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="1153.5" y="2072.3433">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2081.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1153.5" y="2085.1479">operator&lt;&lt;(const double &amp;) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2094.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1153.5" y="2097.9526">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2107.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1153.5" y="2110.7573">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2120.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="1153.5" y="2123.562">operator&lt;&lt;(const unsigned long long &amp;) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2133.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1153.5" y="2136.3667">operator&lt;&lt;(const long long &amp;) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2145.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1153.5" y="2149.1714">operator&lt;&lt;(unsigned long) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2158.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1153.5" y="2161.9761">operator&lt;&lt;(long) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2171.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1153.5" y="2174.7808">operator&lt;&lt;(unsigned int) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2184.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1153.5" y="2187.5854">operator&lt;&lt;(int) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2197.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1153.5" y="2200.3901">operator&lt;&lt;(unsigned short) : LogStream::self &amp;</text><ellipse cx="1144.5" cy="2209.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1153.5" y="2213.1948">operator&lt;&lt;(short) : LogStream::self &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1134.5" x2="1514.5" y1="2219.7891" y2="2219.7891"/><ellipse cx="1144.5" cy="2230.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1153.5" y="2233.9995">append(const char * data, size_t len) : void</text><ellipse cx="1144.5" cy="2243.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1153.5" y="2246.8042">bufferData() const : const char *</text><ellipse cx="1144.5" cy="2256.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1153.5" y="2259.6089">bufferLength() const : size_t</text><ellipse cx="1144.5" cy="2269.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1153.5" y="2272.4136">resetBuffer() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1134.5" x2="1514.5" y1="2279.0078" y2="2279.0078"/><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="94.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="14" y="30"/><ellipse cx="119.75" cy="46" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M122.7188,51.6406 Q122.1406,51.9375 121.5,52.0781 Q120.8594,52.2344 120.1563,52.2344 Q117.6563,52.2344 116.3281,50.5938 Q115.0156,48.9375 115.0156,45.8125 Q115.0156,42.6875 116.3281,41.0313 Q117.6563,39.375 120.1563,39.375 Q120.8594,39.375 121.5,39.5313 Q122.1563,39.6875 122.7188,39.9844 L122.7188,42.7031 Q122.0938,42.125 121.5,41.8594 Q120.9063,41.5781 120.2813,41.5781 Q118.9375,41.5781 118.25,42.6563 Q117.5625,43.7188 117.5625,45.8125 Q117.5625,47.9063 118.25,48.9844 Q118.9375,50.0469 120.2813,50.0469 Q120.9063,50.0469 121.5,49.7813 Q122.0938,49.5 122.7188,48.9219 L122.7188,51.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="140.25" y="50.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15" x2="256" y1="62" y2="62"/><ellipse cx="25" cy="73" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="34" y="76.2104">Fmt&lt;T&gt;(const char * fmt, T val) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="15" x2="256" y1="82.8047" y2="82.8047"/><ellipse cx="25" cy="93.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="34" y="97.0151">data() const : const char *</text><ellipse cx="25" cy="106.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="34" y="109.8198">length() const : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15" x2="256" y1="116.4141" y2="116.4141"/><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="248.0703" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="736.5" y="268"/><ellipse cx="1105.75" cy="284" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1108.7188,289.6406 Q1108.1406,289.9375 1107.5,290.0781 Q1106.8594,290.2344 1106.1563,290.2344 Q1103.6563,290.2344 1102.3281,288.5938 Q1101.0156,286.9375 1101.0156,283.8125 Q1101.0156,280.6875 1102.3281,279.0313 Q1103.6563,277.375 1106.1563,277.375 Q1106.8594,277.375 1107.5,277.5313 Q1108.1563,277.6875 1108.7188,277.9844 L1108.7188,280.7031 Q1108.0938,280.125 1107.5,279.8594 Q1106.9063,279.5781 1106.2813,279.5781 Q1104.9375,279.5781 1104.25,280.6563 Q1103.5625,281.7188 1103.5625,283.8125 Q1103.5625,285.9063 1104.25,286.9844 Q1104.9375,288.0469 1106.2813,288.0469 Q1106.9063,288.0469 1107.5,287.7813 Q1108.0938,287.5 1108.7188,286.9219 L1108.7188,289.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1126.25" y="288.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="737.5" x2="1525.5" y1="300" y2="300"/><ellipse cx="747.5" cy="311" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="756.5" y="314.2104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="747.5" cy="323.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="756.5" y="327.0151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="747.5" cy="336.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="756.5" y="339.8198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="747.5" cy="349.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="756.5" y="352.6245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="747.5" cy="362.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="756.5" y="365.4292">Logger() : void</text><ellipse cx="747.5" cy="375.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="756.5" y="378.2339">Logger(Logger::LogLevel level) : void</text><ellipse cx="747.5" cy="387.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="756.5" y="391.0386">Logger(bool isSysErr) : void</text><ellipse cx="747.5" cy="400.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="756.5" y="403.8433">~Logger() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="737.5" x2="1525.5" y1="410.4375" y2="410.4375"/><ellipse cx="747.5" cy="421.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="756.5" y="424.6479">displayLocalTime() : bool</text><ellipse cx="747.5" cy="434.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="756.5" y="437.4526">logLevel() : Logger::LogLevel</text><ellipse cx="747.5" cy="447.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="756.5" y="450.2573">setDisplayLocalTime(bool showLocalTime) : void</text><ellipse cx="747.5" cy="459.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="756.5" y="463.062">setIndex(int index) : Logger &amp;</text><ellipse cx="747.5" cy="472.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="756.5" y="475.8667">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="747.5" cy="485.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="756.5" y="488.6714">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="747.5" cy="498.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="756.5" y="501.4761">stream() : LogStream &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="737.5" x2="1525.5" y1="508.0703" y2="508.0703"/><!--MD5=[a2beb77350952d649324ef19949173b2]
class C_0002131283840621188296--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="137.6328" id="C_0002131283840621188296" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="7644.5" y="8"/><ellipse cx="7659.5" cy="24" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7663.6094,30 L7655.8906,30 L7655.8906,17.6094 L7663.6094,17.6094 L7663.6094,19.7656 L7658.3438,19.7656 L7658.3438,22.4375 L7663.1094,22.4375 L7663.1094,24.5938 L7658.3438,24.5938 L7658.3438,27.8438 L7663.6094,27.8438 L7663.6094,30 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="7673.5" y="28.1543">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7645.5" x2="7779.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="7650.5" y="54.2104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="7650.5" y="67.0151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="7650.5" y="79.8198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="7650.5" y="92.6245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7650.5" y="105.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="7650.5" y="118.2339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7650.5" y="131.0386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7645.5" x2="7779.5" y1="137.6328" y2="137.6328"/><!--MD5=[80f13d7cbf12b8f5b3c51061955ccb60]
class C_0000979080797342806546--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="99.2188" id="C_0000979080797342806546" style="stroke: #A80036; stroke-width: 1.5;" width="304" x="7815.5" y="27.5"/><ellipse cx="7905.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7908.2188,49.1406 Q7907.6406,49.4375 7907,49.5781 Q7906.3594,49.7344 7905.6563,49.7344 Q7903.1563,49.7344 7901.8281,48.0938 Q7900.5156,46.4375 7900.5156,43.3125 Q7900.5156,40.1875 7901.8281,38.5313 Q7903.1563,36.875 7905.6563,36.875 Q7906.3594,36.875 7907,37.0313 Q7907.6563,37.1875 7908.2188,37.4844 L7908.2188,40.2031 Q7907.5938,39.625 7907,39.3594 Q7906.4063,39.0781 7905.7813,39.0781 Q7904.4375,39.0781 7903.75,40.1563 Q7903.0625,41.2188 7903.0625,43.3125 Q7903.0625,45.4063 7903.75,46.4844 Q7904.4375,47.5469 7905.7813,47.5469 Q7906.4063,47.5469 7907,47.2813 Q7907.5938,47 7908.2188,46.4219 L7908.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="7925.75" y="47.6543">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7816.5" x2="8118.5" y1="59.5" y2="59.5"/><ellipse cx="7826.5" cy="70.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="7835.5" y="73.7104">SourceFile(const char * filename = nullptr) : void</text><ellipse cx="7826.5" cy="83.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="7835.5" y="86.5151">SourceFile&lt;int N&gt;(const char (&amp;)[N] arr) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7816.5" x2="8118.5" y1="93.1094" y2="93.1094"/><ellipse cx="7826.5" cy="104.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="7835.5" y="107.3198">data_ : const char *</text><ellipse cx="7826.5" cy="116.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="7835.5" y="120.1245">size_ : int</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="94.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="1254.5" y="1163.5"/><ellipse cx="1325.25" cy="1179.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1328.2188,1185.1406 Q1327.6406,1185.4375 1327,1185.5781 Q1326.3594,1185.7344 1325.6563,1185.7344 Q1323.1563,1185.7344 1321.8281,1184.0938 Q1320.5156,1182.4375 1320.5156,1179.3125 Q1320.5156,1176.1875 1321.8281,1174.5313 Q1323.1563,1172.875 1325.6563,1172.875 Q1326.3594,1172.875 1327,1173.0313 Q1327.6563,1173.1875 1328.2188,1173.4844 L1328.2188,1176.2031 Q1327.5938,1175.625 1327,1175.3594 Q1326.4063,1175.0781 1325.7813,1175.0781 Q1324.4375,1175.0781 1323.75,1176.1563 Q1323.0625,1177.2188 1323.0625,1179.3125 Q1323.0625,1181.4063 1323.75,1182.4844 Q1324.4375,1183.5469 1325.7813,1183.5469 Q1326.4063,1183.5469 1327,1183.2813 Q1327.5938,1183 1328.2188,1182.4219 L1328.2188,1185.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1345.75" y="1183.6543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1255.5" x2="1471.5" y1="1195.5" y2="1195.5"/><ellipse cx="1265.5" cy="1206.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1274.5" y="1209.7104">~RawLogger() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1255.5" x2="1471.5" y1="1216.3047" y2="1216.3047"/><ellipse cx="1265.5" cy="1227.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1274.5" y="1230.5151">setIndex(int index) : RawLogger &amp;</text><ellipse cx="1265.5" cy="1240.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1274.5" y="1243.3198">stream() : LogStream &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1255.5" x2="1471.5" y1="1249.9141" y2="1249.9141"/><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="132.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="1675.5" y="4814"/><ellipse cx="1732.25" cy="4830" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1735.2188,4835.6406 Q1734.6406,4835.9375 1734,4836.0781 Q1733.3594,4836.2344 1732.6563,4836.2344 Q1730.1563,4836.2344 1728.8281,4834.5938 Q1727.5156,4832.9375 1727.5156,4829.8125 Q1727.5156,4826.6875 1728.8281,4825.0313 Q1730.1563,4823.375 1732.6563,4823.375 Q1733.3594,4823.375 1734,4823.5313 Q1734.6563,4823.6875 1735.2188,4823.9844 L1735.2188,4826.7031 Q1734.5938,4826.125 1734,4825.8594 Q1733.4063,4825.5781 1732.7813,4825.5781 Q1731.4375,4825.5781 1730.75,4826.6563 Q1730.0625,4827.7188 1730.0625,4829.8125 Q1730.0625,4831.9063 1730.75,4832.9844 Q1731.4375,4834.0469 1732.7813,4834.0469 Q1733.4063,4834.0469 1734,4833.7813 Q1734.5938,4833.5 1735.2188,4832.9219 L1735.2188,4835.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="1752.75" y="4834.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1875.5" y="4811"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1876.5" y="4823.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1676.5" x2="1880.5" y1="4846" y2="4846"/><ellipse cx="1686.5" cy="4857" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1695.5" y="4860.2104">MpscQueue() : void</text><ellipse cx="1686.5" cy="4869.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="1695.5" y="4873.0151">~MpscQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1676.5" x2="1880.5" y1="4879.6094" y2="4879.6094"/><ellipse cx="1686.5" cy="4890.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1695.5" y="4893.8198">dequeue(T &amp; output) : bool</text><ellipse cx="1686.5" cy="4903.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1695.5" y="4906.6245">empty() : bool</text><ellipse cx="1686.5" cy="4916.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1695.5" y="4919.4292">enqueue(T &amp;&amp; input) : void</text><ellipse cx="1686.5" cy="4929.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1695.5" y="4932.2339">enqueue(const T &amp; input) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1676.5" x2="1880.5" y1="4938.8281" y2="4938.8281"/><!--MD5=[9e2b872a1cb524987dcee0b8ea8bcdce]
class C_0000223701637084171141--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="112.0234" id="C_0000223701637084171141" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="1666.5" y="4310"/><ellipse cx="1699.95" cy="4326" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1702.9188,4331.6406 Q1702.3406,4331.9375 1701.7,4332.0781 Q1701.0594,4332.2344 1700.3563,4332.2344 Q1697.8563,4332.2344 1696.5281,4330.5938 Q1695.2156,4328.9375 1695.2156,4325.8125 Q1695.2156,4322.6875 1696.5281,4321.0313 Q1697.8563,4319.375 1700.3563,4319.375 Q1701.0594,4319.375 1701.7,4319.5313 Q1702.3563,4319.6875 1702.9188,4319.9844 L1702.9188,4322.7031 Q1702.2938,4322.125 1701.7,4321.8594 Q1701.1063,4321.5781 1700.4813,4321.5781 Q1699.1375,4321.5781 1698.45,4322.6563 Q1697.7625,4323.7188 1697.7625,4325.8125 Q1697.7625,4327.9063 1698.45,4328.9844 Q1699.1375,4330.0469 1700.4813,4330.0469 Q1701.1063,4330.0469 1701.7,4329.7813 Q1702.2938,4329.5 1702.9188,4328.9219 L1702.9188,4331.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="1718.05" y="4330.1543">MpscQueue::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1667.5" x2="1889.5" y1="4342" y2="4342"/><ellipse cx="1677.5" cy="4353" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1686.5" y="4356.2104">BufferNode() = default : void</text><ellipse cx="1677.5" cy="4365.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1686.5" y="4369.0151">BufferNode(const T &amp; data) : void</text><ellipse cx="1677.5" cy="4378.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1686.5" y="4381.8198">BufferNode(T &amp;&amp; data) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1667.5" x2="1889.5" y1="4388.4141" y2="4388.4141"/><ellipse cx="1677.5" cy="4399.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1686.5" y="4402.6245">dataPtr_ : T *</text><ellipse cx="1677.5" cy="4412.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1686.5" y="4415.4292">next_ : std::atomic&lt;BufferNode *&gt;</text><!--MD5=[dad06bf4fbec639e9a802a58181f4e4a]
class C_0002185746167032660910--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="48" id="C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="3049.5" y="4342"/><ellipse cx="3064.5" cy="4358" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3067.4688,4363.6406 Q3066.8906,4363.9375 3066.25,4364.0781 Q3065.6094,4364.2344 3064.9063,4364.2344 Q3062.4063,4364.2344 3061.0781,4362.5938 Q3059.7656,4360.9375 3059.7656,4357.8125 Q3059.7656,4354.6875 3061.0781,4353.0313 Q3062.4063,4351.375 3064.9063,4351.375 Q3065.6094,4351.375 3066.25,4351.5313 Q3066.9063,4351.6875 3067.4688,4351.9844 L3067.4688,4354.7031 Q3066.8438,4354.125 3066.25,4353.8594 Q3065.6563,4353.5781 3065.0313,4353.5781 Q3063.6875,4353.5781 3063,4354.6563 Q3062.3125,4355.7188 3062.3125,4357.8125 Q3062.3125,4359.9063 3063,4360.9844 Q3063.6875,4362.0469 3065.0313,4362.0469 Q3065.6563,4362.0469 3066.25,4361.7813 Q3066.8438,4361.5 3067.4688,4360.9219 L3067.4688,4363.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="3078.5" y="4362.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="135" x="3159.5" y="4339"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="3160.5" y="4351.1387">std::function&lt;void()&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3050.5" x2="3290.5" y1="4374" y2="4374"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3050.5" x2="3290.5" y1="4382" y2="4382"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="465.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="5618.5" y="3599"/><ellipse cx="5836.75" cy="3615" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5839.7188,3620.6406 Q5839.1406,3620.9375 5838.5,3621.0781 Q5837.8594,3621.2344 5837.1563,3621.2344 Q5834.6563,3621.2344 5833.3281,3619.5938 Q5832.0156,3617.9375 5832.0156,3614.8125 Q5832.0156,3611.6875 5833.3281,3610.0313 Q5834.6563,3608.375 5837.1563,3608.375 Q5837.8594,3608.375 5838.5,3608.5313 Q5839.1563,3608.6875 5839.7188,3608.9844 L5839.7188,3611.7031 Q5839.0938,3611.125 5838.5,3610.8594 Q5837.9063,3610.5781 5837.2813,3610.5781 Q5835.9375,3610.5781 5835.25,3611.6563 Q5834.5625,3612.7188 5834.5625,3614.8125 Q5834.5625,3616.9063 5835.25,3617.9844 Q5835.9375,3619.0469 5837.2813,3619.0469 Q5837.9063,3619.0469 5838.5,3618.7813 Q5839.0938,3618.5 5839.7188,3617.9219 L5839.7188,3620.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5857.25" y="3619.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5619.5" x2="6127.5" y1="3631" y2="3631"/><ellipse cx="5629.5" cy="3642" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5638.5" y="3645.2104">EventLoop() : void</text><ellipse cx="5629.5" cy="3654.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5638.5" y="3658.0151">~EventLoop() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5619.5" x2="6127.5" y1="3664.6094" y2="3664.6094"/><ellipse cx="5629.5" cy="3675.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5638.5" y="3678.8198">assertInLoopThread() : void</text><ellipse cx="5629.5" cy="3688.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="5638.5" y="3691.6245">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="5629.5" cy="3701.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="5638.5" y="3704.4292">index() : size_t</text><ellipse cx="5629.5" cy="3714.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="5638.5" y="3717.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="5629.5" cy="3726.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5638.5" y="3730.0386">isCallingFunctions() : bool</text><ellipse cx="5629.5" cy="3739.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="5638.5" y="3742.8433">isInLoopThread() const : bool</text><ellipse cx="5629.5" cy="3752.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5638.5" y="3755.6479">isRunning() : bool</text><ellipse cx="5629.5" cy="3765.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5638.5" y="3768.4526">loop() : void</text><ellipse cx="5629.5" cy="3778.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5638.5" y="3781.2573">moveToCurrentThread() : void</text><ellipse cx="5629.5" cy="3790.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5638.5" y="3794.062">queueInLoop(const Func &amp; f) : void</text><ellipse cx="5629.5" cy="3803.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="5638.5" y="3806.8667">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="5629.5" cy="3816.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="5638.5" y="3819.6714">quit() : void</text><ellipse cx="5629.5" cy="3829.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5638.5" y="3832.4761">removeChannel(Channel * chl) : void</text><ellipse cx="5629.5" cy="3842.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5638.5" y="3845.2808">resetAfterFork() : void</text><ellipse cx="5629.5" cy="3854.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5638.5" y="3858.0854">resetTimerQueue() : void</text><ellipse cx="5629.5" cy="3867.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="5638.5" y="3870.8901">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3880.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="5638.5" y="3883.6948">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3893.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5638.5" y="3896.4995">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3906.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5638.5" y="3909.3042">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3918.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5638.5" y="3922.1089">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3931.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5638.5" y="3934.9136">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3944.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5638.5" y="3947.7183">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3957.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="5638.5" y="3960.5229">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3970.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="5638.5" y="3973.3276">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3982.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5638.5" y="3986.1323">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5629.5" cy="3995.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="5638.5" y="3998.937">runInLoop&lt;Functor&gt;(Functor &amp;&amp; f) : void</text><ellipse cx="5629.5" cy="4008.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5638.5" y="4011.7417">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="5629.5" cy="4021.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5638.5" y="4024.5464">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="5629.5" cy="4034.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5638.5" y="4037.3511">setIndex(size_t index) : void</text><ellipse cx="5629.5" cy="4046.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="5638.5" y="4050.1558">updateChannel(Channel * chl) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5619.5" x2="6127.5" y1="4056.75" y2="4056.75"/><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="120.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="2220.5" y="2394"/><ellipse cx="2398.75" cy="2410" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2401.7188,2415.6406 Q2401.1406,2415.9375 2400.5,2416.0781 Q2399.8594,2416.2344 2399.1563,2416.2344 Q2396.6563,2416.2344 2395.3281,2414.5938 Q2394.0156,2412.9375 2394.0156,2409.8125 Q2394.0156,2406.6875 2395.3281,2405.0313 Q2396.6563,2403.375 2399.1563,2403.375 Q2399.8594,2403.375 2400.5,2403.5313 Q2401.1563,2403.6875 2401.7188,2403.9844 L2401.7188,2406.7031 Q2401.0938,2406.125 2400.5,2405.8594 Q2399.9063,2405.5781 2399.2813,2405.5781 Q2397.9375,2405.5781 2397.25,2406.6563 Q2396.5625,2407.7188 2396.5625,2409.8125 Q2396.5625,2411.9063 2397.25,2412.9844 Q2397.9375,2414.0469 2399.2813,2414.0469 Q2399.9063,2414.0469 2400.5,2413.7813 Q2401.0938,2413.5 2401.7188,2412.9219 L2401.7188,2415.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="2419.25" y="2414.1543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2221.5" x2="2693.5" y1="2426" y2="2426"/><ellipse cx="2231.5" cy="2437" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="2240.5" y="2440.2104">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="2231.5" cy="2449.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2240.5" y="2453.0151">~EventLoopThread() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2221.5" x2="2693.5" y1="2459.6094" y2="2459.6094"/><ellipse cx="2231.5" cy="2470.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2240.5" y="2473.8198">getLoop() const : EventLoop *</text><ellipse cx="2231.5" cy="2483.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2240.5" y="2486.6245">run() : void</text><ellipse cx="2231.5" cy="2496.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2240.5" y="2499.4292">wait() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2221.5" x2="2693.5" y1="2506.0234" y2="2506.0234"/><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="158.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="2174" y="1131.5"/><ellipse cx="2397.25" cy="1147.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2400.2188,1153.1406 Q2399.6406,1153.4375 2399,1153.5781 Q2398.3594,1153.7344 2397.6563,1153.7344 Q2395.1563,1153.7344 2393.8281,1152.0938 Q2392.5156,1150.4375 2392.5156,1147.3125 Q2392.5156,1144.1875 2393.8281,1142.5313 Q2395.1563,1140.875 2397.6563,1140.875 Q2398.3594,1140.875 2399,1141.0313 Q2399.6563,1141.1875 2400.2188,1141.4844 L2400.2188,1144.2031 Q2399.5938,1143.625 2399,1143.3594 Q2398.4063,1143.0781 2397.7813,1143.0781 Q2396.4375,1143.0781 2395.75,1144.1563 Q2395.0625,1145.2188 2395.0625,1147.3125 Q2395.0625,1149.4063 2395.75,1150.4844 Q2396.4375,1151.5469 2397.7813,1151.5469 Q2398.4063,1151.5469 2399,1151.2813 Q2399.5938,1151 2400.2188,1150.4219 L2400.2188,1153.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="2417.75" y="1151.6543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2175" x2="2764" y1="1163.5" y2="1163.5"/><ellipse cx="2185" cy="1174.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="2194" y="1177.7104">EventLoopThreadPool() = deleted : void</text><ellipse cx="2185" cy="1187.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2194" y="1190.5151">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2175" x2="2764" y1="1197.1094" y2="1197.1094"/><ellipse cx="2185" cy="1208.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2194" y="1211.3198">getLoop(size_t id) : EventLoop *</text><ellipse cx="2185" cy="1220.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2194" y="1224.1245">getLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="2185" cy="1233.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2194" y="1236.9292">getNextLoop() : EventLoop *</text><ellipse cx="2185" cy="1246.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2194" y="1249.7339">size() : size_t</text><ellipse cx="2185" cy="1259.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2194" y="1262.5386">start() : void</text><ellipse cx="2185" cy="1272.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2194" y="1275.3433">wait() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2175" x2="2764" y1="1281.9375" y2="1281.9375"/><!--MD5=[30a24a86207ab2bd070e7504d6a3d0fc]
class C_0001189407896771082466--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="73.6094" id="C_0001189407896771082466" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="292" y="40"/><ellipse cx="307" cy="56" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M309.9688,61.6406 Q309.3906,61.9375 308.75,62.0781 Q308.1094,62.2344 307.4063,62.2344 Q304.9063,62.2344 303.5781,60.5938 Q302.2656,58.9375 302.2656,55.8125 Q302.2656,52.6875 303.5781,51.0313 Q304.9063,49.375 307.4063,49.375 Q308.1094,49.375 308.75,49.5313 Q309.4063,49.6875 309.9688,49.9844 L309.9688,52.7031 Q309.3438,52.125 308.75,51.8594 Q308.1563,51.5781 307.5313,51.5781 Q306.1875,51.5781 305.5,52.6563 Q304.8125,53.7188 304.8125,55.8125 Q304.8125,57.9063 305.5,58.9844 Q306.1875,60.0469 307.5313,60.0469 Q308.1563,60.0469 308.75,59.7813 Q309.3438,59.5 309.9688,58.9219 L309.9688,61.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="321" y="60.1543">InetAddress::(anonymous_2577662)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="293" x2="550" y1="72" y2="72"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="293" x2="550" y1="80" y2="80"/><ellipse cx="303" cy="91" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="312" y="94.2104">addr6_ : struct sockaddr_in6</text><ellipse cx="303" cy="103.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="312" y="107.0151">addr_ : struct sockaddr_in</text><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="563.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="4483.5" y="2959"/><ellipse cx="4606.25" cy="2975" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4609.2188,2980.6406 Q4608.6406,2980.9375 4608,2981.0781 Q4607.3594,2981.2344 4606.6563,2981.2344 Q4604.1563,2981.2344 4602.8281,2979.5938 Q4601.5156,2977.9375 4601.5156,2974.8125 Q4601.5156,2971.6875 4602.8281,2970.0313 Q4604.1563,2968.375 4606.6563,2968.375 Q4607.3594,2968.375 4608,2968.5313 Q4608.6563,2968.6875 4609.2188,2968.9844 L4609.2188,2971.7031 Q4608.5938,2971.125 4608,2970.8594 Q4607.4063,2970.5781 4606.7813,2970.5781 Q4605.4375,2970.5781 4604.75,2971.6563 Q4604.0625,2972.7188 4604.0625,2974.8125 Q4604.0625,2976.9063 4604.75,2977.9844 Q4605.4375,2979.0469 4606.7813,2979.0469 Q4607.4063,2979.0469 4608,2978.7813 Q4608.5938,2978.5 4609.2188,2977.9219 L4609.2188,2980.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="4626.75" y="2979.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4484.5" x2="4798.5" y1="2991" y2="2991"/><ellipse cx="4494.5" cy="3002" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4503.5" y="3005.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4484.5" x2="4798.5" y1="3011.8047" y2="3011.8047"/><ellipse cx="4494.5" cy="3022.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="4503.5" y="3026.0151">operator[](size_t offset) const : const char &amp;</text><ellipse cx="4494.5" cy="3035.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4503.5" y="3038.8198">operator[](size_t offset) : char &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4484.5" x2="4798.5" y1="3045.4141" y2="3045.4141"/><ellipse cx="4494.5" cy="3056.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4503.5" y="3059.6245">addInFront(const char * buf, size_t len) : void</text><ellipse cx="4494.5" cy="3069.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4503.5" y="3072.4292">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="4494.5" cy="3082.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4503.5" y="3085.2339">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="4494.5" cy="3094.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4503.5" y="3098.0386">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="4494.5" cy="3107.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4503.5" y="3110.8433">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="4494.5" cy="3120.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4503.5" y="3123.6479">append&lt;int N&gt;(const char (&amp;)[N] buf) : void</text><ellipse cx="4494.5" cy="3133.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4503.5" y="3136.4526">append(const std::string &amp; buf) : void</text><ellipse cx="4494.5" cy="3146.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="4503.5" y="3149.2573">append(const char * buf, size_t len) : void</text><ellipse cx="4494.5" cy="3158.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4503.5" y="3162.062">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="4494.5" cy="3171.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4503.5" y="3174.8667">appendInt16(const uint16_t s) : void</text><ellipse cx="4494.5" cy="3184.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4503.5" y="3187.6714">appendInt32(const uint32_t i) : void</text><ellipse cx="4494.5" cy="3197.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4503.5" y="3200.4761">appendInt64(const uint64_t l) : void</text><ellipse cx="4494.5" cy="3210.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4503.5" y="3213.2808">appendInt8(const uint8_t b) : void</text><ellipse cx="4494.5" cy="3222.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4503.5" y="3226.0854">beginWrite() const : const char *</text><ellipse cx="4494.5" cy="3235.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4503.5" y="3238.8901">beginWrite() : char *</text><ellipse cx="4494.5" cy="3248.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4503.5" y="3251.6948">ensureWritableBytes(size_t len) : void</text><ellipse cx="4494.5" cy="3261.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4503.5" y="3264.4995">findCRLF() const : const char *</text><ellipse cx="4494.5" cy="3274.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4503.5" y="3277.3042">hasWritten(size_t len) : void</text><ellipse cx="4494.5" cy="3286.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4503.5" y="3290.1089">peek() const : const char *</text><ellipse cx="4494.5" cy="3299.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4503.5" y="3302.9136">peekInt16() const : uint16_t</text><ellipse cx="4494.5" cy="3312.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4503.5" y="3315.7183">peekInt32() const : uint32_t</text><ellipse cx="4494.5" cy="3325.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4503.5" y="3328.5229">peekInt64() const : uint64_t</text><ellipse cx="4494.5" cy="3338.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4503.5" y="3341.3276">peekInt8() const : uint8_t</text><ellipse cx="4494.5" cy="3350.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4503.5" y="3354.1323">read(size_t len) : std::string</text><ellipse cx="4494.5" cy="3363.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="4503.5" y="3366.937">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="4494.5" cy="3376.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4503.5" y="3379.7417">readInt16() : uint16_t</text><ellipse cx="4494.5" cy="3389.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4503.5" y="3392.5464">readInt32() : uint32_t</text><ellipse cx="4494.5" cy="3402.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4503.5" y="3405.3511">readInt64() : uint64_t</text><ellipse cx="4494.5" cy="3414.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4503.5" y="3418.1558">readInt8() : uint8_t</text><ellipse cx="4494.5" cy="3427.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4503.5" y="3430.9604">readableBytes() const : size_t</text><ellipse cx="4494.5" cy="3440.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4503.5" y="3443.7651">retrieve(size_t len) : void</text><ellipse cx="4494.5" cy="3453.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4503.5" y="3456.5698">retrieveAll() : void</text><ellipse cx="4494.5" cy="3466.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4503.5" y="3469.3745">retrieveUntil(const char * end) : void</text><ellipse cx="4494.5" cy="3478.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4503.5" y="3482.1792">swap(MsgBuffer &amp; buf) noexcept : void</text><ellipse cx="4494.5" cy="3491.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4503.5" y="3494.9839">unwrite(size_t offset) : void</text><ellipse cx="4494.5" cy="3504.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4503.5" y="3507.7886">writableBytes() const : size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4484.5" x2="4798.5" y1="3514.3828" y2="3514.3828"/><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="86.4141" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="6142.5" y="3197.5"/><ellipse cx="6179.55" cy="3213.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6183.6594,3219.5 L6175.9406,3219.5 L6175.9406,3207.1094 L6183.6594,3207.1094 L6183.6594,3209.2656 L6178.3938,3209.2656 L6178.3938,3211.9375 L6183.1594,3211.9375 L6183.1594,3214.0938 L6178.3938,3214.0938 L6178.3938,3217.3438 L6183.6594,3217.3438 L6183.6594,3219.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="6198.45" y="3217.6543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6143.5" x2="6275.5" y1="3229.5" y2="3229.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="6148.5" y="3243.7104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6148.5" y="3256.5151">kSSLInvalidCertificate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="6148.5" y="3269.3198">kSSLProtocolError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6143.5" x2="6275.5" y1="3275.9141" y2="3275.9141"/><!--MD5=[bc555c99f0e75025e1dcf95caffae609]
class C_0001660397537883119469--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="107.2188" id="C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="3921" y="3187"/><ellipse cx="4016.25" cy="3203" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4016.3594,3198.3438 L4015.2031,3203.4219 L4017.5313,3203.4219 L4016.3594,3198.3438 Z M4014.875,3196.1094 L4017.8594,3196.1094 L4021.2188,3208.5 L4018.7656,3208.5 L4018,3205.4375 L4014.7188,3205.4375 L4013.9688,3208.5 L4011.5313,3208.5 L4014.875,3196.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="4036.75" y="3207.1543">Certificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3922" x2="4183" y1="3219" y2="3219"/><ellipse cx="3932" cy="3230" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3941" y="3233.2104">~Certificate() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3922" x2="4183" y1="3239.8047" y2="3239.8047"/><ellipse cx="3932" cy="3250.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="3941" y="3254.0151">pem() const = 0 : std::string</text><ellipse cx="3932" cy="3263.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="3941" y="3266.8198">sha1Fingerprint() const = 0 : std::string</text><ellipse cx="3932" cy="3276.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="3941" y="3279.6245">sha256Fingerprint() const = 0 : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3922" x2="4183" y1="3286.2188" y2="3286.2188"/><!--MD5=[5368604bbb4530f9ed0e170f7ad54dab]
class C_0002100370281243872283--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="355.3125" id="C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.5;" width="637" x="5281" y="3063"/><ellipse cx="5567.25" cy="3079" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5570.2188,3084.6406 Q5569.6406,3084.9375 5569,3085.0781 Q5568.3594,3085.2344 5567.6563,3085.2344 Q5565.1563,3085.2344 5563.8281,3083.5938 Q5562.5156,3081.9375 5562.5156,3078.8125 Q5562.5156,3075.6875 5563.8281,3074.0313 Q5565.1563,3072.375 5567.6563,3072.375 Q5568.3594,3072.375 5569,3072.5313 Q5569.6563,3072.6875 5570.2188,3072.9844 L5570.2188,3075.7031 Q5569.5938,3075.125 5569,3074.8594 Q5568.4063,3074.5781 5567.7813,3074.5781 Q5566.4375,3074.5781 5565.75,3075.6563 Q5565.0625,3076.7188 5565.0625,3078.8125 Q5565.0625,3080.9063 5565.75,3081.9844 Q5566.4375,3083.0469 5567.7813,3083.0469 Q5568.4063,3083.0469 5569,3082.7813 Q5569.5938,3082.5 5570.2188,3081.9219 L5570.2188,3084.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="5587.75" y="3083.1543">TLSPolicy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5282" x2="5917" y1="3095" y2="3095"/><ellipse cx="5292" cy="3106" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="478" x="5301" y="3109.2104">defaultClientPolicy(const std::string &amp; hostname = "") : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="5292" cy="3118.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="611" x="5301" y="3122.0151">defaultServerPolicy(const std::string &amp; certPath, const std::string &amp; keyPath) : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="5292" cy="3131.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5301" y="3134.8198">getAllowBrokenChain() const : bool</text><ellipse cx="5292" cy="3144.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="5301" y="3147.6245">getAlpnProtocols() : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="5292" cy="3157.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="5301" y="3160.4292">getAlpnProtocols() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="5292" cy="3170.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="5301" y="3173.2339">getCaPath() const : const std::string &amp;</text><ellipse cx="5292" cy="3182.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="5301" y="3186.0386">getCertPath() const : const std::string &amp;</text><ellipse cx="5292" cy="3195.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="5301" y="3198.8433">getConfCmds() const : const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp;</text><ellipse cx="5292" cy="3208.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="5301" y="3211.6479">getHostname() const : const std::string &amp;</text><ellipse cx="5292" cy="3221.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="5301" y="3224.4526">getKeyPath() const : const std::string &amp;</text><ellipse cx="5292" cy="3234.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5301" y="3237.2573">getUseOldTLS() const : bool</text><ellipse cx="5292" cy="3246.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5301" y="3250.062">getUseSystemCertStore() const : bool</text><ellipse cx="5292" cy="3259.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5301" y="3262.8667">getValidate() const : bool</text><ellipse cx="5292" cy="3272.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="5301" y="3275.6714">setAllowBrokenChain(bool allow) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3285.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="5301" y="3288.4761">setAlpnProtocols(std::vector&lt;std::string&gt; &amp;&amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3298.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="5301" y="3301.2808">setAlpnProtocols(const std::vector&lt;std::string&gt; &amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3310.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="5301" y="3314.0854">setCaPath(const std::string &amp; caPath) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3323.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="5301" y="3326.8901">setCertPath(const std::string &amp; certPath) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3336.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="560" x="5301" y="3339.6948">setConfCmds(const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3349.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="5301" y="3352.4995">setHostname(const std::string &amp; hostname) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3362.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="5301" y="3365.3042">setKeyPath(const std::string &amp; keyPath) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3374.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5301" y="3378.1089">setUseOldTLS(bool useOldTLS) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3387.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5301" y="3390.9136">setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &amp;</text><ellipse cx="5292" cy="3400.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="5301" y="3403.7183">setValidate(bool enable) : TLSPolicy &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5282" x2="5917" y1="3410.3125" y2="3410.3125"/><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="734.6484" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1413" x="4591" y="843"/><ellipse cx="5246.75" cy="859" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5246.8594,854.3438 L5245.7031,859.4219 L5248.0313,859.4219 L5246.8594,854.3438 Z M5245.375,852.1094 L5248.3594,852.1094 L5251.7188,864.5 L5249.2656,864.5 L5248.5,861.4375 L5245.2188,861.4375 L5244.4688,864.5 L5242.0313,864.5 L5245.375,852.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="5267.25" y="863.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4592" x2="6003" y1="875" y2="875"/><ellipse cx="4602" cy="886" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="4611" y="889.2104">TcpConnection() = default : void</text><ellipse cx="4602" cy="898.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4611" y="902.0151">~TcpConnection() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4592" x2="6003" y1="908.6094" y2="908.6094"/><ellipse cx="4602" cy="919.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="242" x="4611" y="922.8198">applicationProtocol() const = 0 : std::string</text><ellipse cx="4602" cy="932.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="4611" y="935.6245">bytesReceived() const = 0 : size_t</text><ellipse cx="4602" cy="945.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="4611" y="948.4292">bytesSent() const = 0 : size_t</text><ellipse cx="4602" cy="958.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4611" y="961.2339">clearContext() : void</text><ellipse cx="4602" cy="970.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="170" x="4611" y="974.0386">connectDestroyed() = 0 : void</text><ellipse cx="4602" cy="983.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4611" y="986.8433">connectEstablished() = 0 : void</text><ellipse cx="4602" cy="996.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4611" y="999.6479">connected() const = 0 : bool</text><ellipse cx="4602" cy="1009.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4611" y="1012.4526">disconnected() const = 0 : bool</text><ellipse cx="4602" cy="1022.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="547" x="4611" y="1025.2573">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) = 0 : void</text><ellipse cx="4602" cy="1034.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="4611" y="1038.062">forceClose() = 0 : void</text><ellipse cx="4602" cy="1047.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="4611" y="1050.8667">getContext&lt;T&gt;() const : std::shared_ptr&lt;T&gt;</text><ellipse cx="4602" cy="1060.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="4611" y="1063.6714">getLoop() = 0 : EventLoop *</text><ellipse cx="4602" cy="1073.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="4611" y="1076.4761">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="4602" cy="1086.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4611" y="1089.2808">hasContext() const : bool</text><ellipse cx="4602" cy="1098.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="4611" y="1102.0854">isKeepAlive() = 0 : bool</text><ellipse cx="4602" cy="1111.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4611" y="1114.8901">isSSLConnection() const = 0 : bool</text><ellipse cx="4602" cy="1124.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="4611" y="1127.6948">keepAlive() = 0 : void</text><ellipse cx="4602" cy="1137.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4611" y="1140.4995">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4602" cy="1150.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4611" y="1153.3042">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4602" cy="1162.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="4611" y="1166.1089">peerCertificate() const = 0 : CertificatePtr</text><ellipse cx="4602" cy="1175.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="4611" y="1178.9136">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="4602" cy="1188.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="4611" y="1191.7183">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="4602" cy="1201.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="4611" y="1204.5229">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="4602" cy="1214.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="4611" y="1217.3276">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="4602" cy="1226.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="4611" y="1230.1323">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="4602" cy="1239.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4611" y="1242.937">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4602" cy="1252.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4611" y="1255.7417">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4602" cy="1265.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="4611" y="1268.5464">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="4602" cy="1278.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="4611" y="1281.3511">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4602" cy="1290.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="4611" y="1294.1558">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4602" cy="1303.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="4611" y="1306.9604">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="4602" cy="1316.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4611" y="1319.7651">setCloseCallback(CloseCallback &amp;&amp; cb) : void</text><ellipse cx="4602" cy="1329.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="4611" y="1332.5698">setCloseCallback(const CloseCallback &amp; cb) : void</text><ellipse cx="4602" cy="1342.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4611" y="1345.3745">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="4602" cy="1354.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4611" y="1358.1792">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4602" cy="1367.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4611" y="1370.9839">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="4602" cy="1380.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="4611" y="1383.7886">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="4602" cy="1393.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="4611" y="1396.5933">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="4602" cy="1406.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4611" y="1409.3979">setRecvMsgCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="4602" cy="1418.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4611" y="1422.2026">setRecvMsgCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="4602" cy="1431.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4611" y="1435.0073">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4602" cy="1444.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4611" y="1447.812">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="4602" cy="1457.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4611" y="1460.6167">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="4602" cy="1470.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4611" y="1473.4214">setValidationPolicy(TLSPolicy &amp;&amp; policy) : void</text><ellipse cx="4602" cy="1483.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4611" y="1486.2261">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="4602" cy="1495.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="4611" y="1499.0308">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="4602" cy="1508.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="4611" y="1511.8354">shutdown() = 0 : void</text><ellipse cx="4602" cy="1521.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="4611" y="1524.6401">sniName() const = 0 : std::string</text><ellipse cx="4602" cy="1534.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1387" x="4611" y="1537.4448">startClientEncryption(std::function&lt;void (const TcpConnectionPtr &amp;)&gt; &amp;&amp; callback, bool useOldTLS = false, bool validateCert = true, const std::string &amp; hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="4611" y="1550.2495">{}) : void</text><ellipse cx="4602" cy="1559.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="772" x="4611" y="1563.0542">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4592" x2="6003" y1="1569.6484" y2="1569.6484"/><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="120.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="2983.5" y="2653"/><ellipse cx="3287.25" cy="2669" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3290.2188,2674.6406 Q3289.6406,2674.9375 3289,2675.0781 Q3288.3594,2675.2344 3287.6563,2675.2344 Q3285.1563,2675.2344 3283.8281,2673.5938 Q3282.5156,2671.9375 3282.5156,2668.8125 Q3282.5156,2665.6875 3283.8281,2664.0313 Q3285.1563,2662.375 3287.6563,2662.375 Q3288.3594,2662.375 3289,2662.5313 Q3289.6563,2662.6875 3290.2188,2662.9844 L3290.2188,2665.7031 Q3289.5938,2665.125 3289,2664.8594 Q3288.4063,2664.5781 3287.7813,2664.5781 Q3286.4375,2664.5781 3285.75,2665.6563 Q3285.0625,2666.7188 3285.0625,2668.8125 Q3285.0625,2670.9063 3285.75,2671.9844 Q3286.4375,2673.0469 3287.7813,2673.0469 Q3288.4063,2673.0469 3289,2672.7813 Q3289.5938,2672.5 3290.2188,2671.9219 L3290.2188,2674.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="3307.75" y="2673.1543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2984.5" x2="3676.5" y1="2685" y2="2685"/><ellipse cx="2994.5" cy="2696" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="3003.5" y="2699.2104">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="2994.5" cy="2708.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="3003.5" y="2712.0151">~TimingWheel() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2984.5" x2="3676.5" y1="2718.6094" y2="2718.6094"/><ellipse cx="2994.5" cy="2729.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3003.5" y="2732.8198">getLoop() : EventLoop *</text><ellipse cx="2994.5" cy="2742.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="3003.5" y="2745.6245">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="2994.5" cy="2755.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="3003.5" y="2758.4292">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2984.5" x2="3676.5" y1="2765.0234" y2="2765.0234"/><!--MD5=[1a78d5db763eaae95321a32dcf46614d]
class C_0002013739811805694444--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="73.6094" id="C_0002013739811805694444" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="2983.5" y="2075"/><ellipse cx="3037.25" cy="2091" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3040.2188,2096.6406 Q3039.6406,2096.9375 3039,2097.0781 Q3038.3594,2097.2344 3037.6563,2097.2344 Q3035.1563,2097.2344 3033.8281,2095.5938 Q3032.5156,2093.9375 3032.5156,2090.8125 Q3032.5156,2087.6875 3033.8281,2086.0313 Q3035.1563,2084.375 3037.6563,2084.375 Q3038.3594,2084.375 3039,2084.5313 Q3039.6563,2084.6875 3040.2188,2084.9844 L3040.2188,2087.7031 Q3039.5938,2087.125 3039,2086.8594 Q3038.4063,2086.5781 3037.7813,2086.5781 Q3036.4375,2086.5781 3035.75,2087.6563 Q3035.0625,2088.7188 3035.0625,2090.8125 Q3035.0625,2092.9063 3035.75,2093.9844 Q3036.4375,2095.0469 3037.7813,2095.0469 Q3038.4063,2095.0469 3039,2094.7813 Q3039.5938,2094.5 3040.2188,2093.9219 L3040.2188,2096.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="3057.75" y="2095.1543">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2984.5" x2="3268.5" y1="2107" y2="2107"/><ellipse cx="2994.5" cy="2118" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="3003.5" y="2121.2104">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="2994.5" cy="2130.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="3003.5" y="2134.0151">~CallbackEntry() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2984.5" x2="3268.5" y1="2140.6094" y2="2140.6094"/><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="337.7031" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="985" x="4996" y="223"/><ellipse cx="5453.25" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5456.2188,244.6406 Q5455.6406,244.9375 5455,245.0781 Q5454.3594,245.2344 5453.6563,245.2344 Q5451.1563,245.2344 5449.8281,243.5938 Q5448.5156,241.9375 5448.5156,238.8125 Q5448.5156,235.6875 5449.8281,234.0313 Q5451.1563,232.375 5453.6563,232.375 Q5454.3594,232.375 5455,232.5313 Q5455.6563,232.6875 5456.2188,232.9844 L5456.2188,235.7031 Q5455.5938,235.125 5455,234.8594 Q5454.4063,234.5781 5453.7813,234.5781 Q5452.4375,234.5781 5451.75,235.6563 Q5451.0625,236.7188 5451.0625,238.8125 Q5451.0625,240.9063 5451.75,241.9844 Q5452.4375,243.0469 5453.7813,243.0469 Q5454.4063,243.0469 5455,242.7813 Q5455.5938,242.5 5456.2188,241.9219 L5456.2188,244.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="5473.75" y="243.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4997" x2="5980" y1="255" y2="255"/><ellipse cx="5007" cy="266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="745" x="5016" y="269.2104">TcpServer(EventLoop * loop, const InetAddress &amp; address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="5007" cy="278.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5016" y="282.0151">~TcpServer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4997" x2="5980" y1="288.6094" y2="288.6094"/><ellipse cx="5007" cy="299.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5016" y="302.8198">address() const : const InetAddress &amp;</text><ellipse cx="5007" cy="312.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5016" y="315.6245">enableSSL(TLSPolicyPtr policy) : void</text><ellipse cx="5007" cy="325.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="959" x="5016" y="328.4292">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5016" y="341.2339">{}, const std::string &amp; caPath = "") : void</text><ellipse cx="5007" cy="350.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="5016" y="354.0386">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="5007" cy="363.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5016" y="366.8433">getLoop() const : EventLoop *</text><ellipse cx="5007" cy="376.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5016" y="379.6479">ipPort() const : std::string</text><ellipse cx="5007" cy="389.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="5016" y="392.4526">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="5007" cy="402.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5016" y="405.2573">name() const : const std::string &amp;</text><ellipse cx="5007" cy="414.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5016" y="418.062">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5007" cy="427.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5016" y="430.8667">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5007" cy="440.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5016" y="443.6714">setIoLoopNum(size_t num) : void</text><ellipse cx="5007" cy="453.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5016" y="456.4761">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="5007" cy="466.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5016" y="469.2808">setIoLoops(const std::vector&lt;EventLoop *&gt; &amp; ioLoops) : void</text><ellipse cx="5007" cy="478.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="5016" y="482.0854">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5007" cy="491.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="5016" y="494.8901">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5007" cy="504.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5016" y="507.6948">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5007" cy="517.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5016" y="520.4995">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5007" cy="530.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5016" y="533.3042">start() : void</text><ellipse cx="5007" cy="542.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5016" y="546.1089">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4997" x2="5980" y1="552.7031" y2="552.7031"/><!--MD5=[094a28402c24830a9b549b01e4879f1e]
class C_0001489562721151066050--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="60.8047" id="C_0001489562721151066050" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="7421.5" y="46.5"/><ellipse cx="7436.5" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7439.4688,68.1406 Q7438.8906,68.4375 7438.25,68.5781 Q7437.6094,68.7344 7436.9063,68.7344 Q7434.4063,68.7344 7433.0781,67.0938 Q7431.7656,65.4375 7431.7656,62.3125 Q7431.7656,59.1875 7433.0781,57.5313 Q7434.4063,55.875 7436.9063,55.875 Q7437.6094,55.875 7438.25,56.0313 Q7438.9063,56.1875 7439.4688,56.4844 L7439.4688,59.2031 Q7438.8438,58.625 7438.25,58.3594 Q7437.6563,58.0781 7437.0313,58.0781 Q7435.6875,58.0781 7435,59.1563 Q7434.3125,60.2188 7434.3125,62.3125 Q7434.3125,64.4063 7435,65.4844 Q7435.6875,66.5469 7437.0313,66.5469 Q7437.6563,66.5469 7438.25,66.2813 Q7438.8438,66 7439.4688,65.4219 L7439.4688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="7450.5" y="66.6543">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7422.5" x2="7608.5" y1="78.5" y2="78.5"/><ellipse cx="7432.5" cy="89.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7441.5" y="92.7104">IgnoreSigPipe() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7422.5" x2="7608.5" y1="99.3047" y2="99.3047"/><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="312.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="7643.5" y="3084.5"/><ellipse cx="7774.75" cy="3100.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7777.7188,3106.1406 Q7777.1406,3106.4375 7776.5,3106.5781 Q7775.8594,3106.7344 7775.1563,3106.7344 Q7772.6563,3106.7344 7771.3281,3105.0938 Q7770.0156,3103.4375 7770.0156,3100.3125 Q7770.0156,3097.1875 7771.3281,3095.5313 Q7772.6563,3093.875 7775.1563,3093.875 Q7775.8594,3093.875 7776.5,3094.0313 Q7777.1563,3094.1875 7777.7188,3094.4844 L7777.7188,3097.2031 Q7777.0938,3096.625 7776.5,3096.3594 Q7775.9063,3096.0781 7775.2813,3096.0781 Q7773.9375,3096.0781 7773.25,3097.1563 Q7772.5625,3098.2188 7772.5625,3100.3125 Q7772.5625,3102.4063 7773.25,3103.4844 Q7773.9375,3104.5469 7775.2813,3104.5469 Q7775.9063,3104.5469 7776.5,3104.2813 Q7777.0938,3104 7777.7188,3103.4219 L7777.7188,3106.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="7795.25" y="3104.6543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7644.5" x2="7956.5" y1="3116.5" y2="3116.5"/><ellipse cx="7654.5" cy="3127.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="7663.5" y="3130.7104">Socket(int sockfd) : void</text><ellipse cx="7654.5" cy="3140.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7663.5" y="3143.5151">~Socket() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7644.5" x2="7956.5" y1="3150.1094" y2="3150.1094"/><ellipse cx="7654.5" cy="3161.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="7663.5" y="3164.3198">accept(InetAddress * peeraddr) : int</text><ellipse cx="7654.5" cy="3173.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7663.5" y="3177.1245">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="7654.5" cy="3186.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7663.5" y="3189.9292">closeWrite() : void</text><ellipse cx="7654.5" cy="3199.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="7663.5" y="3202.7339">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="7654.5" cy="3212.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="7663.5" y="3215.5386">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="7654.5" cy="3225.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="7663.5" y="3228.3433">fd() : int</text><ellipse cx="7654.5" cy="3237.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="7663.5" y="3241.1479">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="7654.5" cy="3250.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="7663.5" y="3253.9526">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="7654.5" cy="3263.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="7663.5" y="3266.7573">getSocketError(int sockfd) : int</text><ellipse cx="7654.5" cy="3276.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="7663.5" y="3279.562">getSocketError() : int</text><ellipse cx="7654.5" cy="3289.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="7663.5" y="3292.3667">isSelfConnect(int sockfd) : bool</text><ellipse cx="7654.5" cy="3301.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7663.5" y="3305.1714">listen() : void</text><ellipse cx="7654.5" cy="3314.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="7663.5" y="3317.9761">read(char * buffer, uint64_t len) : int</text><ellipse cx="7654.5" cy="3327.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="7663.5" y="3330.7808">setKeepAlive(bool on) : void</text><ellipse cx="7654.5" cy="3340.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="7663.5" y="3343.5854">setNonBlockAndCloseOnExec(int sockfd) : void</text><ellipse cx="7654.5" cy="3353.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7663.5" y="3356.3901">setReuseAddr(bool on) : void</text><ellipse cx="7654.5" cy="3365.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="7663.5" y="3369.1948">setReusePort(bool on) : void</text><ellipse cx="7654.5" cy="3378.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="7663.5" y="3381.9995">setTcpNoDelay(bool on) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7644.5" x2="7956.5" y1="3388.5938" y2="3388.5938"/><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="427.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="6016.5" y="4667"/><ellipse cx="6168.75" cy="4683" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6171.7188,4688.6406 Q6171.1406,4688.9375 6170.5,4689.0781 Q6169.8594,4689.2344 6169.1563,4689.2344 Q6166.6563,4689.2344 6165.3281,4687.5938 Q6164.0156,4685.9375 6164.0156,4682.8125 Q6164.0156,4679.6875 6165.3281,4678.0313 Q6166.6563,4676.375 6169.1563,4676.375 Q6169.8594,4676.375 6170.5,4676.5313 Q6171.1563,4676.6875 6171.7188,4676.9844 L6171.7188,4679.7031 Q6171.0938,4679.125 6170.5,4678.8594 Q6169.9063,4678.5781 6169.2813,4678.5781 Q6167.9375,4678.5781 6167.25,4679.6563 Q6166.5625,4680.7188 6166.5625,4682.8125 Q6166.5625,4684.9063 6167.25,4685.9844 Q6167.9375,4687.0469 6169.2813,4687.0469 Q6169.9063,4687.0469 6170.5,4686.7813 Q6171.0938,4686.5 6171.7188,4685.9219 L6171.7188,4688.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="6189.25" y="4687.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6017.5" x2="6379.5" y1="4699" y2="4699"/><ellipse cx="6027.5" cy="4710" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="6036.5" y="4713.2104">Channel(EventLoop * loop, int fd) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6017.5" x2="6379.5" y1="4719.8047" y2="4719.8047"/><ellipse cx="6027.5" cy="4730.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="6036.5" y="4734.0151">disableAll() : void</text><ellipse cx="6027.5" cy="4743.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6036.5" y="4746.8198">disableReading() : void</text><ellipse cx="6027.5" cy="4756.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6036.5" y="4759.6245">disableWriting() : void</text><ellipse cx="6027.5" cy="4769.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="6036.5" y="4772.4292">enableReading() : void</text><ellipse cx="6027.5" cy="4782.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6036.5" y="4785.2339">enableWriting() : void</text><ellipse cx="6027.5" cy="4794.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6036.5" y="4798.0386">events() const : int</text><ellipse cx="6027.5" cy="4807.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="6036.5" y="4810.8433">fd() const : int</text><ellipse cx="6027.5" cy="4820.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="6036.5" y="4823.6479">isNoneEvent() const : bool</text><ellipse cx="6027.5" cy="4833.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6036.5" y="4836.4526">isReading() const : bool</text><ellipse cx="6027.5" cy="4846.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="6036.5" y="4849.2573">isWriting() const : bool</text><ellipse cx="6027.5" cy="4858.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="6036.5" y="4862.062">ownerLoop() : EventLoop *</text><ellipse cx="6027.5" cy="4871.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="6036.5" y="4874.8667">remove() : void</text><ellipse cx="6027.5" cy="4884.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="6036.5" y="4887.6714">revents() const : int</text><ellipse cx="6027.5" cy="4897.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="6036.5" y="4900.4761">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6027.5" cy="4910.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="6036.5" y="4913.2808">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6027.5" cy="4922.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="6036.5" y="4926.0854">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6027.5" cy="4935.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="6036.5" y="4938.8901">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6027.5" cy="4948.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="6036.5" y="4951.6948">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6027.5" cy="4961.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="6036.5" y="4964.4995">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6027.5" cy="4974.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="6036.5" y="4977.3042">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6027.5" cy="4986.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="6036.5" y="4990.1089">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6027.5" cy="4999.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="6036.5" y="5002.9136">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6027.5" cy="5012.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="6036.5" y="5015.7183">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6027.5" cy="5025.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="6036.5" y="5028.5229">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><ellipse cx="6027.5" cy="5038.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="6036.5" y="5041.3276">updateEvents(int events) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6017.5" x2="6379.5" y1="5047.9219" y2="5047.9219"/><ellipse cx="6027.5" cy="5058.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="6036.5" y="5062.1323">kNoneEvent : const int</text><ellipse cx="6027.5" cy="5071.7266" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="6036.5" y="5074.937">kReadEvent : const int</text><ellipse cx="6027.5" cy="5084.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="6036.5" y="5087.7417">kWriteEvent : const int</text><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="120.0234" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="7914.5" y="2653"/><ellipse cx="8201.25" cy="2669" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8204.2188,2674.6406 Q8203.6406,2674.9375 8203,2675.0781 Q8202.3594,2675.2344 8201.6563,2675.2344 Q8199.1563,2675.2344 8197.8281,2673.5938 Q8196.5156,2671.9375 8196.5156,2668.8125 Q8196.5156,2665.6875 8197.8281,2664.0313 Q8199.1563,2662.375 8201.6563,2662.375 Q8202.3594,2662.375 8203,2662.5313 Q8203.6563,2662.6875 8204.2188,2662.9844 L8204.2188,2665.7031 Q8203.5938,2665.125 8203,2664.8594 Q8202.4063,2664.5781 8201.7813,2664.5781 Q8200.4375,2664.5781 8199.75,2665.6563 Q8199.0625,2666.7188 8199.0625,2668.8125 Q8199.0625,2670.9063 8199.75,2671.9844 Q8200.4375,2673.0469 8201.7813,2673.0469 Q8202.4063,2673.0469 8203,2672.7813 Q8203.5938,2672.5 8204.2188,2671.9219 L8204.2188,2674.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="8221.75" y="2673.1543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7915.5" x2="8551.5" y1="2685" y2="2685"/><ellipse cx="7925.5" cy="2696" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="7934.5" y="2699.2104">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="7925.5" cy="2708.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7934.5" y="2712.0151">~Acceptor() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7915.5" x2="8551.5" y1="2718.6094" y2="2718.6094"/><ellipse cx="7925.5" cy="2729.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7934.5" y="2732.8198">addr() const : const InetAddress &amp;</text><ellipse cx="7925.5" cy="2742.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7934.5" y="2745.6245">listen() : void</text><ellipse cx="7925.5" cy="2755.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="7934.5" y="2758.4292">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7915.5" x2="8551.5" y1="2765.0234" y2="2765.0234"/><!--MD5=[bf31e704e42c877df2dec6bd5fd054fb]
class C_0000464040622375950341--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="286.4844" id="C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="3997" y="2570"/><ellipse cx="4198.25" cy="2586" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4198.3594,2581.3438 L4197.2031,2586.4219 L4199.5313,2586.4219 L4198.3594,2581.3438 Z M4196.875,2579.1094 L4199.8594,2579.1094 L4203.2188,2591.5 L4200.7656,2591.5 L4200,2588.4375 L4196.7188,2588.4375 L4195.9688,2591.5 L4193.5313,2591.5 L4196.875,2579.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="4218.75" y="2590.1543">TLSProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3998" x2="4479" y1="2602" y2="2602"/><ellipse cx="4008" cy="2613" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="4017" y="2616.2104">TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void</text><ellipse cx="4008" cy="2625.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4017" y="2629.0151">~TLSProvider() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3998" x2="4479" y1="2635.6094" y2="2635.6094"/><ellipse cx="4008" cy="2646.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="4017" y="2649.8198">appendToWriteBuffer(const char * ptr, size_t size) : void</text><ellipse cx="4008" cy="2659.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="4017" y="2662.6245">applicationProtocol() const : const std::string &amp;</text><ellipse cx="4008" cy="2672.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="4017" y="2675.4292">close() = 0 : void</text><ellipse cx="4008" cy="2685.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4017" y="2688.2339">getBufferedData() : MsgBuffer &amp;</text><ellipse cx="4008" cy="2697.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4017" y="2701.0386">getRecvBuffer() : MsgBuffer &amp;</text><ellipse cx="4008" cy="2710.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4017" y="2713.8433">peerCertificate() const : const CertificatePtr &amp;</text><ellipse cx="4008" cy="2723.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="224" x="4017" y="2726.6479">recvData(MsgBuffer * buffer) = 0 : void</text><ellipse cx="4008" cy="2736.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4017" y="2739.4526">sendBufferedData() : bool</text><ellipse cx="4008" cy="2749.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="290" x="4017" y="2752.2573">sendData(const char * ptr, size_t size) = 0 : ssize_t</text><ellipse cx="4008" cy="2761.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4017" y="2765.062">setCloseCallback(TLSProvider::CloseCallback cb) : void</text><ellipse cx="4008" cy="2774.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4017" y="2777.8667">setErrorCallback(TLSProvider::ErrorCallback cb) : void</text><ellipse cx="4008" cy="2787.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="4017" y="2790.6714">setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void</text><ellipse cx="4008" cy="2800.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4017" y="2803.4761">setMessageCallback(TLSProvider::MessageCallback cb) : void</text><ellipse cx="4008" cy="2813.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="4017" y="2816.2808">setWriteCallback(TLSProvider::WriteCallback cb) : void</text><ellipse cx="4008" cy="2825.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4017" y="2829.0854">sniName() const : const std::string &amp;</text><ellipse cx="4008" cy="2838.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="4017" y="2841.8901">startEncryption() = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3998" x2="4479" y1="2848.4844" y2="2848.4844"/><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="504.1641" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1036" x="4151.5" y="1860"/><ellipse cx="4606.25" cy="1876" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4609.2188,1881.6406 Q4608.6406,1881.9375 4608,1882.0781 Q4607.3594,1882.2344 4606.6563,1882.2344 Q4604.1563,1882.2344 4602.8281,1880.5938 Q4601.5156,1878.9375 4601.5156,1875.8125 Q4601.5156,1872.6875 4602.8281,1871.0313 Q4604.1563,1869.375 4606.6563,1869.375 Q4607.3594,1869.375 4608,1869.5313 Q4608.6563,1869.6875 4609.2188,1869.9844 L4609.2188,1872.7031 Q4608.5938,1872.125 4608,1871.8594 Q4607.4063,1871.5781 4606.7813,1871.5781 Q4605.4375,1871.5781 4604.75,1872.6563 Q4604.0625,1873.7188 4604.0625,1875.8125 Q4604.0625,1877.9063 4604.75,1878.9844 Q4605.4375,1880.0469 4606.7813,1880.0469 Q4607.4063,1880.0469 4608,1879.7813 Q4608.5938,1879.5 4609.2188,1878.9219 L4609.2188,1881.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="4626.75" y="1880.1543">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4152.5" x2="5186.5" y1="1892" y2="1892"/><ellipse cx="4162.5" cy="1903" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1010" x="4171.5" y="1906.2104">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void</text><ellipse cx="4162.5" cy="1915.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4171.5" y="1919.0151">~TcpConnectionImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4152.5" x2="5186.5" y1="1925.6094" y2="1925.6094"/><ellipse cx="4162.5" cy="1936.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4171.5" y="1939.8198">applicationProtocol() const : std::string</text><ellipse cx="4162.5" cy="1949.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4171.5" y="1952.6245">bytesReceived() const : size_t</text><ellipse cx="4162.5" cy="1962.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4171.5" y="1965.4292">bytesSent() const : size_t</text><ellipse cx="4162.5" cy="1975.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4171.5" y="1978.2339">connectDestroyed() : void</text><ellipse cx="4162.5" cy="1987.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4171.5" y="1991.0386">connectEstablished() : void</text><ellipse cx="4162.5" cy="2000.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4171.5" y="2003.8433">connected() const : bool</text><ellipse cx="4162.5" cy="2013.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4171.5" y="2016.6479">disconnected() const : bool</text><ellipse cx="4162.5" cy="2026.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="4171.5" y="2029.4526">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) : void</text><ellipse cx="4162.5" cy="2039.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4171.5" y="2042.2573">forceClose() : void</text><ellipse cx="4162.5" cy="2051.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="4171.5" y="2055.062">getLoop() : EventLoop *</text><ellipse cx="4162.5" cy="2064.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4171.5" y="2067.8667">getRecvBuffer() : MsgBuffer *</text><ellipse cx="4162.5" cy="2077.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4171.5" y="2080.6714">isKeepAlive() : bool</text><ellipse cx="4162.5" cy="2090.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4171.5" y="2093.4761">isSSLConnection() const : bool</text><ellipse cx="4162.5" cy="2103.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="4171.5" y="2106.2808">keepAlive() : void</text><ellipse cx="4162.5" cy="2115.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4171.5" y="2119.0854">localAddr() const : const InetAddress &amp;</text><ellipse cx="4162.5" cy="2128.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4171.5" y="2131.8901">peerAddr() const : const InetAddress &amp;</text><ellipse cx="4162.5" cy="2141.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4171.5" y="2144.6948">peerCertificate() const : CertificatePtr</text><ellipse cx="4162.5" cy="2154.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="4171.5" y="2157.4995">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="4162.5" cy="2167.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="4171.5" y="2170.3042">send(const void * msg, size_t len) : void</text><ellipse cx="4162.5" cy="2179.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4171.5" y="2183.1089">send(const std::string &amp; msg) : void</text><ellipse cx="4162.5" cy="2192.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="4171.5" y="2195.9136">send(std::string &amp;&amp; msg) : void</text><ellipse cx="4162.5" cy="2205.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4171.5" y="2208.7183">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="4162.5" cy="2218.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4171.5" y="2221.5229">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="4162.5" cy="2231.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="4171.5" y="2234.3276">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="4162.5" cy="2243.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4171.5" y="2247.1323">send(const char * msg, size_t len) : void</text><ellipse cx="4162.5" cy="2256.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="4171.5" y="2259.937">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="4162.5" cy="2269.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="4171.5" y="2272.7417">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="4162.5" cy="2282.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="4171.5" y="2285.5464">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="4162.5" cy="2295.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="4171.5" y="2298.3511">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="4162.5" cy="2307.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4171.5" y="2311.1558">setTcpNoDelay(bool on) : void</text><ellipse cx="4162.5" cy="2320.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4171.5" y="2323.9604">shutdown() : void</text><ellipse cx="4162.5" cy="2333.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4171.5" y="2336.7651">sniName() const : std::string</text><ellipse cx="4162.5" cy="2346.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="749" x="4171.5" y="2349.5698">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4152.5" x2="5186.5" y1="2356.1641" y2="2356.1641"/><!--MD5=[fd31fd44dd4b53895283cc4ebf0192ff]
class C_0002266895444343633259--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="86.4141" id="C_0002266895444343633259" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="9388" y="349"/><ellipse cx="9481.25" cy="365" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9484.2188,370.6406 Q9483.6406,370.9375 9483,371.0781 Q9482.3594,371.2344 9481.6563,371.2344 Q9479.1563,371.2344 9477.8281,369.5938 Q9476.5156,367.9375 9476.5156,364.8125 Q9476.5156,361.6875 9477.8281,360.0313 Q9479.1563,358.375 9481.6563,358.375 Q9482.3594,358.375 9483,358.5313 Q9483.6563,358.6875 9484.2188,358.9844 L9484.2188,361.7031 Q9483.5938,361.125 9483,360.8594 Q9482.4063,360.5781 9481.7813,360.5781 Q9480.4375,360.5781 9479.75,361.6563 Q9479.0625,362.7188 9479.0625,364.8125 Q9479.0625,366.9063 9479.75,367.9844 Q9480.4375,369.0469 9481.7813,369.0469 Q9482.4063,369.0469 9483,368.7813 Q9483.5938,368.5 9484.2188,367.9219 L9484.2188,370.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="9501.75" y="369.1543">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9389" x2="9780" y1="381" y2="381"/><ellipse cx="9399" cy="392" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="9408" y="395.2104">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="9399" cy="404.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="9408" y="408.0151">reset() : void</text><ellipse cx="9399" cy="417.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="9408" y="420.8198">~KickoffEntry() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9389" x2="9780" y1="427.4141" y2="427.4141"/><!--MD5=[87de1d9bdb2486f0ceeb68ee204e5830]
class C_0001029063960859366412--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="163.2422" id="C_0001029063960859366412" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="3622.5" y="1129"/><ellipse cx="3714.25" cy="1145" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3717.2188,1150.6406 Q3716.6406,1150.9375 3716,1151.0781 Q3715.3594,1151.2344 3714.6563,1151.2344 Q3712.1563,1151.2344 3710.8281,1149.5938 Q3709.5156,1147.9375 3709.5156,1144.8125 Q3709.5156,1141.6875 3710.8281,1140.0313 Q3712.1563,1138.375 3714.6563,1138.375 Q3715.3594,1138.375 3716,1138.5313 Q3716.6563,1138.6875 3717.2188,1138.9844 L3717.2188,1141.7031 Q3716.5938,1141.125 3716,1140.8594 Q3715.4063,1140.5781 3714.7813,1140.5781 Q3713.4375,1140.5781 3712.75,1141.6563 Q3712.0625,1142.7188 3712.0625,1144.8125 Q3712.0625,1146.9063 3712.75,1147.9844 Q3713.4375,1149.0469 3714.7813,1149.0469 Q3715.4063,1149.0469 3716,1148.7813 Q3716.5938,1148.5 3717.2188,1147.9219 L3717.2188,1150.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="3734.75" y="1149.1543">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3623.5" x2="4009.5" y1="1161" y2="1161"/><ellipse cx="3633.5" cy="1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3642.5" y="1175.2104">isFile() const : bool</text><ellipse cx="3633.5" cy="1184.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3642.5" y="1188.0151">~BufferNode() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3623.5" x2="4009.5" y1="1194.6094" y2="1194.6094"/><ellipse cx="3633.5" cy="1205.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3642.5" y="1208.8198">closeConnection_ : bool</text><ellipse cx="3633.5" cy="1218.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3642.5" y="1221.6245">fileBytesToSend_ : ssize_t</text><ellipse cx="3633.5" cy="1231.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3642.5" y="1234.4292">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><ellipse cx="3633.5" cy="1244.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3642.5" y="1247.2339">nDataWritten_ : std::size_t</text><ellipse cx="3633.5" cy="1256.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3642.5" y="1260.0386">offset_ : off_t</text><ellipse cx="3633.5" cy="1269.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3642.5" y="1272.8433">sendFd_ : int</text><ellipse cx="3633.5" cy="1282.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3642.5" y="1285.6479">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[8afb725b5f97df604240a26bac5b9bd6]
class C_0001727349338344491225--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="99.2188" id="C_0001727349338344491225" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="4182" y="1161"/><ellipse cx="4197" cy="1177" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4201.1094,1183 L4193.3906,1183 L4193.3906,1170.6094 L4201.1094,1170.6094 L4201.1094,1172.7656 L4195.8438,1172.7656 L4195.8438,1175.4375 L4200.6094,1175.4375 L4200.6094,1177.5938 L4195.8438,1177.5938 L4195.8438,1180.8438 L4201.1094,1180.8438 L4201.1094,1183 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="4211" y="1181.1543">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4183" x2="4412" y1="1193" y2="1193"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4188" y="1207.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4188" y="1220.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4188" y="1232.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4188" y="1245.6245">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4183" x2="4412" y1="1252.2188" y2="1252.2188"/><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="158.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="5370" y="4287"/><ellipse cx="5530.25" cy="4303" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5530.3594,4298.3438 L5529.2031,4303.4219 L5531.5313,4303.4219 L5530.3594,4298.3438 Z M5528.875,4296.1094 L5531.8594,4296.1094 L5535.2188,4308.5 L5532.7656,4308.5 L5532,4305.4375 L5528.7188,4305.4375 L5527.9688,4308.5 L5525.5313,4308.5 L5528.875,4296.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="5550.75" y="4307.1543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5371" x2="5732" y1="4319" y2="4319"/><ellipse cx="5381" cy="4330" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5390" y="4333.2104">Poller(EventLoop * loop) : void</text><ellipse cx="5381" cy="4342.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5390" y="4346.0151">~Poller() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5371" x2="5732" y1="4352.6094" y2="4352.6094"/><ellipse cx="5381" cy="4363.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5390" y="4366.8198">assertInLoopThread() : void</text><ellipse cx="5381" cy="4376.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="5390" y="4379.6245">newPoller(EventLoop * loop) : Poller *</text><ellipse cx="5381" cy="4389.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="5390" y="4392.4292">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="5381" cy="4402.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="5390" y="4405.2339">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="5381" cy="4414.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5390" y="4418.0386">resetAfterFork() : void</text><ellipse cx="5381" cy="4427.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="5390" y="4430.8433">updateChannel(Channel * channel) = 0 : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5371" x2="5732" y1="4437.4375" y2="4437.4375"/><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="145.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="8112" y="4293"/><ellipse cx="8374.75" cy="4309" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8377.7188,4314.6406 Q8377.1406,4314.9375 8376.5,4315.0781 Q8375.8594,4315.2344 8375.1563,4315.2344 Q8372.6563,4315.2344 8371.3281,4313.5938 Q8370.0156,4311.9375 8370.0156,4308.8125 Q8370.0156,4305.6875 8371.3281,4304.0313 Q8372.6563,4302.375 8375.1563,4302.375 Q8375.8594,4302.375 8376.5,4302.5313 Q8377.1563,4302.6875 8377.7188,4302.9844 L8377.7188,4305.7031 Q8377.0938,4305.125 8376.5,4304.8594 Q8375.9063,4304.5781 8375.2813,4304.5781 Q8373.9375,4304.5781 8373.25,4305.6563 Q8372.5625,4306.7188 8372.5625,4308.8125 Q8372.5625,4310.9063 8373.25,4311.9844 Q8373.9375,4313.0469 8375.2813,4313.0469 Q8375.9063,4313.0469 8376.5,4312.7813 Q8377.0938,4312.5 8377.7188,4311.9219 L8377.7188,4314.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="8395.25" y="4313.1543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8113" x2="8720" y1="4325" y2="4325"/><ellipse cx="8123" cy="4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="8132" y="4339.2104">TimerQueue(EventLoop * loop) : void</text><ellipse cx="8123" cy="4348.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="8132" y="4352.0151">~TimerQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8113" x2="8720" y1="4358.6094" y2="4358.6094"/><ellipse cx="8123" cy="4369.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="8132" y="4372.8198">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="8123" cy="4382.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="8132" y="4385.6245">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="8123" cy="4395.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="8132" y="4398.4292">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="8123" cy="4408.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="8132" y="4411.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="8123" cy="4420.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8132" y="4424.0386">reset() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8113" x2="8720" y1="4430.6328" y2="4430.6328"/><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="3783.5" y="3216.5"/><ellipse cx="3798.5" cy="3232.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3801.4688,3238.1406 Q3800.8906,3238.4375 3800.25,3238.5781 Q3799.6094,3238.7344 3798.9063,3238.7344 Q3796.4063,3238.7344 3795.0781,3237.0938 Q3793.7656,3235.4375 3793.7656,3232.3125 Q3793.7656,3229.1875 3795.0781,3227.5313 Q3796.4063,3225.875 3798.9063,3225.875 Q3799.6094,3225.875 3800.25,3226.0313 Q3800.9063,3226.1875 3801.4688,3226.4844 L3801.4688,3229.2031 Q3800.8438,3228.625 3800.25,3228.3594 Q3799.6563,3228.0781 3799.0313,3228.0781 Q3797.6875,3228.0781 3797,3229.1563 Q3796.3125,3230.2188 3796.3125,3232.3125 Q3796.3125,3234.4063 3797,3235.4844 Q3797.6875,3236.5469 3799.0313,3236.5469 Q3799.6563,3236.5469 3800.25,3236.2813 Q3800.8438,3236 3801.4688,3235.4219 L3801.4688,3238.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="3812.5" y="3236.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3784.5" x2="3884.5" y1="3248.5" y2="3248.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3784.5" x2="3884.5" y1="3256.5" y2="3256.5"/><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="586" y="34"/><ellipse cx="710.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M713.7188,55.6406 Q713.1406,55.9375 712.5,56.0781 Q711.8594,56.2344 711.1563,56.2344 Q708.6563,56.2344 707.3281,54.5938 Q706.0156,52.9375 706.0156,49.8125 Q706.0156,46.6875 707.3281,45.0313 Q708.6563,43.375 711.1563,43.375 Q711.8594,43.375 712.5,43.5313 Q713.1563,43.6875 713.7188,43.9844 L713.7188,46.7031 Q713.0938,46.125 712.5,45.8594 Q711.9063,45.5781 711.2813,45.5781 Q709.9375,45.5781 709.25,46.6563 Q708.5625,47.7188 708.5625,49.8125 Q708.5625,51.9063 709.25,52.9844 Q709.9375,54.0469 711.2813,54.0469 Q711.9063,54.0469 712.5,53.7813 Q713.0938,53.5 713.7188,52.9219 L713.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="731.25" y="54.1543">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="587" x2="850" y1="66" y2="66"/><ellipse cx="597" cy="77" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="606" y="80.2104">T(const char * str, unsigned int len) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="587" x2="850" y1="86.8047" y2="86.8047"/><ellipse cx="597" cy="97.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="606" y="101.0151">len_ : const unsigned int</text><ellipse cx="597" cy="110.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="606" y="113.8198">str_ : const char *</text><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="192.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="8475.5" y="4784.5"/><ellipse cx="8738.25" cy="4800.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8741.2188,4806.1406 Q8740.6406,4806.4375 8740,4806.5781 Q8739.3594,4806.7344 8738.6563,4806.7344 Q8736.1563,4806.7344 8734.8281,4805.0938 Q8733.5156,4803.4375 8733.5156,4800.3125 Q8733.5156,4797.1875 8734.8281,4795.5313 Q8736.1563,4793.875 8738.6563,4793.875 Q8739.3594,4793.875 8740,4794.0313 Q8740.6563,4794.1875 8741.2188,4794.4844 L8741.2188,4797.2031 Q8740.5938,4796.625 8740,4796.3594 Q8739.4063,4796.0781 8738.7813,4796.0781 Q8737.4375,4796.0781 8736.75,4797.1563 Q8736.0625,4798.2188 8736.0625,4800.3125 Q8736.0625,4802.4063 8736.75,4803.4844 Q8737.4375,4804.5469 8738.7813,4804.5469 Q8739.4063,4804.5469 8740,4804.2813 Q8740.5938,4804 8741.2188,4803.4219 L8741.2188,4806.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="8758.75" y="4804.6543">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8476.5" x2="9042.5" y1="4816.5" y2="4816.5"/><ellipse cx="8486.5" cy="4827.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="8495.5" y="4830.7104">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="8486.5" cy="4840.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="8495.5" y="4843.5151">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="8486.5" cy="4853.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="8495.5" y="4856.3198">~Timer() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8476.5" x2="9042.5" y1="4862.9141" y2="4862.9141"/><ellipse cx="8486.5" cy="4873.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8495.5" y="4877.1245">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="8486.5" cy="4886.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8495.5" y="4889.9292">operator&gt;(const Timer &amp; t) const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8476.5" x2="9042.5" y1="4896.5234" y2="4896.5234"/><ellipse cx="8486.5" cy="4907.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8495.5" y="4910.7339">id() : TimerId</text><ellipse cx="8486.5" cy="4920.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="8495.5" y="4923.5386">isRepeat() : bool</text><ellipse cx="8486.5" cy="4933.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="8495.5" y="4936.3433">restart(const TimePoint &amp; now) : void</text><ellipse cx="8486.5" cy="4945.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="8495.5" y="4949.1479">run() const : void</text><ellipse cx="8486.5" cy="4958.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="8495.5" y="4961.9526">when() const : const TimePoint &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8476.5" x2="9042.5" y1="4968.5469" y2="4968.5469"/><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="8897.5" y="4335.5"/><ellipse cx="9029.75" cy="4351.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9032.7188,4357.1406 Q9032.1406,4357.4375 9031.5,4357.5781 Q9030.8594,4357.7344 9030.1563,4357.7344 Q9027.6563,4357.7344 9026.3281,4356.0938 Q9025.0156,4354.4375 9025.0156,4351.3125 Q9025.0156,4348.1875 9026.3281,4346.5313 Q9027.6563,4344.875 9030.1563,4344.875 Q9030.8594,4344.875 9031.5,4345.0313 Q9032.1563,4345.1875 9032.7188,4345.4844 L9032.7188,4348.2031 Q9032.0938,4347.625 9031.5,4347.3594 Q9030.9063,4347.0781 9030.2813,4347.0781 Q9028.9375,4347.0781 9028.25,4348.1563 Q9027.5625,4349.2188 9027.5625,4351.3125 Q9027.5625,4353.4063 9028.25,4354.4844 Q9028.9375,4355.5469 9030.2813,4355.5469 Q9030.9063,4355.5469 9031.5,4355.2813 Q9032.0938,4355 9032.7188,4354.4219 L9032.7188,4357.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="9050.25" y="4355.6543">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8898.5" x2="9282.5" y1="4367.5" y2="4367.5"/><ellipse cx="8908.5" cy="4378.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="8917.5" y="4381.7104">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8898.5" x2="9282.5" y1="4388.3047" y2="4388.3047"/><!--MD5=[126bacd0ed15124482552b070b9a279f]
class C_0000026148367911088234--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="86.4141" id="C_0000026148367911088234" style="stroke: #A80036; stroke-width: 1.5;" width="162" x="54.5" y="349"/><ellipse cx="95.6" cy="365" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M98.5688,370.6406 Q97.9906,370.9375 97.35,371.0781 Q96.7094,371.2344 96.0063,371.2344 Q93.5063,371.2344 92.1781,369.5938 Q90.8656,367.9375 90.8656,364.8125 Q90.8656,361.6875 92.1781,360.0313 Q93.5063,358.375 96.0063,358.375 Q96.7094,358.375 97.35,358.5313 Q98.0063,358.6875 98.5688,358.9844 L98.5688,361.7031 Q97.9438,361.125 97.35,360.8594 Q96.7563,360.5781 96.1313,360.5781 Q94.7875,360.5781 94.1,361.6563 Q93.4125,362.7188 93.4125,364.8125 Q93.4125,366.9063 94.1,367.9844 Q94.7875,369.0469 96.1313,369.0469 Q96.7563,369.0469 97.35,368.7813 Q97.9438,368.5 98.5688,367.9219 L98.5688,370.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="115.4" y="369.1543">ScopeExit</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="210.5" y="346"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="211.5" y="358.1387">F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="55.5" x2="215.5" y1="381" y2="381"/><ellipse cx="65.5" cy="392" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="74.5" y="395.2104">ScopeExit(F &amp;&amp; f) : void</text><ellipse cx="65.5" cy="404.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="74.5" y="408.0151">~ScopeExit() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="55.5" x2="215.5" y1="414.6094" y2="414.6094"/><ellipse cx="65.5" cy="425.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="74.5" y="428.8198">f_ : F</text><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="120.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="8755.5" y="332"/><ellipse cx="8909.25" cy="348" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8909.3594,343.3438 L8908.2031,348.4219 L8910.5313,348.4219 L8909.3594,343.3438 Z M8907.875,341.1094 L8910.8594,341.1094 L8914.2188,353.5 L8911.7656,353.5 L8911,350.4375 L8907.7188,350.4375 L8906.9688,353.5 L8904.5313,353.5 L8907.875,341.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="8929.75" y="352.1543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8756.5" x2="9138.5" y1="364" y2="364"/><ellipse cx="8766.5" cy="375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="8775.5" y="378.2104">~TaskQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8756.5" x2="9138.5" y1="384.8047" y2="384.8047"/><ellipse cx="8766.5" cy="395.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="8775.5" y="399.0151">getName() const : std::string</text><ellipse cx="8766.5" cy="408.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="8775.5" y="411.8198">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="8766.5" cy="421.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="8775.5" y="424.6245">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="8766.5" cy="434.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="8775.5" y="437.4292">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8756.5" x2="9138.5" y1="444.0234" y2="444.0234"/><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="145.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="8842" y="1137.5"/><ellipse cx="8991.25" cy="1153.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8994.2188,1159.1406 Q8993.6406,1159.4375 8993,1159.5781 Q8992.3594,1159.7344 8991.6563,1159.7344 Q8989.1563,1159.7344 8987.8281,1158.0938 Q8986.5156,1156.4375 8986.5156,1153.3125 Q8986.5156,1150.1875 8987.8281,1148.5313 Q8989.1563,1146.875 8991.6563,1146.875 Q8992.3594,1146.875 8993,1147.0313 Q8993.6563,1147.1875 8994.2188,1147.4844 L8994.2188,1150.2031 Q8993.5938,1149.625 8993,1149.3594 Q8992.4063,1149.0781 8991.7813,1149.0781 Q8990.4375,1149.0781 8989.75,1150.1563 Q8989.0625,1151.2188 8989.0625,1153.3125 Q8989.0625,1155.4063 8989.75,1156.4844 Q8990.4375,1157.5469 8991.7813,1157.5469 Q8992.4063,1157.5469 8993,1157.2813 Q8993.5938,1157 8994.2188,1156.4219 L8994.2188,1159.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="9011.75" y="1157.6543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8843" x2="9288" y1="1169.5" y2="1169.5"/><ellipse cx="8853" cy="1180.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="8862" y="1183.7104">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="8853" cy="1193.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="8862" y="1196.5151">~ConcurrentTaskQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="8843" x2="9288" y1="1203.1094" y2="1203.1094"/><ellipse cx="8853" cy="1214.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="8862" y="1217.3198">getName() const : std::string</text><ellipse cx="8853" cy="1226.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="8862" y="1230.1245">getTaskCount() : size_t</text><ellipse cx="8853" cy="1239.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="8862" y="1242.9292">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="8853" cy="1252.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="8862" y="1255.7339">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="8853" cy="1265.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="8862" y="1268.5386">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8843" x2="9288" y1="1275.1328" y2="1275.1328"/><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="158.4375" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="7954.5" y="1131.5"/><ellipse cx="8255.25" cy="1147.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8258.2188,1153.1406 Q8257.6406,1153.4375 8257,1153.5781 Q8256.3594,1153.7344 8255.6563,1153.7344 Q8253.1563,1153.7344 8251.8281,1152.0938 Q8250.5156,1150.4375 8250.5156,1147.3125 Q8250.5156,1144.1875 8251.8281,1142.5313 Q8253.1563,1140.875 8255.6563,1140.875 Q8256.3594,1140.875 8257,1141.0313 Q8257.6563,1141.1875 8258.2188,1141.4844 L8258.2188,1144.2031 Q8257.5938,1143.625 8257,1143.3594 Q8256.4063,1143.0781 8255.7813,1143.0781 Q8254.4375,1143.0781 8253.75,1144.1563 Q8253.0625,1145.2188 8253.0625,1147.3125 Q8253.0625,1149.4063 8253.75,1150.4844 Q8254.4375,1151.5469 8255.7813,1151.5469 Q8256.4063,1151.5469 8257,1151.2813 Q8257.5938,1151 8258.2188,1150.4219 L8258.2188,1153.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="8275.75" y="1151.6543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7955.5" x2="8663.5" y1="1163.5" y2="1163.5"/><ellipse cx="7965.5" cy="1174.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="7974.5" y="1177.7104">AsyncFileLogger() : void</text><ellipse cx="7965.5" cy="1187.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7974.5" y="1190.5151">~AsyncFileLogger() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7955.5" x2="8663.5" y1="1197.1094" y2="1197.1094"/><ellipse cx="7965.5" cy="1208.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7974.5" y="1211.3198">flush() : void</text><ellipse cx="7965.5" cy="1220.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7974.5" y="1224.1245">output(const char * msg, const uint64_t len) : void</text><ellipse cx="7965.5" cy="1233.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="7974.5" y="1236.9292">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="7965.5" cy="1246.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="7974.5" y="1249.7339">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="7965.5" cy="1259.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7974.5" y="1262.5386">setSwitchOnLimitOnly(bool flag = true) : void</text><ellipse cx="7965.5" cy="1272.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7974.5" y="1275.3433">startLogging() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7955.5" x2="8663.5" y1="1281.9375" y2="1281.9375"/><!--MD5=[d6dc5f302a37b6f3cec78b5e6a6182c8]
class C_0001453238540802541239--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="150.4375" id="C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.5;" width="852" x="7707.5" y="317"/><ellipse cx="8043.25" cy="333" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8046.2188,338.6406 Q8045.6406,338.9375 8045,339.0781 Q8044.3594,339.2344 8043.6563,339.2344 Q8041.1563,339.2344 8039.8281,337.5938 Q8038.5156,335.9375 8038.5156,332.8125 Q8038.5156,329.6875 8039.8281,328.0313 Q8041.1563,326.375 8043.6563,326.375 Q8044.3594,326.375 8045,326.5313 Q8045.6563,326.6875 8046.2188,326.9844 L8046.2188,329.7031 Q8045.5938,329.125 8045,328.8594 Q8044.4063,328.5781 8043.7813,328.5781 Q8042.4375,328.5781 8041.75,329.6563 Q8041.0625,330.7188 8041.0625,332.8125 Q8041.0625,334.9063 8041.75,335.9844 Q8042.4375,337.0469 8043.7813,337.0469 Q8044.4063,337.0469 8045,336.7813 Q8045.5938,336.5 8046.2188,335.9219 L8046.2188,338.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="8063.75" y="337.1543">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7708.5" x2="8558.5" y1="349" y2="349"/><ellipse cx="7718.5" cy="360" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="826" x="7727.5" y="363.2104">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName, bool switchOnLimitOnly = false) : void</text><ellipse cx="7718.5" cy="372.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7727.5" y="376.0151">flush() : void</text><ellipse cx="7718.5" cy="385.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7727.5" y="388.8198">getLength() : uint64_t</text><ellipse cx="7718.5" cy="398.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7727.5" y="401.6245">open() : void</text><ellipse cx="7718.5" cy="411.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="7727.5" y="414.4292">operator bool() const : bool</text><ellipse cx="7718.5" cy="424.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="7727.5" y="427.2339">switchLog(bool openNewOne) : void</text><ellipse cx="7718.5" cy="436.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7727.5" y="440.0386">writeLog(const StringPtr buf) : void</text><ellipse cx="7718.5" cy="449.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="7727.5" y="452.8433">~LoggerFile() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7708.5" x2="8558.5" y1="459.4375" y2="459.4375"/><!--MD5=[fed249d7874c77c08dcf893861b9a747]
class C_0001166594284895168875--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="60.8047" id="C_0001166594284895168875" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="251.5" y="361.5"/><ellipse cx="289" cy="377.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M291.9688,383.1406 Q291.3906,383.4375 290.75,383.5781 Q290.1094,383.7344 289.4063,383.7344 Q286.9063,383.7344 285.5781,382.0938 Q284.2656,380.4375 284.2656,377.3125 Q284.2656,374.1875 285.5781,372.5313 Q286.9063,370.875 289.4063,370.875 Q290.1094,370.875 290.75,371.0313 Q291.4063,371.1875 291.9688,371.4844 L291.9688,374.2031 Q291.3438,373.625 290.75,373.3594 Q290.1563,373.0781 289.5313,373.0781 Q288.1875,373.0781 287.5,374.1563 Q286.8125,375.2188 286.8125,377.3125 Q286.8125,379.4063 287.5,380.4844 Q288.1875,381.5469 289.5313,381.5469 Q290.1563,381.5469 290.75,381.2813 Q291.3438,381 291.9688,380.4219 L291.9688,383.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="308" y="381.6543">utils::Hash128</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="252.5" x2="422.5" y1="393.5" y2="393.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="252.5" x2="422.5" y1="401.5" y2="401.5"/><ellipse cx="262.5" cy="412.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="271.5" y="415.7104">bytes : unsigned char[16]</text><!--MD5=[021cb10fbb8ce3370cd11a9cd6334df8]
class C_0001016092423778930091--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="60.8047" id="C_0001016092423778930091" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="458.5" y="361.5"/><ellipse cx="496" cy="377.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M498.9688,383.1406 Q498.3906,383.4375 497.75,383.5781 Q497.1094,383.7344 496.4063,383.7344 Q493.9063,383.7344 492.5781,382.0938 Q491.2656,380.4375 491.2656,377.3125 Q491.2656,374.1875 492.5781,372.5313 Q493.9063,370.875 496.4063,370.875 Q497.1094,370.875 497.75,371.0313 Q498.4063,371.1875 498.9688,371.4844 L498.9688,374.2031 Q498.3438,373.625 497.75,373.3594 Q497.1563,373.0781 496.5313,373.0781 Q495.1875,373.0781 494.5,374.1563 Q493.8125,375.2188 493.8125,377.3125 Q493.8125,379.4063 494.5,380.4844 Q495.1875,381.5469 496.5313,381.5469 Q497.1563,381.5469 497.75,381.2813 Q498.3438,381 498.9688,380.4219 L498.9688,383.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="515" y="381.6543">utils::Hash160</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="459.5" x2="629.5" y1="393.5" y2="393.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="459.5" x2="629.5" y1="401.5" y2="401.5"/><ellipse cx="469.5" cy="412.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="478.5" y="415.7104">bytes : unsigned char[20]</text><!--MD5=[8c8e5215c80d1cd8a8ee6133aa829fcf]
class C_0000080756732781028581--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="60.8047" id="C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="9816.5" y="361.5"/><ellipse cx="9854" cy="377.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9856.9688,383.1406 Q9856.3906,383.4375 9855.75,383.5781 Q9855.1094,383.7344 9854.4063,383.7344 Q9851.9063,383.7344 9850.5781,382.0938 Q9849.2656,380.4375 9849.2656,377.3125 Q9849.2656,374.1875 9850.5781,372.5313 Q9851.9063,370.875 9854.4063,370.875 Q9855.1094,370.875 9855.75,371.0313 Q9856.4063,371.1875 9856.9688,371.4844 L9856.9688,374.2031 Q9856.3438,373.625 9855.75,373.3594 Q9855.1563,373.0781 9854.5313,373.0781 Q9853.1875,373.0781 9852.5,374.1563 Q9851.8125,375.2188 9851.8125,377.3125 Q9851.8125,379.4063 9852.5,380.4844 Q9853.1875,381.5469 9854.5313,381.5469 Q9855.1563,381.5469 9855.75,381.2813 Q9856.3438,381 9856.9688,380.4219 L9856.9688,383.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="9873" y="381.6543">utils::Hash256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9817.5" x2="9987.5" y1="393.5" y2="393.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9817.5" x2="9987.5" y1="401.5" y2="401.5"/><ellipse cx="9827.5" cy="412.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="9836.5" y="415.7104">bytes : unsigned char[32]</text><!--MD5=[a74ca64b85c4b088ee21340913b25922]
class C_0000195316585713148470--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="99.2188" id="C_0000195316585713148470" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="9824.5" y="27.5"/><ellipse cx="9853.9" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9856.8688,49.1406 Q9856.2906,49.4375 9855.65,49.5781 Q9855.0094,49.7344 9854.3063,49.7344 Q9851.8063,49.7344 9850.4781,48.0938 Q9849.1656,46.4375 9849.1656,43.3125 Q9849.1656,40.1875 9850.4781,38.5313 Q9851.8063,36.875 9854.3063,36.875 Q9855.0094,36.875 9855.65,37.0313 Q9856.3063,37.1875 9856.8688,37.4844 L9856.8688,40.2031 Q9856.2438,39.625 9855.65,39.3594 Q9855.0563,39.0781 9854.4313,39.0781 Q9853.0875,39.0781 9852.4,40.1563 Q9851.7125,41.2188 9851.7125,43.3125 Q9851.7125,45.4063 9852.4,46.4844 Q9853.0875,47.5469 9854.4313,47.5469 Q9855.0563,47.5469 9855.65,47.2813 Q9856.2438,47 9856.8688,46.4219 L9856.8688,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="9871.1" y="47.6543">utils::RngState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9825.5" x2="9979.5" y1="59.5" y2="59.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9825.5" x2="9979.5" y1="67.5" y2="67.5"/><ellipse cx="9835.5" cy="78.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="9844.5" y="81.7104">counter : uint64_t</text><ellipse cx="9835.5" cy="91.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="9844.5" y="94.5151">prev : utils::Hash256</text><ellipse cx="9835.5" cy="104.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="9844.5" y="107.3198">secret : utils::Hash256</text><ellipse cx="9835.5" cy="116.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="9844.5" y="120.1245">time : int64_t</text><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="184.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="3225" y="1118.5"/><ellipse cx="3349.75" cy="1134.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3352.7188,1140.1406 Q3352.1406,1140.4375 3351.5,1140.5781 Q3350.8594,1140.7344 3350.1563,1140.7344 Q3347.6563,1140.7344 3346.3281,1139.0938 Q3345.0156,1137.4375 3345.0156,1134.3125 Q3345.0156,1131.1875 3346.3281,1129.5313 Q3347.6563,1127.875 3350.1563,1127.875 Q3350.8594,1127.875 3351.5,1128.0313 Q3352.1563,1128.1875 3352.7188,1128.4844 L3352.7188,1131.2031 Q3352.0938,1130.625 3351.5,1130.3594 Q3350.9063,1130.0781 3350.2813,1130.0781 Q3348.9375,1130.0781 3348.25,1131.1563 Q3347.5625,1132.2188 3347.5625,1134.3125 Q3347.5625,1136.4063 3348.25,1137.4844 Q3348.9375,1138.5469 3350.2813,1138.5469 Q3350.9063,1138.5469 3351.5,1138.2813 Q3352.0938,1138 3352.7188,1137.4219 L3352.7188,1140.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="3370.25" y="1138.6543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3226" x2="3587" y1="1150.5" y2="1150.5"/><ellipse cx="3236" cy="1161.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="3245" y="1164.7104">SerialTaskQueue() = deleted : void</text><ellipse cx="3236" cy="1174.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="3245" y="1177.5151">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="3236" cy="1187.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3245" y="1190.3198">~SerialTaskQueue() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3226" x2="3587" y1="1196.9141" y2="1196.9141"/><ellipse cx="3236" cy="1207.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3245" y="1211.1245">getName() const : std::string</text><ellipse cx="3236" cy="1220.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3245" y="1223.9292">getTaskCount() : size_t</text><ellipse cx="3236" cy="1233.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3245" y="1236.7339">isRuningTask() : bool</text><ellipse cx="3236" cy="1246.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="3245" y="1249.5386">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="3236" cy="1259.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="3245" y="1262.3433">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="3236" cy="1271.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3245" y="1275.1479">stop() : void</text><ellipse cx="3236" cy="1284.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3245" y="1287.9526">waitAllTasksFinished() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3226" x2="3587" y1="1294.5469" y2="1294.5469"/><!--MD5=[76c042830f3e16645cab5271e28ba169]
class C_0000089957972753266749--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="73.6094" id="C_0000089957972753266749" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="6" y="1173.5"/><ellipse cx="21" cy="1189.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,1195.1406 Q23.3906,1195.4375 22.75,1195.5781 Q22.1094,1195.7344 21.4063,1195.7344 Q18.9063,1195.7344 17.5781,1194.0938 Q16.2656,1192.4375 16.2656,1189.3125 Q16.2656,1186.1875 17.5781,1184.5313 Q18.9063,1182.875 21.4063,1182.875 Q22.1094,1182.875 22.75,1183.0313 Q23.4063,1183.1875 23.9688,1183.4844 L23.9688,1186.2031 Q23.3438,1185.625 22.75,1185.3594 Q22.1563,1185.0781 21.5313,1185.0781 Q20.1875,1185.0781 19.5,1186.1563 Q18.8125,1187.2188 18.8125,1189.3125 Q18.8125,1191.4063 19.5,1192.4844 Q20.1875,1193.5469 21.5313,1193.5469 Q22.1563,1193.5469 22.75,1193.2813 Q23.3438,1193 23.9688,1192.4219 L23.9688,1195.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="35" y="1193.6543">InetAddress::(anonymous_2039330)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1205.5" y2="1205.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1213.5" y2="1213.5"/><ellipse cx="17" cy="1224.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="1227.7104">addr6_ : struct sockaddr_in6</text><ellipse cx="17" cy="1237.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="1240.5151">addr_ : struct sockaddr_in</text><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="337.7031" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="953" x="5600" y="2544"/><ellipse cx="6043.75" cy="2560" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6046.7188,2565.6406 Q6046.1406,2565.9375 6045.5,2566.0781 Q6044.8594,2566.2344 6044.1563,2566.2344 Q6041.6563,2566.2344 6040.3281,2564.5938 Q6039.0156,2562.9375 6039.0156,2559.8125 Q6039.0156,2556.6875 6040.3281,2555.0313 Q6041.6563,2553.375 6044.1563,2553.375 Q6044.8594,2553.375 6045.5,2553.5313 Q6046.1563,2553.6875 6046.7188,2553.9844 L6046.7188,2556.7031 Q6046.0938,2556.125 6045.5,2555.8594 Q6044.9063,2555.5781 6044.2813,2555.5781 Q6042.9375,2555.5781 6042.25,2556.6563 Q6041.5625,2557.7188 6041.5625,2559.8125 Q6041.5625,2561.9063 6042.25,2562.9844 Q6042.9375,2564.0469 6044.2813,2564.0469 Q6044.9063,2564.0469 6045.5,2563.7813 Q6046.0938,2563.5 6046.7188,2562.9219 L6046.7188,2565.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="6064.25" y="2564.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5601" x2="6552" y1="2576" y2="2576"/><ellipse cx="5611" cy="2587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="5620" y="2590.2104">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="5611" cy="2599.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5620" y="2603.0151">~TcpClient() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5601" x2="6552" y1="2609.6094" y2="2609.6094"/><ellipse cx="5611" cy="2620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5620" y="2623.8198">connect() : void</text><ellipse cx="5611" cy="2633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5620" y="2636.6245">connection() const : TcpConnectionPtr</text><ellipse cx="5611" cy="2646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5620" y="2649.4292">disconnect() : void</text><ellipse cx="5611" cy="2659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5620" y="2662.2339">enableRetry() : void</text><ellipse cx="5611" cy="2671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5620" y="2675.0386">enableSSL(TLSPolicyPtr policy) : void</text><ellipse cx="5611" cy="2684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="927" x="5620" y="2687.8433">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="5620" y="2700.6479">{}, const std::string &amp; certPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5818" y="2700.6479">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="6042" y="2700.6479">, const std::string &amp; caPath = "") : void</text><ellipse cx="5611" cy="2710.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5620" y="2713.4526">getLoop() const : EventLoop *</text><ellipse cx="5611" cy="2723.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5620" y="2726.2573">name() const : const std::string &amp;</text><ellipse cx="5611" cy="2735.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5620" y="2739.062">retry() const : bool</text><ellipse cx="5611" cy="2748.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5620" y="2751.8667">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5611" cy="2761.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5620" y="2764.6714">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5611" cy="2774.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="5620" y="2777.4761">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="5611" cy="2787.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5620" y="2790.2808">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5611" cy="2799.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="5620" y="2803.0854">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5611" cy="2812.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="5620" y="2815.8901">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="5611" cy="2825.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5620" y="2828.6948">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="5611" cy="2838.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5620" y="2841.4995">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5611" cy="2851.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5620" y="2854.3042">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5611" cy="2863.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5620" y="2867.1089">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5601" x2="6552" y1="2873.7031" y2="2873.7031"/><!--MD5=[36897566f721d8b8c541721979fa9001]
class C_0001278908569830571044--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="60.8047" id="C_0001278908569830571044" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="6362" y="2081.5"/><ellipse cx="6377" cy="2097.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6379.9688,2103.1406 Q6379.3906,2103.4375 6378.75,2103.5781 Q6378.1094,2103.7344 6377.4063,2103.7344 Q6374.9063,2103.7344 6373.5781,2102.0938 Q6372.2656,2100.4375 6372.2656,2097.3125 Q6372.2656,2094.1875 6373.5781,2092.5313 Q6374.9063,2090.875 6377.4063,2090.875 Q6378.1094,2090.875 6378.75,2091.0313 Q6379.4063,2091.1875 6379.9688,2091.4844 L6379.9688,2094.2031 Q6379.3438,2093.625 6378.75,2093.3594 Q6378.1563,2093.0781 6377.5313,2093.0781 Q6376.1875,2093.0781 6375.5,2094.1563 Q6374.8125,2095.2188 6374.8125,2097.3125 Q6374.8125,2099.4063 6375.5,2100.4844 Q6376.1875,2101.5469 6377.5313,2101.5469 Q6378.1563,2101.5469 6378.75,2101.2813 Q6379.3438,2101 6379.9688,2100.4219 L6379.9688,2103.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="6391" y="2101.6543">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6363" x2="6544" y1="2113.5" y2="2113.5"/><ellipse cx="6373" cy="2124.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6382" y="2127.7104">IgnoreSigPipe() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6363" x2="6544" y1="2134.3047" y2="2134.3047"/><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="196.8516" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="6695" y="3142"/><ellipse cx="6901.75" cy="3158" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6904.7188,3163.6406 Q6904.1406,3163.9375 6903.5,3164.0781 Q6902.8594,3164.2344 6902.1563,3164.2344 Q6899.6563,3164.2344 6898.3281,3162.5938 Q6897.0156,3160.9375 6897.0156,3157.8125 Q6897.0156,3154.6875 6898.3281,3153.0313 Q6899.6563,3151.375 6902.1563,3151.375 Q6902.8594,3151.375 6903.5,3151.5313 Q6904.1563,3151.6875 6904.7188,3151.9844 L6904.7188,3154.7031 Q6904.0938,3154.125 6903.5,3153.8594 Q6902.9063,3153.5781 6902.2813,3153.5781 Q6900.9375,3153.5781 6900.25,3154.6563 Q6899.5625,3155.7188 6899.5625,3157.8125 Q6899.5625,3159.9063 6900.25,3160.9844 Q6900.9375,3162.0469 6902.2813,3162.0469 Q6902.9063,3162.0469 6903.5,3161.7813 Q6904.0938,3161.5 6904.7188,3160.9219 L6904.7188,3163.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="6922.25" y="3162.1543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6696" x2="7181" y1="3174" y2="3174"/><ellipse cx="6706" cy="3185" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="6715" y="3188.2104">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="6706" cy="3197.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="6715" y="3201.0151">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="6706" cy="3210.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6715" y="3213.8198">~Connector() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6696" x2="7181" y1="3220.4141" y2="3220.4141"/><ellipse cx="6706" cy="3231.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="6715" y="3234.6245">restart() : void</text><ellipse cx="6706" cy="3244.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="6715" y="3247.4292">serverAddress() const : const InetAddress &amp;</text><ellipse cx="6706" cy="3257.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="6715" y="3260.2339">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="6706" cy="3269.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="6715" y="3273.0386">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="6706" cy="3282.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="6715" y="3285.8433">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="6706" cy="3295.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="6715" y="3298.6479">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="6706" cy="3308.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="6715" y="3311.4526">start() : void</text><ellipse cx="6706" cy="3321.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="6715" y="3324.2573">stop() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6696" x2="7181" y1="3330.8516" y2="3330.8516"/><!--MD5=[e79edad503674c7fc854de75a75b6c70]
class C_0000000982196670174162--><rect fill="#FEFECE" filter="url(#f19up9kfre2ukq)" height="86.4141" id="C_0000000982196670174162" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="7085.5" y="2670"/><ellipse cx="7100.5" cy="2686" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7104.6094,2692 L7096.8906,2692 L7096.8906,2679.6094 L7104.6094,2679.6094 L7104.6094,2681.7656 L7099.3438,2681.7656 L7099.3438,2684.4375 L7104.1094,2684.4375 L7104.1094,2686.5938 L7099.3438,2686.5938 L7099.3438,2689.8438 L7104.6094,2689.8438 L7104.6094,2692 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="7114.5" y="2690.1543">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7086.5" x2="7230.5" y1="2702" y2="2702"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="7091.5" y="2716.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="7091.5" y="2729.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="7091.5" y="2741.8198">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7086.5" x2="7230.5" y1="2748.4141" y2="2748.4141"/><!--MD5=[71937ae761f89ce4d5c0645a62fc4977]
reverse link C_0001897340460211641725 to C_0000673025168912921705--><path d="M7484.5,3988.34 C7484.5,4106.42 7484.5,4259.91 7484.5,4328.78 " fill="none" id="C_0001897340460211641725&lt;-C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7484.5,3975.22,7480.5,3981.22,7484.5,3987.22,7488.5,3981.22,7484.5,3975.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M7251.99,78.03 C6745.22,78.48 3851.77,85.12 1496.5,176 C1323.42,182.68 849.53,109.72 718.5,223 C660.8,272.88 683.5,314.73 683.5,391 C683.5,391 683.5,391 683.5,2714 C683.5,3010.18 1081.55,3154.14 1295.74,3210.17 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.34,71.03,7272.34,78.01,7252.35,85.03,7252.34,71.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M1360.64,2737.26 C1369.27,2801.11 1393.81,2982.76 1410.88,3109.12 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1417.87,3108.53,1413.61,3129.29,1403.99,3110.41,1417.87,3108.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M1724.25,813.29 C1679.29,998.77 1596.5,1385.5 1596.5,1718 C1596.5,1718 1596.5,1718 1596.5,2714 C1596.5,2854.73 1541.16,3007.02 1494,3111.25 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1500.33,3114.24,1485.61,3129.49,1487.61,3108.39,1500.33,3114.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M7251.94,78.09 C6595.61,78.98 1992.39,88.4 1882.5,176 C1759.7,273.89 1741.87,467.96 1744.26,590.75 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.33,71.09,7272.34,78.06,7252.35,85.09,7252.33,71.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M1838.4,1830.21 C1862.41,2043.02 1892.94,2521.31 1742.5,2882 C1705.62,2970.41 1637.72,3052.09 1574.47,3114.98 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1578.99,3120.36,1559.79,3129.33,1569.2,3110.35,1578.99,3120.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M7251.83,77.98 C6599.42,77.96 2054.7,81.26 1953.5,176 C1927.3,200.53 1854.22,1259.12 1830.81,1607.87 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.12,70.98,7272.12,77.98,7252.12,84.98,7252.12,70.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M1334.86,2301.1 C1342.72,2443.68 1352.74,2625.54 1356.23,2688.96 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1334.13,2287.87,1330.4659,2294.0809,1334.7898,2299.8518,1338.4538,2293.641,1334.13,2287.87" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1349.5" y="2451.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="1359.5" y="2458.5669">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M7251.72,77.77 C6625.25,76.1 2411.69,68.97 1859.5,176 C1802.05,187.14 1776.73,180.5 1736.5,223 C1618.42,347.73 1660.87,424.55 1618.5,591 C1509.37,1019.73 1553.49,1140.26 1489.5,1578 C1473.03,1690.65 1476.12,1720.92 1443.5,1830 C1433.03,1865.02 1419.55,1901.58 1405.46,1936.3 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.1,70.77,7272.08,77.82,7252.06,84.77,7252.1,70.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b07c5dc99de1fec75297894171ba3abd]
link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1099.48,516.05 C1039.39,771.19 930.74,1372.23 1105.5,1830 C1119.01,1865.39 1138.59,1899.93 1160.57,1932.01 " fill="none" id="C_0002053752992472264214-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1163.54,1936.31,1161.7146,1926.6318,1160.6977,1932.1965,1155.133,1931.1795,1163.54,1936.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1120.12,529.37 C1104.6,751.08 1085.37,1202.69 1148.5,1578 C1169.17,1700.89 1213.1,1834 1251.9,1936.45 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1121.07,516.08,1116.6513,521.7787,1120.2122,528.0493,1124.6309,522.3506,1121.07,516.08" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1154.5,1206.0664,1158.5,1210.0664,1154.5,1214.0664,1150.5,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1161.5" y="1215.0669">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M1274.5,525.83 C1353.32,608.63 1444.16,722.18 1489.5,843 C1652.35,1276.92 1684.5,2456.03 1684.5,2919.5 C1684.5,2919.5 1684.5,2919.5 1684.5,3833 C1684.5,3924.74 1835.68,4041.34 2002.3,4141.99 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1265.45,516.39,1266.721,523.4882,1273.762,525.0451,1272.491,517.9469,1265.45,516.39" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1690.5,2708.5664,1694.5,2712.5664,1690.5,2716.5664,1686.5,2712.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1697.5" y="2717.5669">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M1167.88,521.02 C1220.58,706.51 1315.67,1041.16 1350.37,1163.29 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1166.48,516.12,1165.1064,525.8726,1167.8536,520.9276,1172.7986,523.6748,1166.48,516.12" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1253.5" cy="702.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="1260.5" y="706.5669">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M7251.96,78.32 C6585.66,81.16 1843,103.9 1553.5,176 C1475.81,195.35 1396.16,231.09 1327.29,267.94 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.18,71.32,7272.21,78.23,7252.24,85.32,7252.18,71.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2546ce8b172ab3415fe98599ef34be58]
link C_0002131283840621188296 to C_0002053752992472264214--><path d="M7644.37,137.73 C7638.56,140.96 7632.58,143.79 7626.5,146 C7488.2,196.33 5125.58,217.65 4978.5,223 C3726.17,268.55 2245.2,337.47 1541.88,371.11 " fill="none" id="C_0002131283840621188296-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1534.6909" cy="371.4591" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1542.6819" x2="1526.7" y1="371.0782" y2="371.84"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1535.0718" x2="1534.31" y1="379.45" y2="363.4682"/><!--MD5=[93922583ef61aedd7e4cac59826dbbbd]
link C_0000979080797342806546 to C_0002053752992472264214--><path d="M7861.24,126.53 C7840.48,134.28 7818.6,141.29 7797.5,146 C7452.06,223.17 7356.21,179.93 7002.5,193 C6103.46,226.22 5877.77,196.71 4978.5,223 C3725.88,259.63 2245.04,332.69 1541.82,369.19 " fill="none" id="C_0000979080797342806546-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1534.6294" cy="369.5687" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1542.6188" x2="1526.64" y1="369.1574" y2="369.98"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1535.0407" x2="1534.2181" y1="377.5581" y2="361.5793"/><!--MD5=[1e053e636c9893712341ad3f59f5b138]
link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1360.44,1257.57 C1355.61,1331.47 1346.2,1481.08 1340.5,1608 C1335.69,1715.19 1331.81,1835.28 1329.08,1931.24 " fill="none" id="C_0000716430590791918928-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1328.93,1936.37,1333.1861,1927.4883,1329.0732,1931.3721,1325.1894,1927.2591,1328.93,1936.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1361.09,1270.74 C1356.6,1380.88 1346.57,1624.63 1337.5,1830 C1335.98,1864.4 1334.31,1901.16 1332.69,1936.38 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1361.63,1257.67,1357.3893,1263.5024,1361.142,1269.6601,1365.3827,1263.8277,1361.63,1257.67" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1350.5" y="1716.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1360.5" y="1723.5669">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M7251.93,77.99 C6578.07,78.1 1738.19,82.11 1624.5,176 C1489.68,287.34 1584.9,391.12 1543.5,561 C1488.03,788.61 1409.03,1057.48 1377.39,1163.37 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.4,70.99,7272.4,77.99,7252.4,84.99,7252.4,70.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M7252.39,78.34 C6706.13,80.96 3413.82,99.72 2416.5,176 C2259.13,188.04 2172.35,107.76 2064.5,223 C1942.22,353.66 1974.74,1651.88 1957.5,1830 C1927.97,2135.02 1910.54,2210.18 1870.5,2514 C1775.1,3237.99 1697.95,3413.42 1648.5,4142 C1635.02,4340.65 1606.79,4395.31 1648.5,4590 C1665.87,4671.08 1707.75,4756.88 1739.31,4813.83 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.41,71.34,7272.44,78.25,7252.47,85.34,7252.41,71.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ffc230e37c5c4ce1f573c198139c7155]
link C_0000223701637084171141 to C_0000912667184903365399--><path d="M1778.5,4422.33 C1778.5,4513.03 1778.5,4693.7 1778.5,4798.72 " fill="none" id="C_0000223701637084171141-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1778.5" cy="4805.96" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1778.5" x2="1778.5" y1="4797.96" y2="4813.96"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1786.5" x2="1770.5" y1="4805.96" y2="4805.96"/><!--MD5=[f80622055e9d57665d4031fadfdf3e69]
link C_0002185746167032660910 to C_0000912667184903365399--><path d="M3155.67,4390.05 C3125.04,4435.72 3050.09,4537.77 2960.5,4590 C2612.3,4792.99 2126.68,4854.21 1901.8,4872.23 " fill="none" id="C_0002185746167032660910-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1902.32,4879.21,1881.84,4873.77,1901.24,4865.25,1902.32,4879.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M5618.03,3839.53 C5115.91,3856.99 3967.74,3919.93 3031.5,4142 C3004.15,4148.49 2976.35,4155.88 2948.46,4163.94 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2943.61,4165.35,2953.3653,4166.7045,2948.4149,4163.967,2951.1524,4159.0166,2943.61,4165.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6030.36,4065.26 C6043.58,4090.51 6055.64,4116.36 6065.5,4142 C6084.03,4190.17 6130.68,4461.95 6163.48,4661.64 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6164.3,4666.64,6166.7839,4657.1095,6163.4873,4661.7065,6158.8903,4658.4099,6164.3,4666.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6093.73,4065.43 C6109.56,4090.06 6123.57,4115.74 6134.5,4142 C6203.15,4306.89 6216.13,4510.11 6213.64,4661.44 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6213.55,4666.8,6217.7037,4657.8699,6213.6357,4661.8007,6209.7049,4657.7328,6213.55,4666.8" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6216.5" y="4363.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="6226.5" y="4370.5669">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6128.75,3941.02 C6211.22,3989.62 6293.24,4055.83 6339.5,4142 C6433.67,4317.43 6384.24,4395.98 6339.5,4590 C6333.97,4614 6326.16,4638.32 6317.03,4662.13 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6315.18,4666.89,6322.1741,4659.9559,6316.995,4662.2311,6314.7198,4657.0519,6315.18,4666.89" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6396.5" y="4363.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="6406.5" y="4370.5669">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6141.15,3880.15 C6291.61,3921.82 6467.26,3999.28 6559.5,4142 C6667.58,4309.22 6645.65,4410.49 6559.5,4590 C6521.53,4669.13 6450.22,4733.44 6380.94,4781.18 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6128.52,3876.72,6133.2645,3882.1504,6140.102,3879.8595,6135.3575,3874.4291,6128.52,3876.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6636.5" y="4363.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="6646.5" y="4370.5669">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6016.42,4805.3 C5932.52,4758.44 5847.68,4687.98 5830.5,4590 C5800.32,4417.81 5813.02,4220.56 5832.24,4070.58 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5832.92,4065.27,5827.7958,4073.6808,5832.277,4070.2285,5835.7293,4074.7097,5832.92,4065.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6016.37,4745.18 C5970.25,4701.25 5926.47,4648.51 5900.5,4590 C5860.62,4500.17 5858.11,4257.16 5862.92,4070.48 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5863.06,4065.25,5858.83,4074.1442,5862.9315,4070.2483,5866.8273,4074.3498,5863.06,4065.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5903.5" y="4363.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5913.5" y="4370.5669">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6025.58,4662.46 C6012.3,4638.91 6000.57,4614.55 5991.5,4590 C5922.26,4402.51 5986.03,4339.03 5952.5,4142 C5948.25,4117.03 5943,4091.11 5937.23,4065.39 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6028.07,4666.85,6027.0951,4657.0495,6025.597,4662.5044,6020.1421,4661.0063,6028.07,4666.85" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5997.5" cy="4366.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6004.5" y="4370.5669">«friend»</text><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M5673.9,4076.37 C5669.98,4082.58 5666.17,4088.79 5662.5,4095 C5626.32,4156.18 5596.47,4231.37 5576.87,4286.85 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5681.07,4065.2,5674.4619,4068.0867,5674.5849,4075.2967,5681.193,4072.4101,5681.07,4065.2" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5665.5" y="4101.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5675.5" y="4108.0669">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5607.25,4286.82 C5641.71,4237.48 5686.14,4171.95 5722.5,4112 C5730.85,4098.24 5739.26,4083.98 5747.61,4069.52 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5750.2,4065.03,5742.2577,4070.854,5747.7162,4069.3695,5749.2008,4074.828,5750.2,4065.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5536.66,4286.83 C5529.83,4230.65 5528.67,4154.62 5557.5,4095 C5572.14,4064.73 5592.11,4036.72 5614.96,4011.16 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5618.35,4007.41,5609.3476,4011.4047,5614.9973,4011.1194,5615.2826,4016.769,5618.35,4007.41" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5560.5" y="4101.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5570.5" y="4108.0669">ownerLoop_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M5605.01,3865.42 C5269.61,3908 4678.99,3989.86 4179.5,4095 C3826.16,4169.37 3412.03,4291.4 3245.46,4341.95 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5618.32,3863.73,5611.8662,3860.513,5606.4145,3865.233,5612.8683,3868.45,5618.32,3863.73" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4182.5" y="4101.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4192.5" y="4108.0669">funcs_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M5605.24,3885.8 C5028.52,3999.31 3690.31,4262.69 3287.36,4342 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5618.3,3883.23,5611.6392,3880.4671,5606.527,3885.5529,5613.1878,3888.3158,5618.3,3883.23" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4525.5" y="4101.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4535.5" y="4108.0669">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M6141.12,3905.16 C6309.7,3953.19 6530.75,4020.92 6721.5,4095 C6737.99,4101.41 6740.31,4107.82 6757.5,4112 C6938.78,4156.07 7412.05,4114 7596.5,4142 C7806.9,4173.94 8040.55,4240.69 8204.44,4292.88 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6128.56,3901.59,6133.2377,3907.0781,6140.1028,3904.871,6135.425,3899.3829,6128.56,3901.59" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6760.5" y="4101.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="6770.5" y="4108.0669">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M8203.09,4292.92 C8039.23,4241.02 7806.24,4174.64 7596.5,4142 C7291.44,4094.53 7204.71,4175.13 6902.5,4112 C6881.98,4107.71 6878.44,4101.48 6858.5,4095 C6615.58,4016.02 6333.42,3942.81 6133.52,3893.97 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6128.51,3892.75,6136.3046,3898.7703,6133.3674,3893.9358,6138.2019,3890.9985,6128.51,3892.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M8205.32,4292.94 C8041.41,4240.59 7807.33,4173.62 7596.5,4142 C7391.79,4111.3 6865.52,4165.27 6665.5,4112 C6649.94,4107.86 6648.27,4101.42 6633.5,4095 C6470.8,4024.26 6282.29,3959.17 6133.71,3911.56 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.89,3910.02,6136.2406,3916.5751,6133.6516,3911.5454,6138.6813,3908.9565,6128.89,3910.02" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6671.5,4099.0664,6675.5,4103.0664,6671.5,4107.0664,6667.5,4103.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6678.5" y="4108.0669">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M6128.97,3792.87 C6150.26,3801.29 6163.5,3814.33 6163.5,3832 C6163.5,3848.29 6152.25,3860.64 6133.81,3869.07 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.97,3871.13,6138.8176,3871.2872,6133.5709,3869.1725,6135.6856,3863.9258,6128.97,3871.13" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6171.5" y="3829.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="6181.5" y="3836.5669">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M7252.1,78.85 C6618.34,85.96 2303.99,137.45 2203.5,223 C1990.16,404.62 2103.47,563.17 2089.5,843 C2066.9,1295.61 1969.1,2436.94 2054.5,2882 C2112.2,3182.71 2098.35,3300.26 2309.5,3522 C2536.93,3760.84 4840.49,3816.06 5618.44,3827.95 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.18,71.85,7272.26,78.62,7252.34,85.85,7252.18,71.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2491.97,2514.21 C2544.75,2606.72 2646.3,2792.23 2711.5,2959 C2816.17,3226.73 2662.01,3456.41 2926.5,3569 C3407.42,3773.71 4986.17,3818.52 5613.32,3828.29 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5618.36,3828.37,5609.4181,3824.2418,5613.3605,3828.2986,5609.3038,3832.241,5618.36,3828.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2404.66,2514.19 C2398.08,2523.69 2392.08,2533.77 2387.5,2544 C2319.68,2695.61 2337,2746.55 2322.5,2912 C2310.6,3047.8 2309.37,3410.28 2387.5,3522 C2414.5,3560.6 2437.08,3556.51 2482.5,3569 C3071.85,3731.01 4925.64,3802.33 5613.37,3823.69 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5618.4,3823.85,5609.5179,3819.5946,5613.402,3823.7072,5609.2894,3827.5913,5618.4,3823.85" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2325.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2335.5" y="2925.0669">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2446.09,2527.11 C2413.79,2742.02 2332.01,3372.48 2458.5,3522 C2661.79,3762.32 4860.12,3816.46 5618.24,3828.02 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2448.05,2514.17,2443.1926,2519.4997,2446.2441,2526.0333,2451.1015,2520.7036,2448.05,2514.17" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2404.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="2414.5" y="2925.0669">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M7252.07,78.37 C6654.56,81.51 2795.1,106.25 2581.5,223 C2027.68,525.7 2052.42,955.49 2156.5,1578 C2209.81,1896.88 2365.32,2255.15 2429.4,2393.81 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.29,71.37,7272.33,78.27,7252.36,85.37,7252.29,71.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41719d421dd9fac5f1bf843a27c4c912]
link C_0002061035340998974559 to C_0001390130774830223499--><path d="M2496.94,1289.6 C2523.95,1368.93 2564.79,1495.75 2590.5,1608 C2622.49,1747.64 2737.18,2748.25 2788.5,2882 C2910.21,3199.19 2935.23,3317.46 3206.5,3522 C3396.47,3665.24 4979.8,3776.54 5613.15,3815.74 " fill="none" id="C_0002061035340998974559-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5618.25,3816.06,5609.5187,3811.5033,5613.2598,3815.7463,5609.0168,3819.4875,5618.25,3816.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M2464.48,1302.75 C2460.32,1383.09 2454.74,1503.27 2452.5,1608 C2446.18,1902.99 2452.88,2256.03 2456.04,2393.83 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2465.16,1289.71,2460.8488,1295.4905,2464.5265,1301.6933,2468.8377,1295.9128,2465.16,1289.71" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2455.5" y="1716.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="2465.5" y="1723.5669">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M7252.28,80.4 C6662.19,99.5 2880.63,235.41 2538.5,591 C2398.14,736.89 2426.28,1000.56 2451.46,1131.44 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7252.08,73.41,7272.29,79.76,7252.53,87.4,7252.08,73.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M4682.35,1578.09 C4528.92,1664.54 4363.37,1753.67 4206.5,1830 C4174.96,1845.35 4153.03,1830.86 4133.5,1860 C4008.79,2046.08 4024.55,2168.28 4133.5,2364 C4195.05,2474.56 4256.99,2469.63 4375.5,2514 C4453.1,2543.05 4501.14,2485.18 4559.5,2544 C4616.63,2601.58 4636.48,2788.07 4642.39,2953.45 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4642.58,2958.83,4646.2432,2949.6877,4642.3944,2953.8334,4638.2487,2949.9847,4642.58,2958.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M5287.23,1578.3 C5275.74,1859.76 5252.09,2223.22 5204.5,2364 C5116.86,2623.24 4935.9,2882.13 4802.7,3050.37 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4799.56,3054.33,4808.2752,3049.7426,4802.6573,3050.4049,4801.995,3044.7869,4799.56,3054.33" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5200.5,2449.5664,5204.5,2453.5664,5200.5,2457.5664,5196.5,2453.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5207.5" y="2458.5669">recvMsgCallback_</text><!--MD5=[3427b8ada0e3011132406bbf51a19799]
link C_0002230624932100089526 to C_0001897340460211641725--><path d="M6004.1,1315.65 C6410.17,1386.31 6872.02,1488.45 7039.5,1608 C7549.93,1972.36 7553.21,2302.12 7535.5,2929 C7527.98,3195.26 7507.99,3505.2 7495.39,3683.7 " fill="none" id="C_0002230624932100089526-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7495.02,3688.94,7499.6528,3680.2488,7495.3773,3683.9528,7491.6733,3679.6772,7495.02,3688.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[475fc265529b86f5b89a981b424e962c]
link C_0002230624932100089526 to C_0001390130774830223499--><path d="M4590.89,1533.58 C4537.31,1550.76 4483.47,1565.9 4430.5,1578 C4364.34,1593.11 3872.78,1564.73 3820.5,1608 C3682.07,1722.58 3651.76,2215.56 3630.5,2394 C3624.19,2446.96 3601.89,2468.99 3630.5,2514 C3647.35,2540.51 3676.7,2518.12 3694.5,2544 C3941.46,2903.08 3468.8,3202.78 3765.5,3522 C3889.85,3655.79 5077.31,3767.08 5613.27,3810.94 " fill="none" id="C_0002230624932100089526-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5618.37,3811.36,5609.7187,3806.6531,5613.386,3810.9601,5609.0789,3814.6274,5618.37,3811.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cf3252f145f52c6ad0115ad3c523b41]
link C_0002230624932100089526 to C_0001660397537883119469--><path d="M4590.77,1534.47 C4537.24,1551.43 4483.45,1566.27 4430.5,1578 C4249.43,1618.1 3776.09,1561.75 3596.5,1608 C3384.77,1662.53 3365.61,1762.97 3157.5,1830 C3116.4,1843.24 2993.58,1827.19 2965.5,1860 C2891.66,1946.27 2888.56,2798.48 2965.5,2882 C3000.89,2920.42 3858.84,2930.34 3902.5,2959 C3980.45,3010.17 4020.83,3115.87 4039.29,3181.9 " fill="none" id="C_0002230624932100089526-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4040.69,3186.98,4042.1591,3177.2413,4039.3636,3182.1592,4034.4457,3179.3636,4040.69,3186.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[034c16a8c2edc6fa2a6ffe7ba8418e5f]
link C_0002230624932100089526 to C_0002100370281243872283--><path d="M5474.04,1578.1 C5477.08,1588.1 5479.91,1598.08 5482.5,1608 C5584.42,1998.69 5516.58,2111.58 5549.5,2514 C5562.89,2677.67 5489.56,2746.62 5582.5,2882 C5599.6,2906.91 5627.53,2886.35 5643.5,2912 C5670.32,2955.08 5673.35,3007.5 5665.83,3057.65 " fill="none" id="C_0002230624932100089526-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5665.02,3062.81,5670.3833,3054.5496,5665.8049,3057.872,5662.4825,3053.2936,5665.02,3062.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d2ce2e8b37834b1fb03da04894a7c85]
reverse link C_0002230624932100089526 to C_0002100370281243872283--><path d="M5370.57,1591.33 C5385.74,1679.3 5400.45,1772.72 5411.5,1860 C5440.21,2086.76 5383.32,2704.64 5527.5,2882 C5550.15,2909.86 5582.37,2882.27 5602.5,2912 C5631.99,2955.55 5639.77,3010.39 5637.69,3062.67 " fill="none" id="C_0002230624932100089526&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5368.33,1578.39,5365.4113,1584.984,5370.3755,1590.2144,5373.2942,1583.6204,5368.33,1578.39" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5439.5,2449.5664,5443.5,2453.5664,5439.5,2457.5664,5435.5,2453.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="5446.5" y="2458.5669">tlsPolicy_</text><!--MD5=[c68e74942c9e75d7a1d457e6ff6d95fd]
link C_0002230624932100089526 to C_0000434245188016003403--><path d="M6004.06,1331.96 C6349.14,1402.43 6718.47,1498.9 6852.5,1608 C6949.16,1686.67 6947.45,1738.57 6975.5,1860 C7025.92,2078.25 7054.19,2154.28 6975.5,2364 C6944.41,2446.87 6920.1,2467.96 6844.5,2514 C6796.81,2543.04 6765.4,2508.26 6722.5,2544 C6595.95,2649.44 6686.55,2765.11 6570.5,2882 C6512.63,2940.29 6465.38,2906.15 6402.5,2959 C6323.45,3025.44 6262.41,3131.83 6231.61,3192.7 " fill="none" id="C_0002230624932100089526-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6229.27,3197.36,6236.8806,3191.1087,6231.5118,3192.8907,6229.7298,3187.5219,6229.27,3197.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[910e29b2ccc32ba69f633ed34b5496c0]
reverse link C_0002230624932100089526 to C_0000434245188016003403--><path d="M6017.02,1316.58 C6390.72,1384.36 6797.76,1483.2 6936.5,1608 C7188.07,1834.3 7121.52,2039.24 7026.5,2364 C7004.27,2439.97 6995.44,2468.75 6930.5,2514 C6879.36,2549.63 6840.31,2502.84 6793.5,2544 C6673.68,2649.37 6787.98,2771.89 6672.5,2882 C6620.71,2931.38 6587.38,2909.59 6518.5,2929 C6467.24,2943.44 6446.13,2928.47 6402.5,2959 C6314.72,3020.43 6254.49,3135.48 6226.8,3197.43 " fill="none" id="C_0002230624932100089526&lt;-C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6004.02,1314.24,6009.2126,1319.2437,6015.8285,1316.375,6010.6359,1311.3713,6004.02,1314.24" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7023.5,2449.5664,7027.5,2453.5664,7023.5,2457.5664,7019.5,2453.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="7030.5" y="2458.5669">sslErrorCallback_</text><!--MD5=[e6b06091bb23409738e196d39773d40c]
link C_0002230624932100089526 to C_0000964465843177067305--><path d="M4590.73,1534.27 C4537.21,1551.28 4483.43,1566.19 4430.5,1578 C4389.04,1587.25 3697.7,1579.18 3666.5,1608 C3542.22,1722.8 3647.75,2210.55 3576.5,2364 C3568.82,2380.54 3559.91,2379.77 3548.5,2394 C3480.79,2478.44 3411.64,2583.08 3369.88,2648.71 " fill="none" id="C_0002230624932100089526-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3367.17,2652.98,3375.3801,2647.5399,3369.8572,2648.7635,3368.6336,2643.2405,3367.17,2652.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6017.24,1204.54 C6031.26,1206.24 6039,1208.23 6039,1210.5 C6039,1213.41 6026.32,1215.85 6004.01,1217.82 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6004.01,1203.18,6009.5697,1207.7724,6015.9471,1204.4067,6010.3875,1199.8143,6004.01,1203.18" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6050,1206.0664,6054,1210.0664,6050,1214.0664,6046,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6057" y="1215.0669">recvMsgCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6004.27,1186.25 C6106.47,1190.26 6176,1198.35 6176,1210.5 C6176,1222.45 6108.76,1230.47 6009.33,1234.55 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6004.27,1234.75,6013.4227,1238.3871,6009.266,1234.5502,6013.1029,1230.3935,6004.27,1234.75" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6187,1206.0664,6191,1210.0664,6187,1214.0664,6183,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6194" y="1215.0669">recvMsgCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6017.31,1170.91 C6185.74,1174.81 6313,1188 6313,1210.5 C6313,1233.58 6179.02,1246.88 6004.07,1250.38 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6004.07,1170.62,6009.9852,1174.7444,6016.0674,1170.8705,6010.1522,1166.7461,6004.07,1170.62" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6324,1206.0664,6328,1210.0664,6324,1214.0664,6320,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6331" y="1215.0669">connectionCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6017.37,1156.15 C6261.79,1157.48 6467,1175.6 6467,1210.5 C6467,1246.02 6254.38,1264.16 6004.21,1264.9 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6004.21,1156.1,6010.1924,1160.1263,6016.2099,1156.1527,6010.2275,1152.1264,6004.21,1156.1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6478,1206.0664,6482,1210.0664,6478,1214.0664,6474,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="6485" y="1215.0669">closeCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6017.66,1142.57 C6316.22,1140.74 6584,1163.38 6584,1210.5 C6584,1258.32 6308.2,1280.93 6004.32,1278.34 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6004.32,1142.66,6010.3506,1146.6137,6016.3196,1142.5677,6010.2891,1138.614,6004.32,1142.66" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6595,1206.0664,6599,1210.0664,6595,1214.0664,6591,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6602" y="1215.0669">writeCompleteCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6017.17,1130.18 C6392.58,1122.38 6760,1149.16 6760,1210.5 C6760,1272.56 6384,1299.24 6004.1,1290.54 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6004.1,1130.46,6010.1864,1134.3272,6016.0971,1130.1963,6010.0107,1126.3291,6004.1,1130.46" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6771,1206.0664,6775,1210.0664,6771,1214.0664,6767,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6778" y="1215.0669">highWaterMarkCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6004.14,1119.34 C6456.44,1103.45 6939,1133.84 6939,1210.5 C6939,1286.86 6460.2,1317.31 6009.45,1301.84 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6004.14,1301.66,6012.9977,1305.966,6009.1371,1301.8313,6013.2718,1297.9707,6004.14,1301.66" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6950,1206.0664,6954,1210.0664,6950,1214.0664,6946,1210.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6957" y="1215.0669">highWaterMarkCallback_</text><!--MD5=[f31d6af3df8ec0838da9d6a34fa975ae]
reverse link C_0002230624932100089526 to C_0001156367011091191681--><path d="M6009.11,1282.3 C6347.41,1360.6 6697.96,1523.36 6789.5,1860 C6848.28,2076.15 6874.53,2156.76 6789.5,2364 C6753.95,2450.65 6720.62,2463.89 6641.5,2514 C6629.51,2521.59 6596.91,2534.96 6553.04,2551.3 " fill="none" id="C_0002230624932100089526&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6004.13,1281.16,6011.995,1287.088,6009.001,1282.2885,6013.8006,1279.2945,6004.13,1281.16" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6850.5" cy="2112.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6857.5" y="2116.5669">«friend»</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6553.2,2551.34 C6562.36,2548.82 6571.47,2546.37 6580.5,2544 C6647.94,2526.27 6671.36,2543.59 6734.5,2514 C6830.04,2469.23 6873.23,2459.3 6918.5,2364 C7014.6,2161.66 6985.16,2073.85 6918.5,1860 C6878,1730.06 6855.51,1686.75 6744.5,1608 C6529.54,1455.52 6258.47,1361.63 6009.22,1303.84 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6004.07,1302.66,6011.935,1308.588,6008.941,1303.7885,6013.7406,1300.7945,6004.07,1302.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5790.17,2535.44 C5732.56,2486.86 5678.68,2429.28 5642.5,2364 C5478.5,2068.08 5668,1926.36 5553.5,1608 C5549.93,1598.07 5546.07,1588.14 5541.96,1578.23 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5800.2,2543.78,5798.1436,2536.8683,5790.9727,2536.1082,5793.0291,2543.0198,5800.2,2543.78" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5645.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5655.5" y="2116.5669">connectionCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6117.42,2530.62 C6119.89,2484.35 6115.12,2435.89 6095.5,2394 C6086.67,2375.14 6069.95,2382.02 6059.5,2364 C5945.41,2167.22 6038.04,2077.21 5970.5,1860 C5933.95,1742.44 5933.92,1702.9 5855.5,1608 C5847.17,1597.92 5838.53,1587.98 5829.62,1578.18 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6116.54,2543.6,6120.9394,2537.8864,6117.3575,2531.6279,6112.958,2537.3414,6116.54,2543.6" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6062.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="6072.5" y="2116.5669">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5929.54,2543.66 C5890.29,2489.69 5852.44,2427.4 5829.5,2364 C5753.04,2152.74 5870.25,2070.04 5790.5,1860 C5753.62,1762.88 5697.31,1668.09 5635.76,1582.31 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5632.83,1578.23,5634.8542,1587.8686,5635.7564,1582.2841,5641.3409,1583.1863,5632.83,1578.23" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5832.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="5842.5" y="2116.5669">messageCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6413.63,2535.87 C6473.62,2488.48 6527.92,2431.29 6562.5,2364 C6613.69,2264.38 6609.89,1961.48 6562.5,1860 C6455.92,1631.77 6233.26,1482.45 6004.01,1385.39 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6403.17,2543.99,6410.3621,2543.4665,6412.6451,2536.6264,6405.453,2537.1498,6403.17,2543.99" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6602.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6612.5" y="2116.5669">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6155.33,2531.5 C6220.79,2353.9 6289.46,2078.39 6196.5,1860 C6150.33,1751.54 6074.8,1657.86 5986.59,1578.09 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6150.72,2543.85,6156.5639,2539.6252,6154.9118,2532.6059,6149.0679,2536.8307,6150.72,2543.85" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6245.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="6255.5" y="2116.5669">connection_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M4834.29,1582.37 C4828.14,1590.82 4822.19,1599.36 4816.5,1608 C4767.05,1683.01 4733.88,1774.99 4711.78,1859.7 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4837.34,1578.23,4828.7899,1583.1182,4834.3813,1582.2607,4835.2389,1587.8521,4837.34,1578.23" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4822.5" cy="1719.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4829.5" y="1723.5669">«friend»</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M4887.45,1859.66 C4893.42,1849.79 4899.13,1839.88 4904.5,1830 C4954.43,1738.11 4930.7,1698.85 4982.5,1608 C4987.29,1599.6 4992.27,1591.2 4997.4,1582.83 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5000.27,1578.18,4992.1434,1583.744,4997.6471,1582.4368,4998.9543,1587.9406,5000.27,1578.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93aa647024501110e16d2f873292016e]
reverse link C_0000920759514274339356 to C_0002230624932100089526--><path d="M4952.93,1849.71 C4958.26,1843.17 4963.46,1836.59 4968.5,1830 C4971.06,1826.64 5033.4,1709.66 5103.12,1578.33 " fill="none" id="C_0000920759514274339356&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4944.43,1859.97,4951.3385,1857.9029,4952.0876,1850.7309,4945.1791,1852.7979,4944.43,1859.97" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5093.5,1714.5664,5097.5,1718.5664,5093.5,1722.5664,5089.5,1718.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5100.5" y="1723.5669">upgradeCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M4954.82,1595.4 C4952.34,1599.6 4949.9,1603.8 4947.5,1608 C4895.7,1698.85 4919.43,1738.11 4869.5,1830 C4864.13,1839.88 4858.42,1849.79 4852.46,1859.66 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4948.91,1591.65,4965.28,1578.18,4960.88,1598.91,4948.91,1591.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a625fde3388fdef88cf72768c6dd1b6]
reverse link C_0002230624932100089526 to C_0001423170502760786790--><path d="M5735.15,838.19 C5739.53,829.9 5743.66,821.51 5747.5,813 C5788.12,723.08 5791.22,679.45 5747.5,591 C5742.42,580.73 5736.53,570.84 5729.97,561.34 " fill="none" id="C_0002230624932100089526&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5732.69,842.78,5740.4659,836.7356,5735.0511,838.3726,5733.4141,832.9578,5732.69,842.78" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5785.5" cy="702.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5792.5" y="706.5669">«friend»</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5832.83,561.38 C5840.39,570.76 5847.32,580.62 5853.5,591 C5903.96,675.79 5898.68,725.29 5853.5,813 C5849.09,821.56 5844.4,829.97 5839.46,838.25 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5836.68,842.83,5844.768,837.21,5839.2734,838.5552,5837.9283,833.0606,5836.68,842.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M4983.61,524.05 C4937.02,544.71 4900.77,567.18 4883.5,591 C4825.2,671.42 4839.25,759.32 4887.45,842.95 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4995.67,518.83,4988.5759,517.5364,4984.6533,523.5872,4991.7474,524.8809,4995.67,518.83" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4886.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4896.5" y="706.5669">connSet_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5011.87,571.54 C5006.83,577.81 5002.03,584.29 4997.5,591 C4942.3,672.78 4966.1,719.46 4997.5,813 C5000.87,823.02 5004.59,833 5008.65,842.9 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5020.59,561.21,5013.664,563.2177,5012.8535,570.3831,5019.7794,568.3754,5020.59,561.21" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5000.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5010.5" y="706.5669">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5214.45,561.03 C5207.41,570.58 5201.04,580.56 5195.5,591 C5171.22,636.71 5179.06,733.83 5198.51,837.86 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5199.45,842.81,5201.7094,833.2238,5198.5217,837.8969,5193.8485,834.7092,5199.45,842.81" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5198.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5208.5" y="706.5669">recvMessageCallback_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5399.18,573.84 C5397.16,579.59 5395.26,585.32 5393.5,591 C5391.28,598.14 5373.21,713.6 5353.33,842.85 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5403.77,561.25,5397.9556,565.5152,5399.6564,572.5229,5405.4708,568.2577,5403.77,561.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5396.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5406.5" y="706.5669">connectionCallback_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5542.6,574.01 C5556.99,648.99 5563.24,736.21 5541.5,813 C5538.69,822.92 5535.56,832.83 5532.14,842.71 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5540.02,561.12,5537.2715,567.7868,5542.3683,572.888,5545.1168,566.2212,5540.02,561.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5559.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="5569.5" y="706.5669">writeCompleteCallback_</text><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M3336.67,2773.12 C3356.66,2931.8 3434.87,3368.53 3704.5,3569 C4001.21,3789.6 5103.93,3826.16 5612.94,3831.04 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5618.16,3831.09,5609.2063,3826.9874,5613.1603,3831.0329,5609.1149,3834.9869,5618.16,3831.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M3305.79,2773.08 C3248.6,2920.26 3125.91,3306.88 3315.5,3522 C3465.9,3692.65 4992.15,3787.19 5612.97,3818.84 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5618.42,3819.12,5609.6373,3814.663,5613.4266,3818.8632,5609.2264,3822.6525,5618.42,3819.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3318.5" y="3238.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3328.5" y="3245.0669">loop_</text><!--MD5=[64866fe38d904675f00d2ad62d2d950e]
link C_0002013739811805694444 to C_0000964465843177067305--><path d="M3138.8,2149.12 C3171.57,2245.32 3261.44,2509.21 3305.49,2638.57 " fill="none" id="C_0002013739811805694444-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3307.7877" cy="2645.3382" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3305.2054" x2="3310.37" y1="2637.7665" y2="2652.91"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3315.3594" x2="3300.2159" y1="2642.7559" y2="2647.9206"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5981.02,429.41 C6341.5,461.56 6796.6,515.17 6969.5,591 C7129.9,661.35 7198.13,684.42 7272.5,843 C7416.09,1149.17 7282.7,2030.88 7224.5,2364 C7212.59,2432.2 7235.63,2469.62 7182.5,2514 C7128.03,2559.51 6919.61,2499.27 6864.5,2544 C6742.37,2643.14 6872.83,2772.91 6759.5,2882 C6664.66,2973.29 6568.72,2868.11 6473.5,2959 C6283.48,3140.39 6446.77,3308.65 6293.5,3522 C6250.43,3581.95 6192.19,3635.06 6132.8,3679.6 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6128.53,3682.8,6138.1387,3680.6384,6132.542,3679.816,6133.3643,3674.2193,6128.53,3682.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5981.12,410.06 C6394.61,431.97 6947.64,481.27 7139.5,591 C7261.72,660.91 7285.77,709.83 7331.5,843 C7391.91,1018.94 7376.69,2401.57 7228.5,2514 C7124.21,2593.12 7035.9,2460 6935.5,2544 C6815.63,2644.28 6950.29,2772.79 6838.5,2882 C6814.35,2905.6 6568.13,2934.87 6544.5,2959 C6364.45,3142.83 6563.5,3315.85 6409.5,3522 C6339.89,3615.18 6233.28,3684.81 6133.41,3734.15 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.66,3736.49,6138.5018,3736.1183,6133.1492,3734.2883,6134.9791,3728.9356,6128.66,3736.49" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7287.5" y="2451.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="7297.5" y="2458.5669">loop_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5981.27,423.56 C6468.06,457.66 7154.42,517.79 7256.5,591 C7356.99,663.08 7346.93,722.44 7374.5,843 C7457.31,1205.06 7599.58,2247.88 7340.5,2514 C7288.52,2567.4 7063.69,2496.22 7006.5,2544 C6886.93,2643.89 7024.53,2772.69 6913.5,2882 C6889.13,2905.99 6638.99,2934.14 6615.5,2959 C6440.27,3144.42 6659.03,3319.76 6503.5,3522 C6412.3,3640.58 6263.64,3716.5 6133.63,3763.4 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.62,3765.19,6138.442,3765.9167,6133.3264,3763.502,6135.7412,3758.3864,6128.62,3765.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7417.5" y="2451.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="7427.5" y="2458.5669">timingWheelMap_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5981.22,420.57 C6491.83,453.11 7230.44,512.83 7338.5,591 C7438.1,663.05 7421.98,723.92 7452.5,843 C7498.67,1023.15 7675.84,2378.47 7548.5,2514 C7475.17,2592.05 7149.49,2475.09 7067.5,2544 C6949.24,2643.39 7095.24,2772.28 6986.5,2882 C6974.05,2894.57 6689.49,2945.99 6677.5,2959 C6505.74,3145.5 6732.55,3315.46 6585.5,3522 C6480.93,3668.87 6291.18,3746.62 6133.85,3787.39 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.73,3788.7,6138.4418,3790.3372,6133.5731,3787.4571,6136.4532,3782.5883,6128.73,3788.7" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7588.5" y="2451.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="7598.5" y="2458.5669">ioLoops_</text><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M5981.18,431.18 C6533.72,475.85 7360.81,549.02 7418.5,591 C7517.46,663.01 7496,725.29 7529.5,843 C7542.56,888.89 7765.17,2496.4 7768.5,2544 C7778.98,2693.86 7845.53,2753.03 7768.5,2882 C7731.49,2943.97 7666.74,2899.76 7625.5,2959 C7481.14,3166.37 7588.93,3272.91 7546.5,3522 C7537.49,3574.91 7526.28,3632.63 7515.88,3683.72 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7514.88,3688.64,7520.5989,3680.6216,7515.8798,3683.741,7512.7604,3679.0219,7514.88,3688.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M4995.99,406.99 C4302.71,430.32 3104.1,485.42 2933.5,591 C2835.7,651.53 2867.11,719.23 2800.5,813 C2719.63,926.83 2614.68,1048.88 2544.86,1127.04 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2541.15,1131.19,2550.1439,1127.1762,2544.4948,1127.4735,2544.1975,1121.8245,2541.15,1131.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M4995.85,399.36 C4244.08,413.32 2878.44,456.99 2699.5,591 C2528.39,719.15 2484.53,989.09 2473.32,1126.04 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2472.9,1131.25,2477.6069,1122.5987,2473.2999,1126.266,2469.6326,1121.9589,2472.9,1131.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2702.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="2712.5" y="706.5669">loopPoolPtr_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M4995.84,416.25 C4391.03,456.66 3419.23,564.26 3207.5,843 C3108.7,973.07 3105.4,1450.51 3207.5,1578 C3245.65,1625.64 3288.55,1577.66 3341.5,1608 C3474.38,1684.13 3485.41,1736.9 3576.5,1860 C3730.36,2067.92 3681.99,2183.76 3867.5,2364 C3968.19,2461.83 4010.96,2473.87 4145.5,2514 C4220.73,2536.44 4439.68,2490.89 4497.5,2544 C4553.63,2595.55 4540.14,2807.36 4555.5,2882 C4560.31,2905.35 4565.54,2929.49 4570.98,2953.7 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4572.14,2958.87,4574.0655,2949.2112,4571.0418,2953.9921,4566.2609,2950.9684,4572.14,2958.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M4995.95,439.41 C4620.92,474.28 4091.83,522.46 3627.5,561 C3583.53,564.65 3267.35,565.27 3231.5,591 C3132.64,661.94 3148.77,723.77 3124.5,843 C3091.93,1003.05 3019.58,1452.82 3124.5,1578 C3173.5,1636.47 3239.02,1554.6 3293.5,1608 C3365.33,1678.41 3309.45,1733.41 3337.5,1830 C3348.87,1869.14 3572.91,2485.98 3602.5,2514 C3633.73,2543.57 3658.83,2519.97 3694.5,2544 C3857.48,2653.77 3808.24,2785.66 3979.5,2882 C4003.71,2895.62 4450.46,2943.48 4473.5,2959 C4475.35,2960.25 4477.19,2961.53 4479.01,2962.83 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4483.22,2965.92,4478.3318,2957.3699,4479.1893,2962.9613,4473.5979,2963.8189,4483.22,2965.92" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3537.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="3547.5" y="2116.5669">recvMessageCallback_</text><!--MD5=[e4cf3da0efa4c24e1326f4e1327196a8]
link C_0001423170502760786790 to C_0002100370281243872283--><path d="M5981.03,453.23 C6439.62,520.62 7074.65,646.82 7226.5,843 C7345.03,996.12 7163.5,2497 7146.5,2514 C7090.82,2569.66 6861.18,2503.78 6793.5,2544 C6638.79,2635.94 6725.87,2791.17 6570.5,2882 C6488.76,2929.78 6238.54,2894.48 6145.5,2912 C6076.43,2925.01 6057.49,2927.82 5994.5,2959 C5937.47,2987.23 5879.65,3023.27 5826.49,3060.04 " fill="none" id="C_0001423170502760786790-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5822.35,3062.91,5832.0252,3061.0689,5826.4589,3060.061,5827.4668,3054.4946,5822.35,3062.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79d79e4b28f578896d460465838bfe49]
reverse link C_0001423170502760786790 to C_0002100370281243872283--><path d="M4983.45,500.36 C4812.47,566.48 4646.36,672.74 4573.5,843 C4444.99,1143.33 4492.04,1261.65 4573.5,1578 C4605.4,1701.87 4604.39,1761.64 4712.5,1830 C4805.08,1888.54 5121.29,1788.77 5204.5,1860 C5381.13,2011.19 5264.6,2717.1 5428.5,2882 C5471.22,2924.98 5520.99,2866.94 5561.5,2912 C5598.04,2952.65 5612.61,3008.55 5616.51,3062.66 " fill="none" id="C_0001423170502760786790&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4995.77,495.66,4988.7388,494.0594,4984.557,499.9341,4991.5882,501.5347,4995.77,495.66" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5324.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5334.5" y="2116.5669">policyPtr_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M5994.58,438.63 C6616.49,494.96 7591.13,584.22 7598.5,591 C7682.22,668.04 7626.58,730.49 7643.5,843 C7692.45,1168.45 7653.53,1258.76 7733.5,1578 C7841.88,2010.66 7886.04,2120.22 8095.5,2514 C8121.67,2563.2 8157.9,2614.72 8186.67,2652.87 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5981.33,437.43,5986.945,441.9546,5993.2812,438.5117,5987.6661,433.9871,5981.33,437.43" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7802.5" y="1716.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="7812.5" y="1723.5669">acceptorPtr_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M4982.72,443.58 C4608.67,479.79 4086.68,527.81 3627.5,561 C3596.87,563.21 3096.62,568.7 3075.5,591 C2924.67,750.24 3038.83,1361.75 3075.5,1578 C3095.33,1694.96 3075.66,1750.27 3163.5,1830 C3205.17,1867.82 3250.61,1816.66 3286.5,1860 C3386.04,1980.21 3351.51,2479.92 3336.19,2652.82 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4995.68,442.32,4989.3214,438.9188,4983.7362,443.4801,4990.0948,446.8813,4995.68,442.32" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3166.5" y="1716.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="3176.5" y="1723.5669">timingWheelMap_</text><!--MD5=[e097413d72e14ba218428e784ac5e60d]
reverse link C_0001423170502760786790 to C_0000626107303889580949--><path d="M4982.78,444.51 C4608.77,481.18 4086.79,529.37 3627.5,561 C3592.49,563.41 3023.1,568.11 2996.5,591 C2909.16,666.17 2804.83,1493.33 2793.5,1608 C2783.8,1706.19 2793.32,1731.33 2793.5,1830 C2793.94,2067.33 2770.27,2128.01 2795.5,2364 C2820.52,2598.02 2735.34,2719.41 2905.5,2882 C3057.27,3027.02 3174.61,2886.19 3371.5,2959 C3549.78,3024.93 3735.35,3161.76 3805.42,3216.32 " fill="none" id="C_0001423170502760786790&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4995.74,443.24,4989.3773,439.8464,4983.7976,444.4144,4990.1603,447.808,4995.74,443.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2798.5" y="2109.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="2808.5" y="2116.5669">sslContextPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M7252.37,91.11 C7038.54,127.47 6424.72,231.83 5981.25,307.22 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7251.49,84.16,7272.38,87.71,7253.84,97.96,7251.49,84.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70ff9873eb8ad20d6f04092c12d73f6d]
link C_0001489562721151066050 to C_0001423170502760786790--><path d="M7476.07,107.55 C7455.49,121.48 7429.27,136.99 7403.5,146 C7151.93,233.99 6473.9,307.2 5996.34,350.05 " fill="none" id="C_0001489562721151066050-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5989.1779" cy="350.684" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5997.1458" x2="5981.21" y1="349.9679" y2="351.4"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5989.8939" x2="5988.4618" y1="358.6518" y2="342.7161"/><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M7717.27,3396.77 C7669.53,3485.83 7609.94,3596.98 7563.02,3684.53 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7560.65,3688.94,7568.4259,3682.8956,7563.0111,3684.5326,7561.3741,3679.1178,7560.65,3688.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M7322.24,121.09 C7308.97,215.96 7292.5,443.78 7415.5,561 C7491.09,633.03 7570.1,522.05 7648.5,591 C7735.44,667.46 7692.75,729.28 7714.5,843 C7776.33,1166.25 7693.75,1268.09 7804.5,1578 C7809.81,1592.86 7819.1,1592.84 7823.5,1608 C7850.98,1702.76 7823.83,1731.33 7823.5,1830 C7821.94,2297.56 7828.51,2414.59 7816.5,2882 C7814.8,2948.3 7811.73,3021.47 7808.74,3084.25 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7315.34,119.93,7325.25,101.2,7329.18,122.03,7315.34,119.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M7348,119.7 C7397.9,231.41 7534.07,530.97 7572.5,561 C7620.25,598.31 7660.86,550.02 7705.5,591 C7871.45,743.33 7831.9,1378.5 7936.5,1578 C8186.4,2054.62 8773.5,1914.84 8773.5,2453 C8773.5,2453 8773.5,2453 8773.5,4367 C8773.5,4467.32 8804,4514.01 8738.5,4590 C8692.89,4642.92 8656.94,4622.96 8588.5,4637 C7775.74,4803.77 6782.89,4857.79 6380.66,4873.58 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7341.48,122.25,7339.73,101.14,7354.26,116.56,7341.48,122.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M8176.27,2773.39 C8142.57,2810.82 8101.08,2861.49 8072.5,2912 C8004.89,3031.49 8073.56,3426.94 7974.5,3522 C7852.98,3638.62 7387.37,3576.14 7220.5,3599 C6841.03,3650.99 6404.61,3729.65 6133.89,3780.68 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6128.72,3781.65,6138.3074,3783.9043,6133.6326,3780.719,6136.8179,3776.0442,6128.72,3781.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M8195.28,2773.34 C8166.24,2821.43 8127.93,2891.97 8107.5,2959 C8070.77,3079.5 8117.56,3421.58 8041.5,3522 C7920.83,3681.32 8071.5,3508.04 7220.5,3599 C6839.95,3639.68 6404.26,3721.18 6133.95,3775.93 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.79,3776.97,6138.4021,3779.1165,6133.6918,3775.9839,6136.8244,3771.2736,6128.79,3776.97" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8113.5,3236.0664,8117.5,3240.0664,8113.5,3244.0664,8109.5,3240.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="8120.5" y="3245.0669">loop_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M8235.77,2773.02 C8241.13,2949.54 8246.05,3467.53 8124.5,3569 C8012.46,3662.53 7862.52,3726.31 7735.93,3767.51 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7731.06,3769.09,7740.855,3770.1183,7735.8161,3767.5475,7738.387,3762.5086,7731.06,3769.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M8254.65,2786.17 C8293.86,2935.05 8362.15,3282.31 8226.5,3522 C8127.87,3696.27 7906.67,3772.26 7731.3,3805.39 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8251.19,2773.25,8248.8754,2780.0795,8254.2893,2784.8428,8256.604,2778.0133,8251.19,2773.25" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8313.5,3236.0664,8317.5,3240.0664,8313.5,3244.0664,8309.5,3240.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="8320.5" y="3245.0669">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M8276.44,2773.43 C8308.02,2821.01 8348.31,2890.84 8365.5,2959 C8396.1,3080.31 8437.86,3419.94 8365.5,3522 C8327.43,3575.7 7982.94,3685.67 7736.23,3758.87 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7731.15,3760.38,7740.9136,3761.6732,7735.9461,3758.9669,7738.6525,3753.9994,7731.15,3760.38" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8412.5,3236.0664,8416.5,3240.0664,8412.5,3244.0664,8408.5,3240.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="8419.5" y="3245.0669">newConnectionCallback_</text><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M8099.21,2779.65 C8042.32,2812.87 7979.02,2857.74 7934.5,2912 C7893.58,2961.87 7863.69,3025.92 7842.66,3084.14 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8110.5,2773.16,8103.3045,2772.6854,8100.099,2779.1449,8107.2944,2779.6194,8110.5,2773.16" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7940.5,2916.0664,7944.5,2920.0664,7940.5,2924.0664,7936.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="7947.5" y="2925.0669">sock_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M8388.21,2779.42 C8462.2,2819.56 8543.62,2878.82 8585.5,2959 C8701.35,3180.79 8676.8,3289.03 8585.5,3522 C8526.49,3672.58 7737.33,4510.48 7596.5,4590 C7202.61,4812.4 6659.84,4864.83 6380.64,4876.61 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8376.41,2773.14,8379.8328,2779.487,8387.0081,2778.7686,8383.5852,2772.4216,8376.41,2773.14" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8543.5,3827.5664,8547.5,3831.5664,8543.5,3835.5664,8539.5,3831.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="8550.5" y="3836.5669">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M7362.96,115.67 C7374.75,126.93 7388.76,138.31 7403.5,146 C7457.99,174.43 7491.8,136.04 7538.5,176 C7678.15,295.51 7548.98,442.52 7689.5,561 C7739.81,603.42 7790.38,542.18 7834.5,591 C7982.35,754.59 7897.12,1361.04 7936.5,1578 C8012.33,1995.76 8161.81,2485.74 8214.54,2652.79 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7357.84,120.45,7348.87,101.25,7367.85,110.66,7357.84,120.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M3996.97,2611.36 C3957.88,2585.07 3921.95,2552.89 3896.5,2514 C3786.23,2345.48 3768.75,1743.76 3917.5,1608 C3959.67,1569.51 4374.9,1590.97 4430.5,1578 C4481.76,1566.04 4533.85,1551.29 4585.74,1534.64 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4590.77,1533.02,4580.9778,1531.965,4586.0097,1534.5496,4583.4251,1539.5815,4590.77,1533.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M4082.03,2569.62 C4029.37,2511.62 3977.04,2440.27 3949.5,2364 C3873.42,2153.31 3830.29,2049.64 3949.5,1860 C3990.53,1794.74 4283.47,1650.51 4585.83,1514.61 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4590.72,1512.41,4580.8712,1512.4415,4586.1575,1514.4553,4584.1436,1519.7415,4590.72,1512.41" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3955.5,2107.5664,3959.5,2111.5664,3955.5,2115.5664,3951.5,2111.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="3962.5" y="2116.5669">conn_</text><!--MD5=[66a28d60dde9122b674256fe47a8607b]
link C_0000464040622375950341 to C_0002100370281243872283--><path d="M4480.25,2807.34 C4701.88,2892.92 5031.76,3020.29 5276.02,3114.6 " fill="none" id="C_0000464040622375950341-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5280.69,3116.4,5273.7373,3109.4244,5276.0262,3114.5974,5270.8532,3116.8864,5280.69,3116.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[875d972240b01517ed889bd22efa83e7]
reverse link C_0000464040622375950341 to C_0002100370281243872283--><path d="M4492.56,2804.33 C4584.47,2837.52 4688.89,2875.84 4783.5,2912 C4948.19,2974.95 5130.38,3047.76 5280.75,3108.72 " fill="none" id="C_0000464040622375950341&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4480.26,2799.89,4484.5454,2805.6896,4491.5471,2803.9644,4487.2617,2798.1648,4480.26,2799.89" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4834.5,2916.0664,4838.5,2920.0664,4834.5,2924.0664,4830.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4841.5" y="2925.0669">policyPtr_</text><!--MD5=[b652be82a647abba4b5fd8692aa6554f]
link C_0000464040622375950341 to C_0000626107303889580949--><path d="M4020.48,2856.11 C3967.79,2894.21 3921.45,2932.21 3903.5,2959 C3849.8,3039.16 3837.84,3157.26 3835.22,3211 " fill="none" id="C_0000464040622375950341-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3834.98,3216.31,3839.3868,3207.5021,3835.2083,3211.3152,3831.3952,3207.1367,3834.98,3216.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80034138ff2d0c3e947014f89ce57bda]
reverse link C_0000464040622375950341 to C_0000626107303889580949--><path d="M3984.7,2839.69 C3955.65,2854 3926.44,2868.34 3898.5,2882 C3871,2895.45 3852.84,2886.11 3836.5,2912 C3774.73,3009.84 3809.9,3159.08 3826.92,3216.17 " fill="none" id="C_0000464040622375950341&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3996.7,2833.78,3989.5504,2832.8399,3985.9328,2839.0779,3993.0824,2840.018,3996.7,2833.78" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3842.5,2916.0664,3846.5,2920.0664,3842.5,2924.0664,3838.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="3849.5" y="2925.0669">contextPtr_</text><!--MD5=[cbe65aa9ba09230aac132495b612a111]
link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4284.85,2856.2 C4295.78,2881.4 4308.66,2906.69 4323.5,2929 C4366.38,2993.47 4424.5,3055.1 4479.32,3106.22 " fill="none" id="C_0000464040622375950341-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4483.27,3109.88,4479.3845,3100.83,4479.6015,3106.4827,4473.9488,3106.6996,4483.27,3109.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4316.76,2867.46 C4329.27,2888.64 4342.67,2909.72 4356.5,2929 C4394.14,2981.47 4439.7,3034.66 4483.24,3081.85 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4310.11,2856.05,4309.6707,2863.2477,4316.1458,2866.4216,4316.5851,2859.2238,4310.11,2856.05" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4362.5,2916.0664,4366.5,2920.0664,4362.5,2924.0664,4358.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4369.5" y="2925.0669">recvBuffer_</text><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4406.51,2865.96 C4420.58,2881.03 4434.13,2896.5 4446.5,2912 C4459.09,2927.78 4471.45,2944.44 4483.45,2961.56 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4397.2,2856.12,4398.4158,2863.2279,4405.4445,2864.8394,4404.2287,2857.7315,4397.2,2856.12" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4465.5,2916.0664,4469.5,2920.0664,4465.5,2924.0664,4461.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="4472.5" y="2925.0669">writeBuffer_</text><!--MD5=[33ce3cc340c214aeadfebc02526d05f3]
link C_0000464040622375950341 to C_0001660397537883119469--><path d="M4189.13,2856.01 C4180.62,2880.37 4171.83,2905.42 4163.5,2929 C4132.29,3017.38 4095.59,3119.73 4073.2,3182.02 " fill="none" id="C_0000464040622375950341-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4071.48,3186.8,4078.2958,3179.6905,4073.1761,3182.0965,4070.7702,3176.9768,4071.48,3186.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ec1a6f5f84e6ef233285776a59af2fe]
reverse link C_0000464040622375950341 to C_0001660397537883119469--><path d="M4065.04,2866.93 C4055.38,2881.28 4046.99,2896.34 4040.5,2912 C4002.89,3002.81 4021.5,3120.19 4037.59,3186.93 " fill="none" id="C_0000464040622375950341&lt;-C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4072.66,2856.11,4065.9348,2858.7122,4065.7502,2865.9209,4072.4754,2863.3187,4072.66,2856.11" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4046.5,2916.0664,4050.5,2920.0664,4046.5,2924.0664,4042.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="4053.5" y="2925.0669">peerCertificate_</text><!--MD5=[59b32ea62ecf6e8b0ce93ada6106a262]
link C_0000464040622375950341 to C_0001390130774830223499--><path d="M4227.15,2856.2 C4221.11,3036.87 4240.19,3346.26 4417.5,3522 C4583.4,3686.43 5241.08,3772.72 5613.24,3809.23 " fill="none" id="C_0000464040622375950341-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5618.43,3809.74,5609.8603,3804.8862,5613.4536,3809.2552,5609.0846,3812.8485,5618.43,3809.74" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4423.5,3236.0664,4427.5,3240.0664,4423.5,3244.0664,4419.5,3240.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4430.5" y="3245.0669">loop_</text><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M4799.4,2364.24 C4823.93,2421.91 4846.32,2483.96 4860.5,2544 C4899.87,2710.71 4847.87,2760.46 4878.5,2929 C4931.95,3223.13 4874.97,3356.75 5085.5,3569 C5225.12,3709.76 5442.12,3774.9 5613.09,3805.04 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5618.13,3805.92,5609.9667,3800.41,5613.2068,3805.047,5608.5698,3808.2871,5618.13,3805.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M4843.73,2364.32 C4849.23,2374.24 4854.51,2384.15 4859.5,2394 C5100.31,2868.96 4911.2,3122.68 5263.5,3522 C5356.16,3627.03 5492.98,3700.88 5613.57,3749.99 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5618.21,3751.87,5611.3844,3744.77,5613.5795,3749.9835,5608.366,3752.1787,5618.21,3751.87" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5016.5,2916.0664,5020.5,2920.0664,5016.5,2924.0664,5012.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5023.5" y="2925.0669">loop_</text><!--MD5=[cb9f027c3142c905f1a5f676e638bcfe]
link C_0000920759514274339356 to C_0001897340460211641725--><path d="M5187.69,2338.57 C5220.43,2348.32 5253.21,2356.94 5285.5,2364 C5360.14,2380.32 5910.83,2348.89 5972.5,2394 C6018.35,2427.54 5970.31,2480.94 6016.5,2514 C6074.97,2555.86 7257.52,2495.38 7310.5,2544 C7394.91,2621.47 7403.05,3456.1 7422.5,3569 C7428.96,3606.47 7437.57,3646.58 7446.32,3683.88 " fill="none" id="C_0000920759514274339356-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7447.5,3688.88,7449.3054,3679.198,7446.3413,3684.0161,7441.5232,3681.052,7447.5,3688.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M5200.33,2342.37 C5228.86,2350.58 5257.36,2357.88 5285.5,2364 C5364.61,2381.2 5948.1,2346.29 6013.5,2394 C6059.39,2427.48 6011.3,2480.94 6057.5,2514 C6116.84,2556.46 7316.12,2495.36 7370.5,2544 C7454.51,2619.15 7476.88,3369.69 7482.61,3688.72 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5187.67,2338.67,5192.3078,2344.1918,5199.1887,2342.0346,5194.5509,2336.5127,5187.67,2338.67" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7453.5,2916.0664,7457.5,2920.0664,7453.5,2924.0664,7449.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7460.5" y="2925.0669">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M5200.27,2340.9 C5228.84,2349.51 5257.37,2357.3 5285.5,2364 C5446.43,2402.33 5495.07,2357.86 5656.5,2394 C5804.32,2427.09 5826.8,2485.14 5975.5,2514 C6044.95,2527.48 7196.15,2496.42 7248.5,2544 C7312.26,2601.95 7283.35,2843.56 7294.5,2929 C7328.96,3192.95 7316.37,3263.17 7378.5,3522 C7391.8,3577.42 7411,3636.95 7429.41,3688.82 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5187.59,2337.03,5192.16,2342.6081,5199.0667,2340.5349,5194.4967,2334.9569,5187.59,2337.03" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7300.5,2916.0664,7304.5,2920.0664,7300.5,2924.0664,7296.5,2920.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7307.5" y="2925.0669">peerAddr_</text><!--MD5=[76f47a1576e50ad875a2ac1674af8c7c]
link C_0000920759514274339356 to C_0002100370281243872283--><path d="M5077.8,2364.24 C5086.78,2373.91 5095.38,2383.83 5103.5,2394 C5138.95,2438.39 5126.39,2461.26 5147.5,2514 C5213.78,2679.57 5201.54,2738.54 5307.5,2882 C5319.67,2898.48 5328.33,2897.2 5342.5,2912 C5385.89,2957.31 5429.41,3009.55 5467.98,3058.81 " fill="none" id="C_0000920759514274339356-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5471.22,3062.96,5468.8232,3053.4072,5468.1385,3059.0225,5462.5232,3058.3377,5471.22,3062.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M4151.29,2278.71 C4092.94,2311.02 4037.64,2349.15 3990.5,2394 C3750.22,2622.62 3809.52,3091.33 3829.37,3211.13 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3830.23,3216.24,3832.6825,3206.7014,3829.4011,3211.3092,3824.7933,3208.0277,3830.23,3216.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4699.45,2364.44 C4714.05,2526.05 4724.74,2740.32 4705.5,2929 C4704.67,2937.16 4703.72,2945.43 4702.66,2953.75 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4701.99,2958.95,4707.1142,2950.5392,4702.633,2953.9915,4699.1807,2949.5103,4701.99,2958.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4730.12,2377.35 C4730.97,2382.94 4731.76,2388.5 4732.5,2394 C4764.17,2629.66 4783.57,2696.77 4732.5,2929 C4730.33,2938.88 4728.01,2948.9 4725.58,2959 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4728.07,2364.24,4725.0409,2370.784,4729.9165,2376.0971,4732.9456,2369.553,4728.07,2364.24" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4770.5,2708.5664,4774.5,2712.5664,4770.5,2716.5664,4766.5,2712.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="4777.5" y="2717.5669">readBuffer_</text><!--MD5=[757c398b52da5470305d11307157893e]
link C_0000920759514274339356 to C_0001660397537883119469--><path d="M4151.08,2351.09 C4082.32,2404.74 4021.28,2468.65 3979.5,2544 C3862.53,2754.98 3971.11,3057.43 4025.58,3182.27 " fill="none" id="C_0000920759514274339356-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4027.65,3186.99,4027.6928,3177.1412,4025.6392,3182.4122,4020.3682,3180.3586,4027.65,3186.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M4151.03,2318.84 C4094.76,2336.24 4037.84,2351.81 3982.5,2364 C3904.32,2381.22 3692.21,2352.92 3623.5,2394 C3568.91,2426.64 3586.55,2465.41 3545.5,2514 C3503.86,2563.29 3450.54,2612.47 3407.41,2649.48 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3403.54,2652.8,3412.9765,2649.9799,3407.3363,2649.546,3407.7701,2643.9059,3403.54,2652.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M4151.19,2317.33 C4094.83,2335.05 4037.84,2351.11 3982.5,2364 C3861.47,2392.2 3813.15,2333.67 3704.5,2394 C3645.27,2426.89 3659.56,2467.28 3610.5,2514 C3556.5,2565.42 3488.32,2613.91 3432.77,2650.04 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3428.45,2652.84,3438.1763,2651.2912,3432.6429,2650.1161,3433.818,2644.5826,3428.45,2652.84" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3707.5" y="2451.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="3717.5" y="2458.5669">timingWheelWeakPtr_</text><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M5187.66,2298.07 C5234.64,2326.17 5279.23,2358.02 5318.5,2394 C5409.4,2477.3 5479.25,2814.61 5582.5,2882 C5651.02,2926.72 5868.83,2898.28 5949.5,2912 C6031.01,2925.86 6070.38,2901.19 6129.5,2959 C6193.07,3021.16 6207.07,3129.98 6209.6,3192.24 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6209.78,3197.37,6213.4432,3188.2277,6209.5944,3192.3734,6205.4487,3188.5247,6209.78,3197.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M4138.87,2331.86 C4095.59,2344.46 4052.12,2355.45 4009.5,2364 C3807.85,2404.44 3284.55,2346.28 3084.5,2394 C2930.93,2430.64 2870.64,2428.97 2762.5,2544 C2548.17,2771.97 2470.1,3707.52 2445.02,4141.71 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4151.37,2328.17,4144.4846,2326.0272,4139.8585,2331.5589,4146.7438,2333.7016,4151.37,2328.17" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2594.5" y="3238.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="2604.5" y="3245.0669">lastTimingWheelUpdateTime_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M4138.56,2330.39 C4095.36,2343.32 4051.98,2354.79 4009.5,2364 C3804.07,2408.53 3745.02,2360.52 3537.5,2394 C3278.04,2435.86 3126.05,2335.92 2965.5,2544 C2945.56,2569.85 2936.51,4489.88 3031.5,4590 C3237.84,4807.47 5373.56,4864.31 6016.41,4876.55 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4151.05,2326.61,4144.1499,2324.5151,4139.5623,2330.0787,4146.4624,2332.1736,4151.05,2326.61" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2962.5,3556.0664,2966.5,3560.0664,2962.5,3564.0664,2958.5,3560.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2969.5" y="3565.0669">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M5200.32,2342.46 C5228.85,2350.64 5257.35,2357.92 5285.5,2364 C5454.18,2400.44 5889.54,2379.48 6061.5,2394 C6471.95,2428.66 6570.51,2474.25 6980.5,2514 C7032.8,2519.07 7408.69,2514.97 7452.5,2544 C7637.93,2666.86 7728.82,2919.64 7770.06,3084.23 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5187.65,2338.77,5192.2936,2344.2869,5199.1722,2342.1224,5194.5286,2336.6055,5187.65,2338.77" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7710.5,2708.5664,7714.5,2712.5664,7710.5,2716.5664,7706.5,2712.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="7717.5" y="2717.5669">socketPtr_</text><!--MD5=[b5fd39cbf5d90566dc2e46b01562db6a]
reverse link C_0000920759514274339356 to C_0000464040622375950341--><path d="M4592.27,2376.23 C4571.24,2424.77 4545.24,2473.01 4513.5,2514 C4498.19,2533.77 4480.39,2552.43 4461.34,2569.81 " fill="none" id="C_0000920759514274339356&lt;-C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4597.37,2364.22,4591.3424,2368.1783,4592.678,2375.2647,4598.7056,2371.3063,4597.37,2364.22" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4586.5,2449.5664,4590.5,2453.5664,4586.5,2457.5664,4582.5,2453.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="4593.5" y="2458.5669">tlsProviderPtr_</text><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M5192.65,2336.58 C5223.8,2346.64 5254.91,2355.89 5285.5,2364 C5383.87,2390.08 5427.77,2337.63 5512.5,2394 C5563.91,2428.2 5535.75,2473.66 5582.5,2514 C5594.65,2524.49 5607.43,2534.47 5620.7,2543.95 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5187.64,2334.96,5194.967,2341.5414,5192.3961,2336.5025,5197.435,2333.9317,5187.64,2334.96" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5588.5" cy="2454.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5595.5" y="2458.5669">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M4304.04,1856.16 C4220.36,1777.64 4142.99,1683.65 4098.5,1578 C4035.11,1427.47 4018.56,985.43 4098.5,843 C4203.75,655.49 4311.33,669.54 4511.5,591 C4664.25,531.07 4837.87,488.37 4995.94,458.36 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4308.03,1859.89,4304.181,1850.8244,4304.3752,1856.4779,4298.7217,1856.6721,4308.03,1859.89" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4104.5" cy="1211.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4111.5" y="1215.0669">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M7362.96,115.67 C7374.75,126.93 7388.76,138.31 7403.5,146 C7457.99,174.43 7500.04,128.06 7538.5,176 C7645.57,309.47 7650.19,431.37 7538.5,561 C7291.37,847.83 6230.71,780.5 5853.5,813 C5818.07,816.05 4598.35,817.56 4573.5,843 C4437.46,982.27 4534.44,1531.52 4607.93,1859.72 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7357.84,120.45,7348.87,101.25,7367.85,110.66,7357.84,120.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c532aab217e61acf8b6b084ec7b46eb]
link C_0002266895444343633259 to C_0000920759514274339356--><path d="M9590.43,435.09 C9612.41,609.82 9670.23,1282.57 9306.5,1578 C9252.49,1621.87 8119.08,1582.12 8054.5,1608 C7918.41,1662.53 7946.92,1776.29 7810.5,1830 C7679.96,1881.39 5423.01,1832.21 5285.5,1860 C5258.03,1865.55 5230.23,1872.31 5202.41,1879.99 " fill="none" id="C_0002266895444343633259-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5195.5599" cy="1881.9194" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5203.2598" x2="5187.86" y1="1879.7488" y2="1884.09"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5197.7305" x2="5193.3893" y1="1889.6193" y2="1874.2195"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M9505.71,435.12 C9334.7,524.12 8914.27,729.94 8534.5,813 C8274.53,869.86 8201.44,818.01 7936.5,843 C7281.35,904.81 6539.36,1011.1 6009.38,1093.36 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6004.33,1094.14,6013.8392,1096.7043,6009.2702,1093.369,6012.6055,1088.8,6004.33,1094.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M9501.39,435.17 C9416.97,475.68 9281.25,534.54 9156.5,561 C8859.7,623.95 8774.11,543.17 8474.5,591 C8112.66,648.76 8038.19,733.48 7680.5,813 C7123.32,936.87 6485.08,1041.09 6009.43,1111.55 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6004.2,1112.33,6013.686,1114.9788,6009.1469,1111.6029,6012.5227,1107.0638,6004.2,1112.33" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8477.5" y="699.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="8487.5" y="706.5669">conn_</text><!--MD5=[a2e7476096c2077970c9b111225cac20]
link C_0001029063960859366412 to C_0000920759514274339356--><path d="M3838.99,1292.06 C3881.82,1440.71 3977.68,1750.24 4054.5,1830 C4077.98,1854.38 4093.57,1846.25 4124.5,1860 C4128.82,1861.92 4133.16,1863.85 4137.52,1865.8 " fill="none" id="C_0001029063960859366412-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4144.1845" cy="1868.7696" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4136.8791" x2="4151.49" y1="1865.5092" y2="1872.03"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4147.445" x2="4140.9241" y1="1861.4641" y2="1876.075"/><!--MD5=[803a46c0407296c3d5232650b81b89e3]
link C_0001029063960859366412 to C_0001289495020269537351--><path d="M3809.7,1292.17 C3803.33,1420.71 3809.67,1673.41 3937.5,1830 C3959.42,1856.86 3986.94,1833.68 4009.5,1860 C4159.62,2035.15 3991.38,2182.3 4133.5,2364 C4221.69,2476.75 4282.37,2469.76 4418.5,2514 C4462.71,2528.37 4593.59,2510.21 4625.5,2544 C4680.72,2602.47 4682.82,2788.34 4672.12,2953.22 " fill="none" id="C_0001029063960859366412-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4671.76,2958.58,4676.3432,2949.8625,4672.0888,2953.5908,4668.3605,2949.3364,4671.76,2958.58" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4424.5" cy="2454.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="4431.5" y="2458.5669">msgBuffer_</text><!--MD5=[78f71baf9803b06041c9b46669fccd94]
link C_0001727349338344491225 to C_0000920759514274339356--><path d="M4301.22,1260.13 C4311.04,1367.89 4343.9,1632.79 4440.5,1830 C4443.19,1835.49 4446,1840.96 4448.93,1846.42 " fill="none" id="C_0001727349338344491225-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4452.5439" cy="1852.9317" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4448.6678" x2="4456.42" y1="1845.9334" y2="1859.93"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4459.5422" x2="4445.5456" y1="1849.0556" y2="1856.8078"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M5599.18,4445.25 C5637.32,4503.27 5694.97,4581.59 5759.5,4637 C5834.47,4701.38 5929.24,4756.33 6011.53,4797.57 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6016.43,4800.02,6010.1593,4792.4254,6011.955,4797.7897,6006.5907,4799.5854,6016.43,4800.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M7265.25,109.84 C7076.63,201.41 6505.82,465.03 5998.5,561 C5744.91,608.97 5094.55,567.9 4837.5,591 C4107.39,656.6 3812.53,429.11 3207.5,843 C2896.05,1056.05 3047.16,1309.03 2782.5,1578 C2764.32,1596.47 2752.14,1591.09 2732.5,1608 C2635.61,1691.44 2639.04,1738.72 2549.5,1830 C2535.15,1844.63 2526.45,1843.36 2514.5,1860 C2373.69,2056.18 2487.94,2199.12 2311.5,2364 C2280.08,2393.36 2244.76,2359.19 2219.5,2394 C2209.09,2408.35 2229.47,3408.92 2309.5,3522 C2673.17,4035.87 4740.45,4283.5 5369.74,4347.69 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7262.27,103.5,7283.31,101.03,7268.41,116.09,7262.27,103.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6fae28fa9ff5d7f68f4068664152934]
link C_0000607400095182694101 to C_0002026475275429760163--><path d="M8464.73,4439.07 C8524.28,4528.04 8625.86,4679.82 8692.83,4779.89 " fill="none" id="C_0000607400095182694101-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8695.8,4784.32,8694.1128,4774.6167,8693.0166,4780.1663,8687.467,4779.0701,8695.8,4784.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M8438.45,4451.69 C8455.18,4507.16 8481.65,4579.73 8518.5,4637 C8553.27,4691.03 8601.72,4742.73 8646.08,4784.41 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8434.72,4439.05,8432.5866,4445.9383,8438.1246,4450.5569,8440.2579,4443.6686,8434.72,4439.05" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8524.5,4624.0664,8528.5,4628.0664,8524.5,4632.0664,8520.5,4628.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="8531.5" y="4633.0669">timers_</text><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M8351.6,4439.03 C8289.85,4502.49 8190.93,4591.67 8085.5,4637 C7781.9,4767.52 6799.99,4842.16 6385.68,4868.53 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6380.53,4868.86,6389.7638,4872.2859,6385.5201,4868.5454,6389.2605,4864.3017,6380.53,4868.86" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8123.5,4624.0664,8127.5,4628.0664,8123.5,4632.0664,8119.5,4628.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="8130.5" y="4633.0669">timerfdChannelPtr_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M7361.55,116.28 C7373.45,127.89 7387.89,139.32 7403.5,146 C7523.58,197.39 8479.54,135.48 8576.5,223 C8680.23,316.63 8668.88,703.83 8681.5,843 C8746.11,1555.69 8702.5,1737.38 8702.5,2453 C8702.5,2453 8702.5,2453 8702.5,3833 C8702.5,3937.71 8705.14,3969.82 8661.5,4065 C8621.28,4152.72 8549.17,4236.36 8493.56,4292.93 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7356.07,120.68,7347.48,101.31,7366.28,111.09,7356.07,120.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M7360.76,115.96 C7372.77,127.81 7387.48,139.48 7403.5,146 C7506.35,187.87 8292.11,163.88 8402.5,176 C8513.15,188.15 8571.72,142.41 8648.5,223 C8745.83,325.16 8844.5,1805.19 8844.5,2453 C8844.5,2453 8844.5,2453 8844.5,4367 C8844.5,4514.24 8809.93,4682.1 8784.89,4784.41 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7355.56,120.65,7347.09,101.22,7365.82,111.13,7355.56,120.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M9071.27,4396.77 C9024.04,4469.91 8900.58,4661.06 8823.95,4779.71 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8821.02,4784.25,8829.2645,4778.8622,8823.7339,4780.0506,8822.5455,4774.52,8821.02,4784.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M7360.73,116.02 C7372.74,127.88 7387.45,139.54 7403.5,146 C7540.1,201.02 8592.83,118.73 8728.5,176 C8804.46,208.06 8868.61,279.93 8907.47,331.75 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7355.52,120.7,7347.07,101.27,7365.79,111.19,7355.52,120.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M8958.94,472.18 C8981.85,630.69 9033.03,984.84 9055.07,1137.36 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8951.97,472.84,8956.03,452.05,8965.82,470.84,8951.97,472.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M7360.73,116.03 C7372.74,127.89 7387.45,139.54 7403.5,146 C7473.92,174.34 8693.79,170.58 8769.5,176 C8942.32,188.36 9041.61,93.31 9156.5,223 C9256.11,335.44 9223.01,426.31 9156.5,561 C9136.19,602.13 8640,968.02 8416.68,1131.36 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7355.52,120.71,7347.07,101.28,7365.79,111.2,7355.52,120.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f292eacf5c00648cb4d50d7f5f818066]
link C_0001453238540802541239 to C_0000630185754256426097--><path d="M8149.51,467.26 C8181.7,616.6 8254.2,952.95 8289.47,1116.58 " fill="none" id="C_0001453238540802541239-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="8290.9754" cy="1123.5694" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8289.2909" x2="8292.66" y1="1115.7487" y2="1131.39"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8298.7961" x2="8283.1548" y1="1121.8848" y2="1125.2539"/><!--MD5=[96ea509b2ad1947f9d7bb54a63b044ef]
reverse link C_0001453238540802541239 to C_0002032009232244826154--><path d="M7694.33,434.36 C7263.01,473.37 6586.06,530.31 5998.5,561 C5375.97,593.51 3722.01,491.03 3207.5,843 C2896.05,1056.05 3047.16,1309.03 2782.5,1578 C2764.32,1596.47 2752.96,1592.1 2732.5,1608 C2621.83,1694.01 2615.65,1739.64 2508.5,1830 C2490.96,1844.79 2482.2,1843.27 2466.5,1860 C2254.1,2086.37 2097.5,2142.58 2097.5,2453 C2097.5,2453 2097.5,2453 2097.5,3833 C2097.5,3945.2 2151.66,4052.94 2216.55,4141.76 " fill="none" id="C_0001453238540802541239&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7707.34,433.18,7701.0039,429.7371,7695.3888,434.2617,7701.725,437.7046,7707.34,433.18" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2103.5,2708.5664,2107.5,2712.5664,2103.5,2716.5664,2099.5,2712.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="2110.5" y="2717.5669">creationDate_</text><!--MD5=[ab1296281abef24fab0757a8cbe429c3]
reverse link C_0001159823987743494688 to C_0001453238540802541239--><path d="M7361.71,115.9 C7373.63,127.48 7388.03,138.99 7403.5,146 C7516.29,197.12 7561.34,142.31 7680.5,176 C7796.1,208.68 7918.71,268.6 8007.17,316.9 " fill="none" id="C_0001159823987743494688&lt;-C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7356.29,120.35,7347.61,101.02,7366.45,110.72,7356.29,120.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M9866.18,138.36 C9860.52,150.44 9855.55,163.32 9852.5,176 C9836.6,242.14 9866.79,319.92 9886.79,361.41 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9872.02,126.59,9865.7678,130.1831,9866.6798,137.3363,9872.932,133.7432,9872.02,126.59" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9858.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="9865.5" y="189.0669">secret</text><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M9908.32,139.82 C9909.23,151.81 9910.02,164.29 9910.5,176 C9913.2,242.25 9908.31,319.99 9905.06,361.44 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9907.25,126.55,9903.7442,132.8516,9908.2127,138.5113,9911.7185,132.2098,9907.25,126.55" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9916.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="9923.5" y="189.0669">prev</text><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M3253.95,1310.11 C3146.36,1384.15 3002.85,1492.32 2895.5,1608 C2640.1,1883.21 2697.79,2034.11 2518.5,2364 C2513.13,2373.88 2506.93,2384.01 2500.58,2393.74 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3264.91,1302.6,3257.6995,1302.6944,3255.0134,1309.3866,3262.2239,1309.2922,3264.91,1302.6" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2901.5,1714.5664,2905.5,1718.5664,2901.5,1722.5664,2897.5,1718.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="2908.5" y="1723.5669">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M8827.89,461.69 C8757.2,498.52 8664.55,540.46 8576.5,561 C8380.76,606.66 7872.9,575.48 7672.5,591 C6860.49,653.9 6666.09,758.16 5853.5,813 C5791.16,817.21 3657.95,810.64 3604.5,843 C3505.67,902.83 3453.08,1030.71 3427.51,1118.41 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8824.88,455.37,8845.83,452.21,8831.42,467.74,8824.88,455.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M6033.02,2882.22 C6027.06,2907.85 6021.34,2934.07 6016.5,2959 C5968.38,3207.18 5978.38,3272.86 5935.5,3522 C5931.49,3545.28 5927.07,3569.5 5922.49,3593.68 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5921.52,3598.84,5927.1215,3590.7392,5922.4483,3593.9269,5919.2606,3589.2538,5921.52,3598.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M6075.89,2882.04 C6071.86,3047.21 6056.31,3305.31 6002.5,3522 C5996.62,3545.67 5989.21,3569.88 5980.91,3593.82 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5979.24,3598.6,5985.9983,3591.4358,5980.8981,3593.8829,5978.451,3588.7828,5979.24,3598.6" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6076.5" y="3238.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6086.5" y="3245.0669">loop_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M6553.18,2791.77 C6838.04,2842.75 7153.45,2908.97 7199.5,2959 C7384.72,3160.22 7174.81,3316.76 7280.5,3569 C7297.41,3609.36 7322.23,3648.83 7348.79,3684.38 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7352.03,3688.69,7349.7916,3679.0989,7349.014,3684.702,7343.4109,3683.9245,7352.03,3688.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5599.87,2839.47 C5487.93,2873.9 5370.22,2914.25 5263.5,2959 C5106.3,3024.92 4929.3,3105.36 4804.42,3163.17 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4799.63,3165.39,4809.4776,3165.2326,4804.166,3163.2865,4806.1121,3157.975,4799.63,3165.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5599.75,2866.82 C5528.49,2888.43 5455.72,2909.8 5386.5,2929 C5332.28,2944.04 5316.71,2940.69 5263.5,2959 C5103.28,3014.14 4927.93,3095.23 4804.36,3156.06 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4799.62,3158.39,4809.4609,3157.9931,4804.1035,3156.1768,4805.9197,3150.8195,4799.62,3158.39" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5446.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="5456.5" y="2925.0669">messageCallback_</text><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M6119.04,2882.08 C6146.43,2990.29 6180.07,3123.23 6197.6,3192.49 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6198.84,3197.36,6200.5041,3187.6527,6197.6105,3192.5135,6192.7497,3189.6199,6198.84,3197.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e8fa56f4be30a17bd0f0cd39eb9b8c23]
reverse link C_0001156367011091191681 to C_0000434245188016003403--><path d="M6148.47,2894.73 C6150.24,2900.53 6151.92,2906.3 6153.5,2912 C6181.32,3012.48 6197.77,3134.33 6205.04,3197.29 " fill="none" id="C_0001156367011091191681&lt;-C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6144.47,2882,6142.4522,2888.923,6148.0665,2893.4484,6150.0844,2886.5253,6144.47,2882" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6159.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="6169.5" y="2925.0669">sslErrorCallback_</text><!--MD5=[3f61ba6780eb7bfc931522a20294fda2]
link C_0001156367011091191681 to C_0002100370281243872283--><path d="M5820.45,2882.16 C5809.98,2891.84 5799.93,2901.8 5790.5,2912 C5750.69,2955.03 5715.46,3007.75 5686.44,3058.23 " fill="none" id="C_0001156367011091191681-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5683.83,3062.79,5691.7806,3056.9773,5686.3199,3058.4541,5684.8431,3052.9934,5683.83,3062.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b307344d3c58e3733026c6c7a02db5d]
reverse link C_0001156367011091191681 to C_0002100370281243872283--><path d="M5871.33,2891.42 C5864.55,2898.27 5857.92,2905.15 5851.5,2912 C5807.86,2958.61 5764.11,3012.39 5725.59,3062.73 " fill="none" id="C_0001156367011091191681&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5880.67,2882.09,5873.5978,2883.4987,5872.1781,2890.5687,5879.2503,2889.16,5880.67,2882.09" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5854.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5864.5" y="2925.0669">tlsPolicyPtr_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M6363.38,2888.89 C6501.56,2973.13 6662.08,3070.99 6778.37,3141.88 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6352.21,2882.08,6355.2551,2888.6166,6362.4601,2888.3198,6359.415,2881.7832,6352.21,2882.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6408.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="6418.5" y="2925.0669">connector_</text><!--MD5=[f423207d0e32839dd54b5872c5e0f583]
reverse link C_0001156367011091191681 to C_0000626107303889580949--><path d="M5586.87,2829.47 C5372.11,2880.02 5166.63,2928.22 5160.5,2929 C5091.21,2937.86 3957.96,2915.25 3903.5,2959 C3824.33,3022.6 3827.23,3161.09 3831.91,3216.2 " fill="none" id="C_0001156367011091191681&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5599.72,2826.45,5592.964,2823.9289,5588.0383,2829.1955,5594.7943,2831.7167,5599.72,2826.45" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5231.5" y="2918.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="5241.5" y="2925.0669">sslContextPtr_</text><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M7360.73,116.03 C7372.74,127.89 7387.45,139.54 7403.5,146 C7473.92,174.34 8693.79,170.58 8769.5,176 C8942.32,188.36 9027.18,107.69 9156.5,223 C9271.79,325.81 9201.14,410.86 9237.5,561 C9344.13,1001.31 9621.54,1252.43 9306.5,1578 C9271.25,1614.43 8443.59,1595.36 8394.5,1608 C8183.91,1662.2 8166.27,1765.84 7958.5,1830 C7858.74,1860.81 7814.53,1805.46 7725.5,1860 C7480.36,2010.17 7492.11,2138.42 7360.5,2394 C7334.49,2444.5 7361.45,2479.27 7316.5,2514 C7261.74,2556.32 7075.06,2534.51 7006.5,2544 C6858.61,2564.48 6698.34,2591.63 6553.19,2618.11 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7355.52,120.71,7347.07,101.28,7365.79,111.2,7355.52,120.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c243407103ec46e8c5ed77bbb7514164]
link C_0001278908569830571044 to C_0001156367011091191681--><path d="M6442.98,2142.61 C6417.79,2211.42 6349.49,2385.99 6261.5,2514 C6257.43,2519.93 6253.18,2525.85 6248.79,2531.76 " fill="none" id="C_0001278908569830571044-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6244.4489" cy="2537.4594" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6249.2879" x2="6239.61" y1="2531.0888" y2="2543.83"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6250.8195" x2="6238.0783" y1="2542.2983" y2="2532.6205"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M6879.43,3339.16 C6830.82,3411.94 6755.72,3508.76 6667.5,3569 C6507.11,3678.52 6297.49,3745.13 6133.9,3783.76 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6128.59,3785.01,6138.2657,3786.8486,6133.4578,3783.868,6136.4385,3779.0601,6128.59,3785.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M6890.61,3339.24 C6850.15,3412.3 6785.67,3509.46 6703.5,3569 C6535.08,3691.04 6307.83,3757.59 6133.7,3793.03 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6128.56,3794.07,6138.1781,3796.1896,6133.459,3793.0702,6136.5784,3788.3511,6128.56,3794.07" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6724.5" y="3558.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6734.5" y="3565.0669">loop_</text><!--MD5=[33283569ac1ba65b658e3f0b917458cb]
link C_0001706043459252151324 to C_0001897340460211641725--><path d="M6956.05,3339.27 C6972.62,3409.29 7003.28,3502.56 7057.5,3569 C7105.03,3627.24 7169.13,3676.01 7233.2,3715.08 " fill="none" id="C_0001706043459252151324-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7237.81,3717.87,7232.202,3709.7737,7233.539,3715.2703,7228.0424,3716.6073,7237.81,3717.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M6983.71,3351.31 C7015.02,3418.88 7061.31,3504.58 7118.5,3569 C7157.28,3612.68 7204.62,3653.19 7252.21,3688.66 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6978.23,3339.34,6977.0934,3346.461,6983.2294,3350.249,6984.366,3343.128,6978.23,3339.34" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7121.5" y="3558.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="7131.5" y="3565.0669">serverAddr_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M6957.34,3339.38 C6997.68,3579.25 7066.97,4204.88 6780.5,4590 C6684.99,4718.4 6516.72,4793.38 6385.6,4834.72 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6380.56,4836.3,6390.3423,4837.4435,6385.3339,4834.8135,6387.9639,4829.8052,6380.56,4836.3" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6974.5" y="4101.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="6984.5" y="4108.0669">channelPtr_</text><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M7360.72,116.06 C7372.73,127.92 7387.44,139.57 7403.5,146 C7484.27,178.37 8882.93,167.22 8969.5,176 C9083.72,187.58 9138.27,146.09 9223.5,223 C9330.11,319.2 9385.07,700.87 9405.5,843 C9451.98,1166.34 9573.14,1297.63 9405.5,1578 C8954.47,2332.35 8489.35,2213.27 7663.5,2514 C7602.07,2536.37 7568.77,2501.03 7519.5,2544 C7382.62,2663.37 7492.59,2784.55 7382.5,2929 C7315.72,3016.63 7217.11,3089.06 7129.77,3141.87 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7355.51,120.73,7347.06,101.3,7365.78,111.22,7355.51,120.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[255bb85fd16b3df7cc9a8a0088a159be]
link C_0000000982196670174162 to C_0001706043459252151324--><path d="M7140.87,2756.12 C7107.43,2835.98 7033.81,3011.83 6985.2,3127.95 " fill="none" id="C_0000000982196670174162-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6982.4915" cy="3134.4215" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6985.583" x2="6979.4" y1="3127.043" y2="3141.8"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6989.87" x2="6975.113" y1="3137.513" y2="3131.33"/><!--MD5=[d22c1faad4bb12ef7d278fc06caaf1fc]
link C_0002131890502232898697 to C_0001189407896771082466--><!--MD5=[7472b64d3d15154068f18b5db4215155]
link C_0001189407896771082466 to C_0000394452884449343416--><!--MD5=[f4eddc478ce7a73432f25ec782c6220c]
link C_0002131890502232898697 to C_0000026148367911088234--><!--MD5=[5c3eea4b4e7d98e2452cb31c6c061d73]
link C_0000026148367911088234 to C_0001166594284895168875--><!--MD5=[afcd30e82584d6dad1d68d23a951a309]
link C_0001166594284895168875 to C_0001016092423778930091--><!--MD5=[6d1a4a9ada3993cb3e52a4628aee3aaa]
link C_0000026148367911088234 to C_0000089957972753266749--><!--MD5=[0d1b7ede1facd23ad21dc11833636d6f]
@startuml
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
+~Date() : void
..
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+operator==(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
..
+after(double second) const : const Date
{static} +date() : const Date
{static} +fromDbString(const std::string & datetime) : Date
{static} +fromDbStringLocal(const std::string & datetime) : Date
+isSameSecond(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
{static} +now() : const Date
+roundDay() const : const Date
+roundSecond() const : const Date
+secondsSinceEpoch() const : int64_t
+swap(Date & that) : void
{static} +timezoneOffset() : int64_t
+tmStruct() const : struct tm
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbString() const : std::string
+toDbStringLocal() const : std::string
+toFormattedString(bool showMicroseconds) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
__
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
..
+family() const : sa_family_t
+getSockAddr() const : const struct sockaddr *
+ip6NetEndian() const : const uint32_t *
+ipNetEndian() const : uint32_t
+isIntranetIp() const : bool
+isIpV6() const : bool
+isLoopbackIp() const : bool
+isUnspecified() const : bool
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
__
}
class "InetAddress::()" as C_0000673025168912921705
class C_0000673025168912921705 {
__
+addr6_ : struct sockaddr_in6
+addr_ : struct sockaddr_in
}
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
__
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer() : void
+~FixedBuffer() : void
..
+add(size_t len) : void
+append(const char * buf, size_t len) : bool
+avail() const : int
+current() : char *
+data() const : const char *
+debugString() : const char *
+length() const : int
+reset() : void
+setCookie(void (*)() cookie) : void
+toString() const : std::string
+zeroBuffer() : void
__
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
__
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
+FixedBuffer() : void
+~FixedBuffer() : void
..
+add(size_t len) : void
+append(const char * buf, size_t len) : bool
+avail() const : int
+current() : char *
+data() const : const char *
+debugString() : const char *
+length() const : int
+reset() : void
+setCookie(void (*)() cookie) : void
+toString() const : std::string
+zeroBuffer() : void
__
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
+FixedBuffer() : void
+~FixedBuffer() : void
..
+add(size_t len) : void
+append(const char * buf, size_t len) : bool
+avail() const : int
+current() : char *
+data() const : const char *
+debugString() : const char *
+length() const : int
+reset() : void
+setCookie(void (*)() cookie) : void
+toString() const : std::string
+zeroBuffer() : void
__
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(const void *) : LogStream::self &
+operator<<<int N>(const char (&)[N] buf) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(const double &) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(bool v) : LogStream::self &
+operator<<(const unsigned long long &) : LogStream::self &
+operator<<(const long long &) : LogStream::self &
+operator<<(unsigned long) : LogStream::self &
+operator<<(long) : LogStream::self &
+operator<<(unsigned int) : LogStream::self &
+operator<<(int) : LogStream::self &
+operator<<(unsigned short) : LogStream::self &
+operator<<(short) : LogStream::self &
..
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
__
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+Fmt<T>(const char * fmt, T val) : void
..
+data() const : const char *
+length() const : int
__
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+Logger() : void
+Logger(Logger::LogLevel level) : void
+Logger(bool isSysErr) : void
+~Logger() : void
..
{static} +displayLocalTime() : bool
{static} +logLevel() : Logger::LogLevel
{static} +setDisplayLocalTime(bool showLocalTime) : void
+setIndex(int index) : Logger &
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
+stream() : LogStream &
__
}
enum "Logger::LogLevel" as C_0002131283840621188296
enum C_0002131283840621188296 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0000979080797342806546
class C_0000979080797342806546 {
+SourceFile(const char * filename = nullptr) : void
+SourceFile<int N>(const char (&)[N] arr) : void
__
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
..
+setIndex(int index) : RawLogger &
+stream() : LogStream &
__
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue() : void
+~MpscQueue() : void
..
+dequeue(T & output) : bool
+empty() : bool
+enqueue(T && input) : void
+enqueue(const T & input) : void
__
}
class "MpscQueue::BufferNode" as C_0000223701637084171141
class C_0000223701637084171141 {
+BufferNode() = default : void
+BufferNode(const T & data) : void
+BufferNode(T && data) : void
__
+dataPtr_ : T *
+next_ : std::atomic<BufferNode *>
}
class "MpscQueue<std::function<void()>>" as C_0002185746167032660910
class C_0002185746167032660910 {
__
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
..
+assertInLoopThread() : void
{static} +getEventLoopOfCurrentThread() : EventLoop *
+index() : size_t
+invalidateTimer(TimerId id) : void
+isCallingFunctions() : bool
+isInLoopThread() const : bool
+isRunning() : bool
+loop() : void
+moveToCurrentThread() : void
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+quit() : void
+removeChannel(Channel * chl) : void
+resetAfterFork() : void
+resetTimerQueue() : void
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAt(const Date & time, const Func & cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runInLoop<Functor>(Functor && f) : void
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+setIndex(size_t index) : void
+updateChannel(Channel * chl) : void
__
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
..
+getLoop() const : EventLoop *
+run() : void
+wait() : void
__
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() = deleted : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
..
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
+getNextLoop() : EventLoop *
+size() : size_t
+start() : void
+wait() : void
__
}
class "InetAddress::(anonymous_2577662)" as C_0001189407896771082466
class C_0001189407896771082466 {
__
+addr6_ : struct sockaddr_in6
+addr_ : struct sockaddr_in
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
..
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
..
+addInFront(const char * buf, size_t len) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+addInFrontInt8(const uint8_t b) : void
+append<int N>(const char (&)[N] buf) : void
+append(const std::string & buf) : void
+append(const char * buf, size_t len) : void
+append(const MsgBuffer & buf) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+appendInt8(const uint8_t b) : void
+beginWrite() const : const char *
+beginWrite() : char *
+ensureWritableBytes(size_t len) : void
+findCRLF() const : const char *
+hasWritten(size_t len) : void
+peek() const : const char *
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+peekInt8() const : uint8_t
+read(size_t len) : std::string
+readFd(int fd, int * retErrno) : ssize_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+readInt8() : uint8_t
+readableBytes() const : size_t
+retrieve(size_t len) : void
+retrieveAll() : void
+retrieveUntil(const char * end) : void
+swap(MsgBuffer & buf) noexcept : void
+unwrite(size_t offset) : void
+writableBytes() const : size_t
__
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
kSSLProtocolError
}
abstract "Certificate" as C_0001660397537883119469
abstract C_0001660397537883119469 {
+~Certificate() = default : void
..
{abstract} +pem() const = 0 : std::string
{abstract} +sha1Fingerprint() const = 0 : std::string
{abstract} +sha256Fingerprint() const = 0 : std::string
__
}
class "TLSPolicy" as C_0002100370281243872283
class C_0002100370281243872283 {
{static} +defaultClientPolicy(const std::string & hostname = "") : std::shared_ptr<TLSPolicy>
{static} +defaultServerPolicy(const std::string & certPath, const std::string & keyPath) : std::shared_ptr<TLSPolicy>
+getAllowBrokenChain() const : bool
+getAlpnProtocols() : const std::vector<std::string> &
+getAlpnProtocols() const : const std::vector<std::string> &
+getCaPath() const : const std::string &
+getCertPath() const : const std::string &
+getConfCmds() const : const std::vector<std::pair<std::string,std::string>> &
+getHostname() const : const std::string &
+getKeyPath() const : const std::string &
+getUseOldTLS() const : bool
+getUseSystemCertStore() const : bool
+getValidate() const : bool
+setAllowBrokenChain(bool allow) : TLSPolicy &
+setAlpnProtocols(std::vector<std::string> && alpnProtocols) : TLSPolicy &
+setAlpnProtocols(const std::vector<std::string> & alpnProtocols) : TLSPolicy &
+setCaPath(const std::string & caPath) : TLSPolicy &
+setCertPath(const std::string & certPath) : TLSPolicy &
+setConfCmds(const std::vector<std::pair<std::string,std::string>> & sslConfCmds) : TLSPolicy &
+setHostname(const std::string & hostname) : TLSPolicy &
+setKeyPath(const std::string & keyPath) : TLSPolicy &
+setUseOldTLS(bool useOldTLS) : TLSPolicy &
+setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &
+setValidate(bool enable) : TLSPolicy &
__
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
..
{abstract} +applicationProtocol() const = 0 : std::string
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +bytesSent() const = 0 : size_t
+clearContext() : void
{abstract} +connectDestroyed() = 0 : void
{abstract} +connectEstablished() = 0 : void
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) = 0 : void
{abstract} +forceClose() = 0 : void
+getContext<T>() const : std::shared_ptr<T>
{abstract} +getLoop() = 0 : EventLoop *
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
+hasContext() const : bool
{abstract} +isKeepAlive() = 0 : bool
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +keepAlive() = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +peerCertificate() const = 0 : CertificatePtr
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
+setCloseCallback(CloseCallback && cb) : void
+setCloseCallback(const CloseCallback & cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setContext(std::shared_ptr<void> && context) : void
+setContext(const std::shared_ptr<void> & context) : void
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
+setRecvMsgCallback(const RecvMessageCallback & cb) : void
+setRecvMsgCallback(RecvMessageCallback && cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
+setValidationPolicy(TLSPolicy && policy) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
{abstract} +shutdown() = 0 : void
{abstract} +sniName() const = 0 : std::string
+startClientEncryption(std::function<void (const TcpConnectionPtr &)> && callback, bool useOldTLS = false, bool validateCert = true, const std::string & hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
{abstract} +startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) = 0 : void
__
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+~TimingWheel() : void
..
+getLoop() : EventLoop *
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
__
}
class "TimingWheel::CallbackEntry" as C_0002013739811805694444
class C_0002013739811805694444 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
__
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
..
+address() const : const InetAddress &
+enableSSL(TLSPolicyPtr policy) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & caPath = "") : void
+getIoLoops() const : std::vector<EventLoop *>
+getLoop() const : EventLoop *
+ipPort() const : std::string
+kickoffIdleConnections(size_t timeout) : void
+name() const : const std::string &
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setIoLoops(const std::vector<EventLoop *> & ioLoops) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+start() : void
+stop() : void
__
}
class "TcpServer::IgnoreSigPipe" as C_0001489562721151066050
class C_0001489562721151066050 {
+IgnoreSigPipe() : void
__
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
+Socket(int sockfd) : void
+~Socket() : void
..
+accept(InetAddress * peeraddr) : int
+bindAddress(const InetAddress & localaddr) : void
+closeWrite() : void
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +createNonblockingSocketOrDie(int family) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
{static} +getSocketError(int sockfd) : int
+getSocketError() : int
{static} +isSelfConnect(int sockfd) : bool
+listen() : void
+read(char * buffer, uint64_t len) : int
+setKeepAlive(bool on) : void
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setTcpNoDelay(bool on) : void
__
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
..
+disableAll() : void
+disableReading() : void
+disableWriting() : void
+enableReading() : void
+enableWriting() : void
+events() const : int
+fd() const : int
+isNoneEvent() const : bool
+isReading() const : bool
+isWriting() const : bool
+ownerLoop() : EventLoop *
+remove() : void
+revents() const : int
+setCloseCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+tie(const std::shared_ptr<void> & obj) : void
+updateEvents(int events) : void
__
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
..
+addr() const : const InetAddress &
+listen() : void
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
__
}
abstract "TLSProvider" as C_0000464040622375950341
abstract C_0000464040622375950341 {
+TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void
+~TLSProvider() = default : void
..
+appendToWriteBuffer(const char * ptr, size_t size) : void
+applicationProtocol() const : const std::string &
{abstract} +close() = 0 : void
+getBufferedData() : MsgBuffer &
+getRecvBuffer() : MsgBuffer &
+peerCertificate() const : const CertificatePtr &
{abstract} +recvData(MsgBuffer * buffer) = 0 : void
+sendBufferedData() : bool
{abstract} +sendData(const char * ptr, size_t size) = 0 : ssize_t
+setCloseCallback(TLSProvider::CloseCallback cb) : void
+setErrorCallback(TLSProvider::ErrorCallback cb) : void
+setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void
+setMessageCallback(TLSProvider::MessageCallback cb) : void
+setWriteCallback(TLSProvider::WriteCallback cb) : void
+sniName() const : const std::string &
{abstract} +startEncryption() = 0 : void
__
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void
+~TcpConnectionImpl() : void
..
+applicationProtocol() const : std::string
+bytesReceived() const : size_t
+bytesSent() const : size_t
+connectDestroyed() : void
+connectEstablished() : void
+connected() const : bool
+disconnected() const : bool
+enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) : void
+forceClose() : void
+getLoop() : EventLoop *
+getRecvBuffer() : MsgBuffer *
+isKeepAlive() : bool
+isSSLConnection() const : bool
+keepAlive() : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+peerCertificate() const : CertificatePtr
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const char * msg, size_t len) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+setTcpNoDelay(bool on) : void
+shutdown() : void
+sniName() const : std::string
+startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) : void
__
}
class "TcpConnectionImpl::KickoffEntry" as C_0002266895444343633259
class C_0002266895444343633259 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
__
}
class "TcpConnectionImpl::BufferNode" as C_0001029063960859366412
class C_0001029063960859366412 {
+isFile() const : bool
+~BufferNode() : void
__
+closeConnection_ : bool
+fileBytesToSend_ : ssize_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
+nDataWritten_ : std::size_t
+offset_ : off_t
+sendFd_ : int
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
}
enum "TcpConnectionImpl::ConnStatus" as C_0001727349338344491225
enum C_0001727349338344491225 {
Disconnected
Connecting
Connected
Disconnecting
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
..
+assertInLoopThread() : void
{static} +newPoller(EventLoop * loop) : Poller *
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{abstract} +updateChannel(Channel * channel) = 0 : void
__
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
..
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
__
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
__
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
__
+len_ : const unsigned int
+str_ : const char *
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
..
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
..
+id() : TimerId
+isRepeat() : bool
+restart(const TimePoint & now) : void
+run() const : void
+when() const : const TimePoint &
__
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
__
}
class "ScopeExit<F>" as C_0000026148367911088234
class C_0000026148367911088234 {
+ScopeExit(F && f) : void
+~ScopeExit() : void
__
+f_ : F
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
+~TaskQueue() : void
..
+getName() const : std::string
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+syncTaskInQueue(const std::function<void ()> & task) : void
__
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+~ConcurrentTaskQueue() : void
..
+getName() const : std::string
+getTaskCount() : size_t
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+stop() : void
__
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+AsyncFileLogger() : void
+~AsyncFileLogger() : void
..
+flush() : void
+output(const char * msg, const uint64_t len) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+setFileSizeLimit(uint64_t limit) : void
+setSwitchOnLimitOnly(bool flag = true) : void
+startLogging() : void
__
}
class "AsyncFileLogger::LoggerFile" as C_0001453238540802541239
class C_0001453238540802541239 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName, bool switchOnLimitOnly = false) : void
+flush() : void
+getLength() : uint64_t
+open() : void
+operator bool() const : bool
+switchLog(bool openNewOne) : void
+writeLog(const StringPtr buf) : void
+~LoggerFile() : void
__
}
class "utils::Hash128" as C_0001166594284895168875
class C_0001166594284895168875 {
__
+bytes : unsigned char[16]
}
class "utils::Hash160" as C_0001016092423778930091
class C_0001016092423778930091 {
__
+bytes : unsigned char[20]
}
class "utils::Hash256" as C_0000080756732781028581
class C_0000080756732781028581 {
__
+bytes : unsigned char[32]
}
class "utils::RngState" as C_0000195316585713148470
class C_0000195316585713148470 {
__
+counter : uint64_t
+prev : utils::Hash256
+secret : utils::Hash256
+time : int64_t
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+SerialTaskQueue() = deleted : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
..
+getName() const : std::string
+getTaskCount() : size_t
+isRuningTask() : bool
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+stop() : void
+waitAllTasksFinished() : void
__
}
class "InetAddress::(anonymous_2039330)" as C_0000089957972753266749
class C_0000089957972753266749 {
__
+addr6_ : struct sockaddr_in6
+addr_ : struct sockaddr_in
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
..
+connect() : void
+connection() const : TcpConnectionPtr
+disconnect() : void
+enableRetry() : void
+enableSSL(TLSPolicyPtr policy) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
+getLoop() const : EventLoop *
+name() const : const std::string &
+retry() const : bool
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+stop() : void
__
}
class "TcpClient::IgnoreSigPipe" as C_0001278908569830571044
class C_0001278908569830571044 {
+IgnoreSigPipe() : void
__
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+~Connector() : void
..
+restart() : void
+serverAddress() const : const InetAddress &
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+start() : void
+stop() : void
__
}
enum "Connector::Status" as C_0000000982196670174162
enum C_0000000982196670174162 {
Disconnected
Connecting
Connected
}
C_0001897340460211641725 o- - C_0000673025168912921705
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 ..> C_0001930690020065325250
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0002131283840621188296 - -+ C_0002053752992472264214
C_0000979080797342806546 - -+ C_0002053752992472264214
C_0000716430590791918928 ..> C_0001930690020065325250
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000223701637084171141 - -+ C_0000912667184903365399
C_0002185746167032660910 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 ..> C_0000764690828649606524
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 ..> C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0002061035340998974559 ..> C_0001390130774830223499
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0002230624932100089526 ..> C_0001289495020269537351
C_0002230624932100089526 ..> C_0001897340460211641725
C_0002230624932100089526 ..> C_0001390130774830223499
C_0002230624932100089526 ..> C_0001660397537883119469
C_0002230624932100089526 ..> C_0002100370281243872283
C_0002230624932100089526 ..> C_0000434245188016003403
C_0002230624932100089526 ..> C_0000964465843177067305
C_0002230624932100089526 o- - C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #connectionCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #closeCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #writeCompleteCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 o- - C_0000434245188016003403 : #sslErrorCallback_
C_0002230624932100089526 o- - C_0002100370281243872283 : #tlsPolicy_
C_0002230624932100089526 <.. C_0001156367011091191681 : +<<friend>>
C_0002230624932100089526 <.. C_0000920759514274339356 : +<<friend>>
C_0002230624932100089526 <.. C_0001423170502760786790 : +<<friend>>
C_0000964465843177067305 ..> C_0001390130774830223499
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0002013739811805694444 - -+ C_0000964465843177067305
C_0001423170502760786790 ..> C_0001390130774830223499
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 ..> C_0002061035340998974559
C_0001423170502760786790 ..> C_0002230624932100089526
C_0001423170502760786790 ..> C_0001289495020269537351
C_0001423170502760786790 ..> C_0002100370281243872283
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 o- - C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 o- - C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 - -> C_0001390130774830223499 : -timingWheelMap_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 - -> C_0001390130774830223499 : -ioLoops_
C_0001423170502760786790 o- - C_0002100370281243872283 : -policyPtr_
C_0001423170502760786790 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0001489562721151066050 - -+ C_0001423170502760786790
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0000764690828649606524 ..> C_0001390130774830223499
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0000184886692180276257 ..> C_0001390130774830223499
C_0000184886692180276257 ..> C_0001897340460211641725
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0000464040622375950341 ..> C_0002230624932100089526
C_0000464040622375950341 ..> C_0002100370281243872283
C_0000464040622375950341 ..> C_0000626107303889580949
C_0000464040622375950341 ..> C_0001289495020269537351
C_0000464040622375950341 ..> C_0001660397537883119469
C_0000464040622375950341 - -> C_0002230624932100089526 : #conn_
C_0000464040622375950341 o- - C_0002100370281243872283 : #policyPtr_
C_0000464040622375950341 o- - C_0000626107303889580949 : #contextPtr_
C_0000464040622375950341 o- - C_0001289495020269537351 : #recvBuffer_
C_0000464040622375950341 - -> C_0001390130774830223499 : #loop_
C_0000464040622375950341 o- - C_0001660397537883119469 : #peerCertificate_
C_0000464040622375950341 o- - C_0001289495020269537351 : #writeBuffer_
C_0000920759514274339356 ..> C_0001390130774830223499
C_0000920759514274339356 ..> C_0001897340460211641725
C_0000920759514274339356 ..> C_0002100370281243872283
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001289495020269537351
C_0000920759514274339356 ..> C_0002230624932100089526
C_0000920759514274339356 ..> C_0001660397537883119469
C_0000920759514274339356 ..> C_0000964465843177067305
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 o- - C_0000464040622375950341 : #tlsProviderPtr_
C_0000920759514274339356 o- - C_0002230624932100089526 : #upgradeCallback_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0002266895444343633259 - -+ C_0000920759514274339356
C_0002266895444343633259 ..> C_0002230624932100089526
C_0002266895444343633259 - -> C_0002230624932100089526 : -conn_
C_0001029063960859366412 - -+ C_0000920759514274339356
C_0001029063960859366412 - -> C_0001289495020269537351 : +msgBuffer_
C_0001727349338344491225 - -+ C_0000920759514274339356
C_0000300034150397884642 ..> C_0001390130774830223499
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 ..> C_0001390130774830223499
C_0000607400095182694101 ..> C_0002026475275429760163
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0001453238540802541239 - -+ C_0000630185754256426097
C_0001453238540802541239 o- - C_0002032009232244826154 : #creationDate_
C_0001159823987743494688 <|- - C_0001453238540802541239
C_0000195316585713148470 o- - C_0000080756732781028581 : +secret
C_0000195316585713148470 o- - C_0000080756732781028581 : +prev
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0001156367011091191681 ..> C_0001390130774830223499
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 ..> C_0002230624932100089526
C_0001156367011091191681 ..> C_0001289495020269537351
C_0001156367011091191681 ..> C_0000434245188016003403
C_0001156367011091191681 ..> C_0002100370281243872283
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 o- - C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 o- - C_0002100370281243872283 : -tlsPolicyPtr_
C_0001156367011091191681 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0001278908569830571044 - -+ C_0001156367011091191681
C_0001706043459252151324 ..> C_0001390130774830223499
C_0001706043459252151324 ..> C_0001897340460211641725
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0000000982196670174162 - -+ C_0001706043459252151324

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>