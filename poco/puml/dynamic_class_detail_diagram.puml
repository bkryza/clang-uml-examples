@startuml
left to right direction
package [Dynamic] as C_0002281307121949168090 {
abstract "VarHolder" as C_0000820091630223006238
abstract C_0000820091630223006238 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104{VarHolder}]] {
+~VarHolder() : void
{abstract} +clone(Placeholder<Dynamic::VarHolder> * pHolder = 0) const = 0 : Dynamic::VarHolder *
{abstract} +type() const = 0 : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & val) const : void
+convert(Timestamp & val) const : void
+convert(UUID & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
#VarHolder() : void
#cloneHolder<T>(Placeholder<Dynamic::VarHolder> * pVarHolder, const T & val) : class Dynamic::VarHolder *
#convertToSmaller<F,T>(const F & from, T & to) : void
#convertToSmallerUnsigned<F,T>(const F & from, T & to) : void
#convertSignedToUnsigned<F,T>(const F & from, T & to) : void
#convertSignedFloatToUnsigned<F,T>(const F & from, T & to) : void
#convertUnsignedToSigned<F,T>(const F & from, T & to) : void
-checkUpperLimit<F,T>(const F & from) : void
-checkLowerLimit<F,T>(const F & from) : void
-checkUpperLimitFloat<F,T>(const F & from) : void
-checkLowerLimitFloat<F,T>(const F & from) : void
}
class "VarHolderImpl<T>" as C_0001112867090784569162
class C_0001112867090784569162 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{VarHolderImpl}]] {
+VarHolderImpl<T>(const T & val) : void
+~VarHolderImpl<T>() : void
+type() const : const std::type_info &
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const T &
-VarHolderImpl<T>() : void
-VarHolderImpl<T>(const VarHolderImpl<T> & ) : void
-operator=(const VarHolderImpl<T> & ) : VarHolderImpl<T> &
-_val : T [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754{_val}]]]
}
class "VarHolderImpl<signed char>" as C_0002149165824584484566
class C_0002149165824584484566 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
}
class "VarHolderImpl<short>" as C_0000198808093629002393
class C_0000198808093629002393 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915{VarHolderImpl}]] {
}
class "VarHolderImpl<int>" as C_0000976768452323437983
class C_0000976768452323437983 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068{VarHolderImpl}]] {
}
class "VarHolderImpl<long>" as C_0001804431617899042426
class C_0001804431617899042426 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220{VarHolderImpl}]] {
}
class "VarHolderImpl<unsigned char>" as C_0001832009513687525374
class C_0001832009513687525374 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387{VarHolderImpl}]] {
}
class "VarHolderImpl<unsigned short>" as C_0000572186414558919480
class C_0000572186414558919480 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539{VarHolderImpl}]] {
}
class "VarHolderImpl<unsigned int>" as C_0000166253842255815357
class C_0000166253842255815357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691{VarHolderImpl}]] {
}
class "VarHolderImpl<unsigned long>" as C_0001459401574844645109
class C_0001459401574844645109 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843{VarHolderImpl}]] {
}
class "VarHolderImpl<bool>" as C_0000599279109574326060
class C_0000599279109574326060 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016{VarHolderImpl}]] {
}
class "VarHolderImpl<float>" as C_0000384619052225252533
class C_0000384619052225252533 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166{VarHolderImpl}]] {
}
class "VarHolderImpl<double>" as C_0002242257052791493112
class C_0002242257052791493112 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319{VarHolderImpl}]] {
}
class "VarHolderImpl<char>" as C_0001942181379759217898
class C_0001942181379759217898 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478{VarHolderImpl}]] {
}
class "VarHolderImpl<std::string>" as C_0002291903337356664508
class C_0002291903337356664508 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628{VarHolderImpl}]] {
}
class "VarHolderImpl<std::basic_string<unsigned short,UTF16CharTraits>>" as C_0001280441251658550342
class C_0001280441251658550342 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825{VarHolderImpl}]] {
}
class "VarHolderImpl<long long>" as C_0001646173285346905617
class C_0001646173285346905617 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309{VarHolderImpl}]] {
}
class "VarHolderImpl<unsigned long long>" as C_0001583654034047392858
class C_0001583654034047392858 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457{VarHolderImpl}]] {
}
class "VarHolderImpl<std::vector<T,std::allocator<T>>>" as C_0001958977447667255166
class C_0001958977447667255166 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608{VarHolderImpl}]] {
}
class "VarHolderImpl<std::list<T,std::allocator<T>>>" as C_0000080571782585268469
class C_0000080571782585268469 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673{VarHolderImpl}]] {
}
class "VarHolderImpl<std::deque<T,std::allocator<T>>>" as C_0001054432913031815629
class C_0001054432913031815629 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748{VarHolderImpl}]] {
}
class "VarHolderImpl<DateTime>" as C_0000699000175415913074
class C_0000699000175415913074 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813{VarHolderImpl}]] {
}
class "VarHolderImpl<LocalDateTime>" as C_0001850771625416044357
class C_0001850771625416044357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963{VarHolderImpl}]] {
}
class "VarHolderImpl<Timestamp>" as C_0001458511670125196521
class C_0001458511670125196521 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098{VarHolderImpl}]] {
}
class "VarHolderImpl<UUID>" as C_0001286239480653274581
class C_0001286239480653274581 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233{VarHolderImpl}]] {
}
class "VarIterator" as C_0002237184725500898553
class C_0002237184725500898553 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33{VarIterator}]] {
+VarIterator(Dynamic::Var * pVar, bool positionEnd) : void
+VarIterator(const Dynamic::VarIterator & other) : void
+VarIterator(Dynamic::VarIterator && other) : void
+~VarIterator() : void
+operator=(const Dynamic::VarIterator & other) : Dynamic::VarIterator &
+operator=(Dynamic::VarIterator && other) : Dynamic::VarIterator &
+operator==(const Dynamic::VarIterator & other) const : bool
+operator!=(const Dynamic::VarIterator & other) const : bool
+operator*() const : Dynamic::Var &
+operator->() const : Dynamic::Var *
+operator++() const : const Dynamic::VarIterator &
+operator++(int ) const : Dynamic::VarIterator
+operator--() const : const Dynamic::VarIterator &
+operator--(int ) const : Dynamic::VarIterator
+operator+(std::size_t diff) const : Dynamic::VarIterator
+operator-(std::size_t diff) const : Dynamic::VarIterator
+swap(Dynamic::VarIterator & other) : void
-VarIterator() : void
-increment() const : void
-decrement() const : void
-setPosition(std::size_t pos) const : void
-_pVar : Dynamic::Var * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117{_pVar}]]]
-_position : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118{_position}]]]
{static} +POSITION_END : const std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43{POSITION_END}]]]
}
class "Var" as C_0001827593751126946500
class C_0001827593751126946500 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41{Var}]] {
+Var() : void
+Var(const char * pVal) : void
+Var(const Dynamic::Var & other) : void
+~Var() : void
+swap(Dynamic::Var & other) : void
+begin() const : Dynamic::Var::ConstIterator
+end() const : Dynamic::Var::ConstIterator
+begin() : Dynamic::Var::Iterator
+end() : Dynamic::Var::Iterator
+operator!() const : bool
+operator=(const Dynamic::Var & other) : Dynamic::Var &
+operator+(const Dynamic::Var & other) const : const Dynamic::Var
+operator+(const char * other) const : const Dynamic::Var
+operator++() : Dynamic::Var &
+operator++(int ) : const Dynamic::Var
+operator--() : Dynamic::Var &
+operator--(int ) : const Dynamic::Var
+operator+=(const Dynamic::Var & other) : Dynamic::Var &
+operator+=(const char * other) : Dynamic::Var &
+operator-(const Dynamic::Var & other) const : const Dynamic::Var
+operator-=(const Dynamic::Var & other) : Dynamic::Var &
+operator*(const Dynamic::Var & other) const : const Dynamic::Var
+operator*=(const Dynamic::Var & other) : Dynamic::Var &
+operator/(const Dynamic::Var & other) const : const Dynamic::Var
+operator/=(const Dynamic::Var & other) : Dynamic::Var &
+operator==(const char * other) const : bool
+operator==(const Dynamic::Var & other) const : bool
+operator!=(const Dynamic::Var & other) const : bool
+operator!=(const char * other) const : bool
+operator<(const Dynamic::Var & other) const : bool
+operator<=(const Dynamic::Var & other) const : bool
+operator>(const Dynamic::Var & other) const : bool
+operator>=(const Dynamic::Var & other) const : bool
+operator||(const Dynamic::Var & other) const : bool
+operator&&(const Dynamic::Var & other) const : bool
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+at(std::size_t n) : char &
+operator[](const std::string & name) : Dynamic::Var &
+operator[](const std::string & name) const : const Dynamic::Var &
+type() const : const std::type_info &
+empty() : void
+clear() : void
+isEmpty() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
+toString() const : std::string
{static} +parse(const std::string & val) : Dynamic::Var
{static} +toString(const Dynamic::Var & var) : std::string
-getAt(std::size_t n) : Dynamic::Var &
-getAt(const std::string & n) : Dynamic::Var &
{static} -parse(const std::string & val, std::string::size_type & offset) : Dynamic::Var
{static} -parseObject(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseArray(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseString(const std::string & val, std::string::size_type & pos) : std::string
{static} -parseJSONString(const std::string & val, std::string::size_type & pos) : std::string
{static} -skipWhiteSpace(const std::string & val, std::string::size_type & pos) : void
-content() const : Dynamic::VarHolder *
-destruct() : void
-construct(const char * value) : void
-construct(const Dynamic::Var & other) : void
+Var<T>(const T & val) : void
+convert<T>(T & val) : void
+convert<T>() : T
+operator type-parameter-0-0<T>() : T
+extract<T>() : const T &
+operator=<T>(const T & other) : class Dynamic::Var &
+operator+<T>(const T & other) : const class Dynamic::Var
+operator+=<T>(const T & other) : class Dynamic::Var &
+operator-<T>(const T & other) : const class Dynamic::Var
+operator-=<T>(const T & other) : class Dynamic::Var &
+operator*<T>(const T & other) : const class Dynamic::Var
+operator*=<T>(const T & other) : class Dynamic::Var &
+operator/<T>(const T & other) : const class Dynamic::Var
+operator/=<T>(const T & other) : class Dynamic::Var &
+operator==<T>(const T & other) : _Bool
+operator!=<T>(const T & other) : _Bool
+operator<<T>(const T & other) : _Bool
+operator<=<T>(const T & other) : _Bool
+operator><T>(const T & other) : _Bool
+operator>=<T>(const T & other) : _Bool
+operator||<T>(const T & other) : _Bool
+operator&&<T>(const T & other) : _Bool
+operator[]<T>(const T & n) : class Dynamic::Var &
+operator[]<T>(const T & n) : const class Dynamic::Var &
-add<T>(const Dynamic::Var & other) : T
-subtract<T>(const Dynamic::Var & other) : T
-multiply<T>(const Dynamic::Var & other) : T
-divide<T>(const Dynamic::Var & other) : T
-holderImpl<T,E>(const std::string errorMessage = "") : VarHolderImpl<T> *
-structIndexOperator<T,N>(T * pStr, N n) : class Dynamic::Var &
-construct<ValueType>(const ValueType & value) : void
-_placeholder : Placeholder<Dynamic::VarHolder> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632{_placeholder}]]]
}
class "Struct<K,M=std::map<K, Var>,S=std::set<K>>" as C_0000562679976742134348
class C_0000562679976742134348 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
+Struct<K, M, S>() : void
+Struct<K, M, S>(const Dynamic::Struct::Data & val) : void
+~Struct<K, M, S>() : void
+operator[](const K & name) : Dynamic::Var &
+operator[](const K & name) const : const Dynamic::Var &
+contains(const K & name) const : bool
+find(const K & name) : Dynamic::Struct::Iterator
+find(const K & name) const : Dynamic::Struct::ConstIterator
+end() : Dynamic::Struct::Iterator
+end() const : Dynamic::Struct::ConstIterator
+begin() : Dynamic::Struct::Iterator
+begin() const : Dynamic::Struct::ConstIterator
+insert(const Dynamic::Struct::ValueType & aPair) : Dynamic::Struct::InsRetVal
+erase(const K & key) : Dynamic::Struct::SizeType
+erase(Dynamic::Struct::Iterator & it) : void
+clear() : void
+swap(Struct<K,M,S> & other) : void
+empty() const : bool
+size() const : Dynamic::Struct::SizeType
+members() const : Dynamic::Struct::NameSet
+getVar(const K & key) const : Dynamic::Var
+toString() const : std::string
+Struct<K, M, S><T>(const std::map<K,T> & val) : void
+Struct<K, M, S><T>(const ordered_map<K,T> & val) : void
+insert<T>(const K & key, const T & value) : Dynamic::Struct::InsRetVal
+getVar<DefT=class Poco::Dynamic::Var>(const K & key, const DefT & defaultValue) : class Dynamic::Var
-assignMap<T>(const T & map) : void
-_data : Dynamic::Struct::Data [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247{_data}]]]
}
class "VarHolderImpl<Dynamic::Struct<std::string>>" as C_0000069885356623718991
class C_0000069885356623718991 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252{VarHolderImpl}]] {
}
class "VarHolderImpl<Dynamic::Struct<int>>" as C_0002033788483863182904
class C_0002033788483863182904 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438{VarHolderImpl}]] {
}
class "VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>>>" as C_0002153171854526901050
class C_0002153171854526901050 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810{VarHolderImpl}]] {
}
class "Struct<K,M,S>" as C_0000876644825045799418
class C_0000876644825045799418 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38{Struct}]] {
}
}
C_0000820091630223006238 <|-- C_0001112867090784569162
C_0002149165824584484566 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0002149165824584484566
C_0000198808093629002393 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000198808093629002393
C_0000976768452323437983 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000976768452323437983
C_0001804431617899042426 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001804431617899042426
C_0001832009513687525374 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001832009513687525374
C_0000572186414558919480 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000572186414558919480
C_0000166253842255815357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000166253842255815357
C_0001459401574844645109 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001459401574844645109
C_0000599279109574326060 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000599279109574326060
C_0000384619052225252533 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000384619052225252533
C_0002242257052791493112 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0002242257052791493112
C_0001942181379759217898 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001942181379759217898
C_0002291903337356664508 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0002291903337356664508
C_0001280441251658550342 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001280441251658550342
C_0001646173285346905617 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001646173285346905617
C_0001583654034047392858 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001583654034047392858
C_0001958977447667255166 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001958977447667255166
C_0000080571782585268469 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000080571782585268469
C_0001054432913031815629 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001054432913031815629
C_0000699000175415913074 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000699000175415913074
C_0001850771625416044357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001850771625416044357
C_0001458511670125196521 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001458511670125196521
C_0001286239480653274581 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0001286239480653274581
C_0002237184725500898553 --> C_0001827593751126946500 : -_pVar
C_0002237184725500898553 <.. C_0001827593751126946500 : +<<friend>>
C_0001827593751126946500 o-- C_0000820091630223006238 : -_placeholder
C_0000069885356623718991 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0000069885356623718991
C_0002033788483863182904 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0002033788483863182904
C_0002153171854526901050 ..|> C_0001112867090784569162
C_0000820091630223006238 <|-- C_0002153171854526901050

'Generated with clang-uml, version 0.3.4-2-gc91fe43
'LLVM version Ubuntu clang version 15.0.6
@enduml
