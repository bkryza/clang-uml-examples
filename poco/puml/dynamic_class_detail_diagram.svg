<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="12882px" preserveAspectRatio="none" style="width:5556px;height:12882px;" version="1.1" viewBox="0 0 5556 12882" width="5556px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ppa7hh4x5w18" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[031cc931b6e6b4333e02cc6a702b3341]
cluster C_0002281307121949168090--><polygon fill="#FFFFFF" filter="url(#f1ppa7hh4x5w18)" points="22,24,94,24,101,46.2969,5534,46.2969,5534,12870,22,12870,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="101" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="38.9951">Dynamic</text><!--MD5=[63e3babcd9679d0fc26b559e71357f11]
class C_0000820091630223006238--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104" target="_top" title="VarHolder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104" xlink:show="new" xlink:title="VarHolder" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="696.2344" id="C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.5;" width="686" x="1281" y="6173"/><ellipse cx="1588.75" cy="6189" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1588.8594,6184.3438 L1587.7031,6189.4219 L1590.0313,6189.4219 L1588.8594,6184.3438 Z M1587.375,6182.1094 L1590.3594,6182.1094 L1593.7188,6194.5 L1591.2656,6194.5 L1590.5,6191.4375 L1587.2188,6191.4375 L1586.4688,6194.5 L1584.0313,6194.5 L1587.375,6182.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="1609.25" y="6193.1543">VarHolder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1282" x2="1966" y1="6205" y2="6205"/><polygon fill="#FFFF44" points="1292,6211,1296,6215,1292,6219,1288,6215" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1301" y="6219.2104">VarHolder() : void</text><ellipse cx="1292" cy="6228.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1301" y="6232.0151">~VarHolder() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1282" x2="1966" y1="6238.6094" y2="6238.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1289" y="6246.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="1301" y="6252.8198">checkLowerLimit&lt;F,T&gt;(const F &amp; from) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1289" y="6259.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="1301" y="6265.6245">checkLowerLimitFloat&lt;F,T&gt;(const F &amp; from) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1289" y="6272.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="1301" y="6278.4292">checkUpperLimit&lt;F,T&gt;(const F &amp; from) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1289" y="6285.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="1301" y="6291.2339">checkUpperLimitFloat&lt;F,T&gt;(const F &amp; from) const : void</text><ellipse cx="1292" cy="6300.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="512" x="1301" y="6304.0386">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pHolder = 0) const = 0 : Dynamic::VarHolder *</text><polygon fill="#FFFF44" points="1292,6308.6328,1296,6312.6328,1292,6316.6328,1288,6312.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="660" x="1301" y="6316.8433">cloneHolder&lt;T&gt;(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder, const T &amp; val) const : class Dynamic::VarHolder *</text><ellipse cx="1292" cy="6326.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1301" y="6329.6479">convert(UInt16 &amp; val) const : void</text><ellipse cx="1292" cy="6339.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1301" y="6342.4526">convert(Int8 &amp; val) const : void</text><ellipse cx="1292" cy="6352.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1301" y="6355.2573">convert(Int16 &amp; val) const : void</text><ellipse cx="1292" cy="6364.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1301" y="6368.062">convert(Int32 &amp; val) const : void</text><ellipse cx="1292" cy="6377.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1301" y="6380.8667">convert(Int64 &amp; val) const : void</text><ellipse cx="1292" cy="6390.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1301" y="6393.6714">convert(UInt8 &amp; val) const : void</text><ellipse cx="1292" cy="6403.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1301" y="6406.4761">convert(UTF16String &amp; val) const : void</text><ellipse cx="1292" cy="6416.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1301" y="6419.2808">convert(std::string &amp; val) const : void</text><ellipse cx="1292" cy="6428.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1301" y="6432.0854">convert(char &amp; val) const : void</text><ellipse cx="1292" cy="6441.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1301" y="6444.8901">convert(double &amp; val) const : void</text><ellipse cx="1292" cy="6454.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1301" y="6457.6948">convert(float &amp; val) const : void</text><ellipse cx="1292" cy="6467.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1301" y="6470.4995">convert(bool &amp; val) const : void</text><ellipse cx="1292" cy="6480.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1301" y="6483.3042">convert(unsigned long long &amp; val) const : void</text><ellipse cx="1292" cy="6492.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1301" y="6496.1089">convert(long long &amp; val) const : void</text><ellipse cx="1292" cy="6505.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1301" y="6508.9136">convert(UUID &amp; val) const : void</text><ellipse cx="1292" cy="6518.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1301" y="6521.7183">convert(Timestamp &amp; val) const : void</text><ellipse cx="1292" cy="6531.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1301" y="6534.5229">convert(LocalDateTime &amp; val) const : void</text><ellipse cx="1292" cy="6544.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1301" y="6547.3276">convert(DateTime &amp; val) const : void</text><ellipse cx="1292" cy="6556.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1301" y="6560.1323">convert(UInt64 &amp; val) const : void</text><ellipse cx="1292" cy="6569.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1301" y="6572.937">convert(UInt32 &amp; val) const : void</text><polygon fill="#FFFF44" points="1292,6577.5313,1296,6581.5313,1292,6585.5313,1288,6581.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="1301" y="6585.7417">convertSignedFloatToUnsigned&lt;F,T&gt;(const F &amp; from, T &amp; to) const : void</text><polygon fill="#FFFF44" points="1292,6590.3359,1296,6594.3359,1292,6598.3359,1288,6594.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="1301" y="6598.5464">convertSignedToUnsigned&lt;F,T&gt;(const F &amp; from, T &amp; to) const : void</text><polygon fill="#FFFF44" points="1292,6603.1406,1296,6607.1406,1292,6611.1406,1288,6607.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="1301" y="6611.3511">convertToSmaller&lt;F,T&gt;(const F &amp; from, T &amp; to) const : void</text><polygon fill="#FFFF44" points="1292,6615.9453,1296,6619.9453,1292,6623.9453,1288,6619.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="396" x="1301" y="6624.1558">convertToSmallerUnsigned&lt;F,T&gt;(const F &amp; from, T &amp; to) const : void</text><polygon fill="#FFFF44" points="1292,6628.75,1296,6632.75,1292,6636.75,1288,6632.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="1301" y="6636.9604">convertUnsignedToSigned&lt;F,T&gt;(const F &amp; from, T &amp; to) const : void</text><ellipse cx="1292" cy="6646.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1301" y="6649.7651">isArray() const : bool</text><ellipse cx="1292" cy="6659.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1301" y="6662.5698">isBoolean() const : bool</text><ellipse cx="1292" cy="6672.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1301" y="6675.3745">isDate() const : bool</text><ellipse cx="1292" cy="6684.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1301" y="6688.1792">isDateTime() const : bool</text><ellipse cx="1292" cy="6697.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1301" y="6700.9839">isDeque() const : bool</text><ellipse cx="1292" cy="6710.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1301" y="6713.7886">isInteger() const : bool</text><ellipse cx="1292" cy="6723.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1301" y="6726.5933">isList() const : bool</text><ellipse cx="1292" cy="6736.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1301" y="6739.3979">isNumeric() const : bool</text><ellipse cx="1292" cy="6748.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1301" y="6752.2026">isOrdered() const : bool</text><ellipse cx="1292" cy="6761.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1301" y="6765.0073">isSigned() const : bool</text><ellipse cx="1292" cy="6774.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1301" y="6777.812">isString() const : bool</text><ellipse cx="1292" cy="6787.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1301" y="6790.6167">isStruct() const : bool</text><ellipse cx="1292" cy="6800.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1301" y="6803.4214">isTime() const : bool</text><ellipse cx="1292" cy="6813.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1301" y="6816.2261">isUUID() const : bool</text><ellipse cx="1292" cy="6825.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1301" y="6829.0308">isVector() const : bool</text><ellipse cx="1292" cy="6838.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1301" y="6841.8354">size() const : std::size_t</text><ellipse cx="1292" cy="6851.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="1301" y="6854.6401">type() const = 0 : const std::type_info &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1282" x2="1966" y1="6861.2344" y2="6861.2344"/></a><!--MD5=[5bec7878bc8351ff61befe9ac854c5da]
class C_0001112867090784569162--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="179.2422" id="C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="3773.5" y="5733.5"/><ellipse cx="3985.25" cy="5749.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3988.2188,5755.1406 Q3987.6406,5755.4375 3987,5755.5781 Q3986.3594,5755.7344 3985.6563,5755.7344 Q3983.1563,5755.7344 3981.8281,5754.0938 Q3980.5156,5752.4375 3980.5156,5749.3125 Q3980.5156,5746.1875 3981.8281,5744.5313 Q3983.1563,5742.875 3985.6563,5742.875 Q3986.3594,5742.875 3987,5743.0313 Q3987.6563,5743.1875 3988.2188,5743.4844 L3988.2188,5746.2031 Q3987.5938,5745.625 3987,5745.3594 Q3986.4063,5745.0781 3985.7813,5745.0781 Q3984.4375,5745.0781 3983.75,5746.1563 Q3983.0625,5747.2188 3983.0625,5749.3125 Q3983.0625,5751.4063 3983.75,5752.4844 Q3984.4375,5753.5469 3985.7813,5753.5469 Q3986.4063,5753.5469 3987,5753.2813 Q3987.5938,5753 3988.2188,5752.4219 L3988.2188,5755.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="4005.75" y="5753.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="4297.5" y="5730.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="4298.5" y="5742.6387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3774.5" x2="4302.5" y1="5765.5" y2="5765.5"/><ellipse cx="3784.5" cy="5776.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="3793.5" y="5779.7104">VarHolderImpl(const T &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3781.5" y="5786.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="3793.5" y="5792.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3781.5" y="5799.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="3793.5" y="5805.3198">VarHolderImpl(const VarHolderImpl&lt;T&gt; &amp;) : void</text><ellipse cx="3784.5" cy="5814.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3793.5" y="5818.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3774.5" x2="4302.5" y1="5824.7188" y2="5824.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3781.5" y="5832.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="3793.5" y="5838.9292">operator=(const VarHolderImpl&lt;T&gt; &amp;) : VarHolderImpl&lt;T&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3774.5" x2="4302.5" y1="5845.5234" y2="5845.5234"/><ellipse cx="3784.5" cy="5856.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="3793.5" y="5859.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="3784.5" cy="5869.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="3793.5" y="5872.5386">type() const : const std::type_info &amp;</text><ellipse cx="3784.5" cy="5882.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3793.5" y="5885.3433">value() const : const T &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3774.5" x2="4302.5" y1="5891.9375" y2="5891.9375"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3779.5" y="5897.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3781.5" y="5899.9375"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="3793.5" y="5906.1479">_val : T</text></a><!--MD5=[ca8da3ab2e5c399aaf21ac160b12bb93]
class C_0002149165824584484566--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="473.75" id="C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2339.5" y="5110"/><ellipse cx="2518.25" cy="5126" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2521.2188,5131.6406 Q2520.6406,5131.9375 2520,5132.0781 Q2519.3594,5132.2344 2518.6563,5132.2344 Q2516.1563,5132.2344 2514.8281,5130.5938 Q2513.5156,5128.9375 2513.5156,5125.8125 Q2513.5156,5122.6875 2514.8281,5121.0313 Q2516.1563,5119.375 2518.6563,5119.375 Q2519.3594,5119.375 2520,5119.5313 Q2520.6563,5119.6875 2521.2188,5119.9844 L2521.2188,5122.7031 Q2520.5938,5122.125 2520,5121.8594 Q2519.4063,5121.5781 2518.7813,5121.5781 Q2517.4375,5121.5781 2516.75,5122.6563 Q2516.0625,5123.7188 2516.0625,5125.8125 Q2516.0625,5127.9063 2516.75,5128.9844 Q2517.4375,5130.0469 2518.7813,5130.0469 Q2519.4063,5130.0469 2520,5129.7813 Q2520.5938,5129.5 2521.2188,5128.9219 L2521.2188,5131.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2538.75" y="5130.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="2797.5" y="5107"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="2798.5" y="5119.1387">signed char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="5142" y2="5142"/><ellipse cx="2350.5" cy="5153" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2359.5" y="5156.2104">VarHolderImpl(Int8 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5162.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="5169.0151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5175.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="2359.5" y="5181.8198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp;) : void</text><ellipse cx="2350.5" cy="5191.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359.5" y="5194.6245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="5201.2188" y2="5201.2188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5209.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="2359.5" y="5215.4292">operator=(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp;) : Dynamic::VarHolderImpl&lt;Int8&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="5222.0234" y2="5222.0234"/><ellipse cx="2350.5" cy="5233.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359.5" y="5236.2339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350.5" cy="5245.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359.5" y="5249.0386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350.5" cy="5258.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2359.5" y="5261.8433">convert(UTF16String &amp; val) const : void</text><ellipse cx="2350.5" cy="5271.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359.5" y="5274.6479">convert(std::string &amp; val) const : void</text><ellipse cx="2350.5" cy="5284.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="5287.4526">convert(char &amp; val) const : void</text><ellipse cx="2350.5" cy="5297.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359.5" y="5300.2573">convert(double &amp; val) const : void</text><ellipse cx="2350.5" cy="5309.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="5313.062">convert(float &amp; val) const : void</text><ellipse cx="2350.5" cy="5322.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359.5" y="5325.8667">convert(bool &amp; val) const : void</text><ellipse cx="2350.5" cy="5335.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359.5" y="5338.6714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350.5" cy="5348.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="5351.4761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350.5" cy="5361.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="5364.2808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350.5" cy="5373.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="5377.0854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350.5" cy="5386.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359.5" y="5389.8901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350.5" cy="5399.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="5402.6948">convert(Int64 &amp; val) const : void</text><ellipse cx="2350.5" cy="5412.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="5415.4995">convert(Int32 &amp; val) const : void</text><ellipse cx="2350.5" cy="5425.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="5428.3042">convert(Int16 &amp; val) const : void</text><ellipse cx="2350.5" cy="5437.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359.5" y="5441.1089">convert(long long &amp; val) const : void</text><ellipse cx="2350.5" cy="5450.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359.5" y="5453.9136">isArray() const : bool</text><ellipse cx="2350.5" cy="5463.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359.5" y="5466.7183">isBoolean() const : bool</text><ellipse cx="2350.5" cy="5476.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359.5" y="5479.5229">isInteger() const : bool</text><ellipse cx="2350.5" cy="5489.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359.5" y="5492.3276">isNumeric() const : bool</text><ellipse cx="2350.5" cy="5501.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359.5" y="5505.1323">isSigned() const : bool</text><ellipse cx="2350.5" cy="5514.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="5517.937">isString() const : bool</text><ellipse cx="2350.5" cy="5527.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="5530.7417">isStruct() const : bool</text><ellipse cx="2350.5" cy="5540.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359.5" y="5543.5464">type() const : const std::type_info &amp;</text><ellipse cx="2350.5" cy="5553.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2359.5" y="5556.3511">value() const : const Int8 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="5562.9453" y2="5562.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345.5" y="5568.9453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5570.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2359.5" y="5577.1558">_val : Int8</text></a><!--MD5=[7368cdd56a5292fac79769f5043446e9]
class C_0000198808093629002393--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="2339" y="4613.5"/><ellipse cx="2538.75" cy="4629.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2541.7188,4635.1406 Q2541.1406,4635.4375 2540.5,4635.5781 Q2539.8594,4635.7344 2539.1563,4635.7344 Q2536.6563,4635.7344 2535.3281,4634.0938 Q2534.0156,4632.4375 2534.0156,4629.3125 Q2534.0156,4626.1875 2535.3281,4624.5313 Q2536.6563,4622.875 2539.1563,4622.875 Q2539.8594,4622.875 2540.5,4623.0313 Q2541.1563,4623.1875 2541.7188,4623.4844 L2541.7188,4626.2031 Q2541.0938,4625.625 2540.5,4625.3594 Q2539.9063,4625.0781 2539.2813,4625.0781 Q2537.9375,4625.0781 2537.25,4626.1563 Q2536.5625,4627.2188 2536.5625,4629.3125 Q2536.5625,4631.4063 2537.25,4632.4844 Q2537.9375,4633.5469 2539.2813,4633.5469 Q2539.9063,4633.5469 2540.5,4633.2813 Q2541.0938,4633 2541.7188,4632.4219 L2541.7188,4635.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2559.25" y="4633.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="2839" y="4610.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2840" y="4622.6387">short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340" x2="2869" y1="4645.5" y2="4645.5"/><ellipse cx="2350" cy="4656.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2359" y="4659.7104">VarHolderImpl(Int16 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4666.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="4672.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4679.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2359" y="4685.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp;) : void</text><ellipse cx="2350" cy="4694.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359" y="4698.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340" x2="2869" y1="4704.7188" y2="4704.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4712.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="2359" y="4718.9292">operator=(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp;) : Dynamic::VarHolderImpl&lt;Int16&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340" x2="2869" y1="4725.5234" y2="4725.5234"/><ellipse cx="2350" cy="4736.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359" y="4739.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350" cy="4749.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359" y="4752.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350" cy="4762.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2359" y="4765.3433">convert(UTF16String &amp; val) const : void</text><ellipse cx="2350" cy="4774.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359" y="4778.1479">convert(std::string &amp; val) const : void</text><ellipse cx="2350" cy="4787.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359" y="4790.9526">convert(char &amp; val) const : void</text><ellipse cx="2350" cy="4800.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359" y="4803.7573">convert(double &amp; val) const : void</text><ellipse cx="2350" cy="4813.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359" y="4816.562">convert(float &amp; val) const : void</text><ellipse cx="2350" cy="4826.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359" y="4829.3667">convert(bool &amp; val) const : void</text><ellipse cx="2350" cy="4838.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359" y="4842.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350" cy="4851.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359" y="4854.9761">convert(long long &amp; val) const : void</text><ellipse cx="2350" cy="4864.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="4867.7808">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350" cy="4877.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="4880.5854">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350" cy="4890.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="4893.3901">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350" cy="4902.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359" y="4906.1948">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350" cy="4915.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="4918.9995">convert(Int64 &amp; val) const : void</text><ellipse cx="2350" cy="4928.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="4931.8042">convert(Int32 &amp; val) const : void</text><ellipse cx="2350" cy="4941.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="4944.6089">convert(Int16 &amp; val) const : void</text><ellipse cx="2350" cy="4954.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359" y="4957.4136">isArray() const : bool</text><ellipse cx="2350" cy="4967.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359" y="4970.2183">isInteger() const : bool</text><ellipse cx="2350" cy="4979.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359" y="4983.0229">isNumeric() const : bool</text><ellipse cx="2350" cy="4992.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359" y="4995.8276">isSigned() const : bool</text><ellipse cx="2350" cy="5005.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="5008.6323">isString() const : bool</text><ellipse cx="2350" cy="5018.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="5021.437">isStruct() const : bool</text><ellipse cx="2350" cy="5031.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359" y="5034.2417">type() const : const std::type_info &amp;</text><ellipse cx="2350" cy="5043.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2359" y="5047.0464">value() const : const Int16 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340" x2="2869" y1="5053.6406" y2="5053.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345" y="5059.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="5061.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2359" y="5067.8511">_val : Int16</text></a><!--MD5=[f50690fc04d6f94ff7c398237d3e157e]
class C_0000976768452323437983--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="2339" y="4117.5"/><ellipse cx="2546.75" cy="4133.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2549.7188,4139.1406 Q2549.1406,4139.4375 2548.5,4139.5781 Q2547.8594,4139.7344 2547.1563,4139.7344 Q2544.6563,4139.7344 2543.3281,4138.0938 Q2542.0156,4136.4375 2542.0156,4133.3125 Q2542.0156,4130.1875 2543.3281,4128.5313 Q2544.6563,4126.875 2547.1563,4126.875 Q2547.8594,4126.875 2548.5,4127.0313 Q2549.1563,4127.1875 2549.7188,4127.4844 L2549.7188,4130.2031 Q2549.0938,4129.625 2548.5,4129.3594 Q2547.9063,4129.0781 2547.2813,4129.0781 Q2545.9375,4129.0781 2545.25,4130.1563 Q2544.5625,4131.2188 2544.5625,4133.3125 Q2544.5625,4135.4063 2545.25,4136.4844 Q2545.9375,4137.5469 2547.2813,4137.5469 Q2547.9063,4137.5469 2548.5,4137.2813 Q2549.0938,4137 2549.7188,4136.4219 L2549.7188,4139.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2567.25" y="4137.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="18" x="2855" y="4114.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="16" x="2856" y="4126.6387">int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340" x2="2869" y1="4149.5" y2="4149.5"/><ellipse cx="2350" cy="4160.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2359" y="4163.7104">VarHolderImpl(Int32 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4170.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="4176.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4183.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2359" y="4189.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp;) : void</text><ellipse cx="2350" cy="4198.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359" y="4202.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340" x2="2869" y1="4208.7188" y2="4208.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4216.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="2359" y="4222.9292">operator=(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp;) : Dynamic::VarHolderImpl&lt;Int32&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340" x2="2869" y1="4229.5234" y2="4229.5234"/><ellipse cx="2350" cy="4240.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359" y="4243.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350" cy="4253.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359" y="4256.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350" cy="4266.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359" y="4269.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2350" cy="4278.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359" y="4282.1479">convert(char &amp; val) const : void</text><ellipse cx="2350" cy="4291.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359" y="4294.9526">convert(double &amp; val) const : void</text><ellipse cx="2350" cy="4304.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359" y="4307.7573">convert(float &amp; val) const : void</text><ellipse cx="2350" cy="4317.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359" y="4320.562">convert(bool &amp; val) const : void</text><ellipse cx="2350" cy="4330.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359" y="4333.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350" cy="4342.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359" y="4346.1714">convert(long long &amp; val) const : void</text><ellipse cx="2350" cy="4355.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="4358.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350" cy="4368.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="4371.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350" cy="4381.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="4384.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350" cy="4394.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359" y="4397.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350" cy="4406.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="4410.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2350" cy="4419.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="4422.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2350" cy="4432.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="4435.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2350" cy="4445.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359" y="4448.6089">isArray() const : bool</text><ellipse cx="2350" cy="4458.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359" y="4461.4136">isBoolean() const : bool</text><ellipse cx="2350" cy="4471.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359" y="4474.2183">isInteger() const : bool</text><ellipse cx="2350" cy="4483.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359" y="4487.0229">isNumeric() const : bool</text><ellipse cx="2350" cy="4496.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359" y="4499.8276">isSigned() const : bool</text><ellipse cx="2350" cy="4509.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="4512.6323">isString() const : bool</text><ellipse cx="2350" cy="4522.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="4525.437">isStruct() const : bool</text><ellipse cx="2350" cy="4535.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359" y="4538.2417">type() const : const std::type_info &amp;</text><ellipse cx="2350" cy="4547.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2359" y="4551.0464">value() const : const Int32 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340" x2="2869" y1="4557.6406" y2="4557.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345" y="4563.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4565.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2359" y="4571.8511">_val : Int32</text></a><!--MD5=[e85a9a84f93969f17bffa344a47641ce]
class C_0001804431617899042426--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="499.3594" id="C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="2339" y="3583.5"/><ellipse cx="2541.25" cy="3599.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2544.2188,3605.1406 Q2543.6406,3605.4375 2543,3605.5781 Q2542.3594,3605.7344 2541.6563,3605.7344 Q2539.1563,3605.7344 2537.8281,3604.0938 Q2536.5156,3602.4375 2536.5156,3599.3125 Q2536.5156,3596.1875 2537.8281,3594.5313 Q2539.1563,3592.875 2541.6563,3592.875 Q2542.3594,3592.875 2543,3593.0313 Q2543.6563,3593.1875 2544.2188,3593.4844 L2544.2188,3596.2031 Q2543.5938,3595.625 2543,3595.3594 Q2542.4063,3595.0781 2541.7813,3595.0781 Q2540.4375,3595.0781 2539.75,3596.1563 Q2539.0625,3597.2188 2539.0625,3599.3125 Q2539.0625,3601.4063 2539.75,3602.4844 Q2540.4375,3603.5469 2541.7813,3603.5469 Q2542.4063,3603.5469 2543,3603.2813 Q2543.5938,3603 2544.2188,3602.4219 L2544.2188,3605.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2561.75" y="3603.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2844" y="3580.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2845" y="3592.6387">long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340" x2="2869" y1="3615.5" y2="3615.5"/><ellipse cx="2350" cy="3626.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2359" y="3629.7104">VarHolderImpl(Int64 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="3636.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="3642.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="3649.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2359" y="3655.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp;) : void</text><ellipse cx="2350" cy="3664.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359" y="3668.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340" x2="2869" y1="3674.7188" y2="3674.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="3682.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="2359" y="3688.9292">operator=(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp;) : Dynamic::VarHolderImpl&lt;Int64&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340" x2="2869" y1="3695.5234" y2="3695.5234"/><ellipse cx="2350" cy="3706.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359" y="3709.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350" cy="3719.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359" y="3722.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350" cy="3732.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2359" y="3735.3433">convert(Timestamp &amp; val) const : void</text><ellipse cx="2350" cy="3744.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2359" y="3748.1479">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2350" cy="3757.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2359" y="3760.9526">convert(DateTime &amp; dt) const : void</text><ellipse cx="2350" cy="3770.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359" y="3773.7573">convert(std::string &amp; val) const : void</text><ellipse cx="2350" cy="3783.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359" y="3786.562">convert(char &amp; val) const : void</text><ellipse cx="2350" cy="3796.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359" y="3799.3667">convert(double &amp; val) const : void</text><ellipse cx="2350" cy="3808.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359" y="3812.1714">convert(float &amp; val) const : void</text><ellipse cx="2350" cy="3821.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359" y="3824.9761">convert(bool &amp; val) const : void</text><ellipse cx="2350" cy="3834.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359" y="3837.7808">convert(long long &amp; val) const : void</text><ellipse cx="2350" cy="3847.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="3850.5854">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350" cy="3860.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="3863.3901">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350" cy="3872.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359" y="3876.1948">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350" cy="3885.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359" y="3888.9995">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350" cy="3898.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="3901.8042">convert(Int64 &amp; val) const : void</text><ellipse cx="2350" cy="3911.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="3914.6089">convert(Int32 &amp; val) const : void</text><ellipse cx="2350" cy="3924.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359" y="3927.4136">convert(Int16 &amp; val) const : void</text><ellipse cx="2350" cy="3937.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359" y="3940.2183">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350" cy="3949.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359" y="3953.0229">isArray() const : bool</text><ellipse cx="2350" cy="3962.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359" y="3965.8276">isBoolean() const : bool</text><ellipse cx="2350" cy="3975.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359" y="3978.6323">isInteger() const : bool</text><ellipse cx="2350" cy="3988.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359" y="3991.437">isNumeric() const : bool</text><ellipse cx="2350" cy="4001.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359" y="4004.2417">isSigned() const : bool</text><ellipse cx="2350" cy="4013.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="4017.0464">isString() const : bool</text><ellipse cx="2350" cy="4026.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359" y="4029.8511">isStruct() const : bool</text><ellipse cx="2350" cy="4039.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359" y="4042.6558">type() const : const std::type_info &amp;</text><ellipse cx="2350" cy="4052.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2359" y="4055.4604">value() const : const Int64 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340" x2="2869" y1="4062.0547" y2="4062.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345" y="4068.0547"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347" y="4070.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2359" y="4076.2651">_val : Int64</text></a><!--MD5=[c3f52ae62d27edaf0dbe6c8c72118abf]
class C_0001832009513687525374--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="2338" y="3087.5"/><ellipse cx="2510.25" cy="3103.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2513.2188,3109.1406 Q2512.6406,3109.4375 2512,3109.5781 Q2511.3594,3109.7344 2510.6563,3109.7344 Q2508.1563,3109.7344 2506.8281,3108.0938 Q2505.5156,3106.4375 2505.5156,3103.3125 Q2505.5156,3100.1875 2506.8281,3098.5313 Q2508.1563,3096.875 2510.6563,3096.875 Q2511.3594,3096.875 2512,3097.0313 Q2512.6563,3097.1875 2513.2188,3097.4844 L2513.2188,3100.2031 Q2512.5938,3099.625 2512,3099.3594 Q2511.4063,3099.0781 2510.7813,3099.0781 Q2509.4375,3099.0781 2508.75,3100.1563 Q2508.0625,3101.2188 2508.0625,3103.3125 Q2508.0625,3105.4063 2508.75,3106.4844 Q2509.4375,3107.5469 2510.7813,3107.5469 Q2511.4063,3107.5469 2512,3107.2813 Q2512.5938,3107 2513.2188,3106.4219 L2513.2188,3109.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2530.75" y="3107.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="91" x="2783" y="3084.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="2784" y="3096.6387">unsigned char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2339" x2="2870" y1="3119.5" y2="3119.5"/><ellipse cx="2349" cy="3130.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2358" y="3133.7104">VarHolderImpl(UInt8 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2346" y="3140.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2358" y="3146.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2346" y="3153.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2358" y="3159.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp;) : void</text><ellipse cx="2349" cy="3168.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2358" y="3172.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2339" x2="2870" y1="3178.7188" y2="3178.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2346" y="3186.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="2358" y="3192.9292">operator=(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp;) : Dynamic::VarHolderImpl&lt;UInt8&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2339" x2="2870" y1="3199.5234" y2="3199.5234"/><ellipse cx="2349" cy="3210.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2358" y="3213.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2349" cy="3223.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2358" y="3226.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2349" cy="3236.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2358" y="3239.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2349" cy="3248.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2358" y="3252.1479">convert(char &amp; val) const : void</text><ellipse cx="2349" cy="3261.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2358" y="3264.9526">convert(double &amp; val) const : void</text><ellipse cx="2349" cy="3274.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2358" y="3277.7573">convert(float &amp; val) const : void</text><ellipse cx="2349" cy="3287.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2358" y="3290.562">convert(bool &amp; val) const : void</text><ellipse cx="2349" cy="3300.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2358" y="3303.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2349" cy="3312.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2358" y="3316.1714">convert(long long &amp; val) const : void</text><ellipse cx="2349" cy="3325.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2358" y="3328.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2349" cy="3338.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2358" y="3341.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2349" cy="3351.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2358" y="3354.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2349" cy="3364.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2358" y="3367.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2349" cy="3376.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2358" y="3380.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2349" cy="3389.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2358" y="3392.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2349" cy="3402.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2358" y="3405.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2349" cy="3415.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2358" y="3418.6089">isArray() const : bool</text><ellipse cx="2349" cy="3428.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2358" y="3431.4136">isBoolean() const : bool</text><ellipse cx="2349" cy="3441.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2358" y="3444.2183">isInteger() const : bool</text><ellipse cx="2349" cy="3453.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2358" y="3457.0229">isNumeric() const : bool</text><ellipse cx="2349" cy="3466.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2358" y="3469.8276">isSigned() const : bool</text><ellipse cx="2349" cy="3479.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2358" y="3482.6323">isString() const : bool</text><ellipse cx="2349" cy="3492.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2358" y="3495.437">isStruct() const : bool</text><ellipse cx="2349" cy="3505.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2358" y="3508.2417">type() const : const std::type_info &amp;</text><ellipse cx="2349" cy="3517.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2358" y="3521.0464">value() const : const UInt8 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2339" x2="2870" y1="3527.6406" y2="3527.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2344" y="3533.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2346" y="3535.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="2358" y="3541.8511">_val : UInt8</text></a><!--MD5=[bcd98692da4ec66009419cce89ce6bad]
class C_0000572186414558919480--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.5;" width="547" x="2331" y="2591.5"/><ellipse cx="2508.25" cy="2607.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2511.2188,2613.1406 Q2510.6406,2613.4375 2510,2613.5781 Q2509.3594,2613.7344 2508.6563,2613.7344 Q2506.1563,2613.7344 2504.8281,2612.0938 Q2503.5156,2610.4375 2503.5156,2607.3125 Q2503.5156,2604.1875 2504.8281,2602.5313 Q2506.1563,2600.875 2508.6563,2600.875 Q2509.3594,2600.875 2510,2601.0313 Q2510.6563,2601.1875 2511.2188,2601.4844 L2511.2188,2604.2031 Q2510.5938,2603.625 2510,2603.3594 Q2509.4063,2603.0781 2508.7813,2603.0781 Q2507.4375,2603.0781 2506.75,2604.1563 Q2506.0625,2605.2188 2506.0625,2607.3125 Q2506.0625,2609.4063 2506.75,2610.4844 Q2507.4375,2611.5469 2508.7813,2611.5469 Q2509.4063,2611.5469 2510,2611.2813 Q2510.5938,2611 2511.2188,2610.4219 L2511.2188,2613.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2528.75" y="2611.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="95" x="2786" y="2588.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="2787" y="2600.6387">unsigned short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2332" x2="2877" y1="2623.5" y2="2623.5"/><ellipse cx="2342" cy="2634.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="2637.7104">VarHolderImpl(UInt16 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2644.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="2650.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2657.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="2351" y="2663.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp;) : void</text><ellipse cx="2342" cy="2672.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2351" y="2676.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2332" x2="2877" y1="2682.7188" y2="2682.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2690.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2351" y="2696.9292">operator=(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp;) : Dynamic::VarHolderImpl&lt;UInt16&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2332" x2="2877" y1="2703.5234" y2="2703.5234"/><ellipse cx="2342" cy="2714.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2351" y="2717.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2342" cy="2727.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2351" y="2730.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2342" cy="2740.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2351" y="2743.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2342" cy="2752.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="2756.1479">convert(char &amp; val) const : void</text><ellipse cx="2342" cy="2765.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2351" y="2768.9526">convert(double &amp; val) const : void</text><ellipse cx="2342" cy="2778.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="2781.7573">convert(float &amp; val) const : void</text><ellipse cx="2342" cy="2791.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2351" y="2794.562">convert(bool &amp; val) const : void</text><ellipse cx="2342" cy="2804.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2351" y="2807.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2342" cy="2816.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2351" y="2820.1714">convert(long long &amp; val) const : void</text><ellipse cx="2342" cy="2829.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="2832.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2342" cy="2842.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="2845.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2342" cy="2855.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="2858.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2342" cy="2868.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2351" y="2871.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2342" cy="2880.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="2884.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2342" cy="2893.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="2896.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2342" cy="2906.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="2909.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2342" cy="2919.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2351" y="2922.6089">isArray() const : bool</text><ellipse cx="2342" cy="2932.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2351" y="2935.4136">isBoolean() const : bool</text><ellipse cx="2342" cy="2945.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2351" y="2948.2183">isInteger() const : bool</text><ellipse cx="2342" cy="2957.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2351" y="2961.0229">isNumeric() const : bool</text><ellipse cx="2342" cy="2970.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2351" y="2973.8276">isSigned() const : bool</text><ellipse cx="2342" cy="2983.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="2986.6323">isString() const : bool</text><ellipse cx="2342" cy="2996.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="2999.437">isStruct() const : bool</text><ellipse cx="2342" cy="3009.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2351" y="3012.2417">type() const : const std::type_info &amp;</text><ellipse cx="2342" cy="3021.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2351" y="3025.0464">value() const : const UInt16 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2332" x2="2877" y1="3031.6406" y2="3031.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2337" y="3037.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="3039.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2351" y="3045.8511">_val : UInt16</text></a><!--MD5=[99e94c671a89454544ae053963034ed1]
class C_0000166253842255815357--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.5;" width="547" x="2331" y="2095.5"/><ellipse cx="2516.25" cy="2111.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2519.2188,2117.1406 Q2518.6406,2117.4375 2518,2117.5781 Q2517.3594,2117.7344 2516.6563,2117.7344 Q2514.1563,2117.7344 2512.8281,2116.0938 Q2511.5156,2114.4375 2511.5156,2111.3125 Q2511.5156,2108.1875 2512.8281,2106.5313 Q2514.1563,2104.875 2516.6563,2104.875 Q2517.3594,2104.875 2518,2105.0313 Q2518.6563,2105.1875 2519.2188,2105.4844 L2519.2188,2108.2031 Q2518.5938,2107.625 2518,2107.3594 Q2517.4063,2107.0781 2516.7813,2107.0781 Q2515.4375,2107.0781 2514.75,2108.1563 Q2514.0625,2109.2188 2514.0625,2111.3125 Q2514.0625,2113.4063 2514.75,2114.4844 Q2515.4375,2115.5469 2516.7813,2115.5469 Q2517.4063,2115.5469 2518,2115.2813 Q2518.5938,2115 2519.2188,2114.4219 L2519.2188,2117.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2536.75" y="2115.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="79" x="2802" y="2092.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="2803" y="2104.6387">unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2332" x2="2877" y1="2127.5" y2="2127.5"/><ellipse cx="2342" cy="2138.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="2141.7104">VarHolderImpl(UInt32 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2148.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="2154.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2161.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="2351" y="2167.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp;) : void</text><ellipse cx="2342" cy="2176.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2351" y="2180.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2332" x2="2877" y1="2186.7188" y2="2186.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2194.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2351" y="2200.9292">operator=(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp;) : Dynamic::VarHolderImpl&lt;UInt32&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2332" x2="2877" y1="2207.5234" y2="2207.5234"/><ellipse cx="2342" cy="2218.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2351" y="2221.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2342" cy="2231.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2351" y="2234.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2342" cy="2244.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2351" y="2247.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2342" cy="2256.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="2260.1479">convert(char &amp; val) const : void</text><ellipse cx="2342" cy="2269.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2351" y="2272.9526">convert(double &amp; val) const : void</text><ellipse cx="2342" cy="2282.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="2285.7573">convert(float &amp; val) const : void</text><ellipse cx="2342" cy="2295.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2351" y="2298.562">convert(bool &amp; val) const : void</text><ellipse cx="2342" cy="2308.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2351" y="2311.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2342" cy="2320.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2351" y="2324.1714">convert(long long &amp; val) const : void</text><ellipse cx="2342" cy="2333.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="2336.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2342" cy="2346.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="2349.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2342" cy="2359.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="2362.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2342" cy="2372.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2351" y="2375.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2342" cy="2384.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="2388.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2342" cy="2397.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="2400.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2342" cy="2410.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="2413.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2342" cy="2423.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2351" y="2426.6089">isArray() const : bool</text><ellipse cx="2342" cy="2436.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2351" y="2439.4136">isBoolean() const : bool</text><ellipse cx="2342" cy="2449.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2351" y="2452.2183">isInteger() const : bool</text><ellipse cx="2342" cy="2461.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2351" y="2465.0229">isNumeric() const : bool</text><ellipse cx="2342" cy="2474.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2351" y="2477.8276">isSigned() const : bool</text><ellipse cx="2342" cy="2487.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="2490.6323">isString() const : bool</text><ellipse cx="2342" cy="2500.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="2503.437">isStruct() const : bool</text><ellipse cx="2342" cy="2513.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2351" y="2516.2417">type() const : const std::type_info &amp;</text><ellipse cx="2342" cy="2525.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2351" y="2529.0464">value() const : const UInt32 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2332" x2="2877" y1="2535.6406" y2="2535.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2337" y="2541.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="2543.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2351" y="2549.8511">_val : UInt32</text></a><!--MD5=[0633cb007ce02e0b2259d7a912a0a465]
class C_0001459401574844645109--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="499.3594" id="C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.5;" width="547" x="2331" y="12354.5"/><ellipse cx="2510.75" cy="12370.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2513.7188,12376.1406 Q2513.1406,12376.4375 2512.5,12376.5781 Q2511.8594,12376.7344 2511.1563,12376.7344 Q2508.6563,12376.7344 2507.3281,12375.0938 Q2506.0156,12373.4375 2506.0156,12370.3125 Q2506.0156,12367.1875 2507.3281,12365.5313 Q2508.6563,12363.875 2511.1563,12363.875 Q2511.8594,12363.875 2512.5,12364.0313 Q2513.1563,12364.1875 2513.7188,12364.4844 L2513.7188,12367.2031 Q2513.0938,12366.625 2512.5,12366.3594 Q2511.9063,12366.0781 2511.2813,12366.0781 Q2509.9375,12366.0781 2509.25,12367.1563 Q2508.5625,12368.2188 2508.5625,12370.3125 Q2508.5625,12372.4063 2509.25,12373.4844 Q2509.9375,12374.5469 2511.2813,12374.5469 Q2511.9063,12374.5469 2512.5,12374.2813 Q2513.0938,12374 2513.7188,12373.4219 L2513.7188,12376.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2531.25" y="12374.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="90" x="2791" y="12351.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="2792" y="12363.6387">unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2332" x2="2877" y1="12386.5" y2="12386.5"/><ellipse cx="2342" cy="12397.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="12400.7104">VarHolderImpl(UInt64 val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="12407.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="12413.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="12420.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="2351" y="12426.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp;) : void</text><ellipse cx="2342" cy="12435.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2351" y="12439.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2332" x2="2877" y1="12445.7188" y2="12445.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="12453.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2351" y="12459.9292">operator=(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp;) : Dynamic::VarHolderImpl&lt;UInt64&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2332" x2="2877" y1="12466.5234" y2="12466.5234"/><ellipse cx="2342" cy="12477.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2351" y="12480.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2342" cy="12490.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2351" y="12493.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2342" cy="12503.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2351" y="12506.3433">convert(Timestamp &amp; val) const : void</text><ellipse cx="2342" cy="12515.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2351" y="12519.1479">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2342" cy="12528.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2351" y="12531.9526">convert(DateTime &amp; dt) const : void</text><ellipse cx="2342" cy="12541.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2351" y="12544.7573">convert(std::string &amp; val) const : void</text><ellipse cx="2342" cy="12554.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="12557.562">convert(char &amp; val) const : void</text><ellipse cx="2342" cy="12567.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2351" y="12570.3667">convert(double &amp; val) const : void</text><ellipse cx="2342" cy="12579.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2351" y="12583.1714">convert(float &amp; val) const : void</text><ellipse cx="2342" cy="12592.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2351" y="12595.9761">convert(bool &amp; val) const : void</text><ellipse cx="2342" cy="12605.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2351" y="12608.7808">convert(long long &amp; val) const : void</text><ellipse cx="2342" cy="12618.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="12621.5854">convert(UInt64 &amp; val) const : void</text><ellipse cx="2342" cy="12631.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="12634.3901">convert(UInt32 &amp; val) const : void</text><ellipse cx="2342" cy="12643.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2351" y="12647.1948">convert(UInt16 &amp; val) const : void</text><ellipse cx="2342" cy="12656.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2351" y="12659.9995">convert(UInt8 &amp; val) const : void</text><ellipse cx="2342" cy="12669.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="12672.8042">convert(Int64 &amp; val) const : void</text><ellipse cx="2342" cy="12682.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="12685.6089">convert(Int32 &amp; val) const : void</text><ellipse cx="2342" cy="12695.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2351" y="12698.4136">convert(Int16 &amp; val) const : void</text><ellipse cx="2342" cy="12708.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2351" y="12711.2183">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2342" cy="12720.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2351" y="12724.0229">isArray() const : bool</text><ellipse cx="2342" cy="12733.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2351" y="12736.8276">isBoolean() const : bool</text><ellipse cx="2342" cy="12746.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2351" y="12749.6323">isInteger() const : bool</text><ellipse cx="2342" cy="12759.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2351" y="12762.437">isNumeric() const : bool</text><ellipse cx="2342" cy="12772.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2351" y="12775.2417">isSigned() const : bool</text><ellipse cx="2342" cy="12784.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="12788.0464">isString() const : bool</text><ellipse cx="2342" cy="12797.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2351" y="12800.8511">isStruct() const : bool</text><ellipse cx="2342" cy="12810.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2351" y="12813.6558">type() const : const std::type_info &amp;</text><ellipse cx="2342" cy="12823.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2351" y="12826.4604">value() const : const UInt64 &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2332" x2="2877" y1="12833.0547" y2="12833.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2337" y="12839.0547"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2339" y="12841.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2351" y="12847.2651">_val : UInt64</text></a><!--MD5=[ada13b8892848e1551fb92aa3c5167f5]
class C_0000599279109574326060--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2339.5" y="11858.5"/><ellipse cx="2541.25" cy="11874.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2544.2188,11880.1406 Q2543.6406,11880.4375 2543,11880.5781 Q2542.3594,11880.7344 2541.6563,11880.7344 Q2539.1563,11880.7344 2537.8281,11879.0938 Q2536.5156,11877.4375 2536.5156,11874.3125 Q2536.5156,11871.1875 2537.8281,11869.5313 Q2539.1563,11867.875 2541.6563,11867.875 Q2542.3594,11867.875 2543,11868.0313 Q2543.6563,11868.1875 2544.2188,11868.4844 L2544.2188,11871.2031 Q2543.5938,11870.625 2543,11870.3594 Q2542.4063,11870.0781 2541.7813,11870.0781 Q2540.4375,11870.0781 2539.75,11871.1563 Q2539.0625,11872.2188 2539.0625,11874.3125 Q2539.0625,11876.4063 2539.75,11877.4844 Q2540.4375,11878.5469 2541.7813,11878.5469 Q2542.4063,11878.5469 2543,11878.2813 Q2543.5938,11878 2544.2188,11877.4219 L2544.2188,11880.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2561.75" y="11878.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2843.5" y="11855.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2844.5" y="11867.6387">bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="11890.5" y2="11890.5"/><ellipse cx="2350.5" cy="11901.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2359.5" y="11904.7104">VarHolderImpl(bool val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11911.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="11917.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11924.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="2359.5" y="11930.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;bool&gt; &amp;) : void</text><ellipse cx="2350.5" cy="11939.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359.5" y="11943.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="11949.7188" y2="11949.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11957.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="2359.5" y="11963.9292">operator=(const Dynamic::VarHolderImpl&lt;bool&gt; &amp;) : Dynamic::VarHolderImpl&lt;bool&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="11970.5234" y2="11970.5234"/><ellipse cx="2350.5" cy="11981.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359.5" y="11984.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350.5" cy="11994.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359.5" y="11997.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350.5" cy="12007.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359.5" y="12010.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2350.5" cy="12019.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="12023.1479">convert(char &amp; val) const : void</text><ellipse cx="2350.5" cy="12032.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359.5" y="12035.9526">convert(double &amp; val) const : void</text><ellipse cx="2350.5" cy="12045.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="12048.7573">convert(float &amp; val) const : void</text><ellipse cx="2350.5" cy="12058.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359.5" y="12061.562">convert(bool &amp; val) const : void</text><ellipse cx="2350.5" cy="12071.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359.5" y="12074.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350.5" cy="12083.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359.5" y="12087.1714">convert(long long &amp; val) const : void</text><ellipse cx="2350.5" cy="12096.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="12099.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350.5" cy="12109.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="12112.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350.5" cy="12122.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="12125.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350.5" cy="12135.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359.5" y="12138.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350.5" cy="12147.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="12151.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2350.5" cy="12160.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="12163.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2350.5" cy="12173.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="12176.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2350.5" cy="12186.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359.5" y="12189.6089">isArray() const : bool</text><ellipse cx="2350.5" cy="12199.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359.5" y="12202.4136">isBoolean() const : bool</text><ellipse cx="2350.5" cy="12212.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359.5" y="12215.2183">isInteger() const : bool</text><ellipse cx="2350.5" cy="12224.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359.5" y="12228.0229">isNumeric() const : bool</text><ellipse cx="2350.5" cy="12237.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359.5" y="12240.8276">isSigned() const : bool</text><ellipse cx="2350.5" cy="12250.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="12253.6323">isString() const : bool</text><ellipse cx="2350.5" cy="12263.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="12266.437">isStruct() const : bool</text><ellipse cx="2350.5" cy="12276.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359.5" y="12279.2417">type() const : const std::type_info &amp;</text><ellipse cx="2350.5" cy="12288.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2359.5" y="12292.0464">value() const : const bool &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="12298.6406" y2="12298.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345.5" y="12304.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="12306.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="2359.5" y="12312.8511">_val : bool</text></a><!--MD5=[982864d46e735f5fc451b1a43e8b29c9]
class C_0000384619052225252533--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2339.5" y="11362.5"/><ellipse cx="2540.75" cy="11378.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2543.7188,11384.1406 Q2543.1406,11384.4375 2542.5,11384.5781 Q2541.8594,11384.7344 2541.1563,11384.7344 Q2538.6563,11384.7344 2537.3281,11383.0938 Q2536.0156,11381.4375 2536.0156,11378.3125 Q2536.0156,11375.1875 2537.3281,11373.5313 Q2538.6563,11371.875 2541.1563,11371.875 Q2541.8594,11371.875 2542.5,11372.0313 Q2543.1563,11372.1875 2543.7188,11372.4844 L2543.7188,11375.2031 Q2543.0938,11374.625 2542.5,11374.3594 Q2541.9063,11374.0781 2541.2813,11374.0781 Q2539.9375,11374.0781 2539.25,11375.1563 Q2538.5625,11376.2188 2538.5625,11378.3125 Q2538.5625,11380.4063 2539.25,11381.4844 Q2539.9375,11382.5469 2541.2813,11382.5469 Q2541.9063,11382.5469 2542.5,11382.2813 Q2543.0938,11382 2543.7188,11381.4219 L2543.7188,11384.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2561.25" y="11382.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2842.5" y="11359.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2843.5" y="11371.6387">float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="11394.5" y2="11394.5"/><ellipse cx="2350.5" cy="11405.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2359.5" y="11408.7104">VarHolderImpl(float val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11415.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="11421.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11428.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2359.5" y="11434.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;float&gt; &amp;) : void</text><ellipse cx="2350.5" cy="11443.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359.5" y="11447.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="11453.7188" y2="11453.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11461.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="499" x="2359.5" y="11467.9292">operator=(const Dynamic::VarHolderImpl&lt;float&gt; &amp;) : Dynamic::VarHolderImpl&lt;float&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="11474.5234" y2="11474.5234"/><ellipse cx="2350.5" cy="11485.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359.5" y="11488.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350.5" cy="11498.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359.5" y="11501.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350.5" cy="11511.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359.5" y="11514.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2350.5" cy="11523.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="11527.1479">convert(char &amp; val) const : void</text><ellipse cx="2350.5" cy="11536.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359.5" y="11539.9526">convert(double &amp; val) const : void</text><ellipse cx="2350.5" cy="11549.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="11552.7573">convert(float &amp; val) const : void</text><ellipse cx="2350.5" cy="11562.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359.5" y="11565.562">convert(bool &amp; val) const : void</text><ellipse cx="2350.5" cy="11575.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359.5" y="11578.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350.5" cy="11587.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359.5" y="11591.1714">convert(long long &amp; val) const : void</text><ellipse cx="2350.5" cy="11600.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="11603.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350.5" cy="11613.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="11616.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350.5" cy="11626.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="11629.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350.5" cy="11639.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359.5" y="11642.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350.5" cy="11651.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="11655.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2350.5" cy="11664.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="11667.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2350.5" cy="11677.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="11680.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2350.5" cy="11690.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359.5" y="11693.6089">isArray() const : bool</text><ellipse cx="2350.5" cy="11703.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359.5" y="11706.4136">isBoolean() const : bool</text><ellipse cx="2350.5" cy="11716.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359.5" y="11719.2183">isInteger() const : bool</text><ellipse cx="2350.5" cy="11728.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359.5" y="11732.0229">isNumeric() const : bool</text><ellipse cx="2350.5" cy="11741.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359.5" y="11744.8276">isSigned() const : bool</text><ellipse cx="2350.5" cy="11754.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="11757.6323">isString() const : bool</text><ellipse cx="2350.5" cy="11767.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="11770.437">isStruct() const : bool</text><ellipse cx="2350.5" cy="11780.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359.5" y="11783.2417">type() const : const std::type_info &amp;</text><ellipse cx="2350.5" cy="11792.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2359.5" y="11796.0464">value() const : const float &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="11802.6406" y2="11802.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345.5" y="11808.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="11810.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2359.5" y="11816.8511">_val : float</text></a><!--MD5=[3b61c949f1c84cb7dc26cc961df146df]
class C_0002242257052791493112--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2329" y="10866.5"/><ellipse cx="2533.25" cy="10882.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2536.2188,10888.1406 Q2535.6406,10888.4375 2535,10888.5781 Q2534.3594,10888.7344 2533.6563,10888.7344 Q2531.1563,10888.7344 2529.8281,10887.0938 Q2528.5156,10885.4375 2528.5156,10882.3125 Q2528.5156,10879.1875 2529.8281,10877.5313 Q2531.1563,10875.875 2533.6563,10875.875 Q2534.3594,10875.875 2535,10876.0313 Q2535.6563,10876.1875 2536.2188,10876.4844 L2536.2188,10879.2031 Q2535.5938,10878.625 2535,10878.3594 Q2534.4063,10878.0781 2533.7813,10878.0781 Q2532.4375,10878.0781 2531.75,10879.1563 Q2531.0625,10880.2188 2531.0625,10882.3125 Q2531.0625,10884.4063 2531.75,10885.4844 Q2532.4375,10886.5469 2533.7813,10886.5469 Q2534.4063,10886.5469 2535,10886.2813 Q2535.5938,10886 2536.2188,10885.4219 L2536.2188,10888.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2553.75" y="10886.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="45" x="2838" y="10863.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="2839" y="10875.6387">double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2330" x2="2879" y1="10898.5" y2="10898.5"/><ellipse cx="2340" cy="10909.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2349" y="10912.7104">VarHolderImpl(double val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2337" y="10919.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2349" y="10925.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2337" y="10932.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="2349" y="10938.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;double&gt; &amp;) : void</text><ellipse cx="2340" cy="10947.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2349" y="10951.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2330" x2="2879" y1="10957.7188" y2="10957.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2337" y="10965.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2349" y="10971.9292">operator=(const Dynamic::VarHolderImpl&lt;double&gt; &amp;) : Dynamic::VarHolderImpl&lt;double&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2330" x2="2879" y1="10978.5234" y2="10978.5234"/><ellipse cx="2340" cy="10989.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2349" y="10992.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2340" cy="11002.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2349" y="11005.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2340" cy="11015.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2349" y="11018.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2340" cy="11027.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2349" y="11031.1479">convert(char &amp; val) const : void</text><ellipse cx="2340" cy="11040.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2349" y="11043.9526">convert(double &amp; val) const : void</text><ellipse cx="2340" cy="11053.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2349" y="11056.7573">convert(float &amp; val) const : void</text><ellipse cx="2340" cy="11066.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2349" y="11069.562">convert(bool &amp; val) const : void</text><ellipse cx="2340" cy="11079.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2349" y="11082.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2340" cy="11091.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2349" y="11095.1714">convert(long long &amp; val) const : void</text><ellipse cx="2340" cy="11104.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2349" y="11107.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2340" cy="11117.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2349" y="11120.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2340" cy="11130.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2349" y="11133.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2340" cy="11143.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2349" y="11146.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2340" cy="11155.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2349" y="11159.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2340" cy="11168.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2349" y="11171.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2340" cy="11181.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2349" y="11184.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2340" cy="11194.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2349" y="11197.6089">isArray() const : bool</text><ellipse cx="2340" cy="11207.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2349" y="11210.4136">isBoolean() const : bool</text><ellipse cx="2340" cy="11220.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2349" y="11223.2183">isInteger() const : bool</text><ellipse cx="2340" cy="11232.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2349" y="11236.0229">isNumeric() const : bool</text><ellipse cx="2340" cy="11245.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2349" y="11248.8276">isSigned() const : bool</text><ellipse cx="2340" cy="11258.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2349" y="11261.6323">isString() const : bool</text><ellipse cx="2340" cy="11271.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2349" y="11274.437">isStruct() const : bool</text><ellipse cx="2340" cy="11284.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2349" y="11287.2417">type() const : const std::type_info &amp;</text><ellipse cx="2340" cy="11296.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2349" y="11300.0464">value() const : const double &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2330" x2="2879" y1="11306.6406" y2="11306.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2335" y="11312.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2337" y="11314.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2349" y="11320.8511">_val : double</text></a><!--MD5=[987f6efd9f336e45ba4e394ec0708635]
class C_0001942181379759217898--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2339.5" y="10370.5"/><ellipse cx="2540.75" cy="10386.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2543.7188,10392.1406 Q2543.1406,10392.4375 2542.5,10392.5781 Q2541.8594,10392.7344 2541.1563,10392.7344 Q2538.6563,10392.7344 2537.3281,10391.0938 Q2536.0156,10389.4375 2536.0156,10386.3125 Q2536.0156,10383.1875 2537.3281,10381.5313 Q2538.6563,10379.875 2541.1563,10379.875 Q2541.8594,10379.875 2542.5,10380.0313 Q2543.1563,10380.1875 2543.7188,10380.4844 L2543.7188,10383.2031 Q2543.0938,10382.625 2542.5,10382.3594 Q2541.9063,10382.0781 2541.2813,10382.0781 Q2539.9375,10382.0781 2539.25,10383.1563 Q2538.5625,10384.2188 2538.5625,10386.3125 Q2538.5625,10388.4063 2539.25,10389.4844 Q2539.9375,10390.5469 2541.2813,10390.5469 Q2541.9063,10390.5469 2542.5,10390.2813 Q2543.0938,10390 2543.7188,10389.4219 L2543.7188,10392.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2561.25" y="10390.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2842.5" y="10367.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2843.5" y="10379.6387">char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="10402.5" y2="10402.5"/><ellipse cx="2350.5" cy="10413.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2359.5" y="10416.7104">VarHolderImpl(char val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="10423.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="10429.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="10436.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2359.5" y="10442.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;char&gt; &amp;) : void</text><ellipse cx="2350.5" cy="10451.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359.5" y="10455.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="10461.7188" y2="10461.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="10469.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="499" x="2359.5" y="10475.9292">operator=(const Dynamic::VarHolderImpl&lt;char&gt; &amp;) : Dynamic::VarHolderImpl&lt;char&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="10482.5234" y2="10482.5234"/><ellipse cx="2350.5" cy="10493.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359.5" y="10496.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350.5" cy="10506.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2359.5" y="10509.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2350.5" cy="10519.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359.5" y="10522.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2350.5" cy="10531.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="10535.1479">convert(char &amp; val) const : void</text><ellipse cx="2350.5" cy="10544.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2359.5" y="10547.9526">convert(double &amp; val) const : void</text><ellipse cx="2350.5" cy="10557.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2359.5" y="10560.7573">convert(float &amp; val) const : void</text><ellipse cx="2350.5" cy="10570.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2359.5" y="10573.562">convert(bool &amp; val) const : void</text><ellipse cx="2350.5" cy="10583.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2359.5" y="10586.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2350.5" cy="10595.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2359.5" y="10599.1714">convert(long long &amp; val) const : void</text><ellipse cx="2350.5" cy="10608.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="10611.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2350.5" cy="10621.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="10624.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2350.5" cy="10634.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2359.5" y="10637.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2350.5" cy="10647.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2359.5" y="10650.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2350.5" cy="10659.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="10663.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2350.5" cy="10672.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="10675.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2350.5" cy="10685.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2359.5" y="10688.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2350.5" cy="10698.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359.5" y="10701.6089">isArray() const : bool</text><ellipse cx="2350.5" cy="10711.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359.5" y="10714.4136">isBoolean() const : bool</text><ellipse cx="2350.5" cy="10724.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359.5" y="10727.2183">isInteger() const : bool</text><ellipse cx="2350.5" cy="10736.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359.5" y="10740.0229">isNumeric() const : bool</text><ellipse cx="2350.5" cy="10749.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359.5" y="10752.8276">isSigned() const : bool</text><ellipse cx="2350.5" cy="10762.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="10765.6323">isString() const : bool</text><ellipse cx="2350.5" cy="10775.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="10778.437">isStruct() const : bool</text><ellipse cx="2350.5" cy="10788.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359.5" y="10791.2417">type() const : const std::type_info &amp;</text><ellipse cx="2350.5" cy="10800.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2359.5" y="10804.0464">value() const : const char &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="10810.6406" y2="10810.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345.5" y="10816.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="10818.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2359.5" y="10824.8511">_val : char</text></a><!--MD5=[8b5df5fe94a553e6538357e4a77a944c]
class C_0002291903337356664508--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="507.3594" id="C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.5;" width="593" x="2308" y="9828.5"/><ellipse cx="2523.75" cy="9844.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2526.7188,9850.1406 Q2526.1406,9850.4375 2525.5,9850.5781 Q2524.8594,9850.7344 2524.1563,9850.7344 Q2521.6563,9850.7344 2520.3281,9849.0938 Q2519.0156,9847.4375 2519.0156,9844.3125 Q2519.0156,9841.1875 2520.3281,9839.5313 Q2521.6563,9837.875 2524.1563,9837.875 Q2524.8594,9837.875 2525.5,9838.0313 Q2526.1563,9838.1875 2526.7188,9838.4844 L2526.7188,9841.2031 Q2526.0938,9840.625 2525.5,9840.3594 Q2524.9063,9840.0781 2524.2813,9840.0781 Q2522.9375,9840.0781 2522.25,9841.1563 Q2521.5625,9842.2188 2521.5625,9844.3125 Q2521.5625,9846.4063 2522.25,9847.4844 Q2522.9375,9848.5469 2524.2813,9848.5469 Q2524.9063,9848.5469 2525.5,9848.2813 Q2526.0938,9848 2526.7188,9847.4219 L2526.7188,9850.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2544.25" y="9848.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="2840" y="9825.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="2841" y="9837.6387">std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2309" x2="2900" y1="9860.5" y2="9860.5"/><ellipse cx="2319" cy="9871.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2328" y="9874.7104">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2319" cy="9884.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2328" y="9887.5151">VarHolderImpl(const std::string &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2316" y="9894.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2328" y="9900.3198">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2316" y="9906.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2328" y="9913.1245">VarHolderImpl(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp;) : void</text><ellipse cx="2319" cy="9922.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2328" y="9925.9292">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2309" x2="2900" y1="9932.5234" y2="9932.5234"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2316" y="9940.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="2328" y="9946.7339">operator=(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp;) : Dynamic::VarHolderImpl&lt;std::string&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2309" x2="2900" y1="9953.3281" y2="9953.3281"/><ellipse cx="2319" cy="9964.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2328" y="9967.5386">operator[](std::string::size_type n) : char &amp;</text><ellipse cx="2319" cy="9977.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="2328" y="9980.3433">operator[](std::string::size_type n) const : const char &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2309" x2="2900" y1="9986.9375" y2="9986.9375"/><ellipse cx="2319" cy="9997.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2328" y="10001.1479">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2319" cy="10010.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2328" y="10013.9526">convert(Int8 &amp; val) const : void</text><ellipse cx="2319" cy="10023.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2328" y="10026.7573">convert(UUID &amp; uuid) const : void</text><ellipse cx="2319" cy="10036.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2328" y="10039.562">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2319" cy="10049.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2328" y="10052.3667">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2319" cy="10061.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2328" y="10065.1714">convert(DateTime &amp; val) const : void</text><ellipse cx="2319" cy="10074.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2328" y="10077.9761">convert(UTF16String &amp; val) const : void</text><ellipse cx="2319" cy="10087.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2328" y="10090.7808">convert(std::string &amp; val) const : void</text><ellipse cx="2319" cy="10100.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2328" y="10103.5854">convert(char &amp; val) const : void</text><ellipse cx="2319" cy="10113.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2328" y="10116.3901">convert(double &amp; val) const : void</text><ellipse cx="2319" cy="10125.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2328" y="10129.1948">convert(float &amp; val) const : void</text><ellipse cx="2319" cy="10138.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2328" y="10141.9995">convert(bool &amp; val) const : void</text><ellipse cx="2319" cy="10151.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2328" y="10154.8042">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2319" cy="10164.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2328" y="10167.6089">convert(long long &amp; val) const : void</text><ellipse cx="2319" cy="10177.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2328" y="10180.4136">convert(UInt64 &amp; val) const : void</text><ellipse cx="2319" cy="10190.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2328" y="10193.2183">convert(UInt32 &amp; val) const : void</text><ellipse cx="2319" cy="10202.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2328" y="10206.0229">convert(UInt16 &amp; val) const : void</text><ellipse cx="2319" cy="10215.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2328" y="10218.8276">convert(UInt8 &amp; val) const : void</text><ellipse cx="2319" cy="10228.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2328" y="10231.6323">convert(Int64 &amp; val) const : void</text><ellipse cx="2319" cy="10241.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2328" y="10244.437">convert(Int32 &amp; val) const : void</text><ellipse cx="2319" cy="10254.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2328" y="10257.2417">convert(Int16 &amp; val) const : void</text><ellipse cx="2319" cy="10266.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2328" y="10270.0464">isString() const : bool</text><ellipse cx="2319" cy="10279.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2328" y="10282.8511">size() const : std::size_t</text><ellipse cx="2319" cy="10292.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2328" y="10295.6558">type() const : const std::type_info &amp;</text><ellipse cx="2319" cy="10305.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2328" y="10308.4604">value() const : const std::string &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2309" x2="2900" y1="10315.0547" y2="10315.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2314" y="10321.0547"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2316" y="10323.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2328" y="10329.2651">_val : std::string</text></a><!--MD5=[c8c5b35706b5d0cb2134b841b5ae133a]
class C_0001370368867041199969--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="507.3594" id="C_0001370368867041199969" style="stroke: #A80036; stroke-width: 1.5;" width="613" x="2298" y="9286.5"/><ellipse cx="2448.25" cy="9302.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2451.2188,9308.1406 Q2450.6406,9308.4375 2450,9308.5781 Q2449.3594,9308.7344 2448.6563,9308.7344 Q2446.1563,9308.7344 2444.8281,9307.0938 Q2443.5156,9305.4375 2443.5156,9302.3125 Q2443.5156,9299.1875 2444.8281,9297.5313 Q2446.1563,9295.875 2448.6563,9295.875 Q2449.3594,9295.875 2450,9296.0313 Q2450.6563,9296.1875 2451.2188,9296.4844 L2451.2188,9299.2031 Q2450.5938,9298.625 2450,9298.3594 Q2449.4063,9298.0781 2448.7813,9298.0781 Q2447.4375,9298.0781 2446.75,9299.1563 Q2446.0625,9300.2188 2446.0625,9302.3125 Q2446.0625,9304.4063 2446.75,9305.4844 Q2447.4375,9306.5469 2448.7813,9306.5469 Q2449.4063,9306.5469 2450,9306.2813 Q2450.5938,9306 2451.2188,9305.4219 L2451.2188,9308.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2468.75" y="9306.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="215" x="2699" y="9283.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="213" x="2700" y="9295.6387">std::basic_string&lt;unsigned short&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2299" x2="2910" y1="9318.5" y2="9318.5"/><ellipse cx="2309" cy="9329.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2318" y="9332.7104">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2309" cy="9342.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="2318" y="9345.5151">VarHolderImpl(const UTF16String &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2306" y="9352.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2318" y="9358.3198">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2306" y="9364.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="2318" y="9371.1245">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp;) : void</text><ellipse cx="2309" cy="9380.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2318" y="9383.9292">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2299" x2="2910" y1="9390.5234" y2="9390.5234"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2306" y="9398.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="587" x="2318" y="9404.7339">operator=(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp;) : Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2299" x2="2910" y1="9411.3281" y2="9411.3281"/><ellipse cx="2309" cy="9422.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2318" y="9425.5386">operator[](UTF16String::size_type n) : UTF16Char &amp;</text><ellipse cx="2309" cy="9435.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="2318" y="9438.3433">operator[](UTF16String::size_type n) const : const UTF16Char &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2299" x2="2910" y1="9444.9375" y2="9444.9375"/><ellipse cx="2309" cy="9455.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2318" y="9459.1479">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2309" cy="9468.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2318" y="9471.9526">convert(Int8 &amp; val) const : void</text><ellipse cx="2309" cy="9481.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2318" y="9484.7573">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2309" cy="9494.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2318" y="9497.562">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2309" cy="9507.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2318" y="9510.3667">convert(DateTime &amp; val) const : void</text><ellipse cx="2309" cy="9519.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2318" y="9523.1714">convert(std::string &amp; val) const : void</text><ellipse cx="2309" cy="9532.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2318" y="9535.9761">convert(UTF16String &amp; val) const : void</text><ellipse cx="2309" cy="9545.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2318" y="9548.7808">convert(char &amp; val) const : void</text><ellipse cx="2309" cy="9558.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2318" y="9561.5854">convert(double &amp; val) const : void</text><ellipse cx="2309" cy="9571.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2318" y="9574.3901">convert(float &amp; val) const : void</text><ellipse cx="2309" cy="9583.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2318" y="9587.1948">convert(bool &amp; val) const : void</text><ellipse cx="2309" cy="9596.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2318" y="9599.9995">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2309" cy="9609.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2318" y="9612.8042">convert(long long &amp; val) const : void</text><ellipse cx="2309" cy="9622.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2318" y="9625.6089">convert(UInt64 &amp; val) const : void</text><ellipse cx="2309" cy="9635.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2318" y="9638.4136">convert(UInt32 &amp; val) const : void</text><ellipse cx="2309" cy="9648.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2318" y="9651.2183">convert(UInt16 &amp; val) const : void</text><ellipse cx="2309" cy="9660.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2318" y="9664.0229">convert(UInt8 &amp; val) const : void</text><ellipse cx="2309" cy="9673.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2318" y="9676.8276">convert(Int64 &amp; val) const : void</text><ellipse cx="2309" cy="9686.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2318" y="9689.6323">convert(Int32 &amp; val) const : void</text><ellipse cx="2309" cy="9699.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2318" y="9702.437">convert(Int16 &amp; val) const : void</text><ellipse cx="2309" cy="9712.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2318" y="9715.2417">isString() const : bool</text><ellipse cx="2309" cy="9724.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2318" y="9728.0464">size() const : std::size_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2306" y="9734.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2318" y="9740.8511">toStdString() const : std::string</text><ellipse cx="2309" cy="9750.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2318" y="9753.6558">type() const : const std::type_info &amp;</text><ellipse cx="2309" cy="9763.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2318" y="9766.4604">value() const : const UTF16String &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2299" x2="2910" y1="9773.0547" y2="9773.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2304" y="9779.0547"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2306" y="9781.0547"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2318" y="9787.2651">_val : UTF16String</text></a><!--MD5=[e547b5e99773e1bba43a948d274a41c6]
class C_0001646173285346905617--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.5;" width="579" x="2315" y="8790.5"/><ellipse cx="2525.75" cy="8806.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2528.7188,8812.1406 Q2528.1406,8812.4375 2527.5,8812.5781 Q2526.8594,8812.7344 2526.1563,8812.7344 Q2523.6563,8812.7344 2522.3281,8811.0938 Q2521.0156,8809.4375 2521.0156,8806.3125 Q2521.0156,8803.1875 2522.3281,8801.5313 Q2523.6563,8799.875 2526.1563,8799.875 Q2526.8594,8799.875 2527.5,8800.0313 Q2528.1563,8800.1875 2528.7188,8800.4844 L2528.7188,8803.2031 Q2528.0938,8802.625 2527.5,8802.3594 Q2526.9063,8802.0781 2526.2813,8802.0781 Q2524.9375,8802.0781 2524.25,8803.1563 Q2523.5625,8804.2188 2523.5625,8806.3125 Q2523.5625,8808.4063 2524.25,8809.4844 Q2524.9375,8810.5469 2526.2813,8810.5469 Q2526.9063,8810.5469 2527.5,8810.2813 Q2528.0938,8810 2528.7188,8809.4219 L2528.7188,8812.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2546.25" y="8810.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="60" x="2837" y="8787.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="2838" y="8799.6387">long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2316" x2="2893" y1="8822.5" y2="8822.5"/><ellipse cx="2326" cy="8833.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2335" y="8836.7104">VarHolderImpl(long long val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2323" y="8843.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2335" y="8849.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2323" y="8856.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="2335" y="8862.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;long long&gt; &amp;) : void</text><ellipse cx="2326" cy="8871.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2335" y="8875.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2316" x2="2893" y1="8881.7188" y2="8881.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2323" y="8889.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="553" x="2335" y="8895.9292">operator=(const Dynamic::VarHolderImpl&lt;long long&gt; &amp;) : Dynamic::VarHolderImpl&lt;long long&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2316" x2="2893" y1="8902.5234" y2="8902.5234"/><ellipse cx="2326" cy="8913.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2335" y="8916.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2326" cy="8926.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2335" y="8929.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2326" cy="8939.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2335" y="8942.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2326" cy="8951.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2335" y="8955.1479">convert(char &amp; val) const : void</text><ellipse cx="2326" cy="8964.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2335" y="8967.9526">convert(double &amp; val) const : void</text><ellipse cx="2326" cy="8977.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2335" y="8980.7573">convert(float &amp; val) const : void</text><ellipse cx="2326" cy="8990.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2335" y="8993.562">convert(bool &amp; val) const : void</text><ellipse cx="2326" cy="9003.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2335" y="9006.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2326" cy="9015.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2335" y="9019.1714">convert(long long &amp; val) const : void</text><ellipse cx="2326" cy="9028.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2335" y="9031.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2326" cy="9041.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2335" y="9044.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2326" cy="9054.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2335" y="9057.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2326" cy="9067.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2335" y="9070.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2326" cy="9079.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2335" y="9083.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2326" cy="9092.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2335" y="9095.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2326" cy="9105.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2335" y="9108.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2326" cy="9118.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2335" y="9121.6089">isArray() const : bool</text><ellipse cx="2326" cy="9131.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2335" y="9134.4136">isBoolean() const : bool</text><ellipse cx="2326" cy="9144.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2335" y="9147.2183">isInteger() const : bool</text><ellipse cx="2326" cy="9156.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2335" y="9160.0229">isNumeric() const : bool</text><ellipse cx="2326" cy="9169.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2335" y="9172.8276">isSigned() const : bool</text><ellipse cx="2326" cy="9182.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2335" y="9185.6323">isString() const : bool</text><ellipse cx="2326" cy="9195.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2335" y="9198.437">isStruct() const : bool</text><ellipse cx="2326" cy="9208.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2335" y="9211.2417">type() const : const std::type_info &amp;</text><ellipse cx="2326" cy="9220.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2335" y="9224.0464">value() const : const long long &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2316" x2="2893" y1="9230.6406" y2="9230.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2321" y="9236.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2323" y="9238.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2335" y="9244.8511">_val : long long</text></a><!--MD5=[d32390979af13b4d5d37b0e60ea6c197]
class C_0001583654034047392858--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.5;" width="691" x="2259" y="8294.5"/><ellipse cx="2495.25" cy="8310.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2498.2188,8316.1406 Q2497.6406,8316.4375 2497,8316.5781 Q2496.3594,8316.7344 2495.6563,8316.7344 Q2493.1563,8316.7344 2491.8281,8315.0938 Q2490.5156,8313.4375 2490.5156,8310.3125 Q2490.5156,8307.1875 2491.8281,8305.5313 Q2493.1563,8303.875 2495.6563,8303.875 Q2496.3594,8303.875 2497,8304.0313 Q2497.6563,8304.1875 2498.2188,8304.4844 L2498.2188,8307.2031 Q2497.5938,8306.625 2497,8306.3594 Q2496.4063,8306.0781 2495.7813,8306.0781 Q2494.4375,8306.0781 2493.75,8307.1563 Q2493.0625,8308.2188 2493.0625,8310.3125 Q2493.0625,8312.4063 2493.75,8313.4844 Q2494.4375,8314.5469 2495.7813,8314.5469 Q2496.4063,8314.5469 2497,8314.2813 Q2497.5938,8314 2498.2188,8313.4219 L2498.2188,8316.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2515.75" y="8314.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="121" x="2832" y="8291.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="2833" y="8303.6387">unsigned long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2260" x2="2949" y1="8326.5" y2="8326.5"/><ellipse cx="2270" cy="8337.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2279" y="8340.7104">VarHolderImpl(unsigned long long val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="8347.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2279" y="8353.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="8360.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="434" x="2279" y="8366.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp;) : void</text><ellipse cx="2270" cy="8375.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2279" y="8379.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2260" x2="2949" y1="8385.7188" y2="8385.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="8393.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="665" x="2279" y="8399.9292">operator=(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp;) : Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2260" x2="2949" y1="8406.5234" y2="8406.5234"/><ellipse cx="2270" cy="8417.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2279" y="8420.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2270" cy="8430.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2279" y="8433.5386">convert(Int8 &amp; val) const : void</text><ellipse cx="2270" cy="8443.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2279" y="8446.3433">convert(std::string &amp; val) const : void</text><ellipse cx="2270" cy="8455.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2279" y="8459.1479">convert(char &amp; val) const : void</text><ellipse cx="2270" cy="8468.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2279" y="8471.9526">convert(double &amp; val) const : void</text><ellipse cx="2270" cy="8481.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2279" y="8484.7573">convert(float &amp; val) const : void</text><ellipse cx="2270" cy="8494.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2279" y="8497.562">convert(bool &amp; val) const : void</text><ellipse cx="2270" cy="8507.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2279" y="8510.3667">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2270" cy="8519.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2279" y="8523.1714">convert(long long &amp; val) const : void</text><ellipse cx="2270" cy="8532.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2279" y="8535.9761">convert(UInt64 &amp; val) const : void</text><ellipse cx="2270" cy="8545.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2279" y="8548.7808">convert(UInt32 &amp; val) const : void</text><ellipse cx="2270" cy="8558.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2279" y="8561.5854">convert(UInt16 &amp; val) const : void</text><ellipse cx="2270" cy="8571.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2279" y="8574.3901">convert(UInt8 &amp; val) const : void</text><ellipse cx="2270" cy="8583.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2279" y="8587.1948">convert(Int64 &amp; val) const : void</text><ellipse cx="2270" cy="8596.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2279" y="8599.9995">convert(Int32 &amp; val) const : void</text><ellipse cx="2270" cy="8609.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2279" y="8612.8042">convert(Int16 &amp; val) const : void</text><ellipse cx="2270" cy="8622.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2279" y="8625.6089">isArray() const : bool</text><ellipse cx="2270" cy="8635.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2279" y="8638.4136">isBoolean() const : bool</text><ellipse cx="2270" cy="8648.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2279" y="8651.2183">isInteger() const : bool</text><ellipse cx="2270" cy="8660.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2279" y="8664.0229">isNumeric() const : bool</text><ellipse cx="2270" cy="8673.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2279" y="8676.8276">isSigned() const : bool</text><ellipse cx="2270" cy="8686.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2279" y="8689.6323">isString() const : bool</text><ellipse cx="2270" cy="8699.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2279" y="8702.437">isStruct() const : bool</text><ellipse cx="2270" cy="8712.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2279" y="8715.2417">type() const : const std::type_info &amp;</text><ellipse cx="2270" cy="8724.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2279" y="8728.0464">value() const : const unsigned long long &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2260" x2="2949" y1="8734.6406" y2="8734.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2265" y="8740.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="8742.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2279" y="8748.8511">_val : unsigned long long</text></a><!--MD5=[5774863192e27d837b2947413a649565]
class C_0000910307965681926894--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="251.2656" id="C_0000910307965681926894" style="stroke: #A80036; stroke-width: 1.5;" width="1051" x="2079" y="8008.5"/><ellipse cx="2508.25" cy="8024.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2511.2188,8030.1406 Q2510.6406,8030.4375 2510,8030.5781 Q2509.3594,8030.7344 2508.6563,8030.7344 Q2506.1563,8030.7344 2504.8281,8029.0938 Q2503.5156,8027.4375 2503.5156,8024.3125 Q2503.5156,8021.1875 2504.8281,8019.5313 Q2506.1563,8017.875 2508.6563,8017.875 Q2509.3594,8017.875 2510,8018.0313 Q2510.6563,8018.1875 2511.2188,8018.4844 L2511.2188,8021.2031 Q2510.5938,8020.625 2510,8020.3594 Q2509.4063,8020.0781 2508.7813,8020.0781 Q2507.4375,8020.0781 2506.75,8021.1563 Q2506.0625,8022.2188 2506.0625,8024.3125 Q2506.0625,8026.4063 2506.75,8027.4844 Q2507.4375,8028.5469 2508.7813,8028.5469 Q2509.4063,8028.5469 2510,8028.2813 Q2510.5938,8028 2511.2188,8027.4219 L2511.2188,8030.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2528.75" y="8028.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="95" x="3038" y="8005.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="3039" y="8017.6387">std::vector&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2080" x2="3129" y1="8040.5" y2="8040.5"/><ellipse cx="2090" cy="8051.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2099" y="8054.7104">VarHolderImpl(const std::vector&lt;T&gt; &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="8061.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2099" y="8067.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="8074.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="614" x="2099" y="8080.3198">VarHolderImpl(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;) : void</text><ellipse cx="2090" cy="8089.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2099" y="8093.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2080" x2="3129" y1="8099.7188" y2="8099.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="8107.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1025" x="2099" y="8113.9292">operator=(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;) : VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2080" x2="3129" y1="8120.5234" y2="8120.5234"/><ellipse cx="2090" cy="8131.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2099" y="8134.7339">operator[](typename std::vector&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="2090" cy="8144.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2099" y="8147.5386">operator[](typename std::vector&lt;T&gt;::size_type n) const : const T &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2080" x2="3129" y1="8154.1328" y2="8154.1328"/><ellipse cx="2090" cy="8165.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2099" y="8168.3433">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2090" cy="8177.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2099" y="8181.1479">convert(std::string &amp; val) const : void</text><ellipse cx="2090" cy="8190.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2099" y="8193.9526">isVector() const : bool</text><ellipse cx="2090" cy="8203.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2099" y="8206.7573">size() const : std::size_t</text><ellipse cx="2090" cy="8216.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2099" y="8219.562">type() const : const std::type_info &amp;</text><ellipse cx="2090" cy="8229.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2099" y="8232.3667">value() const : const std::vector&lt;T&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2080" x2="3129" y1="8238.9609" y2="8238.9609"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2085" y="8244.9609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="8246.9609"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2099" y="8253.1714">_val : std::vector&lt;T&gt;</text></a><!--MD5=[98ccd02d0df14638a1247e05b06b34a2]
class C_0000355772964752054032--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="251.2656" id="C_0000355772964752054032" style="stroke: #A80036; stroke-width: 1.5;" width="1015" x="2097" y="7722.5"/><ellipse cx="2519.25" cy="7738.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2522.2188,7744.1406 Q2521.6406,7744.4375 2521,7744.5781 Q2520.3594,7744.7344 2519.6563,7744.7344 Q2517.1563,7744.7344 2515.8281,7743.0938 Q2514.5156,7741.4375 2514.5156,7738.3125 Q2514.5156,7735.1875 2515.8281,7733.5313 Q2517.1563,7731.875 2519.6563,7731.875 Q2520.3594,7731.875 2521,7732.0313 Q2521.6563,7732.1875 2522.2188,7732.4844 L2522.2188,7735.2031 Q2521.5938,7734.625 2521,7734.3594 Q2520.4063,7734.0781 2519.7813,7734.0781 Q2518.4375,7734.0781 2517.75,7735.1563 Q2517.0625,7736.2188 2517.0625,7738.3125 Q2517.0625,7740.4063 2517.75,7741.4844 Q2518.4375,7742.5469 2519.7813,7742.5469 Q2520.4063,7742.5469 2521,7742.2813 Q2521.5938,7742 2522.2188,7741.4219 L2522.2188,7744.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2539.75" y="7742.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="73" x="3042" y="7719.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="3043" y="7731.6387">std::list&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2098" x2="3111" y1="7754.5" y2="7754.5"/><ellipse cx="2108" cy="7765.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="2117" y="7768.7104">VarHolderImpl(const std::list&lt;T&gt; &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2105" y="7775.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2117" y="7781.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2105" y="7788.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="596" x="2117" y="7794.3198">VarHolderImpl(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;) : void</text><ellipse cx="2108" cy="7803.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2117" y="7807.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2098" x2="3111" y1="7813.7188" y2="7813.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2105" y="7821.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="989" x="2117" y="7827.9292">operator=(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;) : VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2098" x2="3111" y1="7834.5234" y2="7834.5234"/><ellipse cx="2108" cy="7845.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="2117" y="7848.7339">operator[](typename std::list&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="2108" cy="7858.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="2117" y="7861.5386">operator[](typename std::list&lt;T&gt;::size_type n) const : const T &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2098" x2="3111" y1="7868.1328" y2="7868.1328"/><ellipse cx="2108" cy="7879.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2117" y="7882.3433">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2108" cy="7891.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2117" y="7895.1479">convert(std::string &amp; val) const : void</text><ellipse cx="2108" cy="7904.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2117" y="7907.9526">isList() const : bool</text><ellipse cx="2108" cy="7917.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2117" y="7920.7573">size() const : std::size_t</text><ellipse cx="2108" cy="7930.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2117" y="7933.562">type() const : const std::type_info &amp;</text><ellipse cx="2108" cy="7943.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2117" y="7946.3667">value() const : const std::list&lt;T&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2098" x2="3111" y1="7952.9609" y2="7952.9609"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2103" y="7958.9609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2105" y="7960.9609"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2117" y="7967.1714">_val : std::list&lt;T&gt;</text></a><!--MD5=[a4496fd8b9f9f58f5ef896c71d14cd41]
class C_0001350084679139174053--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="251.2656" id="C_0001350084679139174053" style="stroke: #A80036; stroke-width: 1.5;" width="1051" x="2079" y="7436.5"/><ellipse cx="2507.75" cy="7452.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2510.7188,7458.1406 Q2510.1406,7458.4375 2509.5,7458.5781 Q2508.8594,7458.7344 2508.1563,7458.7344 Q2505.6563,7458.7344 2504.3281,7457.0938 Q2503.0156,7455.4375 2503.0156,7452.3125 Q2503.0156,7449.1875 2504.3281,7447.5313 Q2505.6563,7445.875 2508.1563,7445.875 Q2508.8594,7445.875 2509.5,7446.0313 Q2510.1563,7446.1875 2510.7188,7446.4844 L2510.7188,7449.2031 Q2510.0938,7448.625 2509.5,7448.3594 Q2508.9063,7448.0781 2508.2813,7448.0781 Q2506.9375,7448.0781 2506.25,7449.1563 Q2505.5625,7450.2188 2505.5625,7452.3125 Q2505.5625,7454.4063 2506.25,7455.4844 Q2506.9375,7456.5469 2508.2813,7456.5469 Q2508.9063,7456.5469 2509.5,7456.2813 Q2510.0938,7456 2510.7188,7455.4219 L2510.7188,7458.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2528.25" y="7456.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="96" x="3037" y="7433.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="3038" y="7445.6387">std::deque&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2080" x2="3129" y1="7468.5" y2="7468.5"/><ellipse cx="2090" cy="7479.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2099" y="7482.7104">VarHolderImpl(const std::deque&lt;T&gt; &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="7489.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2099" y="7495.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="7502.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="614" x="2099" y="7508.3198">VarHolderImpl(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;) : void</text><ellipse cx="2090" cy="7517.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2099" y="7521.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2080" x2="3129" y1="7527.7188" y2="7527.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="7535.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1025" x="2099" y="7541.9292">operator=(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;) : VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2080" x2="3129" y1="7548.5234" y2="7548.5234"/><ellipse cx="2090" cy="7559.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2099" y="7562.7339">operator[](typename std::deque&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="2090" cy="7572.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2099" y="7575.5386">operator[](typename std::deque&lt;T&gt;::size_type n) const : const T &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2080" x2="3129" y1="7582.1328" y2="7582.1328"/><ellipse cx="2090" cy="7593.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2099" y="7596.3433">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2090" cy="7605.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2099" y="7609.1479">convert(std::string &amp; val) const : void</text><ellipse cx="2090" cy="7618.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2099" y="7621.9526">isDeque() const : bool</text><ellipse cx="2090" cy="7631.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2099" y="7634.7573">size() const : std::size_t</text><ellipse cx="2090" cy="7644.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2099" y="7647.562">type() const : const std::type_info &amp;</text><ellipse cx="2090" cy="7657.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2099" y="7660.3667">value() const : const std::deque&lt;T&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2080" x2="3129" y1="7666.9609" y2="7666.9609"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2085" y="7672.9609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2087" y="7674.9609"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2099" y="7681.1714">_val : std::deque&lt;T&gt;</text></a><!--MD5=[d3f4e35f4bae44fdf6c46a1300227a72]
class C_0000699000175415913074--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="460.9453" id="C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="2313" y="6940.5"/><ellipse cx="2525.25" cy="6956.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2528.2188,6962.1406 Q2527.6406,6962.4375 2527,6962.5781 Q2526.3594,6962.7344 2525.6563,6962.7344 Q2523.1563,6962.7344 2521.8281,6961.0938 Q2520.5156,6959.4375 2520.5156,6956.3125 Q2520.5156,6953.1875 2521.8281,6951.5313 Q2523.1563,6949.875 2525.6563,6949.875 Q2526.3594,6949.875 2527,6950.0313 Q2527.6563,6950.1875 2528.2188,6950.4844 L2528.2188,6953.2031 Q2527.5938,6952.625 2527,6952.3594 Q2526.4063,6952.0781 2525.7813,6952.0781 Q2524.4375,6952.0781 2523.75,6953.1563 Q2523.0625,6954.2188 2523.0625,6956.3125 Q2523.0625,6958.4063 2523.75,6959.4844 Q2524.4375,6960.5469 2525.7813,6960.5469 Q2526.4063,6960.5469 2527,6960.2813 Q2527.5938,6960 2528.2188,6959.4219 L2528.2188,6962.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2545.75" y="6960.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="61" x="2838" y="6937.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="59" x="2839" y="6949.6387">DateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2314" x2="2895" y1="6972.5" y2="6972.5"/><ellipse cx="2324" cy="6983.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2333" y="6986.7104">VarHolderImpl(const DateTime &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2321" y="6993.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2333" y="6999.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2321" y="7006.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="2333" y="7012.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp;) : void</text><ellipse cx="2324" cy="7021.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2333" y="7025.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2314" x2="2895" y1="7031.7188" y2="7031.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2321" y="7039.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="2333" y="7045.9292">operator=(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp;) : Dynamic::VarHolderImpl&lt;DateTime&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2314" x2="2895" y1="7052.5234" y2="7052.5234"/><ellipse cx="2324" cy="7063.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2333" y="7066.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2324" cy="7076.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2333" y="7079.5386">convert(Int8 &amp;) const : void</text><ellipse cx="2324" cy="7089.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2333" y="7092.3433">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2324" cy="7101.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2333" y="7105.1479">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2324" cy="7114.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2333" y="7117.9526">convert(DateTime &amp; val) const : void</text><ellipse cx="2324" cy="7127.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2333" y="7130.7573">convert(std::string &amp; val) const : void</text><ellipse cx="2324" cy="7140.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2333" y="7143.562">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2324" cy="7153.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2333" y="7156.3667">convert(UInt64 &amp; val) const : void</text><ellipse cx="2324" cy="7165.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2333" y="7169.1714">convert(Int64 &amp; val) const : void</text><ellipse cx="2324" cy="7178.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2333" y="7181.9761">convert(Int32 &amp;) const : void</text><ellipse cx="2324" cy="7191.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2333" y="7194.7808">convert(Int16 &amp;) const : void</text><ellipse cx="2324" cy="7204.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2333" y="7207.5854">convert(long long &amp; val) const : void</text><ellipse cx="2324" cy="7217.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2333" y="7220.3901">isArray() const : bool</text><ellipse cx="2324" cy="7229.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2333" y="7233.1948">isBoolean() const : bool</text><ellipse cx="2324" cy="7242.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2333" y="7245.9995">isDate() const : bool</text><ellipse cx="2324" cy="7255.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2333" y="7258.8042">isDateTime() const : bool</text><ellipse cx="2324" cy="7268.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2333" y="7271.6089">isInteger() const : bool</text><ellipse cx="2324" cy="7281.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2333" y="7284.4136">isNumeric() const : bool</text><ellipse cx="2324" cy="7294.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2333" y="7297.2183">isSigned() const : bool</text><ellipse cx="2324" cy="7306.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2333" y="7310.0229">isString() const : bool</text><ellipse cx="2324" cy="7319.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2333" y="7322.8276">isStruct() const : bool</text><ellipse cx="2324" cy="7332.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2333" y="7335.6323">isTime() const : bool</text><ellipse cx="2324" cy="7345.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2333" y="7348.437">isUUID() const : bool</text><ellipse cx="2324" cy="7358.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2333" y="7361.2417">type() const : const std::type_info &amp;</text><ellipse cx="2324" cy="7370.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2333" y="7374.0464">value() const : const DateTime &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2314" x2="2895" y1="7380.6406" y2="7380.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2319" y="7386.6406"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2321" y="7388.6406"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2333" y="7394.8511">_val : DateTime</text></a><!--MD5=[535f5640b87cab7cf4763634b5dabc9e]
class C_0001850771625416044357--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="422.5313" id="C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.5;" width="641" x="2284" y="6482.5"/><ellipse cx="2508.75" cy="6498.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2511.7188,6504.1406 Q2511.1406,6504.4375 2510.5,6504.5781 Q2509.8594,6504.7344 2509.1563,6504.7344 Q2506.6563,6504.7344 2505.3281,6503.0938 Q2504.0156,6501.4375 2504.0156,6498.3125 Q2504.0156,6495.1875 2505.3281,6493.5313 Q2506.6563,6491.875 2509.1563,6491.875 Q2509.8594,6491.875 2510.5,6492.0313 Q2511.1563,6492.1875 2511.7188,6492.4844 L2511.7188,6495.2031 Q2511.0938,6494.625 2510.5,6494.3594 Q2509.9063,6494.0781 2509.2813,6494.0781 Q2507.9375,6494.0781 2507.25,6495.1563 Q2506.5625,6496.2188 2506.5625,6498.3125 Q2506.5625,6500.4063 2507.25,6501.4844 Q2507.9375,6502.5469 2509.2813,6502.5469 Q2509.9063,6502.5469 2510.5,6502.2813 Q2511.0938,6502 2511.7188,6501.4219 L2511.7188,6504.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2529.25" y="6502.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="94" x="2834" y="6479.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="2835" y="6491.6387">LocalDateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2285" x2="2924" y1="6514.5" y2="6514.5"/><ellipse cx="2295" cy="6525.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="2304" y="6528.7104">VarHolderImpl(const LocalDateTime &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2292" y="6535.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2304" y="6541.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2292" y="6548.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="2304" y="6554.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp;) : void</text><ellipse cx="2295" cy="6563.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2304" y="6567.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2285" x2="2924" y1="6573.7188" y2="6573.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2292" y="6581.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="615" x="2304" y="6587.9292">operator=(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp;) : Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2285" x2="2924" y1="6594.5234" y2="6594.5234"/><ellipse cx="2295" cy="6605.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2304" y="6608.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2295" cy="6618.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2304" y="6621.5386">convert(Int64 &amp; val) const : void</text><ellipse cx="2295" cy="6631.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2304" y="6634.3433">convert(UInt64 &amp; val) const : void</text><ellipse cx="2295" cy="6643.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2304" y="6647.1479">convert(long long &amp; val) const : void</text><ellipse cx="2295" cy="6656.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2304" y="6659.9526">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2295" cy="6669.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2304" y="6672.7573">convert(std::string &amp; val) const : void</text><ellipse cx="2295" cy="6682.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2304" y="6685.562">convert(DateTime &amp; val) const : void</text><ellipse cx="2295" cy="6695.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2304" y="6698.3667">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2295" cy="6707.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2304" y="6711.1714">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2295" cy="6720.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2304" y="6723.9761">isArray() const : bool</text><ellipse cx="2295" cy="6733.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2304" y="6736.7808">isBoolean() const : bool</text><ellipse cx="2295" cy="6746.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2304" y="6749.5854">isDate() const : bool</text><ellipse cx="2295" cy="6759.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2304" y="6762.3901">isDateTime() const : bool</text><ellipse cx="2295" cy="6771.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2304" y="6775.1948">isInteger() const : bool</text><ellipse cx="2295" cy="6784.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2304" y="6787.9995">isNumeric() const : bool</text><ellipse cx="2295" cy="6797.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2304" y="6800.8042">isSigned() const : bool</text><ellipse cx="2295" cy="6810.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2304" y="6813.6089">isString() const : bool</text><ellipse cx="2295" cy="6823.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2304" y="6826.4136">isStruct() const : bool</text><ellipse cx="2295" cy="6836.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2304" y="6839.2183">isTime() const : bool</text><ellipse cx="2295" cy="6848.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2304" y="6852.0229">isUUID() const : bool</text><ellipse cx="2295" cy="6861.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2304" y="6864.8276">type() const : const std::type_info &amp;</text><ellipse cx="2295" cy="6874.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2304" y="6877.6323">value() const : const LocalDateTime &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2285" x2="2924" y1="6884.2266" y2="6884.2266"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2290" y="6890.2266"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2292" y="6892.2266"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2304" y="6898.437">_val : LocalDateTime</text></a><!--MD5=[7d52b6bd4d6f4b5a6d942536c6534914]
class C_0001458511670125196521--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="422.5313" id="C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="2303" y="6024.5"/><ellipse cx="2521.25" cy="6040.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2524.2188,6046.1406 Q2523.6406,6046.4375 2523,6046.5781 Q2522.3594,6046.7344 2521.6563,6046.7344 Q2519.1563,6046.7344 2517.8281,6045.0938 Q2516.5156,6043.4375 2516.5156,6040.3125 Q2516.5156,6037.1875 2517.8281,6035.5313 Q2519.1563,6033.875 2521.6563,6033.875 Q2522.3594,6033.875 2523,6034.0313 Q2523.6563,6034.1875 2524.2188,6034.4844 L2524.2188,6037.2031 Q2523.5938,6036.625 2523,6036.3594 Q2522.4063,6036.0781 2521.7813,6036.0781 Q2520.4375,6036.0781 2519.75,6037.1563 Q2519.0625,6038.2188 2519.0625,6040.3125 Q2519.0625,6042.4063 2519.75,6043.4844 Q2520.4375,6044.5469 2521.7813,6044.5469 Q2522.4063,6044.5469 2523,6044.2813 Q2523.5938,6044 2524.2188,6043.4219 L2524.2188,6046.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2541.75" y="6044.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="69" x="2840" y="6021.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="67" x="2841" y="6033.6387">Timestamp</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2304" x2="2905" y1="6056.5" y2="6056.5"/><ellipse cx="2314" cy="6067.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2323" y="6070.7104">VarHolderImpl(const Timestamp &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2311" y="6077.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2323" y="6083.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2311" y="6090.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="2323" y="6096.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp;) : void</text><ellipse cx="2314" cy="6105.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2323" y="6109.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2304" x2="2905" y1="6115.7188" y2="6115.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2311" y="6123.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="2323" y="6129.9292">operator=(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp;) : Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2304" x2="2905" y1="6136.5234" y2="6136.5234"/><ellipse cx="2314" cy="6147.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2323" y="6150.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2314" cy="6160.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2323" y="6163.5386">convert(Int64 &amp; val) const : void</text><ellipse cx="2314" cy="6173.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2323" y="6176.3433">convert(UInt64 &amp; val) const : void</text><ellipse cx="2314" cy="6185.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2323" y="6189.1479">convert(long long &amp; val) const : void</text><ellipse cx="2314" cy="6198.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2323" y="6201.9526">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2314" cy="6211.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2323" y="6214.7573">convert(std::string &amp; val) const : void</text><ellipse cx="2314" cy="6224.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2323" y="6227.562">convert(DateTime &amp; val) const : void</text><ellipse cx="2314" cy="6237.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2323" y="6240.3667">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2314" cy="6249.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2323" y="6253.1714">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2314" cy="6262.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2323" y="6265.9761">isArray() const : bool</text><ellipse cx="2314" cy="6275.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2323" y="6278.7808">isBoolean() const : bool</text><ellipse cx="2314" cy="6288.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2323" y="6291.5854">isDate() const : bool</text><ellipse cx="2314" cy="6301.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2323" y="6304.3901">isDateTime() const : bool</text><ellipse cx="2314" cy="6313.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2323" y="6317.1948">isInteger() const : bool</text><ellipse cx="2314" cy="6326.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2323" y="6329.9995">isNumeric() const : bool</text><ellipse cx="2314" cy="6339.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2323" y="6342.8042">isSigned() const : bool</text><ellipse cx="2314" cy="6352.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2323" y="6355.6089">isString() const : bool</text><ellipse cx="2314" cy="6365.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2323" y="6368.4136">isStruct() const : bool</text><ellipse cx="2314" cy="6378.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2323" y="6381.2183">isTime() const : bool</text><ellipse cx="2314" cy="6390.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2323" y="6394.0229">isUUID() const : bool</text><ellipse cx="2314" cy="6403.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2323" y="6406.8276">type() const : const std::type_info &amp;</text><ellipse cx="2314" cy="6416.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2323" y="6419.6323">value() const : const Timestamp &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2304" x2="2905" y1="6426.2266" y2="6426.2266"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2309" y="6432.2266"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2311" y="6434.2266"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2323" y="6440.437">_val : Timestamp</text></a><!--MD5=[6aaca93ee2c23e99033b42cf172acb7a]
class C_0001286239480653274581--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="332.8984" id="C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2339.5" y="5656.5"/><ellipse cx="2539.25" cy="5672.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2542.2188,5678.1406 Q2541.6406,5678.4375 2541,5678.5781 Q2540.3594,5678.7344 2539.6563,5678.7344 Q2537.1563,5678.7344 2535.8281,5677.0938 Q2534.5156,5675.4375 2534.5156,5672.3125 Q2534.5156,5669.1875 2535.8281,5667.5313 Q2537.1563,5665.875 2539.6563,5665.875 Q2540.3594,5665.875 2541,5666.0313 Q2541.6563,5666.1875 2542.2188,5666.4844 L2542.2188,5669.2031 Q2541.5938,5668.625 2541,5668.3594 Q2540.4063,5668.0781 2539.7813,5668.0781 Q2538.4375,5668.0781 2537.75,5669.1563 Q2537.0625,5670.2188 2537.0625,5672.3125 Q2537.0625,5674.4063 2537.75,5675.4844 Q2538.4375,5676.5469 2539.7813,5676.5469 Q2540.4063,5676.5469 2541,5676.2813 Q2541.5938,5676 2542.2188,5675.4219 L2542.2188,5678.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2559.75" y="5676.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="33" x="2839.5" y="5653.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="31" x="2840.5" y="5665.6387">UUID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="5688.5" y2="5688.5"/><ellipse cx="2350.5" cy="5699.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2359.5" y="5702.7104">VarHolderImpl(const UUID &amp; val) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5709.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="5715.5151">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5722.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="2359.5" y="5728.3198">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp;) : void</text><ellipse cx="2350.5" cy="5737.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2359.5" y="5741.1245">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="5747.7188" y2="5747.7188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5755.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2359.5" y="5761.9292">operator=(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp;) : Dynamic::VarHolderImpl&lt;UUID&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2340.5" x2="2868.5" y1="5768.5234" y2="5768.5234"/><ellipse cx="2350.5" cy="5779.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2359.5" y="5782.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2350.5" cy="5792.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2359.5" y="5795.5386">convert(std::string &amp; val) const : void</text><ellipse cx="2350.5" cy="5805.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2359.5" y="5808.3433">isArray() const : bool</text><ellipse cx="2350.5" cy="5817.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2359.5" y="5821.1479">isBoolean() const : bool</text><ellipse cx="2350.5" cy="5830.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2359.5" y="5833.9526">isDate() const : bool</text><ellipse cx="2350.5" cy="5843.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2359.5" y="5846.7573">isDateTime() const : bool</text><ellipse cx="2350.5" cy="5856.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2359.5" y="5859.562">isInteger() const : bool</text><ellipse cx="2350.5" cy="5869.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2359.5" y="5872.3667">isNumeric() const : bool</text><ellipse cx="2350.5" cy="5881.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2359.5" y="5885.1714">isSigned() const : bool</text><ellipse cx="2350.5" cy="5894.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="5897.9761">isString() const : bool</text><ellipse cx="2350.5" cy="5907.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2359.5" y="5910.7808">isStruct() const : bool</text><ellipse cx="2350.5" cy="5920.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2359.5" y="5923.5854">isTime() const : bool</text><ellipse cx="2350.5" cy="5933.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2359.5" y="5936.3901">isUUID() const : bool</text><ellipse cx="2350.5" cy="5945.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2359.5" y="5949.1948">type() const : const std::type_info &amp;</text><ellipse cx="2350.5" cy="5958.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="2359.5" y="5961.9995">value() const : const UUID &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2868.5" y1="5968.5938" y2="5968.5938"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2345.5" y="5974.5938"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2347.5" y="5976.5938"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="2359.5" y="5982.8042">_val : UUID</text></a><!--MD5=[d0a79e34608f36a598cfde4fcdc22a46]
class C_0002237184725500898553--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33" target="_top" title="VarIterator" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33" xlink:show="new" xlink:title="VarIterator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="379.3125" id="C_0002237184725500898553" style="stroke: #A80036; stroke-width: 1.5;" width="465" x="38" y="6331.5"/><ellipse cx="232.25" cy="6347.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M235.2188,6353.1406 Q234.6406,6353.4375 234,6353.5781 Q233.3594,6353.7344 232.6563,6353.7344 Q230.1563,6353.7344 228.8281,6352.0938 Q227.5156,6350.4375 227.5156,6347.3125 Q227.5156,6344.1875 228.8281,6342.5313 Q230.1563,6340.875 232.6563,6340.875 Q233.3594,6340.875 234,6341.0313 Q234.6563,6341.1875 235.2188,6341.4844 L235.2188,6344.2031 Q234.5938,6343.625 234,6343.3594 Q233.4063,6343.0781 232.7813,6343.0781 Q231.4375,6343.0781 230.75,6344.1563 Q230.0625,6345.2188 230.0625,6347.3125 Q230.0625,6349.4063 230.75,6350.4844 Q231.4375,6351.5469 232.7813,6351.5469 Q233.4063,6351.5469 234,6351.2813 Q234.5938,6351 235.2188,6350.4219 L235.2188,6353.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="252.75" y="6351.6543">VarIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="502" y1="6363.5" y2="6363.5"/><ellipse cx="49" cy="6374.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="58" y="6377.7104">VarIterator(Dynamic::Var * pVar, bool positionEnd) : void</text><ellipse cx="49" cy="6387.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="58" y="6390.5151">VarIterator(const Dynamic::VarIterator &amp; other) : void</text><ellipse cx="49" cy="6400.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="58" y="6403.3198">VarIterator(Dynamic::VarIterator &amp;&amp; other) noexcept : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6409.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="58" y="6416.1245">VarIterator() : void</text><ellipse cx="49" cy="6425.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="58" y="6428.9292">~VarIterator() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="39" x2="502" y1="6435.5234" y2="6435.5234"/><ellipse cx="49" cy="6446.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="58" y="6449.7339">operator=(const Dynamic::VarIterator &amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6459.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="58" y="6462.5386">operator=(Dynamic::VarIterator &amp;&amp; other) noexcept : Dynamic::VarIterator &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="39" x2="502" y1="6469.1328" y2="6469.1328"/><ellipse cx="49" cy="6480.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="58" y="6483.3433">operator!=(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="6492.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58" y="6496.1479">operator*() const : Dynamic::Var &amp;</text><ellipse cx="49" cy="6505.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="58" y="6508.9526">operator+(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6518.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="58" y="6521.7573">operator++() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6531.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="58" y="6534.562">operator++(int) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6544.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="58" y="6547.3667">operator-(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6556.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="58" y="6560.1714">operator--() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6569.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="58" y="6572.9761">operator--(int) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6582.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="58" y="6585.7808">operator-&gt;() const : Dynamic::Var *</text><ellipse cx="49" cy="6595.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="58" y="6598.5854">operator==(const Dynamic::VarIterator &amp; other) const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="39" x2="502" y1="6605.1797" y2="6605.1797"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6613.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="58" y="6619.3901">decrement() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6625.9844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="58" y="6632.1948">increment() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6638.7891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="58" y="6644.9995">setPosition(std::size_t pos) const : void</text><ellipse cx="49" cy="6654.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="58" y="6657.8042">swap(Dynamic::VarIterator &amp; other) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="502" y1="6664.3984" y2="6664.3984"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="6670.3984"/><ellipse cx="49" cy="6675.3984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="58" y="6678.6089">POSITION_END : const std::size_t</text></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="_pVar" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="_pVar" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="6683.2031"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6685.2031"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="_pVar" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="_pVar" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="58" y="6691.4136">_pVar : Dynamic::Var *</text></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="6696.0078"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6698.0078"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="58" y="6704.2183">_position : std::size_t</text></a><!--MD5=[63dfd395c4dfc12b4b097b3e4deec016]
class C_0001827593751126946500--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41" target="_top" title="Var" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41" xlink:show="new" xlink:title="Var" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="1416.4922" id="C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.5;" width="497" x="629" y="5813"/><ellipse cx="862.75" cy="5829" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M865.7188,5834.6406 Q865.1406,5834.9375 864.5,5835.0781 Q863.8594,5835.2344 863.1563,5835.2344 Q860.6563,5835.2344 859.3281,5833.5938 Q858.0156,5831.9375 858.0156,5828.8125 Q858.0156,5825.6875 859.3281,5824.0313 Q860.6563,5822.375 863.1563,5822.375 Q863.8594,5822.375 864.5,5822.5313 Q865.1563,5822.6875 865.7188,5822.9844 L865.7188,5825.7031 Q865.0938,5825.125 864.5,5824.8594 Q863.9063,5824.5781 863.2813,5824.5781 Q861.9375,5824.5781 861.25,5825.6563 Q860.5625,5826.7188 860.5625,5828.8125 Q860.5625,5830.9063 861.25,5831.9844 Q861.9375,5833.0469 863.2813,5833.0469 Q863.9063,5833.0469 864.5,5832.7813 Q865.0938,5832.5 865.7188,5831.9219 L865.7188,5834.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="883.25" y="5833.1543">Var</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="630" x2="1125" y1="5845" y2="5845"/><ellipse cx="640" cy="5856" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="649" y="5859.2104">Var() : void</text><ellipse cx="640" cy="5868.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="649" y="5872.0151">Var(const char * pVal) : void</text><ellipse cx="640" cy="5881.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="649" y="5884.8198">Var(const Dynamic::Var &amp; other) : void</text><ellipse cx="640" cy="5894.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="649" y="5897.6245">Var&lt;T&gt;(const T &amp; val) : void</text><ellipse cx="640" cy="5907.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="649" y="5910.4292">~Var() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="630" x2="1125" y1="5917.0234" y2="5917.0234"/><ellipse cx="640" cy="5928.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="649" y="5931.2339">operator=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="630" x2="1125" y1="5937.8281" y2="5937.8281"/><ellipse cx="640" cy="5948.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="649" y="5952.0386">operator!() const : bool</text><ellipse cx="640" cy="5961.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="649" y="5964.8433">operator!=&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="5974.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="649" y="5977.6479">operator!=(const char * other) const : bool</text><ellipse cx="640" cy="5987.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="649" y="5990.4526">operator!=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6000.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="649" y="6003.2573">operator&amp;&amp;&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6012.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="649" y="6016.062">operator&amp;&amp;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6025.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="649" y="6028.8667">operator*&lt;T&gt;(const T &amp; other) const : const class Dynamic::Var</text><ellipse cx="640" cy="6038.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="649" y="6041.6714">operator*(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="640" cy="6051.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="649" y="6054.4761">operator*=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="640" cy="6064.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="649" y="6067.2808">operator*=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="640" cy="6076.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="649" y="6080.0854">operator+(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="640" cy="6089.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="649" y="6092.8901">operator+&lt;T&gt;(const T &amp; other) const : const class Dynamic::Var</text><ellipse cx="640" cy="6102.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="649" y="6105.6948">operator+(const char * other) const : const Dynamic::Var</text><ellipse cx="640" cy="6115.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="649" y="6118.4995">operator++() : Dynamic::Var &amp;</text><ellipse cx="640" cy="6128.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="649" y="6131.3042">operator++(int) : const Dynamic::Var</text><ellipse cx="640" cy="6140.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="649" y="6144.1089">operator+=(const char * other) : Dynamic::Var &amp;</text><ellipse cx="640" cy="6153.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="649" y="6156.9136">operator+=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="640" cy="6166.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="649" y="6169.7183">operator+=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="640" cy="6179.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="649" y="6182.5229">operator-(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="640" cy="6192.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="649" y="6195.3276">operator-&lt;T&gt;(const T &amp; other) const : const class Dynamic::Var</text><ellipse cx="640" cy="6204.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="649" y="6208.1323">operator--(int) : const Dynamic::Var</text><ellipse cx="640" cy="6217.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="649" y="6220.937">operator--() : Dynamic::Var &amp;</text><ellipse cx="640" cy="6230.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="649" y="6233.7417">operator-=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="640" cy="6243.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="649" y="6246.5464">operator-=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="640" cy="6256.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="649" y="6259.3511">operator/&lt;T&gt;(const T &amp; other) const : const class Dynamic::Var</text><ellipse cx="640" cy="6268.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="649" y="6272.1558">operator/(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="640" cy="6281.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="649" y="6284.9604">operator/=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="640" cy="6294.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="649" y="6297.7651">operator/=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="640" cy="6307.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="649" y="6310.5698">operator&lt;&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6320.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="649" y="6323.3745">operator&lt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6332.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="649" y="6336.1792">operator&lt;=&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6345.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="649" y="6348.9839">operator&lt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6358.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="649" y="6361.7886">operator=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="640" cy="6371.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="649" y="6374.5933">operator==(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6384.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="649" y="6387.3979">operator==(const char * other) const : bool</text><ellipse cx="640" cy="6396.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="649" y="6400.2026">operator==&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6409.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="649" y="6413.0073">operator&gt;&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6422.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="649" y="6425.812">operator&gt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6435.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="649" y="6438.6167">operator&gt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="640" cy="6448.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="649" y="6451.4214">operator&gt;=&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6461.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="649" y="6464.2261">operator[]&lt;T&gt;(const T &amp; n) : class Dynamic::Var &amp;</text><ellipse cx="640" cy="6473.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="649" y="6477.0308">operator[]&lt;T&gt;(const T &amp; n) const : const class Dynamic::Var &amp;</text><ellipse cx="640" cy="6486.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="649" y="6489.8354">operator[](const std::string &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="640" cy="6499.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="649" y="6502.6401">operator[](const std::string &amp; name) : Dynamic::Var &amp;</text><ellipse cx="640" cy="6512.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="649" y="6515.4448">operator||&lt;T&gt;(const T &amp; other) const : _Bool</text><ellipse cx="640" cy="6525.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="649" y="6528.2495">operator||(const Dynamic::Var &amp; other) const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="630" x2="1125" y1="6534.8438" y2="6534.8438"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6542.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="649" y="6549.0542">add&lt;T&gt;(const Dynamic::Var &amp; other) const : T</text><ellipse cx="640" cy="6558.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="649" y="6561.8589">at(std::size_t n) : char &amp;</text><ellipse cx="640" cy="6571.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="649" y="6574.6636">begin() const : Dynamic::Var::ConstIterator</text><ellipse cx="640" cy="6584.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="649" y="6587.4683">begin() : Dynamic::Var::Iterator</text><ellipse cx="640" cy="6597.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="649" y="6600.2729">clear() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6606.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="649" y="6613.0776">construct&lt;ValueType&gt;(const ValueType &amp; value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6619.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="649" y="6625.8823">construct(const Dynamic::Var &amp; other) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6632.4766"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="649" y="6638.687">construct(const char * value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6645.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="649" y="6651.4917">content() const : Dynamic::VarHolder *</text><ellipse cx="640" cy="6661.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="649" y="6664.2964">convert&lt;T&gt;() const : T</text><ellipse cx="640" cy="6673.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="649" y="6677.1011">convert&lt;T&gt;(T &amp; val) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6683.6953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="649" y="6689.9058">destruct() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6696.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="649" y="6702.7104">divide&lt;T&gt;(const Dynamic::Var &amp; other) const : T</text><ellipse cx="640" cy="6712.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="649" y="6715.5151">empty() : void</text><ellipse cx="640" cy="6725.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="649" y="6728.3198">end() const : Dynamic::Var::ConstIterator</text><ellipse cx="640" cy="6737.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="649" y="6741.1245">end() : Dynamic::Var::Iterator</text><ellipse cx="640" cy="6750.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="649" y="6753.9292">extract&lt;T&gt;() const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6760.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="649" y="6766.7339">getAt(std::size_t n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6773.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="649" y="6779.5386">getAt(const std::string &amp; n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="6786.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="649" y="6792.3433">holderImpl&lt;T,E&gt;(const std::string errorMessage = "") const : VarHolderImpl&lt;T&gt; *</text><ellipse cx="640" cy="6801.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="649" y="6805.1479">isArray() const : bool</text><ellipse cx="640" cy="6814.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="649" y="6817.9526">isBoolean() const : bool</text><ellipse cx="640" cy="6827.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="649" y="6830.7573">isDate() const : bool</text><ellipse cx="640" cy="6840.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="649" y="6843.562">isDateTime() const : bool</text><ellipse cx="640" cy="6853.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="649" y="6856.3667">isDeque() const : bool</text><ellipse cx="640" cy="6865.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="649" y="6869.1714">isEmpty() const : bool</text><ellipse cx="640" cy="6878.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="649" y="6881.9761">isInteger() const : bool</text><ellipse cx="640" cy="6891.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="649" y="6894.7808">isList() const : bool</text><ellipse cx="640" cy="6904.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="649" y="6907.5854">isNumeric() const : bool</text><ellipse cx="640" cy="6917.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="649" y="6920.3901">isOrdered() const : bool</text><ellipse cx="640" cy="6929.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="649" y="6933.1948">isSigned() const : bool</text><ellipse cx="640" cy="6942.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="649" y="6945.9995">isString() const : bool</text><ellipse cx="640" cy="6955.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="649" y="6958.8042">isStruct() const : bool</text><ellipse cx="640" cy="6968.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="649" y="6971.6089">isTime() const : bool</text><ellipse cx="640" cy="6981.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="649" y="6984.4136">isUUID() const : bool</text><ellipse cx="640" cy="6994.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="649" y="6997.2183">isVector() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7003.8125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="649" y="7010.0229">multiply&lt;T&gt;(const Dynamic::Var &amp; other) const : T</text><ellipse cx="640" cy="7019.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="649" y="7022.8276">operator type-parameter-0-0&lt;T&gt;() const : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7029.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="434" x="649" y="7035.6323">parse(const std::string &amp; val, std::string::size_type &amp; offset) : Dynamic::Var</text><ellipse cx="640" cy="7045.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="649" y="7048.437">parse(const std::string &amp; val) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7055.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="452" x="649" y="7061.2417">parseArray(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7067.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="649" y="7074.0464">parseJSONString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7080.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="458" x="649" y="7086.8511">parseObject(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7093.4453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="440" x="649" y="7099.6558">parseString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><ellipse cx="640" cy="7109.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="649" y="7112.4604">size() const : std::size_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7119.0547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="425" x="649" y="7125.2651">skipWhiteSpace(const std::string &amp; val, std::string::size_type &amp; pos) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7131.8594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="649" y="7138.0698">structIndexOperator&lt;T,N&gt;(T * pStr, N n) const : class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7144.6641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="649" y="7150.8745">subtract&lt;T&gt;(const Dynamic::Var &amp; other) const : T</text><ellipse cx="640" cy="7160.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="649" y="7163.6792">swap(Dynamic::Var &amp; other) : void</text><ellipse cx="640" cy="7173.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="649" y="7176.4839">toString() const : std::string</text><ellipse cx="640" cy="7186.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="270" x="649" y="7189.2886">toString(const Dynamic::Var &amp; var) : std::string</text><ellipse cx="640" cy="7198.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="649" y="7202.0933">type() const : const std::type_info &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="630" x2="1125" y1="7208.6875" y2="7208.6875"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="635" y="7214.6875"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="637" y="7216.6875"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="649" y="7222.8979">_placeholder : Placeholder&lt;Dynamic::VarHolder&gt;</text></a><!--MD5=[95d73bf2b97fc8fdea8c18859211afca]
class C_0000562679976742134348--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="422.5313" id="C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.5;" width="660" x="4858" y="1162.5"/><ellipse cx="5043.25" cy="1178.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5046.2188,1184.1406 Q5045.6406,1184.4375 5045,1184.5781 Q5044.3594,1184.7344 5043.6563,1184.7344 Q5041.1563,1184.7344 5039.8281,1183.0938 Q5038.5156,1181.4375 5038.5156,1178.3125 Q5038.5156,1175.1875 5039.8281,1173.5313 Q5041.1563,1171.875 5043.6563,1171.875 Q5044.3594,1171.875 5045,1172.0313 Q5045.6563,1172.1875 5046.2188,1172.4844 L5046.2188,1175.2031 Q5045.5938,1174.625 5045,1174.3594 Q5044.4063,1174.0781 5043.7813,1174.0781 Q5042.4375,1174.0781 5041.75,1175.1563 Q5041.0625,1176.2188 5041.0625,1178.3125 Q5041.0625,1180.4063 5041.75,1181.4844 Q5042.4375,1182.5469 5043.7813,1182.5469 Q5044.4063,1182.5469 5045,1182.2813 Q5045.5938,1182 5046.2188,1181.4219 L5046.2188,1184.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="5063.75" y="1182.6543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="241" x="5280" y="1159.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="5281" y="1171.6387">K,M=std::map&lt;K, Var&gt;,S=std::set&lt;K&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4859" x2="5517" y1="1194.5" y2="1194.5"/><ellipse cx="4869" cy="1205.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4878" y="1208.7104">Struct() : void</text><ellipse cx="4869" cy="1218.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="4878" y="1221.5151">Struct(const Dynamic::Struct::Data &amp; val) : void</text><ellipse cx="4869" cy="1231.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4878" y="1234.3198">Struct&lt;K, M, S&gt;&lt;T&gt;(const std::map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="4869" cy="1243.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="4878" y="1247.1245">Struct&lt;K, M, S&gt;&lt;T&gt;(const ordered_map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="4869" cy="1256.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4878" y="1259.9292">~Struct() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4859" x2="5517" y1="1266.5234" y2="1266.5234"/><ellipse cx="4869" cy="1277.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4878" y="1280.7339">operator[](const K &amp; name) : Dynamic::Var &amp;</text><ellipse cx="4869" cy="1290.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="4878" y="1293.5386">operator[](const K &amp; name) const : const Dynamic::Var &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4859" x2="5517" y1="1300.1328" y2="1300.1328"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4866" y="1308.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4878" y="1314.3433">assignMap&lt;T&gt;(const T &amp; map) : void</text><ellipse cx="4869" cy="1323.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="4878" y="1327.1479">begin() const : Dynamic::Struct::ConstIterator</text><ellipse cx="4869" cy="1336.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4878" y="1339.9526">begin() : Dynamic::Struct::Iterator</text><ellipse cx="4869" cy="1349.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4878" y="1352.7573">clear() : void</text><ellipse cx="4869" cy="1362.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4878" y="1365.562">contains(const K &amp; name) const : bool</text><ellipse cx="4869" cy="1375.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4878" y="1378.3667">empty() const : bool</text><ellipse cx="4869" cy="1387.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4878" y="1391.1714">end() const : Dynamic::Struct::ConstIterator</text><ellipse cx="4869" cy="1400.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4878" y="1403.9761">end() : Dynamic::Struct::Iterator</text><ellipse cx="4869" cy="1413.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="4878" y="1416.7808">erase(const K &amp; key) : Dynamic::Struct::SizeType</text><ellipse cx="4869" cy="1426.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="4878" y="1429.5854">erase(Dynamic::Struct::Iterator &amp; it) : void</text><ellipse cx="4869" cy="1439.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="4878" y="1442.3901">find(const K &amp; name) const : Dynamic::Struct::ConstIterator</text><ellipse cx="4869" cy="1451.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4878" y="1455.1948">find(const K &amp; name) : Dynamic::Struct::Iterator</text><ellipse cx="4869" cy="1464.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="4878" y="1467.9995">getVar(const K &amp; key) const : Dynamic::Var</text><ellipse cx="4869" cy="1477.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="634" x="4878" y="1480.8042">getVar&lt;DefT=class Poco::Dynamic::Var&gt;(const K &amp; key, const DefT &amp; defaultValue) const : class Dynamic::Var</text><ellipse cx="4869" cy="1490.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="4878" y="1493.6089">insert(const Dynamic::Struct::ValueType &amp; aPair) : Dynamic::Struct::InsRetVal</text><ellipse cx="4869" cy="1503.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="4878" y="1506.4136">insert&lt;T&gt;(const K &amp; key, const T &amp; value) : Dynamic::Struct::InsRetVal</text><ellipse cx="4869" cy="1516.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4878" y="1519.2183">members() const : Dynamic::Struct::NameSet</text><ellipse cx="4869" cy="1528.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4878" y="1532.0229">size() const : Dynamic::Struct::SizeType</text><ellipse cx="4869" cy="1541.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4878" y="1544.8276">swap(Struct&lt;K,M,S&gt; &amp; other) noexcept : void</text><ellipse cx="4869" cy="1554.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4878" y="1557.6323">toString() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4859" x2="5517" y1="1564.2266" y2="1564.2266"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4864" y="1570.2266"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4866" y="1572.2266"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4878" y="1578.437">_data : Dynamic::Struct::Data</text></a><!--MD5=[ef11c3035ad4f5c70052f8a09e74ea8b]
class C_0000527346272489458655--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="3791.5" y="1586"/><ellipse cx="3806.5" cy="1602" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3809.4688,1607.6406 Q3808.8906,1607.9375 3808.25,1608.0781 Q3807.6094,1608.2344 3806.9063,1608.2344 Q3804.4063,1608.2344 3803.0781,1606.5938 Q3801.7656,1604.9375 3801.7656,1601.8125 Q3801.7656,1598.6875 3803.0781,1597.0313 Q3804.4063,1595.375 3806.9063,1595.375 Q3807.6094,1595.375 3808.25,1595.5313 Q3808.9063,1595.6875 3809.4688,1595.9844 L3809.4688,1598.7031 Q3808.8438,1598.125 3808.25,1597.8594 Q3807.6563,1597.5781 3807.0313,1597.5781 Q3805.6875,1597.5781 3805,1598.6563 Q3804.3125,1599.7188 3804.3125,1601.8125 Q3804.3125,1603.9063 3805,1604.9844 Q3805.6875,1606.0469 3807.0313,1606.0469 Q3807.6563,1606.0469 3808.25,1605.7813 Q3808.8438,1605.5 3809.4688,1604.9219 L3809.4688,1607.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3820.5" y="1606.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="422" x="3866.5" y="1583"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="420" x="3867.5" y="1595.1387">std::string,std::map&lt;std::string,Dynamic::Var&gt;,std::set&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3792.5" x2="4284.5" y1="1618" y2="1618"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3792.5" x2="4284.5" y1="1626" y2="1626"/></a><!--MD5=[bc05caa69ddd26642187ca9f1706e489]
class C_0000005959213735263804--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="473.75" id="C_0000005959213735263804" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="2243" y="1586"/><ellipse cx="2285.45" cy="1602" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2288.4188,1607.6406 Q2287.8406,1607.9375 2287.2,1608.0781 Q2286.5594,1608.2344 2285.8563,1608.2344 Q2283.3563,1608.2344 2282.0281,1606.5938 Q2280.7156,1604.9375 2280.7156,1601.8125 Q2280.7156,1598.6875 2282.0281,1597.0313 Q2283.3563,1595.375 2285.8563,1595.375 Q2286.5594,1595.375 2287.2,1595.5313 Q2287.8563,1595.6875 2288.4188,1595.9844 L2288.4188,1598.7031 Q2287.7938,1598.125 2287.2,1597.8594 Q2286.6063,1597.5781 2285.9813,1597.5781 Q2284.6375,1597.5781 2283.95,1598.6563 Q2283.2625,1599.7188 2283.2625,1601.8125 Q2283.2625,1603.9063 2283.95,1604.9844 Q2284.6375,1606.0469 2285.9813,1606.0469 Q2286.6063,1606.0469 2287.2,1605.7813 Q2287.7938,1605.5 2288.4188,1604.9219 L2288.4188,1607.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2305.55" y="1606.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="541" x="2428" y="1583"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="539" x="2429" y="1595.1387">Dynamic::Struct&lt;std::string,std::map&lt;std::string,Dynamic::Var&gt;,std::set&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2244" x2="2965" y1="1618" y2="1618"/><ellipse cx="2254" cy="1629" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="2263" y="1632.2104">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2254" cy="1641.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2263" y="1645.0151">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2244" x2="2965" y1="1651.6094" y2="1651.6094"/><ellipse cx="2254" cy="1662.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="2263" y="1665.8198">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2254" cy="1675.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="697" x="2263" y="1678.6245">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2244" x2="2965" y1="1685.2188" y2="1685.2188"/><ellipse cx="2254" cy="1696.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2263" y="1699.4292">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2254" cy="1709.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2263" y="1712.2339">convert(Int8 &amp;) const : void</text><ellipse cx="2254" cy="1721.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2263" y="1725.0386">convert(Timestamp &amp;) const : void</text><ellipse cx="2254" cy="1734.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2263" y="1737.8433">convert(LocalDateTime &amp;) const : void</text><ellipse cx="2254" cy="1747.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2263" y="1750.6479">convert(DateTime &amp;) const : void</text><ellipse cx="2254" cy="1760.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2263" y="1763.4526">convert(std::string &amp; val) const : void</text><ellipse cx="2254" cy="1773.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2263" y="1776.2573">convert(char &amp;) const : void</text><ellipse cx="2254" cy="1785.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2263" y="1789.062">convert(double &amp;) const : void</text><ellipse cx="2254" cy="1798.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2263" y="1801.8667">convert(float &amp;) const : void</text><ellipse cx="2254" cy="1811.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2263" y="1814.6714">convert(UInt64 &amp;) const : void</text><ellipse cx="2254" cy="1824.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2263" y="1827.4761">convert(UInt32 &amp;) const : void</text><ellipse cx="2254" cy="1837.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2263" y="1840.2808">convert(UInt16 &amp;) const : void</text><ellipse cx="2254" cy="1849.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2263" y="1853.0854">convert(UInt8 &amp;) const : void</text><ellipse cx="2254" cy="1862.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2263" y="1865.8901">convert(Int64 &amp;) const : void</text><ellipse cx="2254" cy="1875.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2263" y="1878.6948">convert(Int32 &amp;) const : void</text><ellipse cx="2254" cy="1888.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2263" y="1891.4995">convert(Int16 &amp;) const : void</text><ellipse cx="2254" cy="1901.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2263" y="1904.3042">convert(bool &amp;) const : void</text><ellipse cx="2254" cy="1913.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2263" y="1917.1089">isArray() const : bool</text><ellipse cx="2254" cy="1926.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2263" y="1929.9136">isInteger() const : bool</text><ellipse cx="2254" cy="1939.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2263" y="1942.7183">isNumeric() const : bool</text><ellipse cx="2254" cy="1952.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2263" y="1955.5229">isOrdered() const : bool</text><ellipse cx="2254" cy="1965.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2263" y="1968.3276">isSigned() const : bool</text><ellipse cx="2254" cy="1977.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2263" y="1981.1323">isString() const : bool</text><ellipse cx="2254" cy="1990.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2263" y="1993.937">isStruct() const : bool</text><ellipse cx="2254" cy="2003.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2263" y="2006.7417">size() const : std::size_t</text><ellipse cx="2254" cy="2016.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2263" y="2019.5464">type() const : const std::type_info &amp;</text><ellipse cx="2254" cy="2029.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2263" y="2032.3511">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2244" x2="2965" y1="2038.9453" y2="2038.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2249" y="2044.9453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2251" y="2046.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2263" y="2053.1558">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType</text></a><!--MD5=[8da18a33f69aad8b92bd6de042e748b8]
class C_0000234522456695339728--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0000234522456695339728" style="stroke: #A80036; stroke-width: 1.5;" width="356" x="3860.5" y="5948"/><ellipse cx="3875.5" cy="5964" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3878.4688,5969.6406 Q3877.8906,5969.9375 3877.25,5970.0781 Q3876.6094,5970.2344 3875.9063,5970.2344 Q3873.4063,5970.2344 3872.0781,5968.5938 Q3870.7656,5966.9375 3870.7656,5963.8125 Q3870.7656,5960.6875 3872.0781,5959.0313 Q3873.4063,5957.375 3875.9063,5957.375 Q3876.6094,5957.375 3877.25,5957.5313 Q3877.9063,5957.6875 3878.4688,5957.9844 L3878.4688,5960.7031 Q3877.8438,5960.125 3877.25,5959.8594 Q3876.6563,5959.5781 3876.0313,5959.5781 Q3874.6875,5959.5781 3874,5960.6563 Q3873.3125,5961.7188 3873.3125,5963.8125 Q3873.3125,5965.9063 3874,5966.9844 Q3874.6875,5968.0469 3876.0313,5968.0469 Q3876.6563,5968.0469 3877.25,5967.7813 Q3877.8438,5967.5 3878.4688,5966.9219 L3878.4688,5969.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3889.5" y="5968.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="284" x="3935.5" y="5945"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="3936.5" y="5957.1387">int,std::map&lt;int,Dynamic::Var&gt;,std::set&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3861.5" x2="4215.5" y1="5980" y2="5980"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3861.5" x2="4215.5" y1="5988" y2="5988"/></a><!--MD5=[3584b5df2d117e666a89b988d93d3878]
class C_0001212087958231445051--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.5;" width="1517" x="3280" y="1350"/><ellipse cx="3295" cy="1366" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3297.9688,1371.6406 Q3297.3906,1371.9375 3296.75,1372.0781 Q3296.1094,1372.2344 3295.4063,1372.2344 Q3292.9063,1372.2344 3291.5781,1370.5938 Q3290.2656,1368.9375 3290.2656,1365.8125 Q3290.2656,1362.6875 3291.5781,1361.0313 Q3292.9063,1359.375 3295.4063,1359.375 Q3296.1094,1359.375 3296.75,1359.5313 Q3297.4063,1359.6875 3297.9688,1359.9844 L3297.9688,1362.7031 Q3297.3438,1362.125 3296.75,1361.8594 Q3296.1563,1361.5781 3295.5313,1361.5781 Q3294.1875,1361.5781 3293.5,1362.6563 Q3292.8125,1363.7188 3292.8125,1365.8125 Q3292.8125,1367.9063 3293.5,1368.9844 Q3294.1875,1370.0469 3295.5313,1370.0469 Q3296.1563,1370.0469 3296.75,1369.7813 Q3297.3438,1369.5 3297.9688,1368.9219 L3297.9688,1371.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3309" y="1370.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="1445" x="3355" y="1347"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1443" x="3356" y="1359.1387">Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,std::map&lt;Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,Dynamic::Var&gt;,std::set&lt;Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3281" x2="4796" y1="1382" y2="1382"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3281" x2="4796" y1="1390" y2="1390"/></a><!--MD5=[5ca1b0c5a44cc583161c08ae13192bc1]
class C_0000337724165693095141--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="473.75" id="C_0000337724165693095141" style="stroke: #A80036; stroke-width: 1.5;" width="678" x="2265.5" y="1077"/><ellipse cx="2354.25" cy="1093" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2357.2188,1098.6406 Q2356.6406,1098.9375 2356,1099.0781 Q2355.3594,1099.2344 2354.6563,1099.2344 Q2352.1563,1099.2344 2350.8281,1097.5938 Q2349.5156,1095.9375 2349.5156,1092.8125 Q2349.5156,1089.6875 2350.8281,1088.0313 Q2352.1563,1086.375 2354.6563,1086.375 Q2355.3594,1086.375 2356,1086.5313 Q2356.6563,1086.6875 2357.2188,1086.9844 L2357.2188,1089.7031 Q2356.5938,1089.125 2356,1088.8594 Q2355.4063,1088.5781 2354.7813,1088.5781 Q2353.4375,1088.5781 2352.75,1089.6563 Q2352.0625,1090.7188 2352.0625,1092.8125 Q2352.0625,1094.9063 2352.75,1095.9844 Q2353.4375,1097.0469 2354.7813,1097.0469 Q2355.4063,1097.0469 2356,1096.7813 Q2356.5938,1096.5 2357.2188,1095.9219 L2357.2188,1098.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2374.75" y="1097.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="403" x="2543.5" y="1074"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="2544.5" y="1086.1387">Dynamic::Struct&lt;int,std::map&lt;int,Dynamic::Var&gt;,std::set&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2266.5" x2="2942.5" y1="1109" y2="1109"/><ellipse cx="2276.5" cy="1120" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="534" x="2285.5" y="1123.2104">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2276.5" cy="1132.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2285.5" y="1136.0151">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2266.5" x2="2942.5" y1="1142.6094" y2="1142.6094"/><ellipse cx="2276.5" cy="1153.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="2285.5" y="1156.8198">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2276.5" cy="1166.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2285.5" y="1169.6245">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2266.5" x2="2942.5" y1="1176.2188" y2="1176.2188"/><ellipse cx="2276.5" cy="1187.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2285.5" y="1190.4292">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2276.5" cy="1200.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2285.5" y="1203.2339">convert(Int8 &amp;) const : void</text><ellipse cx="2276.5" cy="1212.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2285.5" y="1216.0386">convert(Timestamp &amp;) const : void</text><ellipse cx="2276.5" cy="1225.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2285.5" y="1228.8433">convert(LocalDateTime &amp;) const : void</text><ellipse cx="2276.5" cy="1238.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2285.5" y="1241.6479">convert(DateTime &amp;) const : void</text><ellipse cx="2276.5" cy="1251.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2285.5" y="1254.4526">convert(std::string &amp; val) const : void</text><ellipse cx="2276.5" cy="1264.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2285.5" y="1267.2573">convert(char &amp;) const : void</text><ellipse cx="2276.5" cy="1276.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2285.5" y="1280.062">convert(double &amp;) const : void</text><ellipse cx="2276.5" cy="1289.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2285.5" y="1292.8667">convert(float &amp;) const : void</text><ellipse cx="2276.5" cy="1302.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2285.5" y="1305.6714">convert(UInt64 &amp;) const : void</text><ellipse cx="2276.5" cy="1315.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2285.5" y="1318.4761">convert(UInt32 &amp;) const : void</text><ellipse cx="2276.5" cy="1328.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2285.5" y="1331.2808">convert(UInt16 &amp;) const : void</text><ellipse cx="2276.5" cy="1340.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2285.5" y="1344.0854">convert(UInt8 &amp;) const : void</text><ellipse cx="2276.5" cy="1353.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2285.5" y="1356.8901">convert(Int64 &amp;) const : void</text><ellipse cx="2276.5" cy="1366.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2285.5" y="1369.6948">convert(Int32 &amp;) const : void</text><ellipse cx="2276.5" cy="1379.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2285.5" y="1382.4995">convert(Int16 &amp;) const : void</text><ellipse cx="2276.5" cy="1392.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2285.5" y="1395.3042">convert(bool &amp;) const : void</text><ellipse cx="2276.5" cy="1404.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2285.5" y="1408.1089">isArray() const : bool</text><ellipse cx="2276.5" cy="1417.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2285.5" y="1420.9136">isInteger() const : bool</text><ellipse cx="2276.5" cy="1430.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2285.5" y="1433.7183">isNumeric() const : bool</text><ellipse cx="2276.5" cy="1443.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2285.5" y="1446.5229">isOrdered() const : bool</text><ellipse cx="2276.5" cy="1456.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2285.5" y="1459.3276">isSigned() const : bool</text><ellipse cx="2276.5" cy="1468.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2285.5" y="1472.1323">isString() const : bool</text><ellipse cx="2276.5" cy="1481.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2285.5" y="1484.937">isStruct() const : bool</text><ellipse cx="2276.5" cy="1494.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2285.5" y="1497.7417">size() const : std::size_t</text><ellipse cx="2276.5" cy="1507.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2285.5" y="1510.5464">type() const : const std::type_info &amp;</text><ellipse cx="2276.5" cy="1520.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="2285.5" y="1523.3511">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2266.5" x2="2942.5" y1="1529.9453" y2="1529.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2271.5" y="1535.9453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2273.5" y="1537.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2285.5" y="1544.1558">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType</text></a><!--MD5=[7dce1e83d9bc6d739d3bdcc1e2ca180f]
class C_0001994773360593884629--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0001994773360593884629" style="stroke: #A80036; stroke-width: 1.5;" width="596" x="3740.5" y="6031"/><ellipse cx="3755.5" cy="6047" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3758.4688,6052.6406 Q3757.8906,6052.9375 3757.25,6053.0781 Q3756.6094,6053.2344 3755.9063,6053.2344 Q3753.4063,6053.2344 3752.0781,6051.5938 Q3750.7656,6049.9375 3750.7656,6046.8125 Q3750.7656,6043.6875 3752.0781,6042.0313 Q3753.4063,6040.375 3755.9063,6040.375 Q3756.6094,6040.375 3757.25,6040.5313 Q3757.9063,6040.6875 3758.4688,6040.9844 L3758.4688,6043.7031 Q3757.8438,6043.125 3757.25,6042.8594 Q3756.6563,6042.5781 3756.0313,6042.5781 Q3754.6875,6042.5781 3754,6043.6563 Q3753.3125,6044.7188 3753.3125,6046.8125 Q3753.3125,6048.9063 3754,6049.9844 Q3754.6875,6051.0469 3756.0313,6051.0469 Q3756.6563,6051.0469 3757.25,6050.7813 Q3757.8438,6050.5 3758.4688,6049.9219 L3758.4688,6052.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3769.5" y="6051.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="524" x="3815.5" y="6028"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="522" x="3816.5" y="6040.1387">std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3741.5" x2="4335.5" y1="6063" y2="6063"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3741.5" x2="4335.5" y1="6071" y2="6071"/></a><!--MD5=[67eb792a3eb91148f1bf3f366020c83a]
class C_0000285075638289121010--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0000285075638289121010" style="stroke: #A80036; stroke-width: 1.5;" width="541" x="3768" y="884"/><ellipse cx="3783" cy="900" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3785.9688,905.6406 Q3785.3906,905.9375 3784.75,906.0781 Q3784.1094,906.2344 3783.4063,906.2344 Q3780.9063,906.2344 3779.5781,904.5938 Q3778.2656,902.9375 3778.2656,899.8125 Q3778.2656,896.6875 3779.5781,895.0313 Q3780.9063,893.375 3783.4063,893.375 Q3784.1094,893.375 3784.75,893.5313 Q3785.4063,893.6875 3785.9688,893.9844 L3785.9688,896.7031 Q3785.3438,896.125 3784.75,895.8594 Q3784.1563,895.5781 3783.5313,895.5781 Q3782.1875,895.5781 3781.5,896.6563 Q3780.8125,897.7188 3780.8125,899.8125 Q3780.8125,901.9063 3781.5,902.9844 Q3782.1875,904.0469 3783.5313,904.0469 Q3784.1563,904.0469 3784.75,903.7813 Q3785.3438,903.5 3785.9688,902.9219 L3785.9688,905.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3797" y="904.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="469" x="3843" y="881"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="467" x="3844" y="893.1387">std::string,OrderedMap&lt;std::string,Dynamic::Var&gt;,OrderedSet&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3769" x2="4308" y1="916" y2="916"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3769" x2="4308" y1="924" y2="924"/></a><!--MD5=[a67fc32f467ffdb77fa2ed92c7ee5886]
class C_0000919753061206343041--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="473.75" id="C_0000919753061206343041" style="stroke: #A80036; stroke-width: 1.5;" width="1153" x="2028" y="568"/><ellipse cx="2234.25" cy="584" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2237.2188,589.6406 Q2236.6406,589.9375 2236,590.0781 Q2235.3594,590.2344 2234.6563,590.2344 Q2232.1563,590.2344 2230.8281,588.5938 Q2229.5156,586.9375 2229.5156,583.8125 Q2229.5156,580.6875 2230.8281,579.0313 Q2232.1563,577.375 2234.6563,577.375 Q2235.3594,577.375 2236,577.5313 Q2236.6563,577.6875 2237.2188,577.9844 L2237.2188,580.7031 Q2236.5938,580.125 2236,579.8594 Q2235.4063,579.5781 2234.7813,579.5781 Q2233.4375,579.5781 2232.75,580.6563 Q2232.0625,581.7188 2232.0625,583.8125 Q2232.0625,585.9063 2232.75,586.9844 Q2233.4375,588.0469 2234.7813,588.0469 Q2235.4063,588.0469 2236,587.7813 Q2236.5938,587.5 2237.2188,586.9219 L2237.2188,589.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2254.75" y="588.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="643" x="2541" y="565"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="641" x="2542" y="577.1387">Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2029" x2="3180" y1="600" y2="600"/><ellipse cx="2039" cy="611" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1009" x="2048" y="614.2104">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2039" cy="623.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2048" y="627.0151">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2029" x2="3180" y1="633.6094" y2="633.6094"/><ellipse cx="2039" cy="644.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1057" x="2048" y="647.8198">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2039" cy="657.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1127" x="2048" y="660.6245">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2029" x2="3180" y1="667.2188" y2="667.2188"/><ellipse cx="2039" cy="678.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2048" y="681.4292">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2039" cy="691.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2048" y="694.2339">convert(Int8 &amp;) const : void</text><ellipse cx="2039" cy="703.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2048" y="707.0386">convert(Timestamp &amp;) const : void</text><ellipse cx="2039" cy="716.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2048" y="719.8433">convert(LocalDateTime &amp;) const : void</text><ellipse cx="2039" cy="729.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2048" y="732.6479">convert(DateTime &amp;) const : void</text><ellipse cx="2039" cy="742.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2048" y="745.4526">convert(std::string &amp; val) const : void</text><ellipse cx="2039" cy="755.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2048" y="758.2573">convert(char &amp;) const : void</text><ellipse cx="2039" cy="767.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2048" y="771.062">convert(double &amp;) const : void</text><ellipse cx="2039" cy="780.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2048" y="783.8667">convert(float &amp;) const : void</text><ellipse cx="2039" cy="793.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2048" y="796.6714">convert(UInt64 &amp;) const : void</text><ellipse cx="2039" cy="806.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2048" y="809.4761">convert(UInt32 &amp;) const : void</text><ellipse cx="2039" cy="819.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2048" y="822.2808">convert(UInt16 &amp;) const : void</text><ellipse cx="2039" cy="831.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2048" y="835.0854">convert(UInt8 &amp;) const : void</text><ellipse cx="2039" cy="844.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2048" y="847.8901">convert(Int64 &amp;) const : void</text><ellipse cx="2039" cy="857.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2048" y="860.6948">convert(Int32 &amp;) const : void</text><ellipse cx="2039" cy="870.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2048" y="873.4995">convert(Int16 &amp;) const : void</text><ellipse cx="2039" cy="883.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2048" y="886.3042">convert(bool &amp;) const : void</text><ellipse cx="2039" cy="895.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2048" y="899.1089">isArray() const : bool</text><ellipse cx="2039" cy="908.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2048" y="911.9136">isInteger() const : bool</text><ellipse cx="2039" cy="921.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2048" y="924.7183">isNumeric() const : bool</text><ellipse cx="2039" cy="934.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2048" y="937.5229">isOrdered() const : bool</text><ellipse cx="2039" cy="947.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2048" y="950.3276">isSigned() const : bool</text><ellipse cx="2039" cy="959.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2048" y="963.1323">isString() const : bool</text><ellipse cx="2039" cy="972.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2048" y="975.937">isStruct() const : bool</text><ellipse cx="2039" cy="985.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2048" y="988.7417">size() const : std::size_t</text><ellipse cx="2039" cy="998.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2048" y="1001.5464">type() const : const std::type_info &amp;</text><ellipse cx="2039" cy="1011.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="951" x="2048" y="1014.3511">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::ValueType &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2029" x2="3180" y1="1020.9453" y2="1020.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2034" y="1026.9453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2036" y="1028.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="851" x="2048" y="1035.1558">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::ValueType</text></a><!--MD5=[fec368cb4d74b084cc09a5beb5db002e]
class C_0000976793773745790650--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0000976793773745790650" style="stroke: #A80036; stroke-width: 1.5;" width="458" x="3809.5" y="6114"/><ellipse cx="3824.5" cy="6130" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3827.4688,6135.6406 Q3826.8906,6135.9375 3826.25,6136.0781 Q3825.6094,6136.2344 3824.9063,6136.2344 Q3822.4063,6136.2344 3821.0781,6134.5938 Q3819.7656,6132.9375 3819.7656,6129.8125 Q3819.7656,6126.6875 3821.0781,6125.0313 Q3822.4063,6123.375 3824.9063,6123.375 Q3825.6094,6123.375 3826.25,6123.5313 Q3826.9063,6123.6875 3827.4688,6123.9844 L3827.4688,6126.7031 Q3826.8438,6126.125 3826.25,6125.8594 Q3825.6563,6125.5781 3825.0313,6125.5781 Q3823.6875,6125.5781 3823,6126.6563 Q3822.3125,6127.7188 3822.3125,6129.8125 Q3822.3125,6131.9063 3823,6132.9844 Q3823.6875,6134.0469 3825.0313,6134.0469 Q3825.6563,6134.0469 3826.25,6133.7813 Q3826.8438,6133.5 3827.4688,6132.9219 L3827.4688,6135.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3838.5" y="6134.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="386" x="3884.5" y="6111"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="3885.5" y="6123.1387">int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3810.5" x2="4266.5" y1="6146" y2="6146"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3810.5" x2="4266.5" y1="6154" y2="6154"/></a><!--MD5=[07af6ca818682013910ce89616019af2]
class C_0001731737538524969332--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0001731737538524969332" style="stroke: #A80036; stroke-width: 1.5;" width="1196" x="3440.5" y="395"/><ellipse cx="3455.5" cy="411" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3458.4688,416.6406 Q3457.8906,416.9375 3457.25,417.0781 Q3456.6094,417.2344 3455.9063,417.2344 Q3453.4063,417.2344 3452.0781,415.5938 Q3450.7656,413.9375 3450.7656,410.8125 Q3450.7656,407.6875 3452.0781,406.0313 Q3453.4063,404.375 3455.9063,404.375 Q3456.6094,404.375 3457.25,404.5313 Q3457.9063,404.6875 3458.4688,404.9844 L3458.4688,407.7031 Q3457.8438,407.125 3457.25,406.8594 Q3456.6563,406.5781 3456.0313,406.5781 Q3454.6875,406.5781 3454,407.6563 Q3453.3125,408.7188 3453.3125,410.8125 Q3453.3125,412.9063 3454,413.9844 Q3454.6875,415.0469 3456.0313,415.0469 Q3456.6563,415.0469 3457.25,414.7813 Q3457.8438,414.5 3458.4688,413.9219 L3458.4688,416.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3469.5" y="415.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="1124" x="3515.5" y="392"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1122" x="3516.5" y="404.1387">Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Poco::Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType,OrderedMap&lt;int,Dynamic::Var&gt;,OrderedSet&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3441.5" x2="4635.5" y1="427" y2="427"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3441.5" x2="4635.5" y1="435" y2="435"/></a><!--MD5=[4827b590d81e6a7d54540a32f69dd9c4]
class C_0000988703063712340439--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="473.75" id="C_0000988703063712340439" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="2095.5" y="59"/><ellipse cx="2303.25" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2306.2188,80.6406 Q2305.6406,80.9375 2305,81.0781 Q2304.3594,81.2344 2303.6563,81.2344 Q2301.1563,81.2344 2299.8281,79.5938 Q2298.5156,77.9375 2298.5156,74.8125 Q2298.5156,71.6875 2299.8281,70.0313 Q2301.1563,68.375 2303.6563,68.375 Q2304.3594,68.375 2305,68.5313 Q2305.6563,68.6875 2306.2188,68.9844 L2306.2188,71.7031 Q2305.5938,71.125 2305,70.8594 Q2304.4063,70.5781 2303.7813,70.5781 Q2302.4375,70.5781 2301.75,71.6563 Q2301.0625,72.7188 2301.0625,74.8125 Q2301.0625,76.9063 2301.75,77.9844 Q2302.4375,79.0469 2303.7813,79.0469 Q2304.4063,79.0469 2305,78.7813 Q2305.5938,78.5 2306.2188,77.9219 L2306.2188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2323.75" y="79.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="505" x="2611.5" y="56"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="2612.5" y="68.1387">Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2096.5" x2="3112.5" y1="91" y2="91"/><ellipse cx="2106.5" cy="102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="874" x="2115.5" y="105.2104">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2106.5" cy="114.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2115.5" y="118.0151">~VarHolderImpl() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2096.5" x2="3112.5" y1="124.6094" y2="124.6094"/><ellipse cx="2106.5" cy="135.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="922" x="2115.5" y="138.8198">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2106.5" cy="148.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="2115.5" y="151.6245">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2096.5" x2="3112.5" y1="158.2188" y2="158.2188"/><ellipse cx="2106.5" cy="169.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2115.5" y="172.4292">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2106.5" cy="182.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2115.5" y="185.2339">convert(Int8 &amp;) const : void</text><ellipse cx="2106.5" cy="194.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2115.5" y="198.0386">convert(Timestamp &amp;) const : void</text><ellipse cx="2106.5" cy="207.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2115.5" y="210.8433">convert(LocalDateTime &amp;) const : void</text><ellipse cx="2106.5" cy="220.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2115.5" y="223.6479">convert(DateTime &amp;) const : void</text><ellipse cx="2106.5" cy="233.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2115.5" y="236.4526">convert(std::string &amp; val) const : void</text><ellipse cx="2106.5" cy="246.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2115.5" y="249.2573">convert(char &amp;) const : void</text><ellipse cx="2106.5" cy="258.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2115.5" y="262.062">convert(double &amp;) const : void</text><ellipse cx="2106.5" cy="271.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2115.5" y="274.8667">convert(float &amp;) const : void</text><ellipse cx="2106.5" cy="284.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2115.5" y="287.6714">convert(UInt64 &amp;) const : void</text><ellipse cx="2106.5" cy="297.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2115.5" y="300.4761">convert(UInt32 &amp;) const : void</text><ellipse cx="2106.5" cy="310.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2115.5" y="313.2808">convert(UInt16 &amp;) const : void</text><ellipse cx="2106.5" cy="322.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2115.5" y="326.0854">convert(UInt8 &amp;) const : void</text><ellipse cx="2106.5" cy="335.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2115.5" y="338.8901">convert(Int64 &amp;) const : void</text><ellipse cx="2106.5" cy="348.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2115.5" y="351.6948">convert(Int32 &amp;) const : void</text><ellipse cx="2106.5" cy="361.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2115.5" y="364.4995">convert(Int16 &amp;) const : void</text><ellipse cx="2106.5" cy="374.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2115.5" y="377.3042">convert(bool &amp;) const : void</text><ellipse cx="2106.5" cy="386.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2115.5" y="390.1089">isArray() const : bool</text><ellipse cx="2106.5" cy="399.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2115.5" y="402.9136">isInteger() const : bool</text><ellipse cx="2106.5" cy="412.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2115.5" y="415.7183">isNumeric() const : bool</text><ellipse cx="2106.5" cy="425.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2115.5" y="428.5229">isOrdered() const : bool</text><ellipse cx="2106.5" cy="438.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2115.5" y="441.3276">isSigned() const : bool</text><ellipse cx="2106.5" cy="450.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2115.5" y="454.1323">isString() const : bool</text><ellipse cx="2106.5" cy="463.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2115.5" y="466.937">isStruct() const : bool</text><ellipse cx="2106.5" cy="476.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2115.5" y="479.7417">size() const : std::size_t</text><ellipse cx="2106.5" cy="489.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2115.5" y="492.5464">type() const : const std::type_info &amp;</text><ellipse cx="2106.5" cy="502.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="816" x="2115.5" y="505.3511">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2096.5" x2="3112.5" y1="511.9453" y2="511.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2101.5" y="517.9453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2103.5" y="519.9453"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="716" x="2115.5" y="526.1558">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType</text></a><!--MD5=[0e1432047d47ec9a6b00dab152215e00]
class C_0000876644825045799418--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ppa7hh4x5w18)" height="48" id="C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.5;" width="108" x="216.5" y="9689"/><ellipse cx="231.5" cy="9705" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M234.4688,9710.6406 Q233.8906,9710.9375 233.25,9711.0781 Q232.6094,9711.2344 231.9063,9711.2344 Q229.4063,9711.2344 228.0781,9709.5938 Q226.7656,9707.9375 226.7656,9704.8125 Q226.7656,9701.6875 228.0781,9700.0313 Q229.4063,9698.375 231.9063,9698.375 Q232.6094,9698.375 233.25,9698.5313 Q233.9063,9698.6875 234.4688,9698.9844 L234.4688,9701.7031 Q233.8438,9701.125 233.25,9700.8594 Q232.6563,9700.5781 232.0313,9700.5781 Q230.6875,9700.5781 230,9701.6563 Q229.3125,9702.7188 229.3125,9704.8125 Q229.3125,9706.9063 230,9707.9844 Q230.6875,9709.0469 232.0313,9709.0469 Q232.6563,9709.0469 233.25,9708.7813 Q233.8438,9708.5 234.4688,9707.9219 L234.4688,9710.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="245.5" y="9709.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="291.5" y="9686"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="292.5" y="9698.1387">K,M,S</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="217.5" x2="323.5" y1="9721" y2="9721"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="217.5" x2="323.5" y1="9729" y2="9729"/></a><!--MD5=[1813d3e55208b95598efe5b058f25358]
reverse link C_0000820091630223006238 to C_0001112867090784569162--><path d="M1694.56,6153.67 C1750.79,5965.57 1851.01,5752.72 2028,5639 C2135.78,5569.75 3053.61,5625.47 3181,5639 C3381.96,5660.34 3605.05,5709.1 3773.16,5751.06 " fill="none" id="C_0000820091630223006238&lt;-C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1701.25,6155.73,1688.92,6172.96,1687.81,6151.8,1701.25,6155.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b1676534adbb49052c1fb5187823a2e7]
link C_0002149165824584484566 to C_0001112867090784569162--><path d="M2869.82,5434.86 C3120.83,5518.3 3497.02,5643.34 3754.13,5728.81 " fill="none" id="C_0002149165824584484566-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3756.44,5722.2,3773.21,5735.15,3752.02,5735.48,3756.44,5722.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6bdc8c9895b8e16795c15260689a53af]
reverse link C_0000820091630223006238 to C_0002149165824584484566--><path d="M1705.25,6153.67 C1761.03,5971.41 1852.15,5759.14 1997,5611 C2089.63,5516.26 2221.95,5453.3 2339.38,5412.71 " fill="none" id="C_0000820091630223006238&lt;-C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1711.93,6155.77,1699.46,6172.9,1698.52,6151.73,1711.93,6155.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce861a412352c4848640aa13ce250abf]
link C_0000198808093629002393 to C_0001112867090784569162--><path d="M2870.19,4938.65 C2970.86,4979.57 3084.48,5031.93 3181,5092 C3480.87,5278.62 3784.08,5565.93 3936.56,5718.85 " fill="none" id="C_0000198808093629002393-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3941.71,5714.1,3950.84,5733.22,3931.77,5723.96,3941.71,5714.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[32fffe82ef1ff3e5d4ec3ab4204d9ea8]
reverse link C_0000820091630223006238 to C_0000198808093629002393--><path d="M1642.47,6152.86 C1675.8,5836.99 1769.32,5387.29 2028,5092 C2108.38,5000.24 2228.75,4941.29 2338.66,4904 " fill="none" id="C_0000820091630223006238&lt;-C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1649.41,6153.82,1640.41,6173,1635.48,6152.39,1649.41,6153.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1c5c7610e8f865c2dc4167ff6cd581c]
link C_0000976768452323437983 to C_0001112867090784569162--><path d="M2870.29,4426.92 C2974.37,4466.52 3090.36,4522.08 3181,4596 C3580.88,4922.11 3875.84,5480.8 3987.97,5714.86 " fill="none" id="C_0000976768452323437983-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3994.4,5712.08,3996.68,5733.15,3981.76,5718.1,3994.4,5712.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a23ffed8306e2f84c3073ac11c9de323]
reverse link C_0000820091630223006238 to C_0000976768452323437983--><path d="M1661.63,6152.7 C1717.06,5662.52 1836.57,4830.25 2028,4596 C2105.97,4500.59 2227.58,4441.07 2338.96,4404.34 " fill="none" id="C_0000820091630223006238&lt;-C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1668.55,6153.79,1659.36,6172.88,1654.64,6152.22,1668.55,6153.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf09b5ff695bcf5acdf9fe71fab14e0c]
link C_0001804431617899042426 to C_0001112867090784569162--><path d="M2870.29,3912.59 C2976.8,3954.87 3094.58,4015.87 3181,4100 C3677.94,4583.74 3932.17,5416.03 4010.52,5713.42 " fill="none" id="C_0001804431617899042426-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4017.37,5711.94,4015.65,5733.06,4003.83,5715.47,4017.37,5711.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a049817c63d933cddd056e43c020ea39]
reverse link C_0000820091630223006238 to C_0001804431617899042426--><path d="M1644.74,6152.84 C1683.39,5557.03 1787.28,4416.21 2028,4100 C2104.06,4000.09 2226.5,3936.22 2338.93,3896.1 " fill="none" id="C_0000820091630223006238&lt;-C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1651.72,6153.42,1643.45,6172.93,1637.75,6152.52,1651.72,6153.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ada95bdef8ba6058ff0ffd2c4f1b6e8]
link C_0001832009513687525374 to C_0001112867090784569162--><path d="M2871.35,3383.09 C2979.3,3421.05 3097.89,3479.14 3181,3566 C3801.3,4214.33 3983.12,5356.82 4026.03,5713.48 " fill="none" id="C_0001832009513687525374-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4032.98,5712.67,4028.37,5733.36,4019.08,5714.31,4032.98,5712.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[484d0d91554dbc242a223067b026dfc6]
reverse link C_0000820091630223006238 to C_0001832009513687525374--><path d="M1631.07,6152.52 C1649.6,5452.68 1724.57,3965.37 2028,3566 C2103.03,3467.24 2225.36,3407.26 2337.99,3371.11 " fill="none" id="C_0000820091630223006238&lt;-C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1638.07,6152.93,1630.55,6172.74,1624.07,6152.56,1638.07,6152.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5febac11223087f60c8ceb52a26a3b2]
link C_0000572186414558919480 to C_0001112867090784569162--><path d="M2878.01,2886.08 C2985.3,2923.67 3101.58,2981.75 3181,3070 C3911.21,3881.42 4018.88,5308.25 4034.75,5713.11 " fill="none" id="C_0000572186414558919480-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4041.76,5713.05,4035.5,5733.29,4027.77,5713.57,4041.76,5713.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[691a55eeeadeb89a9d3fc7ffb09e60fc]
reverse link C_0000820091630223006238 to C_0000572186414558919480--><path d="M1647.28,6152.53 C1700.93,5313.42 1846.44,3313.81 2028,3070 C2100.7,2972.38 2219.76,2912.72 2330.79,2876.48 " fill="none" id="C_0000820091630223006238&lt;-C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1654.25,6153.23,1645.99,6172.74,1640.27,6152.34,1654.25,6153.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4cf50edd11d32dea601aa62a24b3e4ec]
link C_0000166253842255815357 to C_0001112867090784569162--><path d="M2878.09,2387.74 C2986.21,2425.03 3103.09,2483.51 3181,2574 C3235.13,2636.87 3869.78,5155.12 4010.14,5713.92 " fill="none" id="C_0000166253842255815357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4016.93,5712.25,4015.01,5733.35,4003.35,5715.66,4016.93,5712.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[519713684ef996f3f0258fe781b367b9]
reverse link C_0000820091630223006238 to C_0000166253842255815357--><path d="M1641.5,6152.66 C1685.88,5227.44 1818.82,2859.2 2028,2574 C2100.15,2475.64 2219.49,2415.86 2330.86,2379.74 " fill="none" id="C_0000820091630223006238&lt;-C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1648.48,6153.26,1640.53,6172.9,1634.49,6152.59,1648.48,6153.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[572ed8953022a63b1c36627852249f51]
link C_0001459401574844645109 to C_0001112867090784569162--><path d="M2878.05,12539.9 C2989.05,12499.88 3108.14,12436.37 3181,12337 C3321.99,12144.73 3234.03,12042.89 3250,11805 C3252.73,11764.29 3253.17,5960.73 3280,5930 C3394.26,5799.15 3589.5,5774.07 3753.14,5780.85 " fill="none" id="C_0001459401574844645109-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.82,5773.87,3773.45,5781.85,3753.12,5787.85,3753.82,5773.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[919765d0794332eb101e551e54b6c414]
reverse link C_0000820091630223006238 to C_0001459401574844645109--><path d="M1629.01,6889.33 C1645.08,8097.63 1719.83,11889.23 2028,12337 C2098.41,12439.3 2218.43,12503.28 2330.71,12542.85 " fill="none" id="C_0000820091630223006238&lt;-C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1622,6889.2,1628.74,6869.11,1636,6889.02,1622,6889.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd6471d66cc3b88dfb3ca1f72cf6db91]
link C_0000599279109574326060 to C_0001112867090784569162--><path d="M2869.83,12036.59 C2982.92,12000.53 3105.96,11940.44 3181,11841 C3324.62,11650.68 3233.97,11546.89 3250,11309 C3252.51,11271.73 3255.42,5958.13 3280,5930 C3394.29,5799.17 3589.53,5774.1 3753.17,5780.87 " fill="none" id="C_0000599279109574326060-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.84,5773.89,3773.47,5781.87,3753.15,5787.87,3753.84,5773.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8bf8b0ca9d39d118bab5baddd92056a5]
reverse link C_0000820091630223006238 to C_0000599279109574326060--><path d="M1631.09,6889.38 C1652.9,8028.21 1741.72,11439.79 2028,11841 C2100.91,11943.18 2224.99,12003.63 2339.32,12039.21 " fill="none" id="C_0000820091630223006238&lt;-C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1624.09,6889.2,1630.7,6869.07,1638.08,6888.93,1624.09,6889.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a03be0583b80b52ec3c7cfbb1381204c]
link C_0000384619052225252533 to C_0001112867090784569162--><path d="M2869.83,11540.59 C2982.92,11504.53 3105.96,11444.44 3181,11345 C3324.62,11154.68 3233.9,11050.88 3250,10813 C3252.29,10779.17 3257.68,5955.53 3280,5930 C3394.32,5799.21 3589.56,5774.13 3753.19,5780.89 " fill="none" id="C_0000384619052225252533-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.86,5773.91,3773.49,5781.9,3753.17,5787.9,3753.86,5773.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[73026f33281fe8ca4ab78e818466913d]
reverse link C_0000820091630223006238 to C_0000384619052225252533--><path d="M1634.18,6889.51 C1663.68,7954.91 1769.68,10985.93 2028,11345 C2101.22,11446.78 2225.16,11507.19 2339.3,11542.84 " fill="none" id="C_0000820091630223006238&lt;-C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1627.17,6889.52,1633.62,6869.34,1641.17,6889.14,1627.17,6889.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ff447ae9b44164ab1163a8d58a067dd]
link C_0002242257052791493112 to C_0001112867090784569162--><path d="M2880.27,11041.25 C2990.45,11004.86 3108.3,10945.43 3181,10849 C3325.59,10657.21 3233.81,10552.64 3250,10313 C3254.1,10252.26 3239.92,5975.82 3280,5930 C3394.27,5799.37 3589.25,5774.22 3752.77,5780.9 " fill="none" id="C_0002242257052791493112-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.43,5773.92,3773.06,5781.9,3752.74,5787.91,3753.43,5773.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3f595935a0f15239c0a18509c92a77a4]
reverse link C_0000820091630223006238 to C_0002242257052791493112--><path d="M1637.96,6889.5 C1675.67,7877.41 1797.53,10531.82 2028,10849 C2099.39,10947.24 2217.94,11006.96 2328.95,11043.08 " fill="none" id="C_0000820091630223006238&lt;-C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1630.96,6889.59,1637.19,6869.34,1644.95,6889.06,1630.96,6889.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[34ccf54faad2732560850bd8665d0a82]
link C_0001942181379759217898 to C_0001112867090784569162--><path d="M2869.6,10549.21 C2983,10513.26 3106.36,10453.07 3181,10353 C3337,10143.85 3233.62,10030.41 3250,9770 C3253.35,9716.77 3244.87,5970.13 3280,5930 C3394.33,5799.42 3589.31,5774.27 3752.82,5780.94 " fill="none" id="C_0001942181379759217898-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.47,5773.96,3773.11,5781.93,3752.79,5787.95,3753.47,5773.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a510e46abb3e3fb8d1e108ee127ac321]
reverse link C_0000820091630223006238 to C_0001942181379759217898--><path d="M1642.7,6889.21 C1689.17,7794.86 1825.22,10077.41 2028,10353 C2102.07,10453.67 2225.55,10513.92 2339.17,10549.77 " fill="none" id="C_0000820091630223006238&lt;-C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1635.7,6889.39,1641.67,6869.06,1649.68,6888.67,1635.7,6889.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6340afec94b7710ba348d42f46eb27c]
link C_0002291903337356664508 to C_0001112867090784569162--><path d="M2901.17,10007.88 C3005.59,9966.89 3113.68,9904.57 3181,9811 C3334.93,9597.05 3233.44,9485.05 3250,9222 C3252.87,9176.37 3249.86,5964.38 3280,5930 C3394.41,5799.5 3589.39,5774.34 3752.88,5780.99 " fill="none" id="C_0002291903337356664508-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.53,5774.02,3773.17,5781.99,3752.85,5788,3753.53,5774.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[107b7a7327243dacf301851c70d6fb71]
reverse link C_0000820091630223006238 to C_0002291903337356664508--><path d="M1626.38,6889.26 C1636.09,7647.67 1695.43,9351.3 2028,9811 C2095.48,9904.28 2203.44,9966.53 2307.72,10007.55 " fill="none" id="C_0000820091630223006238&lt;-C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1619.38,6889.12,1626.13,6869.04,1633.38,6888.95,1619.38,6889.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4335525f83bb33992247c2f504ebdb89]
link C_0001370368867041199969 to C_0001112867090784569162--><path d="M2911.07,9461.24 C3012.12,9420.18 3115.38,9359.03 3181,9269 C3321.44,9076.32 3233.36,8974.84 3250,8737 C3252.72,8698.11 3254.27,5959.3 3280,5930 C3394.52,5799.59 3589.5,5774.43 3752.96,5781.06 " fill="none" id="C_0001370368867041199969-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.6,5774.08,3773.24,5782.05,3752.92,5788.06,3753.6,5774.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b3bbe848390de6adceecba0984d6ab3b]
reverse link C_0000820091630223006238 to C_0001370368867041199969--><path d="M1636.63,6889.48 C1664.23,7549.45 1753.47,8898.86 2028,9269 C2094.12,9358.15 2197.02,9419.06 2297.63,9460.18 " fill="none" id="C_0000820091630223006238&lt;-C_0001370368867041199969" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1629.62,6889.46,1635.79,6869.19,1643.61,6888.89,1629.62,6889.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64e7a6eb91daa34b4f5dcbf61cbc2691]
link C_0001646173285346905617 to C_0001112867090784569162--><path d="M2894.04,8960.55 C3000.14,8923.81 3111.29,8865.38 3181,8773 C3324.62,8582.68 3233.09,8478.82 3250,8241 C3254.55,8176.96 3237.58,5978.19 3280,5930 C3394.67,5799.72 3589.64,5774.56 3753.06,5781.15 " fill="none" id="C_0001646173285346905617-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.7,5774.17,3773.34,5782.14,3753.02,5788.16,3753.7,5774.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c873d28af5cee0be36435c20505a3add]
reverse link C_0000820091630223006238 to C_0001646173285346905617--><path d="M1648.98,6889.33 C1692.36,7451.11 1801.22,8487.05 2028,8773 C2099.41,8863.04 2209.86,8921 2314.98,8958.02 " fill="none" id="C_0000820091630223006238&lt;-C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1641.98,6889.61,1647.43,6869.13,1655.94,6888.54,1641.98,6889.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[337e370d25248223a42f6486bf3bc227]
link C_0001583654034047392858 to C_0001112867090784569162--><path d="M2950.03,8438.22 C3036.36,8401.4 3121.29,8349.57 3181,8277 C3273.16,8164.98 3233.51,8102.12 3250,7958 C3256.4,7902.03 3242.74,5972.26 3280,5930 C3394.78,5799.82 3589.76,5774.66 3753.15,5781.23 " fill="none" id="C_0001583654034047392858-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.78,5774.25,3773.42,5782.21,3753.1,5788.23,3753.78,5774.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[987121a660fa81e318dcd4dcec5949cd]
reverse link C_0000820091630223006238 to C_0001583654034047392858--><path d="M1669.94,6889.11 C1731.57,7339.85 1854.74,8069.09 2028,8277 C2087.99,8348.98 2172.75,8400.6 2258.82,8437.41 " fill="none" id="C_0000820091630223006238&lt;-C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1662.99,6889.96,1667.23,6869.2,1676.86,6888.07,1662.99,6889.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b8d755c5734ff075dd4b223530b745f0]
link C_0000910307965681926894 to C_0001112867090784569162--><path d="M3130.02,8034.23 C3148.27,8021.4 3165.38,8007.05 3181,7991 C3280.65,7888.6 3233.36,7818.91 3250,7677 C3255.65,7628.8 3247.86,5966.37 3280,5930 C3394.83,5800.08 3589.55,5774.84 3752.81,5781.31 " fill="none" id="C_0000910307965681926894-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.42,5774.33,3773.06,5782.28,3752.75,5788.31,3753.42,5774.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c921dbdc6baac32669acd5a5489bfe5d]
reverse link C_0000820091630223006238 to C_0000910307965681926894--><path d="M1682.49,6889.19 C1749.7,7272.71 1871.89,7838.6 2028,7991 C2043.65,8006.28 2060.67,8020.01 2078.73,8032.34 " fill="none" id="C_0000820091630223006238&lt;-C_0000910307965681926894" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1675.57,6890.26,1679.03,6869.35,1689.36,6887.85,1675.57,6890.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e56bc7cb5e1c993d7325b75e7934ff15]
link C_0000355772964752054032 to C_0001112867090784569162--><path d="M3112.14,7760.23 C3137.16,7744.52 3160.39,7726.25 3181,7705 C3281.99,7600.88 3233.09,7530.07 3250,7386 C3254.71,7345.82 3253.16,5960.26 3280,5930 C3395.06,5800.27 3589.77,5775.03 3752.97,5781.45 " fill="none" id="C_0000355772964752054032-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.57,5774.47,3773.22,5782.41,3752.91,5788.45,3753.57,5774.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f390089f8e370e58f5b7681ad92fa29f]
reverse link C_0000820091630223006238 to C_0000355772964752054032--><path d="M1658.01,6889.12 C1701.03,7152.27 1800.08,7495.58 2028,7705 C2049.04,7724.33 2072.28,7741.15 2096.99,7755.78 " fill="none" id="C_0000820091630223006238&lt;-C_0000355772964752054032" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1651.05,6889.97,1654.82,6869.12,1664.88,6887.77,1651.05,6889.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[56379add94182020160684402ab3bc99]
link C_0001350084679139174053 to C_0001112867090784569162--><path d="M3130.3,7465.06 C3148.64,7451.49 3165.68,7436.2 3181,7419 C3340.75,7239.64 3230.87,7122.42 3250,6883 C3254.22,6830.2 3244.64,5969.44 3280,5930 C3395.65,5801.02 3590.1,5775.7 3753.03,5781.88 " fill="none" id="C_0001350084679139174053-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.58,5774.9,3773.24,5782.82,3752.94,5788.89,3753.58,5774.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aef5a102ff54aaa0543cf48071f78482]
reverse link C_0000820091630223006238 to C_0001350084679139174053--><path d="M1708.12,6888.4 C1767.85,7072.59 1867.1,7284.5 2028,7419 C2044,7432.37 2061.06,7444.52 2078.93,7455.56 " fill="none" id="C_0000820091630223006238&lt;-C_0001350084679139174053" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1701.42,6890.42,1702.02,6869.23,1714.76,6886.17,1701.42,6890.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44340e84b40a20fdf98816525a96d67d]
link C_0000699000175415913074 to C_0001112867090784569162--><path d="M2896.02,7110.39 C3001.74,7073.67 3112.08,7015.3 3181,6923 C3335.79,6715.7 3225.33,6602.53 3250,6345 C3254.41,6298.98 3248.44,5963.79 3280,5930 C3397.82,5803.87 3591.22,5778.22 3753.11,5783.54 " fill="none" id="C_0000699000175415913074-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.5,5776.55,3773.19,5784.36,3752.92,5790.54,3753.5,5776.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[357ee025e25188b7db79cb0c516fe097]
reverse link C_0000820091630223006238 to C_0000699000175415913074--><path d="M1971.53,6881.74 C1990.13,6896.28 2009,6910.13 2028,6923 C2114.91,6981.89 2218.08,7031.62 2312.89,7070.73 " fill="none" id="C_0000820091630223006238&lt;-C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1966.91,6887.02,1955.61,6869.09,1975.62,6876.06,1966.91,6887.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e457dc81a3cb2d1b80d6d916d7238368]
link C_0001850771625416044357 to C_0001112867090784569162--><path d="M2925.14,6629.88 C3020.2,6595.84 3116.17,6543.95 3181,6465 C3219.37,6418.28 3236.35,5971.83 3280,5930 C3403.35,5811.81 3593.97,5785.37 3753.13,5788.33 " fill="none" id="C_0001850771625416044357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.56,5781.33,3773.37,5788.86,3753.19,5795.33,3753.56,5781.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[346f4031a9ef3d19012d66959f7223cc]
reverse link C_0000820091630223006238 to C_0001850771625416044357--><path d="M1987.22,6585.04 C2084.45,6602.23 2188.87,6620.69 2283.62,6637.44 " fill="none" id="C_0000820091630223006238&lt;-C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1985.71,6591.88,1967.23,6581.51,1988.15,6578.1,1985.71,6591.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0ed859701260fc0467c79ba328d333e0]
link C_0001458511670125196521 to C_0001112867090784569162--><path d="M2906.1,6134.83 C2996.93,6099.43 3095.26,6056.08 3181,6007 C3229.38,5979.31 3228.67,5951.74 3280,5930 C3428.64,5867.04 3606.88,5839.74 3753.11,5828.44 " fill="none" id="C_0001458511670125196521-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3752.61,5821.46,3773.07,5826.98,3753.63,5835.42,3752.61,5821.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7d4a4b49b4ab143b71158128b6404bf]
reverse link C_0000820091630223006238 to C_0001458511670125196521--><path d="M1986.54,6415.7 C2090.51,6385.41 2202.75,6352.72 2302.63,6323.63 " fill="none" id="C_0000820091630223006238&lt;-C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1988.39,6422.45,1967.23,6421.32,1984.48,6409.01,1988.39,6422.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d6e6f5aa7b358770fcfcca193064bc8e]
link C_0001286239480653274581 to C_0001112867090784569162--><path d="M2869.82,5823 C3120.45,5823 3495.89,5823 3752.97,5823 " fill="none" id="C_0001286239480653274581-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3753.21,5816,3773.21,5823,3753.21,5830,3753.21,5816" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[773c2b4e76d7127123f7363ca3d37bd1]
reverse link C_0000820091630223006238 to C_0001286239480653274581--><path d="M1864.47,6157.25 C1913.43,6101.29 1968.41,6048.44 2028,6007 C2120.15,5942.92 2235.8,5900.26 2339.22,5872.31 " fill="none" id="C_0000820091630223006238&lt;-C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1869.51,6162.12,1851.16,6172.72,1858.9,6152.99,1869.51,6162.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f3a746549c88b4848ab56ea8219bc3da]
link C_0002237184725500898553 to C_0001827593751126946500--><path d="M503.07,6550.85 C513.17,6551.68 523.18,6552.4 533,6553 C562.39,6554.79 593.15,6554.71 623.69,6553.42 " fill="none" id="C_0002237184725500898553-&gt;C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="628.98,6553.19,619.8067,6549.6052,623.9852,6553.4183,620.1721,6557.5968,628.98,6553.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="543.5" y="6542.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="553.5" y="6549.0669">_pVar</text><!--MD5=[cde88d746544cdc3d561e033289d5a39]
reverse link C_0002237184725500898553 to C_0001827593751126946500--><path d="M508.55,6521 C548.03,6521 589.06,6521 628.79,6521 " fill="none" id="C_0002237184725500898553&lt;-C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="503.25,6521,512.25,6525,508.25,6521,512.25,6517,503.25,6521" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="539" cy="6513.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="546" y="6517.0669">«friend»</text><!--MD5=[ef2198e91bebda66d46e12ab6957cbf1]
reverse link C_0001827593751126946500 to C_0000820091630223006238--><path d="M1139.3,6521 C1185.05,6521 1233.28,6521 1280.84,6521 " fill="none" id="C_0001827593751126946500&lt;-C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1126.15,6521,1132.15,6525,1138.15,6521,1132.15,6517,1126.15,6521" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1159" y="6510.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1169" y="6517.0669">_placeholder</text><!--MD5=[6dcc2079e7138c6daf78dfdba04cf639]
link C_0000527346272489458655 to C_0000562679976742134348--><path d="M4156.38,1585.96 C4315.14,1553.31 4605.78,1493.54 4838.04,1445.77 " fill="none" id="C_0000527346272489458655-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4836.84,1438.87,4857.84,1441.7,4839.66,1452.58,4836.84,1438.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93e37ca313af482d22d79ad2a1242be8]
link C_0000005959213735263804 to C_0000562679976742134348--><path d="M2966.47,1852.27 C3411.23,1875.51 4183.28,1873.6 4797,1651 C4835.92,1636.88 4874.48,1617.76 4911.33,1596.11 " fill="none" id="C_0000005959213735263804-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4907.96,1589.97,4928.7,1585.65,4915.18,1601.96,4907.96,1589.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da16bdd81ccd32c5345f4657a0311a5e]
link C_0000005959213735263804 to C_0001112867090784569162--><path d="M2966.07,1921.98 C3046.66,1959.23 3124.79,2009.79 3181,2078 C3241.85,2151.83 3882.05,5103.55 4013.85,5713.44 " fill="none" id="C_0000005959213735263804-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4020.76,5712.28,4018.15,5733.3,4007.08,5715.23,4020.76,5712.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c1ef560bc3e0f209cf8592a03b480402]
reverse link C_0000005959213735263804 to C_0000527346272489458655--><path d="M2979.3,1767.4 C3270.28,1724.12 3659.84,1666.17 3875.92,1634.03 " fill="none" id="C_0000005959213735263804&lt;-C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2966.39,1769.32,2972.9136,1772.3928,2978.2592,1767.5528,2971.7355,1764.48,2966.39,1769.32" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3214" y="1719.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3224" y="1726.0669">_val</text><!--MD5=[57043d4c3ff71e0c1ad226b68711ab62]
reverse link C_0000820091630223006238 to C_0000005959213735263804--><path d="M1637.18,6152.72 C1673.38,5146.86 1792.75,2406.08 2028,2078 C2080.86,2004.29 2159.93,1951.57 2242.67,1913.98 " fill="none" id="C_0000820091630223006238&lt;-C_0000005959213735263804" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1644.17,6153.14,1636.46,6172.88,1630.18,6152.64,1644.17,6153.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[557e1931b371155983b4f532a720c14b]
link C_0000234522456695339728 to C_0000562679976742134348--><path d="M4216.88,5988.43 C4415.39,6002.47 4719.43,6009.46 4797,5930 C4834.16,5891.94 4823.52,5026.08 4827,4973 C4910.65,3698.11 5088.73,2176.35 5158.31,1605.44 " fill="none" id="C_0000234522456695339728-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5151.36,1604.54,5160.73,1585.53,5165.26,1606.23,5151.36,1604.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0726cef29eeff02e0366a2a3eedb0bda]
link C_0001212087958231445051 to C_0000562679976742134348--><path d="M4797.31,1374 C4810.97,1374 4824.48,1374 4837.8,1374 " fill="none" id="C_0001212087958231445051-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4837.86,1367,4857.86,1374,4837.86,1381,4837.86,1367" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eaf16a6c5f1df092a02413a19a1eff1f]
link C_0000337724165693095141 to C_0000562679976742134348--><path d="M2943.75,1316.58 C3042.48,1317.35 3150.56,1318.2 3250,1319 C3937.56,1324.56 4110.57,1292.25 4797,1332 C4810.36,1332.77 4823.97,1333.68 4837.71,1334.68 " fill="none" id="C_0000337724165693095141-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4838.51,1327.72,4857.91,1336.23,4837.44,1341.68,4838.51,1327.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[16511a2f4c37fe51681fec60226a2973]
link C_0000337724165693095141 to C_0001112867090784569162--><path d="M2943.65,1394.24 C3034.52,1432.14 3123.45,1487.48 3181,1568 C3226.14,1631.15 3199.61,1839.22 3211,1916 C3436.56,3436.89 3891.55,5254.69 4009.21,5713.67 " fill="none" id="C_0000337724165693095141-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4016.04,5712.12,4014.23,5733.24,4002.48,5715.61,4016.04,5712.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fe439d5e765335e37cf9df5fa7d3979]
reverse link C_0000337724165693095141 to C_0001212087958231445051--><path d="M2956.82,1329.19 C3040.14,1332.77 3128.72,1336.54 3211,1340 C3288.57,1343.26 3370.24,1346.66 3450.81,1350 " fill="none" id="C_0000337724165693095141&lt;-C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2943.76,1328.63,2949.5832,1332.8832,2955.749,1329.1438,2949.9258,1324.8906,2943.76,1328.63" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3214" y="1329.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3224" y="1336.0669">_val</text><!--MD5=[e5f99a919a61a4e42aca90a18e3fda58]
reverse link C_0000820091630223006238 to C_0000337724165693095141--><path d="M1633.46,6152.79 C1661.33,5068.38 1764.03,1939.19 2028,1568 C2085.44,1487.23 2174.47,1431.81 2265.49,1393.91 " fill="none" id="C_0000820091630223006238&lt;-C_0000337724165693095141" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1640.45,6153.11,1632.95,6172.92,1626.46,6152.75,1640.45,6153.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[66a9300658efedb4b1a93e23e9ff93f7]
link C_0001994773360593884629 to C_0000562679976742134348--><path d="M4336.56,6077.35 C4520.26,6084.05 4732.85,6076.51 4797,6013 C4833.24,5977.12 4823.15,5605.85 4827,5555 C4941.2,4048.27 5106.65,2238.64 5165.35,1605.9 " fill="none" id="C_0001994773360593884629-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5158.41,1604.97,5167.23,1585.71,5172.35,1606.27,5158.41,1604.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c3e3f5d6f986708e944aeb087ff93a0]
link C_0000285075638289121010 to C_0000562679976742134348--><path d="M4309.29,925.76 C4466.97,944.5 4666.16,982.99 4828,1062 C4875.31,1085.1 4921.33,1116.05 4963.76,1149.5 " fill="none" id="C_0000285075638289121010-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4968.33,1144.19,4979.53,1162.18,4959.56,1155.11,4968.33,1144.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[88b22e236c247f697595a8a031ef384e]
link C_0000919753061206343041 to C_0000562679976742134348--><path d="M3181.22,931.9 C3689.27,1043.88 4413.25,1203.45 4838.2,1297.12 " fill="none" id="C_0000919753061206343041-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4839.87,1290.32,4857.89,1301.46,4836.85,1303.99,4839.87,1290.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9e5689f27ad3ab40777162f8e227abae]
link C_0000919753061206343041 to C_0001112867090784569162--><path d="M3168.74,1042.14 C3172.98,1047.63 3177.07,1053.25 3181,1059 C3223.62,1121.34 3201.82,1663.04 3211,1738 C3311.13,2555.38 3886.6,5148.69 4012.97,5713.65 " fill="none" id="C_0000919753061206343041-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4019.82,5712.23,4017.36,5733.27,4006.16,5715.28,4019.82,5712.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9aabf9c28edcc453494b77d207249301]
reverse link C_0000919753061206343041 to C_0000285075638289121010--><path d="M3194.33,847.35 C3393.31,861.67 3605.83,876.95 3767.73,888.6 " fill="none" id="C_0000919753061206343041&lt;-C_0000285075638289121010" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3181.24,846.41,3186.9339,850.8349,3193.2084,847.2809,3187.5145,842.856,3181.24,846.41" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3214" y="840.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3224" y="847.0669">_val</text><!--MD5=[9f3f5d87c1b4e7d8b1cb63940590e5b7]
reverse link C_0000820091630223006238 to C_0000919753061206343041--><path d="M1630.46,6152.51 C1650.62,4993.35 1735.53,1473.56 2028,1059 C2032.01,1053.31 2036.18,1047.75 2040.5,1042.31 " fill="none" id="C_0000820091630223006238&lt;-C_0000919753061206343041" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1637.46,6152.88,1630.11,6172.76,1623.46,6152.64,1637.46,6152.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[01bcfd93dfd380bd3fb6d526bf3eb237]
link C_0000976793773745790650 to C_0000562679976742134348--><path d="M4115.22,6162.08 C4267.57,6205.29 4612.36,6275.72 4797,6096 C5121.58,5780.07 5176.34,2512.29 5185.3,1605.96 " fill="none" id="C_0000976793773745790650-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5178.3,1605.57,5185.49,1585.64,5192.3,1605.71,5178.3,1605.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f0fe444b5b6275dc17f35f6ac9aecee1]
link C_0001731737538524969332 to C_0000562679976742134348--><path d="M4476.94,443.04 C4600.88,467.98 4728.9,513.09 4828,593 C4998.15,730.19 5091.11,966.03 5139.52,1142.75 " fill="none" id="C_0001731737538524969332-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5146.29,1140.96,5144.71,1162.09,5132.76,1144.59,5146.29,1140.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a2d3ffeb0b578b62dc98362b1e858224]
link C_0000988703063712340439 to C_0000562679976742134348--><path d="M3113.73,419.36 C3738.57,572.33 4725.71,818.76 4797,866 C4903.56,936.62 4993.07,1046.27 5059.35,1145.65 " fill="none" id="C_0000988703063712340439-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5065.27,1141.91,5070.41,1162.47,5053.57,1149.61,5065.27,1141.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2892913b73a1d83496cb15dea195eaa1]
link C_0000988703063712340439 to C_0001112867090784569162--><path d="M3113.68,484.86 C3138.23,504.54 3160.95,526.2 3181,550 C3221.73,598.35 3241.14,763.4 3250,826 C3301.44,1189.29 3240.46,1286.23 3280,1651 C3456.85,3282.49 3900.1,5236.15 4011.69,5713.76 " fill="none" id="C_0000988703063712340439-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4018.55,5712.35,4016.29,5733.42,4004.92,5715.54,4018.55,5712.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dcefae2390a2798e6a439bdb17eed6e6]
reverse link C_0000988703063712340439 to C_0001731737538524969332--><path d="M3126.69,340.77 C3340.13,359.1 3578.57,379.58 3757.93,394.99 " fill="none" id="C_0000988703063712340439&lt;-C_0001731737538524969332" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3113.65,339.65,3119.2848,344.1499,3125.6058,340.6793,3119.971,336.1794,3113.65,339.65" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3214" y="340.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3224" y="347.0669">_val</text><!--MD5=[f15e7c41921f9782046233198505d12e]
reverse link C_0000820091630223006238 to C_0000988703063712340439--><path d="M1627.96,6152.73 C1640.84,4922.73 1706.89,1008.19 2028,550 C2047.2,522.61 2070.03,498.14 2095.37,476.28 " fill="none" id="C_0000820091630223006238&lt;-C_0000988703063712340439" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1634.96,6152.94,1627.76,6172.86,1620.96,6152.79,1634.96,6152.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8517f84559b97b0741763c5ab34e23c2]
@startuml
left to right direction
package [Dynamic] as C_0002281307121949168090 {
abstract "VarHolder" as C_0000820091630223006238
abstract C_0000820091630223006238 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104{VarHolder}]] {
#VarHolder() : void
+~VarHolder() : void
..
-checkLowerLimit<F,T>(const F & from) const : void
-checkLowerLimitFloat<F,T>(const F & from) const : void
-checkUpperLimit<F,T>(const F & from) const : void
-checkUpperLimitFloat<F,T>(const F & from) const : void
{abstract} +clone(Placeholder<Dynamic::VarHolder> * pHolder = 0) const = 0 : Dynamic::VarHolder *
#cloneHolder<T>(Placeholder<Dynamic::VarHolder> * pVarHolder, const T & val) const : class Dynamic::VarHolder *
+convert(UInt16 & val) const : void
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UUID & val) const : void
+convert(Timestamp & val) const : void
+convert(LocalDateTime & val) const : void
+convert(DateTime & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
#convertSignedFloatToUnsigned<F,T>(const F & from, T & to) const : void
#convertSignedToUnsigned<F,T>(const F & from, T & to) const : void
#convertToSmaller<F,T>(const F & from, T & to) const : void
#convertToSmallerUnsigned<F,T>(const F & from, T & to) const : void
#convertUnsignedToSigned<F,T>(const F & from, T & to) const : void
+isArray() const : bool
+isBoolean() const : bool
+isDate() const : bool
+isDateTime() const : bool
+isDeque() const : bool
+isInteger() const : bool
+isList() const : bool
+isNumeric() const : bool
+isOrdered() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+isTime() const : bool
+isUUID() const : bool
+isVector() const : bool
+size() const : std::size_t
{abstract} +type() const = 0 : const std::type_info &
__
}
class "VarHolderImpl<T>" as C_0001112867090784569162
class C_0001112867090784569162 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{VarHolderImpl}]] {
+VarHolderImpl(const T & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const VarHolderImpl<T> &) : void
+~VarHolderImpl() : void
..
-operator=(const VarHolderImpl<T> &) : VarHolderImpl<T> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+type() const : const std::type_info &
+value() const : const T &
__
-_val : T [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754{_val}]]]
}
class "VarHolderImpl<signed char>" as C_0002149165824584484566
class C_0002149165824584484566 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
+VarHolderImpl(Int8 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int8> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<Int8> &) : Dynamic::VarHolderImpl<Int8> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+convert(long long & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const Int8 &
__
-_val : Int8 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910{_val}]]]
}
class "VarHolderImpl<short>" as C_0000198808093629002393
class C_0000198808093629002393 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915{VarHolderImpl}]] {
+VarHolderImpl(Int16 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int16> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<Int16> &) : Dynamic::VarHolderImpl<Int16> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const Int16 &
__
-_val : Int16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063{_val}]]]
}
class "VarHolderImpl<int>" as C_0000976768452323437983
class C_0000976768452323437983 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068{VarHolderImpl}]] {
+VarHolderImpl(Int32 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int32> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<Int32> &) : Dynamic::VarHolderImpl<Int32> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const Int32 &
__
-_val : Int32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215{_val}]]]
}
class "VarHolderImpl<long>" as C_0001804431617899042426
class C_0001804431617899042426 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220{VarHolderImpl}]] {
+VarHolderImpl(Int64 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int64> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<Int64> &) : Dynamic::VarHolderImpl<Int64> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(Timestamp & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(DateTime & dt) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+convert(unsigned long long & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const Int64 &
__
-_val : Int64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382{_val}]]]
}
class "VarHolderImpl<unsigned char>" as C_0001832009513687525374
class C_0001832009513687525374 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387{VarHolderImpl}]] {
+VarHolderImpl(UInt8 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt8> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<UInt8> &) : Dynamic::VarHolderImpl<UInt8> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const UInt8 &
__
-_val : UInt8 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534{_val}]]]
}
class "VarHolderImpl<unsigned short>" as C_0000572186414558919480
class C_0000572186414558919480 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539{VarHolderImpl}]] {
+VarHolderImpl(UInt16 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt16> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<UInt16> &) : Dynamic::VarHolderImpl<UInt16> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const UInt16 &
__
-_val : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686{_val}]]]
}
class "VarHolderImpl<unsigned int>" as C_0000166253842255815357
class C_0000166253842255815357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691{VarHolderImpl}]] {
+VarHolderImpl(UInt32 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt32> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<UInt32> &) : Dynamic::VarHolderImpl<UInt32> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const UInt32 &
__
-_val : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838{_val}]]]
}
class "VarHolderImpl<unsigned long>" as C_0001459401574844645109
class C_0001459401574844645109 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843{VarHolderImpl}]] {
+VarHolderImpl(UInt64 val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt64> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<UInt64> &) : Dynamic::VarHolderImpl<UInt64> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(Timestamp & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(DateTime & dt) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+convert(unsigned long long & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const UInt64 &
__
-_val : UInt64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011{_val}]]]
}
class "VarHolderImpl<bool>" as C_0000599279109574326060
class C_0000599279109574326060 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016{VarHolderImpl}]] {
+VarHolderImpl(bool val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<bool> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<bool> &) : Dynamic::VarHolderImpl<bool> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const bool &
__
-_val : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161{_val}]]]
}
class "VarHolderImpl<float>" as C_0000384619052225252533
class C_0000384619052225252533 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166{VarHolderImpl}]] {
+VarHolderImpl(float val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<float> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<float> &) : Dynamic::VarHolderImpl<float> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const float &
__
-_val : float [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314{_val}]]]
}
class "VarHolderImpl<double>" as C_0002242257052791493112
class C_0002242257052791493112 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319{VarHolderImpl}]] {
+VarHolderImpl(double val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<double> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<double> &) : Dynamic::VarHolderImpl<double> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const double &
__
-_val : double [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473{_val}]]]
}
class "VarHolderImpl<char>" as C_0001942181379759217898
class C_0001942181379759217898 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478{VarHolderImpl}]] {
+VarHolderImpl(char val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<char> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<char> &) : Dynamic::VarHolderImpl<char> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const char &
__
-_val : char [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623{_val}]]]
}
class "VarHolderImpl<std::string>" as C_0002291903337356664508
class C_0002291903337356664508 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const std::string & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<std::string> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<std::string> &) : Dynamic::VarHolderImpl<std::string> &
..
+operator[](std::string::size_type n) : char &
+operator[](std::string::size_type n) const : const char &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(UUID & uuid) const : void
+convert(Timestamp & ts) const : void
+convert(LocalDateTime & ldt) const : void
+convert(DateTime & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isString() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const std::string &
__
-_val : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820{_val}]]]
}
class "VarHolderImpl<std::basic_string<unsigned short>>" as C_0001370368867041199969
class C_0001370368867041199969 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const UTF16String & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UTF16String> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<UTF16String> &) : Dynamic::VarHolderImpl<UTF16String> &
..
+operator[](UTF16String::size_type n) : UTF16Char &
+operator[](UTF16String::size_type n) const : const UTF16Char &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(Timestamp & ts) const : void
+convert(LocalDateTime & ldt) const : void
+convert(DateTime & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isString() const : bool
+size() const : std::size_t
-toStdString() const : std::string
+type() const : const std::type_info &
+value() const : const UTF16String &
__
-_val : UTF16String [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022{_val}]]]
}
class "VarHolderImpl<long long>" as C_0001646173285346905617
class C_0001646173285346905617 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309{VarHolderImpl}]] {
+VarHolderImpl(long long val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<long long> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<long long> &) : Dynamic::VarHolderImpl<long long> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const long long &
__
-_val : long long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452{_val}]]]
}
class "VarHolderImpl<unsigned long long>" as C_0001583654034047392858
class C_0001583654034047392858 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457{VarHolderImpl}]] {
+VarHolderImpl(unsigned long long val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<unsigned long long> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<unsigned long long> &) : Dynamic::VarHolderImpl<unsigned long long> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 & val) const : void
+convert(std::string & val) const : void
+convert(char & val) const : void
+convert(double & val) const : void
+convert(float & val) const : void
+convert(bool & val) const : void
+convert(unsigned long long & val) const : void
+convert(long long & val) const : void
+convert(UInt64 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt8 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 & val) const : void
+convert(Int16 & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+type() const : const std::type_info &
+value() const : const unsigned long long &
__
-_val : unsigned long long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600{_val}]]]
}
class "VarHolderImpl<std::vector<T>>" as C_0000910307965681926894
class C_0000910307965681926894 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608{VarHolderImpl}]] {
+VarHolderImpl(const std::vector<T> & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &) : void
+~VarHolderImpl() : void
..
-operator=(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &) : VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &
..
+operator[](typename std::vector<T>::size_type n) : T &
+operator[](typename std::vector<T>::size_type n) const : const T &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(std::string & val) const : void
+isVector() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const std::vector<T> &
__
-_val : std::vector<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668{_val}]]]
}
class "VarHolderImpl<std::list<T>>" as C_0000355772964752054032
class C_0000355772964752054032 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673{VarHolderImpl}]] {
+VarHolderImpl(const std::list<T> & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &) : void
+~VarHolderImpl() : void
..
-operator=(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &) : VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &
..
+operator[](typename std::list<T>::size_type n) : T &
+operator[](typename std::list<T>::size_type n) const : const T &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(std::string & val) const : void
+isList() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const std::list<T> &
__
-_val : std::list<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743{_val}]]]
}
class "VarHolderImpl<std::deque<T>>" as C_0001350084679139174053
class C_0001350084679139174053 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748{VarHolderImpl}]] {
+VarHolderImpl(const std::deque<T> & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &) : void
+~VarHolderImpl() : void
..
-operator=(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &) : VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &
..
+operator[](typename std::deque<T>::size_type n) : T &
+operator[](typename std::deque<T>::size_type n) const : const T &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(std::string & val) const : void
+isDeque() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const std::deque<T> &
__
-_val : std::deque<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808{_val}]]]
}
class "VarHolderImpl<DateTime>" as C_0000699000175415913074
class C_0000699000175415913074 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813{VarHolderImpl}]] {
+VarHolderImpl(const DateTime & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<DateTime> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<DateTime> &) : Dynamic::VarHolderImpl<DateTime> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 &) const : void
+convert(Timestamp & ts) const : void
+convert(LocalDateTime & ldt) const : void
+convert(DateTime & val) const : void
+convert(std::string & val) const : void
+convert(unsigned long long & val) const : void
+convert(UInt64 & val) const : void
+convert(Int64 & val) const : void
+convert(Int32 &) const : void
+convert(Int16 &) const : void
+convert(long long & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isDate() const : bool
+isDateTime() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+isTime() const : bool
+isUUID() const : bool
+type() const : const std::type_info &
+value() const : const DateTime &
__
-_val : DateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958{_val}]]]
}
class "VarHolderImpl<LocalDateTime>" as C_0001850771625416044357
class C_0001850771625416044357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963{VarHolderImpl}]] {
+VarHolderImpl(const LocalDateTime & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<LocalDateTime> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<LocalDateTime> &) : Dynamic::VarHolderImpl<LocalDateTime> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+isArray() const : bool
+isBoolean() const : bool
+isDate() const : bool
+isDateTime() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+isTime() const : bool
+isUUID() const : bool
+type() const : const std::type_info &
+value() const : const LocalDateTime &
__
-_val : LocalDateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093{_val}]]]
}
class "VarHolderImpl<Timestamp>" as C_0001458511670125196521
class C_0001458511670125196521 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098{VarHolderImpl}]] {
+VarHolderImpl(const Timestamp & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Timestamp> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<Timestamp> &) : Dynamic::VarHolderImpl<Timestamp> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+isArray() const : bool
+isBoolean() const : bool
+isDate() const : bool
+isDateTime() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+isTime() const : bool
+isUUID() const : bool
+type() const : const std::type_info &
+value() const : const Timestamp &
__
-_val : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228{_val}]]]
}
class "VarHolderImpl<UUID>" as C_0001286239480653274581
class C_0001286239480653274581 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233{VarHolderImpl}]] {
+VarHolderImpl(const UUID & val) : void
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UUID> &) : void
+~VarHolderImpl() : void
..
-operator=(const Dynamic::VarHolderImpl<UUID> &) : Dynamic::VarHolderImpl<UUID> &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(std::string & val) const : void
+isArray() const : bool
+isBoolean() const : bool
+isDate() const : bool
+isDateTime() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+isTime() const : bool
+isUUID() const : bool
+type() const : const std::type_info &
+value() const : const UUID &
__
-_val : UUID [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324{_val}]]]
}
class "VarIterator" as C_0002237184725500898553
class C_0002237184725500898553 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33{VarIterator}]] {
+VarIterator(Dynamic::Var * pVar, bool positionEnd) : void
+VarIterator(const Dynamic::VarIterator & other) : void
+VarIterator(Dynamic::VarIterator && other) noexcept : void
-VarIterator() : void
+~VarIterator() : void
..
+operator=(const Dynamic::VarIterator & other) : Dynamic::VarIterator &
+operator=(Dynamic::VarIterator && other) noexcept : Dynamic::VarIterator &
..
+operator!=(const Dynamic::VarIterator & other) const : bool
+operator*() const : Dynamic::Var &
+operator+(std::size_t diff) const : Dynamic::VarIterator
+operator++() const : const Dynamic::VarIterator &
+operator++(int) const : Dynamic::VarIterator
+operator-(std::size_t diff) const : Dynamic::VarIterator
+operator- -() const : const Dynamic::VarIterator &
+operator- -(int) const : Dynamic::VarIterator
+operator->() const : Dynamic::Var *
+operator==(const Dynamic::VarIterator & other) const : bool
..
-decrement() const : void
-increment() const : void
-setPosition(std::size_t pos) const : void
+swap(Dynamic::VarIterator & other) : void
__
{static} +POSITION_END : const std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43{POSITION_END}]]]
-_pVar : Dynamic::Var * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117{_pVar}]]]
-_position : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118{_position}]]]
}
class "Var" as C_0001827593751126946500
class C_0001827593751126946500 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41{Var}]] {
+Var() : void
+Var(const char * pVal) : void
+Var(const Dynamic::Var & other) : void
+Var<T>(const T & val) : void
+~Var() : void
..
+operator=(const Dynamic::Var & other) : Dynamic::Var &
..
+operator!() const : bool
+operator!=<T>(const T & other) const : _Bool
+operator!=(const char * other) const : bool
+operator!=(const Dynamic::Var & other) const : bool
+operator&&<T>(const T & other) const : _Bool
+operator&&(const Dynamic::Var & other) const : bool
+operator*<T>(const T & other) const : const class Dynamic::Var
+operator*(const Dynamic::Var & other) const : const Dynamic::Var
+operator*=<T>(const T & other) : class Dynamic::Var &
+operator*=(const Dynamic::Var & other) : Dynamic::Var &
+operator+(const Dynamic::Var & other) const : const Dynamic::Var
+operator+<T>(const T & other) const : const class Dynamic::Var
+operator+(const char * other) const : const Dynamic::Var
+operator++() : Dynamic::Var &
+operator++(int) : const Dynamic::Var
+operator+=(const char * other) : Dynamic::Var &
+operator+=(const Dynamic::Var & other) : Dynamic::Var &
+operator+=<T>(const T & other) : class Dynamic::Var &
+operator-(const Dynamic::Var & other) const : const Dynamic::Var
+operator-<T>(const T & other) const : const class Dynamic::Var
+operator- -(int) : const Dynamic::Var
+operator- -() : Dynamic::Var &
+operator-=<T>(const T & other) : class Dynamic::Var &
+operator-=(const Dynamic::Var & other) : Dynamic::Var &
+operator/<T>(const T & other) const : const class Dynamic::Var
+operator/(const Dynamic::Var & other) const : const Dynamic::Var
+operator/=<T>(const T & other) : class Dynamic::Var &
+operator/=(const Dynamic::Var & other) : Dynamic::Var &
+operator<<T>(const T & other) const : _Bool
+operator<(const Dynamic::Var & other) const : bool
+operator<=<T>(const T & other) const : _Bool
+operator<=(const Dynamic::Var & other) const : bool
+operator=<T>(const T & other) : class Dynamic::Var &
+operator==(const Dynamic::Var & other) const : bool
+operator==(const char * other) const : bool
+operator==<T>(const T & other) const : _Bool
+operator><T>(const T & other) const : _Bool
+operator>(const Dynamic::Var & other) const : bool
+operator>=(const Dynamic::Var & other) const : bool
+operator>=<T>(const T & other) const : _Bool
+operator[]<T>(const T & n) : class Dynamic::Var &
+operator[]<T>(const T & n) const : const class Dynamic::Var &
+operator[](const std::string & name) const : const Dynamic::Var &
+operator[](const std::string & name) : Dynamic::Var &
+operator||<T>(const T & other) const : _Bool
+operator||(const Dynamic::Var & other) const : bool
..
-add<T>(const Dynamic::Var & other) const : T
+at(std::size_t n) : char &
+begin() const : Dynamic::Var::ConstIterator
+begin() : Dynamic::Var::Iterator
+clear() : void
-construct<ValueType>(const ValueType & value) : void
-construct(const Dynamic::Var & other) : void
-construct(const char * value) : void
-content() const : Dynamic::VarHolder *
+convert<T>() const : T
+convert<T>(T & val) const : void
-destruct() : void
-divide<T>(const Dynamic::Var & other) const : T
+empty() : void
+end() const : Dynamic::Var::ConstIterator
+end() : Dynamic::Var::Iterator
+extract<T>() const : const T &
-getAt(std::size_t n) : Dynamic::Var &
-getAt(const std::string & n) : Dynamic::Var &
-holderImpl<T,E>(const std::string errorMessage = "") const : VarHolderImpl<T> *
+isArray() const : bool
+isBoolean() const : bool
+isDate() const : bool
+isDateTime() const : bool
+isDeque() const : bool
+isEmpty() const : bool
+isInteger() const : bool
+isList() const : bool
+isNumeric() const : bool
+isOrdered() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+isTime() const : bool
+isUUID() const : bool
+isVector() const : bool
-multiply<T>(const Dynamic::Var & other) const : T
+operator type-parameter-0-0<T>() const : T
{static} -parse(const std::string & val, std::string::size_type & offset) : Dynamic::Var
{static} +parse(const std::string & val) : Dynamic::Var
{static} -parseArray(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseJSONString(const std::string & val, std::string::size_type & pos) : std::string
{static} -parseObject(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseString(const std::string & val, std::string::size_type & pos) : std::string
+size() const : std::size_t
{static} -skipWhiteSpace(const std::string & val, std::string::size_type & pos) : void
-structIndexOperator<T,N>(T * pStr, N n) const : class Dynamic::Var &
-subtract<T>(const Dynamic::Var & other) const : T
+swap(Dynamic::Var & other) : void
+toString() const : std::string
{static} +toString(const Dynamic::Var & var) : std::string
+type() const : const std::type_info &
__
-_placeholder : Placeholder<Dynamic::VarHolder> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632{_placeholder}]]]
}
class "Struct<K,M=std::map<K, Var>,S=std::set<K>>" as C_0000562679976742134348
class C_0000562679976742134348 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
+Struct() : void
+Struct(const Dynamic::Struct::Data & val) : void
+Struct<K, M, S><T>(const std::map<K,T> & val) : void
+Struct<K, M, S><T>(const ordered_map<K,T> & val) : void
+~Struct() : void
..
+operator[](const K & name) : Dynamic::Var &
+operator[](const K & name) const : const Dynamic::Var &
..
-assignMap<T>(const T & map) : void
+begin() const : Dynamic::Struct::ConstIterator
+begin() : Dynamic::Struct::Iterator
+clear() : void
+contains(const K & name) const : bool
+empty() const : bool
+end() const : Dynamic::Struct::ConstIterator
+end() : Dynamic::Struct::Iterator
+erase(const K & key) : Dynamic::Struct::SizeType
+erase(Dynamic::Struct::Iterator & it) : void
+find(const K & name) const : Dynamic::Struct::ConstIterator
+find(const K & name) : Dynamic::Struct::Iterator
+getVar(const K & key) const : Dynamic::Var
+getVar<DefT=class Poco::Dynamic::Var>(const K & key, const DefT & defaultValue) const : class Dynamic::Var
+insert(const Dynamic::Struct::ValueType & aPair) : Dynamic::Struct::InsRetVal
+insert<T>(const K & key, const T & value) : Dynamic::Struct::InsRetVal
+members() const : Dynamic::Struct::NameSet
+size() const : Dynamic::Struct::SizeType
+swap(Struct<K,M,S> & other) noexcept : void
+toString() const : std::string
__
-_data : Dynamic::Struct::Data [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247{_data}]]]
}
class "Struct<std::string,std::map<std::string,Dynamic::Var>,std::set<std::string>>" as C_0000527346272489458655
class C_0000527346272489458655 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{Struct}]] {
__
}
class "VarHolderImpl<Dynamic::Struct<std::string,std::map<std::string,Dynamic::Var>,std::set<std::string>>>" as C_0000005959213735263804
class C_0000005959213735263804 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType & val) : void
+~VarHolderImpl() : void
..
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) const : const Dynamic::Var &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 &) const : void
+convert(Timestamp &) const : void
+convert(LocalDateTime &) const : void
+convert(DateTime &) const : void
+convert(std::string & val) const : void
+convert(char &) const : void
+convert(double &) const : void
+convert(float &) const : void
+convert(UInt64 &) const : void
+convert(UInt32 &) const : void
+convert(UInt16 &) const : void
+convert(UInt8 &) const : void
+convert(Int64 &) const : void
+convert(Int32 &) const : void
+convert(Int16 &) const : void
+convert(bool &) const : void
+isArray() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isOrdered() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType &
__
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433{_val}]]]
}
class "Struct<int,std::map<int,Dynamic::Var>,std::set<int>>" as C_0000234522456695339728
class C_0000234522456695339728 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{Struct}]] {
__
}
class "Struct<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,std::map<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,Dynamic::Var>,std::set<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType>>" as C_0001212087958231445051
class C_0001212087958231445051 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
__
}
class "VarHolderImpl<Dynamic::Struct<int,std::map<int,Dynamic::Var>,std::set<int>>>" as C_0000337724165693095141
class C_0000337724165693095141 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType & val) : void
+~VarHolderImpl() : void
..
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) const : const Dynamic::Var &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 &) const : void
+convert(Timestamp &) const : void
+convert(LocalDateTime &) const : void
+convert(DateTime &) const : void
+convert(std::string & val) const : void
+convert(char &) const : void
+convert(double &) const : void
+convert(float &) const : void
+convert(UInt64 &) const : void
+convert(UInt32 &) const : void
+convert(UInt16 &) const : void
+convert(UInt8 &) const : void
+convert(Int64 &) const : void
+convert(Int32 &) const : void
+convert(Int16 &) const : void
+convert(bool &) const : void
+isArray() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isOrdered() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType &
__
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619{_val}]]]
}
class "Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>" as C_0001994773360593884629
class C_0001994773360593884629 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{Struct}]] {
__
}
class "Struct<std::string,OrderedMap<std::string,Dynamic::Var>,OrderedSet<std::string>>" as C_0000285075638289121010
class C_0000285075638289121010 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
__
}
class "VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>" as C_0000919753061206343041
class C_0000919753061206343041 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType & val) : void
+~VarHolderImpl() : void
..
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::KeyType & name) const : const Dynamic::Var &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 &) const : void
+convert(Timestamp &) const : void
+convert(LocalDateTime &) const : void
+convert(DateTime &) const : void
+convert(std::string & val) const : void
+convert(char &) const : void
+convert(double &) const : void
+convert(float &) const : void
+convert(UInt64 &) const : void
+convert(UInt32 &) const : void
+convert(UInt16 &) const : void
+convert(UInt8 &) const : void
+convert(Int64 &) const : void
+convert(Int32 &) const : void
+convert(Int16 &) const : void
+convert(bool &) const : void
+isArray() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isOrdered() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType &
__
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805{_val}]]]
}
class "Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>" as C_0000976793773745790650
class C_0000976793773745790650 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{Struct}]] {
__
}
class "Struct<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int,tsl::ordered_map<int,Poco::Dynamic::Var>,tsl::ordered_set<int>>>::KeyType,OrderedMap<int,Dynamic::Var>,OrderedSet<int>>" as C_0001731737538524969332
class C_0001731737538524969332 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
__
}
class "VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>" as C_0000988703063712340439
class C_0000988703063712340439 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType & val) : void
+~VarHolderImpl() : void
..
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) const : const Dynamic::Var &
..
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+convert(Int8 &) const : void
+convert(Timestamp &) const : void
+convert(LocalDateTime &) const : void
+convert(DateTime &) const : void
+convert(std::string & val) const : void
+convert(char &) const : void
+convert(double &) const : void
+convert(float &) const : void
+convert(UInt64 &) const : void
+convert(UInt32 &) const : void
+convert(UInt16 &) const : void
+convert(UInt8 &) const : void
+convert(Int64 &) const : void
+convert(Int32 &) const : void
+convert(Int16 &) const : void
+convert(bool &) const : void
+isArray() const : bool
+isInteger() const : bool
+isNumeric() const : bool
+isOrdered() const : bool
+isSigned() const : bool
+isString() const : bool
+isStruct() const : bool
+size() const : std::size_t
+type() const : const std::type_info &
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType &
__
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991{_val}]]]
}
class "Struct<K,M,S>" as C_0000876644825045799418
class C_0000876644825045799418 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38{Struct}]] {
__
}
}
C_0000820091630223006238 <|- - C_0001112867090784569162
C_0002149165824584484566 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002149165824584484566
C_0000198808093629002393 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000198808093629002393
C_0000976768452323437983 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000976768452323437983
C_0001804431617899042426 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001804431617899042426
C_0001832009513687525374 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001832009513687525374
C_0000572186414558919480 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000572186414558919480
C_0000166253842255815357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000166253842255815357
C_0001459401574844645109 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001459401574844645109
C_0000599279109574326060 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000599279109574326060
C_0000384619052225252533 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000384619052225252533
C_0002242257052791493112 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002242257052791493112
C_0001942181379759217898 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001942181379759217898
C_0002291903337356664508 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002291903337356664508
C_0001370368867041199969 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001370368867041199969
C_0001646173285346905617 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001646173285346905617
C_0001583654034047392858 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001583654034047392858
C_0000910307965681926894 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000910307965681926894
C_0000355772964752054032 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000355772964752054032
C_0001350084679139174053 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001350084679139174053
C_0000699000175415913074 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000699000175415913074
C_0001850771625416044357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001850771625416044357
C_0001458511670125196521 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001458511670125196521
C_0001286239480653274581 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001286239480653274581
C_0002237184725500898553 - -> C_0001827593751126946500 : -_pVar
C_0002237184725500898553 <.. C_0001827593751126946500 : +<<friend>>
C_0001827593751126946500 o- - C_0000820091630223006238 : -_placeholder
C_0000527346272489458655 ..|> C_0000562679976742134348
C_0000005959213735263804 ..|> C_0000562679976742134348
C_0000005959213735263804 ..|> C_0001112867090784569162
C_0000005959213735263804 o- - C_0000527346272489458655 : -_val
C_0000820091630223006238 <|- - C_0000005959213735263804
C_0000234522456695339728 ..|> C_0000562679976742134348
C_0001212087958231445051 ..|> C_0000562679976742134348
C_0000337724165693095141 ..|> C_0000562679976742134348
C_0000337724165693095141 ..|> C_0001112867090784569162
C_0000337724165693095141 o- - C_0001212087958231445051 : -_val
C_0000820091630223006238 <|- - C_0000337724165693095141
C_0001994773360593884629 ..|> C_0000562679976742134348
C_0000285075638289121010 ..|> C_0000562679976742134348
C_0000919753061206343041 ..|> C_0000562679976742134348
C_0000919753061206343041 ..|> C_0001112867090784569162
C_0000919753061206343041 o- - C_0000285075638289121010 : -_val
C_0000820091630223006238 <|- - C_0000919753061206343041
C_0000976793773745790650 ..|> C_0000562679976742134348
C_0001731737538524969332 ..|> C_0000562679976742134348
C_0000988703063712340439 ..|> C_0000562679976742134348
C_0000988703063712340439 ..|> C_0001112867090784569162
C_0000988703063712340439 o- - C_0001731737538524969332 : -_val
C_0000820091630223006238 <|- - C_0000988703063712340439

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>