<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="11961px" preserveAspectRatio="none" style="width:6287px;height:11961px;" version="1.1" viewBox="0 0 6287 11961" width="6287px" zoomAndPan="magnify"><defs><filter height="300%" id="f1910cjtffu8ct" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[031cc931b6e6b4333e02cc6a702b3341]
cluster C_0002281307121949168090--><polygon fill="#FFFFFF" filter="url(#f1910cjtffu8ct)" points="22,23.74,94,23.74,101,46.0369,6265,46.0369,6265,11903.74,22,11903.74,22,23.74" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="101" y1="46.0369" y2="46.0369"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="38.7351">Dynamic</text><!--MD5=[63e3babcd9679d0fc26b559e71357f11]
class C_0000820091630223006238--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L104" target="_top" title="VarHolder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L104" xlink:show="new" xlink:title="VarHolder" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="688.2344" id="C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.5;" width="626" x="1248" y="5415.74"/><ellipse cx="1525.75" cy="5431.74" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1525.8594,5427.0838 L1524.7031,5432.1619 L1527.0313,5432.1619 L1525.8594,5427.0838 Z M1524.375,5424.8494 L1527.3594,5424.8494 L1530.7188,5437.24 L1528.2656,5437.24 L1527.5,5434.1775 L1524.2188,5434.1775 L1523.4688,5437.24 L1521.0313,5437.24 L1524.375,5424.8494 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="1546.25" y="5435.8943">VarHolder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1249" x2="1873" y1="5447.74" y2="5447.74"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1249" x2="1873" y1="5455.74" y2="5455.74"/><ellipse cx="1259" cy="5466.74" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1268" y="5469.9504">~VarHolder() : void</text><ellipse cx="1259" cy="5479.5447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="512" x="1268" y="5482.7551">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pHolder = 0) const = 0 : Dynamic::VarHolder *</text><ellipse cx="1259" cy="5492.3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="1268" y="5495.5598">type() const = 0 : const std::type_info &amp;</text><ellipse cx="1259" cy="5505.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1268" y="5508.3645">convert(Int8 &amp; val) const : void</text><ellipse cx="1259" cy="5517.9588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="5521.1692">convert(Int16 &amp; val) const : void</text><ellipse cx="1259" cy="5530.7634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="5533.9739">convert(Int32 &amp; val) const : void</text><ellipse cx="1259" cy="5543.5681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="5546.7786">convert(Int64 &amp; val) const : void</text><ellipse cx="1259" cy="5556.3728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1268" y="5559.5833">convert(UInt8 &amp; val) const : void</text><ellipse cx="1259" cy="5569.1775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="5572.3879">convert(UInt16 &amp; val) const : void</text><ellipse cx="1259" cy="5581.9822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="5585.1926">convert(UInt32 &amp; val) const : void</text><ellipse cx="1259" cy="5594.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="5597.9973">convert(UInt64 &amp; val) const : void</text><ellipse cx="1259" cy="5607.5916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1268" y="5610.802">convert(DateTime &amp; val) const : void</text><ellipse cx="1259" cy="5620.3963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1268" y="5623.6067">convert(LocalDateTime &amp; val) const : void</text><ellipse cx="1259" cy="5633.2009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1268" y="5636.4114">convert(Timestamp &amp; val) const : void</text><ellipse cx="1259" cy="5646.0056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1268" y="5649.2161">convert(UUID &amp; val) const : void</text><ellipse cx="1259" cy="5658.8103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1268" y="5662.0208">convert(long long &amp; val) const : void</text><ellipse cx="1259" cy="5671.615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1268" y="5674.8254">convert(unsigned long long &amp; val) const : void</text><ellipse cx="1259" cy="5684.4197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1268" y="5687.6301">convert(bool &amp; val) const : void</text><ellipse cx="1259" cy="5697.2244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1268" y="5700.4348">convert(float &amp; val) const : void</text><ellipse cx="1259" cy="5710.0291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1268" y="5713.2395">convert(double &amp; val) const : void</text><ellipse cx="1259" cy="5722.8338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1268" y="5726.0442">convert(char &amp; val) const : void</text><ellipse cx="1259" cy="5735.6384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1268" y="5738.8489">convert(std::string &amp; val) const : void</text><ellipse cx="1259" cy="5748.4431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1268" y="5751.6536">convert(UTF16String &amp; val) const : void</text><ellipse cx="1259" cy="5761.2478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1268" y="5764.4583">isArray() const : bool</text><ellipse cx="1259" cy="5774.0525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1268" y="5777.2629">isVector() const : bool</text><ellipse cx="1259" cy="5786.8572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1268" y="5790.0676">isList() const : bool</text><ellipse cx="1259" cy="5799.6619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1268" y="5802.8723">isDeque() const : bool</text><ellipse cx="1259" cy="5812.4666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1268" y="5815.677">isStruct() const : bool</text><ellipse cx="1259" cy="5825.2713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1268" y="5828.4817">isOrdered() const : bool</text><ellipse cx="1259" cy="5838.0759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1268" y="5841.2864">isInteger() const : bool</text><ellipse cx="1259" cy="5850.8806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1268" y="5854.0911">isSigned() const : bool</text><ellipse cx="1259" cy="5863.6853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1268" y="5866.8958">isNumeric() const : bool</text><ellipse cx="1259" cy="5876.49" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1268" y="5879.7004">isBoolean() const : bool</text><ellipse cx="1259" cy="5889.2947" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1268" y="5892.5051">isString() const : bool</text><ellipse cx="1259" cy="5902.0994" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1268" y="5905.3098">isDate() const : bool</text><ellipse cx="1259" cy="5914.9041" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1268" y="5918.1145">isTime() const : bool</text><ellipse cx="1259" cy="5927.7088" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1268" y="5930.9192">isDateTime() const : bool</text><ellipse cx="1259" cy="5940.5134" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1268" y="5943.7239">isUUID() const : bool</text><ellipse cx="1259" cy="5953.3181" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1268" y="5956.5286">size() const : std::size_t</text><polygon fill="#FFFF44" points="1259,5961.1228,1263,5965.1228,1259,5969.1228,1255,5965.1228" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1268" y="5969.3333">VarHolder() : void</text><polygon fill="#FFFF44" points="1259,5973.9275,1263,5977.9275,1259,5981.9275,1255,5977.9275" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="600" x="1268" y="5982.1379">cloneHolder(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder, const T &amp; val) : class Dynamic::VarHolder *</text><polygon fill="#FFFF44" points="1259,5986.7322,1263,5990.7322,1259,5994.7322,1255,5990.7322" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="1268" y="5994.9426">convertToSmaller(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,5999.5369,1263,6003.5369,1259,6007.5369,1255,6003.5369" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="1268" y="6007.7473">convertToSmallerUnsigned(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6012.3416,1263,6016.3416,1259,6020.3416,1255,6016.3416" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1268" y="6020.552">convertSignedToUnsigned(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6025.1463,1263,6029.1463,1259,6033.1463,1255,6029.1463" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="1268" y="6033.3567">convertSignedFloatToUnsigned(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6037.9509,1263,6041.9509,1259,6045.9509,1255,6041.9509" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1268" y="6046.1614">convertUnsignedToSigned(const F &amp; from, T &amp; to) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6052.7556"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1268" y="6058.9661">checkUpperLimit(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6065.5603"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1268" y="6071.7708">checkLowerLimit(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6078.365"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1268" y="6084.5754">checkUpperLimitFloat(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6091.1697"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1268" y="6097.3801">checkLowerLimitFloat(const F &amp; from) : void</text></a><!--MD5=[5bec7878bc8351ff61befe9ac854c5da]
class C_0001112867090784569162--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="163.2422" id="C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="4140" y="5481.24"/><ellipse cx="4351.75" cy="5497.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4354.7188,5502.8806 Q4354.1406,5503.1775 4353.5,5503.3181 Q4352.8594,5503.4744 4352.1563,5503.4744 Q4349.6563,5503.4744 4348.3281,5501.8338 Q4347.0156,5500.1775 4347.0156,5497.0525 Q4347.0156,5493.9275 4348.3281,5492.2713 Q4349.6563,5490.615 4352.1563,5490.615 Q4352.8594,5490.615 4353.5,5490.7713 Q4354.1563,5490.9275 4354.7188,5491.2244 L4354.7188,5493.9431 Q4354.0938,5493.365 4353.5,5493.0994 Q4352.9063,5492.8181 4352.2813,5492.8181 Q4350.9375,5492.8181 4350.25,5493.8963 Q4349.5625,5494.9588 4349.5625,5497.0525 Q4349.5625,5499.1463 4350.25,5500.2244 Q4350.9375,5501.2869 4352.2813,5501.2869 Q4352.9063,5501.2869 4353.5,5501.0213 Q4354.0938,5500.74 4354.7188,5500.1619 L4354.7188,5502.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="4372.25" y="5501.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="4664" y="5478.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="4665" y="5490.3787">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4141" x2="4669" y1="5513.24" y2="5513.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4146" y="5519.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5521.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="4160" y="5527.4504">_val : T</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4141" x2="4669" y1="5534.0447" y2="5534.0447"/><ellipse cx="4151" cy="5545.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4160" y="5548.2551">VarHolderImpl&lt;T&gt;(const T &amp; val) : void</text><ellipse cx="4151" cy="5557.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4160" y="5561.0598">~VarHolderImpl&lt;T&gt;() : void</text><ellipse cx="4151" cy="5570.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="4160" y="5573.8645">type() const : const std::type_info &amp;</text><ellipse cx="4151" cy="5583.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="4160" y="5586.6692">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="4151" cy="5596.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4160" y="5599.4739">value() const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5606.0681"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4160" y="5612.2786">VarHolderImpl&lt;T&gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5618.8728"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4160" y="5625.0833">VarHolderImpl&lt;T&gt;(const VarHolderImpl&lt;T&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5631.6775"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4160" y="5637.8879">operator=(const VarHolderImpl&lt;T&gt; &amp; ) : VarHolderImpl&lt;T&gt; &amp;</text><!--MD5=[ca8da3ab2e5c399aaf21ac160b12bb93]
class C_0002149165824584484566--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="457.75" id="C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="11392.74"/><ellipse cx="2376.25" cy="11408.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2379.2188,11414.3806 Q2378.6406,11414.6775 2378,11414.8181 Q2377.3594,11414.9744 2376.6563,11414.9744 Q2374.1563,11414.9744 2372.8281,11413.3338 Q2371.5156,11411.6775 2371.5156,11408.5525 Q2371.5156,11405.4275 2372.8281,11403.7713 Q2374.1563,11402.115 2376.6563,11402.115 Q2377.3594,11402.115 2378,11402.2713 Q2378.6563,11402.4275 2379.2188,11402.7244 L2379.2188,11405.4431 Q2378.5938,11404.865 2378,11404.5994 Q2377.4063,11404.3181 2376.7813,11404.3181 Q2375.4375,11404.3181 2374.75,11405.3963 Q2374.0625,11406.4588 2374.0625,11408.5525 Q2374.0625,11410.6463 2374.75,11411.7244 Q2375.4375,11412.7869 2376.7813,11412.7869 Q2377.4063,11412.7869 2378,11412.5213 Q2378.5938,11412.24 2379.2188,11411.6619 L2379.2188,11414.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2396.75" y="11412.8943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="2655.5" y="11389.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="2656.5" y="11401.8787">signed char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="11424.74" y2="11424.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="11430.74"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11432.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2217.5" y="11438.9504">_val : Int8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="11445.5447" y2="11445.5447"/><ellipse cx="2208.5" cy="11456.5447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2217.5" y="11459.7551">VarHolderImpl(Int8 val) : void</text><ellipse cx="2208.5" cy="11469.3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="11472.5598">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="11482.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="11485.3645">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="11494.9588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="11498.1692">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="11507.7634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="11510.9739">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="11520.5681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="11523.7786">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="11533.3728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="11536.5833">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="11546.1775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="11549.3879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="11558.9822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="11562.1926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="11571.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="11574.9973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="11584.5916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="11587.802">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="11597.3963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="11600.6067">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="11610.2009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="11613.4114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="11623.0056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="11626.2161">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="11635.8103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="11639.0208">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="11648.615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="11651.8254">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="11661.4197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="11664.6301">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="11674.2244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="11677.4348">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="11687.0291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2217.5" y="11690.2395">convert(UTF16String &amp; val) const : void</text><ellipse cx="2208.5" cy="11699.8338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="11703.0442">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="11712.6384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2217.5" y="11715.8489">value() const : const Int8 &amp;</text><ellipse cx="2208.5" cy="11725.4431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="11728.6536">isArray() const : bool</text><ellipse cx="2208.5" cy="11738.2478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="11741.4583">isStruct() const : bool</text><ellipse cx="2208.5" cy="11751.0525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="11754.2629">isInteger() const : bool</text><ellipse cx="2208.5" cy="11763.8572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="11767.0676">isSigned() const : bool</text><ellipse cx="2208.5" cy="11776.6619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="11779.8723">isNumeric() const : bool</text><ellipse cx="2208.5" cy="11789.4666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="11792.677">isBoolean() const : bool</text><ellipse cx="2208.5" cy="11802.2713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="11805.4817">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11812.0759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="11818.2864">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11824.8806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2217.5" y="11831.0911">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11837.6853"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="2217.5" y="11843.8958">operator=(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int8&gt; &amp;</text><!--MD5=[7368cdd56a5292fac79769f5043446e9]
class C_0000198808093629002393--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L915" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L915" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2195" y="10912.24"/><ellipse cx="2396.75" cy="10928.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2399.7188,10933.8806 Q2399.1406,10934.1775 2398.5,10934.3181 Q2397.8594,10934.4744 2397.1563,10934.4744 Q2394.6563,10934.4744 2393.3281,10932.8338 Q2392.0156,10931.1775 2392.0156,10928.0525 Q2392.0156,10924.9275 2393.3281,10923.2713 Q2394.6563,10921.615 2397.1563,10921.615 Q2397.8594,10921.615 2398.5,10921.7713 Q2399.1563,10921.9275 2399.7188,10922.2244 L2399.7188,10924.9431 Q2399.0938,10924.365 2398.5,10924.0994 Q2397.9063,10923.8181 2397.2813,10923.8181 Q2395.9375,10923.8181 2395.25,10924.8963 Q2394.5625,10925.9588 2394.5625,10928.0525 Q2394.5625,10930.1463 2395.25,10931.2244 Q2395.9375,10932.2869 2397.2813,10932.2869 Q2397.9063,10932.2869 2398.5,10932.0213 Q2399.0938,10931.74 2399.7188,10931.1619 L2399.7188,10933.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2417.25" y="10932.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="2699" y="10909.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2700" y="10921.3787">short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10944.24" y2="10944.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2201" y="10950.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10952.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2215" y="10958.4504">_val : Int16</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10965.0447" y2="10965.0447"/><ellipse cx="2206" cy="10976.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2215" y="10979.2551">VarHolderImpl(Int16 val) : void</text><ellipse cx="2206" cy="10988.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2215" y="10992.0598">~VarHolderImpl() : void</text><ellipse cx="2206" cy="11001.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2215" y="11004.8645">type() const : const std::type_info &amp;</text><ellipse cx="2206" cy="11014.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2215" y="11017.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2206" cy="11027.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="11030.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2206" cy="11040.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="11043.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2206" cy="11052.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="11056.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2206" cy="11065.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2215" y="11068.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2206" cy="11078.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="11081.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2206" cy="11091.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="11094.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2206" cy="11104.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="11107.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2206" cy="11116.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2215" y="11120.1067">convert(long long &amp; val) const : void</text><ellipse cx="2206" cy="11129.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2215" y="11132.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2206" cy="11142.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2215" y="11145.7161">convert(bool &amp; val) const : void</text><ellipse cx="2206" cy="11155.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="11158.5208">convert(float &amp; val) const : void</text><ellipse cx="2206" cy="11168.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2215" y="11171.3254">convert(double &amp; val) const : void</text><ellipse cx="2206" cy="11180.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="11184.1301">convert(char &amp; val) const : void</text><ellipse cx="2206" cy="11193.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2215" y="11196.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2206" cy="11206.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2215" y="11209.7395">convert(UTF16String &amp; val) const : void</text><ellipse cx="2206" cy="11219.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2215" y="11222.5442">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2206" cy="11232.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2215" y="11235.3489">value() const : const Int16 &amp;</text><ellipse cx="2206" cy="11244.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2215" y="11248.1536">isArray() const : bool</text><ellipse cx="2206" cy="11257.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="11260.9583">isStruct() const : bool</text><ellipse cx="2206" cy="11270.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2215" y="11273.7629">isInteger() const : bool</text><ellipse cx="2206" cy="11283.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2215" y="11286.5676">isSigned() const : bool</text><ellipse cx="2206" cy="11296.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2215" y="11299.3723">isNumeric() const : bool</text><ellipse cx="2206" cy="11308.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="11312.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="11318.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="11324.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="11331.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2215" y="11337.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="11344.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2215" y="11350.5911">operator=(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int16&gt; &amp;</text><!--MD5=[f50690fc04d6f94ff7c398237d3e157e]
class C_0000976768452323437983--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2195" y="10432.24"/><ellipse cx="2404.75" cy="10448.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2407.7188,10453.8806 Q2407.1406,10454.1775 2406.5,10454.3181 Q2405.8594,10454.4744 2405.1563,10454.4744 Q2402.6563,10454.4744 2401.3281,10452.8338 Q2400.0156,10451.1775 2400.0156,10448.0525 Q2400.0156,10444.9275 2401.3281,10443.2713 Q2402.6563,10441.615 2405.1563,10441.615 Q2405.8594,10441.615 2406.5,10441.7713 Q2407.1563,10441.9275 2407.7188,10442.2244 L2407.7188,10444.9431 Q2407.0938,10444.365 2406.5,10444.0994 Q2405.9063,10443.8181 2405.2813,10443.8181 Q2403.9375,10443.8181 2403.25,10444.8963 Q2402.5625,10445.9588 2402.5625,10448.0525 Q2402.5625,10450.1463 2403.25,10451.2244 Q2403.9375,10452.2869 2405.2813,10452.2869 Q2405.9063,10452.2869 2406.5,10452.0213 Q2407.0938,10451.74 2407.7188,10451.1619 L2407.7188,10453.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2425.25" y="10452.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="18" x="2715" y="10429.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="16" x="2716" y="10441.3787">int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10464.24" y2="10464.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2201" y="10470.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10472.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2215" y="10478.4504">_val : Int32</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10485.0447" y2="10485.0447"/><ellipse cx="2206" cy="10496.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2215" y="10499.2551">VarHolderImpl(Int32 val) : void</text><ellipse cx="2206" cy="10508.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2215" y="10512.0598">~VarHolderImpl() : void</text><ellipse cx="2206" cy="10521.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2215" y="10524.8645">type() const : const std::type_info &amp;</text><ellipse cx="2206" cy="10534.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2215" y="10537.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2206" cy="10547.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10550.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2206" cy="10560.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10563.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2206" cy="10572.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10576.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2206" cy="10585.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2215" y="10588.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2206" cy="10598.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10601.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2206" cy="10611.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10614.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2206" cy="10624.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10627.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2206" cy="10636.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2215" y="10640.1067">convert(long long &amp; val) const : void</text><ellipse cx="2206" cy="10649.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2215" y="10652.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2206" cy="10662.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2215" y="10665.7161">convert(bool &amp; val) const : void</text><ellipse cx="2206" cy="10675.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10678.5208">convert(float &amp; val) const : void</text><ellipse cx="2206" cy="10688.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2215" y="10691.3254">convert(double &amp; val) const : void</text><ellipse cx="2206" cy="10700.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10704.1301">convert(char &amp; val) const : void</text><ellipse cx="2206" cy="10713.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2215" y="10716.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2206" cy="10726.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2215" y="10729.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2206" cy="10739.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2215" y="10742.5442">value() const : const Int32 &amp;</text><ellipse cx="2206" cy="10752.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2215" y="10755.3489">isArray() const : bool</text><ellipse cx="2206" cy="10764.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10768.1536">isStruct() const : bool</text><ellipse cx="2206" cy="10777.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2215" y="10780.9583">isInteger() const : bool</text><ellipse cx="2206" cy="10790.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2215" y="10793.7629">isSigned() const : bool</text><ellipse cx="2206" cy="10803.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2215" y="10806.5676">isNumeric() const : bool</text><ellipse cx="2206" cy="10816.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2215" y="10819.3723">isBoolean() const : bool</text><ellipse cx="2206" cy="10828.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10832.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10838.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10844.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10851.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2215" y="10857.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10864.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2215" y="10870.5911">operator=(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int32&gt; &amp;</text><!--MD5=[e85a9a84f93969f17bffa344a47641ce]
class C_0001804431617899042426--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="483.3594" id="C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2195" y="9914.24"/><ellipse cx="2399.25" cy="9930.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2402.2188,9935.8806 Q2401.6406,9936.1775 2401,9936.3181 Q2400.3594,9936.4744 2399.6563,9936.4744 Q2397.1563,9936.4744 2395.8281,9934.8338 Q2394.5156,9933.1775 2394.5156,9930.0525 Q2394.5156,9926.9275 2395.8281,9925.2713 Q2397.1563,9923.615 2399.6563,9923.615 Q2400.3594,9923.615 2401,9923.7713 Q2401.6563,9923.9275 2402.2188,9924.2244 L2402.2188,9926.9431 Q2401.5938,9926.365 2401,9926.0994 Q2400.4063,9925.8181 2399.7813,9925.8181 Q2398.4375,9925.8181 2397.75,9926.8963 Q2397.0625,9927.9588 2397.0625,9930.0525 Q2397.0625,9932.1463 2397.75,9933.2244 Q2398.4375,9934.2869 2399.7813,9934.2869 Q2400.4063,9934.2869 2401,9934.0213 Q2401.5938,9933.74 2402.2188,9933.1619 L2402.2188,9935.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.75" y="9934.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2704" y="9911.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2705" y="9923.3787">long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="9946.24" y2="9946.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2201" y="9952.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="9954.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2215" y="9960.4504">_val : Int64</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="9967.0447" y2="9967.0447"/><ellipse cx="2206" cy="9978.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2215" y="9981.2551">VarHolderImpl(Int64 val) : void</text><ellipse cx="2206" cy="9990.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2215" y="9994.0598">~VarHolderImpl() : void</text><ellipse cx="2206" cy="10003.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2215" y="10006.8645">type() const : const std::type_info &amp;</text><ellipse cx="2206" cy="10016.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2215" y="10019.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2206" cy="10029.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10032.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2206" cy="10042.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10045.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2206" cy="10054.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10058.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2206" cy="10067.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2215" y="10070.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2206" cy="10080.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10083.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2206" cy="10093.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10096.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2206" cy="10106.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10109.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2206" cy="10118.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2215" y="10122.1067">convert(long long &amp; val) const : void</text><ellipse cx="2206" cy="10131.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2215" y="10134.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2206" cy="10144.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2215" y="10147.7161">convert(bool &amp; val) const : void</text><ellipse cx="2206" cy="10157.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10160.5208">convert(float &amp; val) const : void</text><ellipse cx="2206" cy="10170.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2215" y="10173.3254">convert(double &amp; val) const : void</text><ellipse cx="2206" cy="10182.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10186.1301">convert(char &amp; val) const : void</text><ellipse cx="2206" cy="10195.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2215" y="10198.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2206" cy="10208.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2215" y="10211.7395">convert(DateTime &amp; dt) const : void</text><ellipse cx="2206" cy="10221.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2215" y="10224.5442">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2206" cy="10234.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2215" y="10237.3489">convert(Timestamp &amp; val) const : void</text><ellipse cx="2206" cy="10246.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2215" y="10250.1536">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2206" cy="10259.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2215" y="10262.9583">value() const : const Int64 &amp;</text><ellipse cx="2206" cy="10272.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2215" y="10275.7629">isArray() const : bool</text><ellipse cx="2206" cy="10285.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10288.5676">isStruct() const : bool</text><ellipse cx="2206" cy="10298.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2215" y="10301.3723">isInteger() const : bool</text><ellipse cx="2206" cy="10310.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2215" y="10314.177">isSigned() const : bool</text><ellipse cx="2206" cy="10323.7713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2215" y="10326.9817">isNumeric() const : bool</text><ellipse cx="2206" cy="10336.5759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2215" y="10339.7864">isBoolean() const : bool</text><ellipse cx="2206" cy="10349.3806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10352.5911">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10359.1853"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10365.3958">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10371.99"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2215" y="10378.2004">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10384.7947"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2215" y="10391.0051">operator=(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int64&gt; &amp;</text><!--MD5=[c3f52ae62d27edaf0dbe6c8c72118abf]
class C_0001832009513687525374--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.5;" width="537" x="2194" y="9434.24"/><ellipse cx="2368.25" cy="9450.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2371.2188,9455.8806 Q2370.6406,9456.1775 2370,9456.3181 Q2369.3594,9456.4744 2368.6563,9456.4744 Q2366.1563,9456.4744 2364.8281,9454.8338 Q2363.5156,9453.1775 2363.5156,9450.0525 Q2363.5156,9446.9275 2364.8281,9445.2713 Q2366.1563,9443.615 2368.6563,9443.615 Q2369.3594,9443.615 2370,9443.7713 Q2370.6563,9443.9275 2371.2188,9444.2244 L2371.2188,9446.9431 Q2370.5938,9446.365 2370,9446.0994 Q2369.4063,9445.8181 2368.7813,9445.8181 Q2367.4375,9445.8181 2366.75,9446.8963 Q2366.0625,9447.9588 2366.0625,9450.0525 Q2366.0625,9452.1463 2366.75,9453.2244 Q2367.4375,9454.2869 2368.7813,9454.2869 Q2369.4063,9454.2869 2370,9454.0213 Q2370.5938,9453.74 2371.2188,9453.1619 L2371.2188,9455.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2388.75" y="9454.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="91" x="2643" y="9431.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="2644" y="9443.3787">unsigned char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2195" x2="2730" y1="9466.24" y2="9466.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2200" y="9472.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9474.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="2214" y="9480.4504">_val : UInt8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2195" x2="2730" y1="9487.0447" y2="9487.0447"/><ellipse cx="2205" cy="9498.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2214" y="9501.2551">VarHolderImpl(UInt8 val) : void</text><ellipse cx="2205" cy="9510.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2214" y="9514.0598">~VarHolderImpl() : void</text><ellipse cx="2205" cy="9523.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2214" y="9526.8645">type() const : const std::type_info &amp;</text><ellipse cx="2205" cy="9536.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2214" y="9539.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2205" cy="9549.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2214" y="9552.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2205" cy="9562.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2214" y="9565.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2205" cy="9574.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2214" y="9578.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2205" cy="9587.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2214" y="9590.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2205" cy="9600.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2214" y="9603.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2205" cy="9613.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2214" y="9616.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2205" cy="9626.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2214" y="9629.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2205" cy="9638.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2214" y="9642.1067">convert(long long &amp; val) const : void</text><ellipse cx="2205" cy="9651.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2214" y="9654.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2205" cy="9664.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2214" y="9667.7161">convert(bool &amp; val) const : void</text><ellipse cx="2205" cy="9677.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2214" y="9680.5208">convert(float &amp; val) const : void</text><ellipse cx="2205" cy="9690.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2214" y="9693.3254">convert(double &amp; val) const : void</text><ellipse cx="2205" cy="9702.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2214" y="9706.1301">convert(char &amp; val) const : void</text><ellipse cx="2205" cy="9715.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2214" y="9718.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2205" cy="9728.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2214" y="9731.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2205" cy="9741.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2214" y="9744.5442">value() const : const UInt8 &amp;</text><ellipse cx="2205" cy="9754.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2214" y="9757.3489">isArray() const : bool</text><ellipse cx="2205" cy="9766.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214" y="9770.1536">isStruct() const : bool</text><ellipse cx="2205" cy="9779.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2214" y="9782.9583">isInteger() const : bool</text><ellipse cx="2205" cy="9792.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2214" y="9795.7629">isSigned() const : bool</text><ellipse cx="2205" cy="9805.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2214" y="9808.5676">isNumeric() const : bool</text><ellipse cx="2205" cy="9818.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2214" y="9821.3723">isBoolean() const : bool</text><ellipse cx="2205" cy="9830.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214" y="9834.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9840.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214" y="9846.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9853.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2214" y="9859.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9866.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="2214" y="9872.5911">operator=(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt8&gt; &amp;</text><!--MD5=[bcd98692da4ec66009419cce89ce6bad]
class C_0000572186414558919480--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2187" y="8954.24"/><ellipse cx="2366.25" cy="8970.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2369.2188,8975.8806 Q2368.6406,8976.1775 2368,8976.3181 Q2367.3594,8976.4744 2366.6563,8976.4744 Q2364.1563,8976.4744 2362.8281,8974.8338 Q2361.5156,8973.1775 2361.5156,8970.0525 Q2361.5156,8966.9275 2362.8281,8965.2713 Q2364.1563,8963.615 2366.6563,8963.615 Q2367.3594,8963.615 2368,8963.7713 Q2368.6563,8963.9275 2369.2188,8964.2244 L2369.2188,8966.9431 Q2368.5938,8966.365 2368,8966.0994 Q2367.4063,8965.8181 2366.7813,8965.8181 Q2365.4375,8965.8181 2364.75,8966.8963 Q2364.0625,8967.9588 2364.0625,8970.0525 Q2364.0625,8972.1463 2364.75,8973.2244 Q2365.4375,8974.2869 2366.7813,8974.2869 Q2367.4063,8974.2869 2368,8974.0213 Q2368.5938,8973.74 2369.2188,8973.1619 L2369.2188,8975.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2386.75" y="8974.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="95" x="2646" y="8951.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="2647" y="8963.3787">unsigned short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8986.24" y2="8986.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2193" y="8992.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8994.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2207" y="9000.4504">_val : UInt16</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="9007.0447" y2="9007.0447"/><ellipse cx="2198" cy="9018.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="9021.2551">VarHolderImpl(UInt16 val) : void</text><ellipse cx="2198" cy="9030.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2207" y="9034.0598">~VarHolderImpl() : void</text><ellipse cx="2198" cy="9043.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2207" y="9046.8645">type() const : const std::type_info &amp;</text><ellipse cx="2198" cy="9056.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2207" y="9059.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2198" cy="9069.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="9072.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2198" cy="9082.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="9085.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2198" cy="9094.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="9098.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2198" cy="9107.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2207" y="9110.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2198" cy="9120.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="9123.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2198" cy="9133.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="9136.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2198" cy="9146.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="9149.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2198" cy="9158.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2207" y="9162.1067">convert(long long &amp; val) const : void</text><ellipse cx="2198" cy="9171.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2207" y="9174.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2198" cy="9184.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2207" y="9187.7161">convert(bool &amp; val) const : void</text><ellipse cx="2198" cy="9197.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="9200.5208">convert(float &amp; val) const : void</text><ellipse cx="2198" cy="9210.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2207" y="9213.3254">convert(double &amp; val) const : void</text><ellipse cx="2198" cy="9222.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="9226.1301">convert(char &amp; val) const : void</text><ellipse cx="2198" cy="9235.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2207" y="9238.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2198" cy="9248.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2207" y="9251.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2198" cy="9261.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2207" y="9264.5442">value() const : const UInt16 &amp;</text><ellipse cx="2198" cy="9274.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2207" y="9277.3489">isArray() const : bool</text><ellipse cx="2198" cy="9286.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="9290.1536">isStruct() const : bool</text><ellipse cx="2198" cy="9299.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2207" y="9302.9583">isInteger() const : bool</text><ellipse cx="2198" cy="9312.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2207" y="9315.7629">isSigned() const : bool</text><ellipse cx="2198" cy="9325.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2207" y="9328.5676">isNumeric() const : bool</text><ellipse cx="2198" cy="9338.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2207" y="9341.3723">isBoolean() const : bool</text><ellipse cx="2198" cy="9350.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="9354.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="9360.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="9366.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="9373.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2207" y="9379.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="9386.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2207" y="9392.5911">operator=(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt16&gt; &amp;</text><!--MD5=[99e94c671a89454544ae053963034ed1]
class C_0000166253842255815357--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2187" y="8474.24"/><ellipse cx="2374.25" cy="8490.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2377.2188,8495.8806 Q2376.6406,8496.1775 2376,8496.3181 Q2375.3594,8496.4744 2374.6563,8496.4744 Q2372.1563,8496.4744 2370.8281,8494.8338 Q2369.5156,8493.1775 2369.5156,8490.0525 Q2369.5156,8486.9275 2370.8281,8485.2713 Q2372.1563,8483.615 2374.6563,8483.615 Q2375.3594,8483.615 2376,8483.7713 Q2376.6563,8483.9275 2377.2188,8484.2244 L2377.2188,8486.9431 Q2376.5938,8486.365 2376,8486.0994 Q2375.4063,8485.8181 2374.7813,8485.8181 Q2373.4375,8485.8181 2372.75,8486.8963 Q2372.0625,8487.9588 2372.0625,8490.0525 Q2372.0625,8492.1463 2372.75,8493.2244 Q2373.4375,8494.2869 2374.7813,8494.2869 Q2375.4063,8494.2869 2376,8494.0213 Q2376.5938,8493.74 2377.2188,8493.1619 L2377.2188,8495.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2394.75" y="8494.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="79" x="2662" y="8471.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="2663" y="8483.3787">unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8506.24" y2="8506.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2193" y="8512.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8514.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2207" y="8520.4504">_val : UInt32</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8527.0447" y2="8527.0447"/><ellipse cx="2198" cy="8538.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8541.2551">VarHolderImpl(UInt32 val) : void</text><ellipse cx="2198" cy="8550.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2207" y="8554.0598">~VarHolderImpl() : void</text><ellipse cx="2198" cy="8563.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2207" y="8566.8645">type() const : const std::type_info &amp;</text><ellipse cx="2198" cy="8576.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2207" y="8579.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2198" cy="8589.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8592.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2198" cy="8602.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8605.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2198" cy="8614.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8618.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2198" cy="8627.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2207" y="8630.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2198" cy="8640.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8643.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2198" cy="8653.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8656.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2198" cy="8666.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8669.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2198" cy="8678.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2207" y="8682.1067">convert(long long &amp; val) const : void</text><ellipse cx="2198" cy="8691.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2207" y="8694.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2198" cy="8704.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2207" y="8707.7161">convert(bool &amp; val) const : void</text><ellipse cx="2198" cy="8717.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8720.5208">convert(float &amp; val) const : void</text><ellipse cx="2198" cy="8730.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2207" y="8733.3254">convert(double &amp; val) const : void</text><ellipse cx="2198" cy="8742.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8746.1301">convert(char &amp; val) const : void</text><ellipse cx="2198" cy="8755.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2207" y="8758.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2198" cy="8768.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2207" y="8771.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2198" cy="8781.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2207" y="8784.5442">value() const : const UInt32 &amp;</text><ellipse cx="2198" cy="8794.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2207" y="8797.3489">isArray() const : bool</text><ellipse cx="2198" cy="8806.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8810.1536">isStruct() const : bool</text><ellipse cx="2198" cy="8819.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2207" y="8822.9583">isInteger() const : bool</text><ellipse cx="2198" cy="8832.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2207" y="8835.7629">isSigned() const : bool</text><ellipse cx="2198" cy="8845.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2207" y="8848.5676">isNumeric() const : bool</text><ellipse cx="2198" cy="8858.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2207" y="8861.3723">isBoolean() const : bool</text><ellipse cx="2198" cy="8870.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8874.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8880.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8886.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8893.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2207" y="8899.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8906.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2207" y="8912.5911">operator=(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt32&gt; &amp;</text><!--MD5=[0633cb007ce02e0b2259d7a912a0a465]
class C_0001459401574844645109--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="483.3594" id="C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2187" y="7956.24"/><ellipse cx="2368.75" cy="7972.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2371.7188,7977.8806 Q2371.1406,7978.1775 2370.5,7978.3181 Q2369.8594,7978.4744 2369.1563,7978.4744 Q2366.6563,7978.4744 2365.3281,7976.8338 Q2364.0156,7975.1775 2364.0156,7972.0525 Q2364.0156,7968.9275 2365.3281,7967.2713 Q2366.6563,7965.615 2369.1563,7965.615 Q2369.8594,7965.615 2370.5,7965.7713 Q2371.1563,7965.9275 2371.7188,7966.2244 L2371.7188,7968.9431 Q2371.0938,7968.365 2370.5,7968.0994 Q2369.9063,7967.8181 2369.2813,7967.8181 Q2367.9375,7967.8181 2367.25,7968.8963 Q2366.5625,7969.9588 2366.5625,7972.0525 Q2366.5625,7974.1463 2367.25,7975.2244 Q2367.9375,7976.2869 2369.2813,7976.2869 Q2369.9063,7976.2869 2370.5,7976.0213 Q2371.0938,7975.74 2371.7188,7975.1619 L2371.7188,7977.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2389.25" y="7976.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="90" x="2651" y="7953.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="2652" y="7965.3787">unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="7988.24" y2="7988.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2193" y="7994.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="7996.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2207" y="8002.4504">_val : UInt64</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8009.0447" y2="8009.0447"/><ellipse cx="2198" cy="8020.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8023.2551">VarHolderImpl(UInt64 val) : void</text><ellipse cx="2198" cy="8032.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2207" y="8036.0598">~VarHolderImpl() : void</text><ellipse cx="2198" cy="8045.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2207" y="8048.8645">type() const : const std::type_info &amp;</text><ellipse cx="2198" cy="8058.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2207" y="8061.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2198" cy="8071.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8074.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2198" cy="8084.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8087.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2198" cy="8096.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8100.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2198" cy="8109.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2207" y="8112.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2198" cy="8122.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8125.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2198" cy="8135.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8138.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2198" cy="8148.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8151.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2198" cy="8160.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2207" y="8164.1067">convert(long long &amp; val) const : void</text><ellipse cx="2198" cy="8173.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2207" y="8176.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2198" cy="8186.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2207" y="8189.7161">convert(bool &amp; val) const : void</text><ellipse cx="2198" cy="8199.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8202.5208">convert(float &amp; val) const : void</text><ellipse cx="2198" cy="8212.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2207" y="8215.3254">convert(double &amp; val) const : void</text><ellipse cx="2198" cy="8224.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8228.1301">convert(char &amp; val) const : void</text><ellipse cx="2198" cy="8237.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2207" y="8240.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2198" cy="8250.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2207" y="8253.7395">convert(DateTime &amp; dt) const : void</text><ellipse cx="2198" cy="8263.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2207" y="8266.5442">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2198" cy="8276.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2207" y="8279.3489">convert(Timestamp &amp; val) const : void</text><ellipse cx="2198" cy="8288.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2207" y="8292.1536">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2198" cy="8301.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2207" y="8304.9583">value() const : const UInt64 &amp;</text><ellipse cx="2198" cy="8314.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2207" y="8317.7629">isArray() const : bool</text><ellipse cx="2198" cy="8327.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8330.5676">isStruct() const : bool</text><ellipse cx="2198" cy="8340.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2207" y="8343.3723">isInteger() const : bool</text><ellipse cx="2198" cy="8352.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2207" y="8356.177">isSigned() const : bool</text><ellipse cx="2198" cy="8365.7713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2207" y="8368.9817">isNumeric() const : bool</text><ellipse cx="2198" cy="8378.5759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2207" y="8381.7864">isBoolean() const : bool</text><ellipse cx="2198" cy="8391.3806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8394.5911">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8401.1853"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8407.3958">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8413.99"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2207" y="8420.2004">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8426.7947"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2207" y="8433.0051">operator=(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt64&gt; &amp;</text><!--MD5=[ada13b8892848e1551fb92aa3c5167f5]
class C_0000599279109574326060--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="7476.24"/><ellipse cx="2399.25" cy="7492.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2402.2188,7497.8806 Q2401.6406,7498.1775 2401,7498.3181 Q2400.3594,7498.4744 2399.6563,7498.4744 Q2397.1563,7498.4744 2395.8281,7496.8338 Q2394.5156,7495.1775 2394.5156,7492.0525 Q2394.5156,7488.9275 2395.8281,7487.2713 Q2397.1563,7485.615 2399.6563,7485.615 Q2400.3594,7485.615 2401,7485.7713 Q2401.6563,7485.9275 2402.2188,7486.2244 L2402.2188,7488.9431 Q2401.5938,7488.365 2401,7488.0994 Q2400.4063,7487.8181 2399.7813,7487.8181 Q2398.4375,7487.8181 2397.75,7488.8963 Q2397.0625,7489.9588 2397.0625,7492.0525 Q2397.0625,7494.1463 2397.75,7495.2244 Q2398.4375,7496.2869 2399.7813,7496.2869 Q2400.4063,7496.2869 2401,7496.0213 Q2401.5938,7495.74 2402.2188,7495.1619 L2402.2188,7497.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.75" y="7496.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2701.5" y="7473.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2702.5" y="7485.3787">bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7508.24" y2="7508.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="7514.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7516.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="2217.5" y="7522.4504">_val : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7529.0447" y2="7529.0447"/><ellipse cx="2208.5" cy="7540.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2217.5" y="7543.2551">VarHolderImpl(bool val) : void</text><ellipse cx="2208.5" cy="7552.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="7556.0598">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="7565.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="7568.8645">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="7578.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="7581.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7591.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7594.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7604.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7607.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7616.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7620.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7629.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="7632.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7642.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7645.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7655.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7658.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7668.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7671.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7680.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="7684.1067">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7693.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="7696.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7706.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="7709.7161">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="7719.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7722.5208">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="7732.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="7735.3254">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="7744.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7748.1301">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="7757.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="7760.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="7770.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="7773.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="7783.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2217.5" y="7786.5442">value() const : const bool &amp;</text><ellipse cx="2208.5" cy="7796.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="7799.3489">isArray() const : bool</text><ellipse cx="2208.5" cy="7808.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7812.1536">isStruct() const : bool</text><ellipse cx="2208.5" cy="7821.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="7824.9583">isInteger() const : bool</text><ellipse cx="2208.5" cy="7834.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="7837.7629">isSigned() const : bool</text><ellipse cx="2208.5" cy="7847.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="7850.5676">isNumeric() const : bool</text><ellipse cx="2208.5" cy="7860.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="7863.3723">isBoolean() const : bool</text><ellipse cx="2208.5" cy="7872.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7876.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7882.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7888.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7895.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2217.5" y="7901.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;bool&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7908.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="2217.5" y="7914.5911">operator=(const Dynamic::VarHolderImpl&lt;bool&gt; &amp; ) : Dynamic::VarHolderImpl&lt;bool&gt; &amp;</text><!--MD5=[982864d46e735f5fc451b1a43e8b29c9]
class C_0000384619052225252533--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="6996.24"/><ellipse cx="2398.75" cy="7012.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2401.7188,7017.8806 Q2401.1406,7018.1775 2400.5,7018.3181 Q2399.8594,7018.4744 2399.1563,7018.4744 Q2396.6563,7018.4744 2395.3281,7016.8338 Q2394.0156,7015.1775 2394.0156,7012.0525 Q2394.0156,7008.9275 2395.3281,7007.2713 Q2396.6563,7005.615 2399.1563,7005.615 Q2399.8594,7005.615 2400.5,7005.7713 Q2401.1563,7005.9275 2401.7188,7006.2244 L2401.7188,7008.9431 Q2401.0938,7008.365 2400.5,7008.0994 Q2399.9063,7007.8181 2399.2813,7007.8181 Q2397.9375,7007.8181 2397.25,7008.8963 Q2396.5625,7009.9588 2396.5625,7012.0525 Q2396.5625,7014.1463 2397.25,7015.2244 Q2397.9375,7016.2869 2399.2813,7016.2869 Q2399.9063,7016.2869 2400.5,7016.0213 Q2401.0938,7015.74 2401.7188,7015.1619 L2401.7188,7017.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.25" y="7016.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2700.5" y="6993.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2701.5" y="7005.3787">float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7028.24" y2="7028.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="7034.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7036.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2217.5" y="7042.4504">_val : float</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7049.0447" y2="7049.0447"/><ellipse cx="2208.5" cy="7060.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2217.5" y="7063.2551">VarHolderImpl(float val) : void</text><ellipse cx="2208.5" cy="7072.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="7076.0598">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="7085.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="7088.8645">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="7098.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="7101.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7111.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7114.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7124.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7127.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7136.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7140.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7149.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="7152.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7162.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7165.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7175.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7178.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7188.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7191.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7200.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="7204.1067">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7213.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="7216.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7226.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="7229.7161">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="7239.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7242.5208">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="7252.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="7255.3254">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="7264.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7268.1301">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="7277.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="7280.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="7290.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="7293.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="7303.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2217.5" y="7306.5442">value() const : const float &amp;</text><ellipse cx="2208.5" cy="7316.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="7319.3489">isArray() const : bool</text><ellipse cx="2208.5" cy="7328.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7332.1536">isStruct() const : bool</text><ellipse cx="2208.5" cy="7341.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="7344.9583">isInteger() const : bool</text><ellipse cx="2208.5" cy="7354.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="7357.7629">isSigned() const : bool</text><ellipse cx="2208.5" cy="7367.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="7370.5676">isNumeric() const : bool</text><ellipse cx="2208.5" cy="7380.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="7383.3723">isBoolean() const : bool</text><ellipse cx="2208.5" cy="7392.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7396.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7402.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7408.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7415.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2217.5" y="7421.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;float&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7428.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2217.5" y="7434.5911">operator=(const Dynamic::VarHolderImpl&lt;float&gt; &amp; ) : Dynamic::VarHolderImpl&lt;float&gt; &amp;</text><!--MD5=[3b61c949f1c84cb7dc26cc961df146df]
class C_0002242257052791493112--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.5;" width="555" x="2185" y="6516.24"/><ellipse cx="2391.25" cy="6532.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2394.2188,6537.8806 Q2393.6406,6538.1775 2393,6538.3181 Q2392.3594,6538.4744 2391.6563,6538.4744 Q2389.1563,6538.4744 2387.8281,6536.8338 Q2386.5156,6535.1775 2386.5156,6532.0525 Q2386.5156,6528.9275 2387.8281,6527.2713 Q2389.1563,6525.615 2391.6563,6525.615 Q2392.3594,6525.615 2393,6525.7713 Q2393.6563,6525.9275 2394.2188,6526.2244 L2394.2188,6528.9431 Q2393.5938,6528.365 2393,6528.0994 Q2392.4063,6527.8181 2391.7813,6527.8181 Q2390.4375,6527.8181 2389.75,6528.8963 Q2389.0625,6529.9588 2389.0625,6532.0525 Q2389.0625,6534.1463 2389.75,6535.2244 Q2390.4375,6536.2869 2391.7813,6536.2869 Q2392.4063,6536.2869 2393,6536.0213 Q2393.5938,6535.74 2394.2188,6535.1619 L2394.2188,6537.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2411.75" y="6536.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="45" x="2698" y="6513.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="2699" y="6525.3787">double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2186" x2="2739" y1="6548.24" y2="6548.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2191" y="6554.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6556.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2205" y="6562.4504">_val : double</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2186" x2="2739" y1="6569.0447" y2="6569.0447"/><ellipse cx="2196" cy="6580.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2205" y="6583.2551">VarHolderImpl(double val) : void</text><ellipse cx="2196" cy="6592.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2205" y="6596.0598">~VarHolderImpl() : void</text><ellipse cx="2196" cy="6605.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2205" y="6608.8645">type() const : const std::type_info &amp;</text><ellipse cx="2196" cy="6618.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2205" y="6621.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2196" cy="6631.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2205" y="6634.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2196" cy="6644.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2205" y="6647.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2196" cy="6656.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2205" y="6660.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2196" cy="6669.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2205" y="6672.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2196" cy="6682.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2205" y="6685.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2196" cy="6695.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2205" y="6698.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2196" cy="6708.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2205" y="6711.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2196" cy="6720.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2205" y="6724.1067">convert(long long &amp; val) const : void</text><ellipse cx="2196" cy="6733.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2205" y="6736.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2196" cy="6746.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2205" y="6749.7161">convert(bool &amp; val) const : void</text><ellipse cx="2196" cy="6759.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2205" y="6762.5208">convert(float &amp; val) const : void</text><ellipse cx="2196" cy="6772.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2205" y="6775.3254">convert(double &amp; val) const : void</text><ellipse cx="2196" cy="6784.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2205" y="6788.1301">convert(char &amp; val) const : void</text><ellipse cx="2196" cy="6797.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2205" y="6800.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2196" cy="6810.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2205" y="6813.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2196" cy="6823.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2205" y="6826.5442">value() const : const double &amp;</text><ellipse cx="2196" cy="6836.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2205" y="6839.3489">isArray() const : bool</text><ellipse cx="2196" cy="6848.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2205" y="6852.1536">isStruct() const : bool</text><ellipse cx="2196" cy="6861.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2205" y="6864.9583">isInteger() const : bool</text><ellipse cx="2196" cy="6874.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2205" y="6877.7629">isSigned() const : bool</text><ellipse cx="2196" cy="6887.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2205" y="6890.5676">isNumeric() const : bool</text><ellipse cx="2196" cy="6900.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2205" y="6903.3723">isBoolean() const : bool</text><ellipse cx="2196" cy="6912.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2205" y="6916.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6922.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2205" y="6928.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6935.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="2205" y="6941.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;double&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6948.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="2205" y="6954.5911">operator=(const Dynamic::VarHolderImpl&lt;double&gt; &amp; ) : Dynamic::VarHolderImpl&lt;double&gt; &amp;</text><!--MD5=[987f6efd9f336e45ba4e394ec0708635]
class C_0001942181379759217898--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="6036.24"/><ellipse cx="2398.75" cy="6052.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2401.7188,6057.8806 Q2401.1406,6058.1775 2400.5,6058.3181 Q2399.8594,6058.4744 2399.1563,6058.4744 Q2396.6563,6058.4744 2395.3281,6056.8338 Q2394.0156,6055.1775 2394.0156,6052.0525 Q2394.0156,6048.9275 2395.3281,6047.2713 Q2396.6563,6045.615 2399.1563,6045.615 Q2399.8594,6045.615 2400.5,6045.7713 Q2401.1563,6045.9275 2401.7188,6046.2244 L2401.7188,6048.9431 Q2401.0938,6048.365 2400.5,6048.0994 Q2399.9063,6047.8181 2399.2813,6047.8181 Q2397.9375,6047.8181 2397.25,6048.8963 Q2396.5625,6049.9588 2396.5625,6052.0525 Q2396.5625,6054.1463 2397.25,6055.2244 Q2397.9375,6056.2869 2399.2813,6056.2869 Q2399.9063,6056.2869 2400.5,6056.0213 Q2401.0938,6055.74 2401.7188,6055.1619 L2401.7188,6057.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.25" y="6056.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2700.5" y="6033.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2701.5" y="6045.3787">char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="6068.24" y2="6068.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="6074.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6076.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2217.5" y="6082.4504">_val : char</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="6089.0447" y2="6089.0447"/><ellipse cx="2208.5" cy="6100.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2217.5" y="6103.2551">VarHolderImpl(char val) : void</text><ellipse cx="2208.5" cy="6112.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="6116.0598">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="6125.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="6128.8645">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="6138.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="6141.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="6151.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="6154.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="6164.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="6167.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="6176.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="6180.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="6189.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="6192.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="6202.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="6205.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="6215.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="6218.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="6228.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="6231.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="6240.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="6244.1067">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="6253.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="6256.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="6266.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="6269.7161">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="6279.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="6282.5208">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="6292.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="6295.3254">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="6304.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="6308.1301">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="6317.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="6320.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="6330.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="6333.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="6343.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2217.5" y="6346.5442">value() const : const char &amp;</text><ellipse cx="2208.5" cy="6356.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="6359.3489">isArray() const : bool</text><ellipse cx="2208.5" cy="6368.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="6372.1536">isStruct() const : bool</text><ellipse cx="2208.5" cy="6381.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="6384.9583">isInteger() const : bool</text><ellipse cx="2208.5" cy="6394.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="6397.7629">isSigned() const : bool</text><ellipse cx="2208.5" cy="6407.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="6410.5676">isNumeric() const : bool</text><ellipse cx="2208.5" cy="6420.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="6423.3723">isBoolean() const : bool</text><ellipse cx="2208.5" cy="6432.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="6436.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6442.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="6448.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6455.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2217.5" y="6461.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;char&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6468.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2217.5" y="6474.5911">operator=(const Dynamic::VarHolderImpl&lt;char&gt; &amp; ) : Dynamic::VarHolderImpl&lt;char&gt; &amp;</text><!--MD5=[8b5df5fe94a553e6538357e4a77a944c]
class C_0002291903337356664508--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="483.3594" id="C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.5;" width="597" x="2164" y="5518.24"/><ellipse cx="2381.75" cy="5534.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2384.7188,5539.8806 Q2384.1406,5540.1775 2383.5,5540.3181 Q2382.8594,5540.4744 2382.1563,5540.4744 Q2379.6563,5540.4744 2378.3281,5538.8338 Q2377.0156,5537.1775 2377.0156,5534.0525 Q2377.0156,5530.9275 2378.3281,5529.2713 Q2379.6563,5527.615 2382.1563,5527.615 Q2382.8594,5527.615 2383.5,5527.7713 Q2384.1563,5527.9275 2384.7188,5528.2244 L2384.7188,5530.9431 Q2384.0938,5530.365 2383.5,5530.0994 Q2382.9063,5529.8181 2382.2813,5529.8181 Q2380.9375,5529.8181 2380.25,5530.8963 Q2379.5625,5531.9588 2379.5625,5534.0525 Q2379.5625,5536.1463 2380.25,5537.2244 Q2380.9375,5538.2869 2382.2813,5538.2869 Q2382.9063,5538.2869 2383.5,5538.0213 Q2384.0938,5537.74 2384.7188,5537.1619 L2384.7188,5539.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2402.25" y="5538.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="2700" y="5515.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="2701" y="5527.3787">std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2165" x2="2760" y1="5550.24" y2="5550.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2170" y="5556.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5558.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2184" y="5564.4504">_val : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2165" x2="2760" y1="5571.0447" y2="5571.0447"/><ellipse cx="2175" cy="5582.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2184" y="5585.2551">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2175" cy="5594.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2184" y="5598.0598">VarHolderImpl(const std::string &amp; val) : void</text><ellipse cx="2175" cy="5607.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2184" y="5610.8645">~VarHolderImpl() : void</text><ellipse cx="2175" cy="5620.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2184" y="5623.6692">type() const : const std::type_info &amp;</text><ellipse cx="2175" cy="5633.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2184" y="5636.4739">convert(Int8 &amp; val) const : void</text><ellipse cx="2175" cy="5646.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2184" y="5649.2786">convert(Int16 &amp; val) const : void</text><ellipse cx="2175" cy="5658.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2184" y="5662.0833">convert(Int32 &amp; val) const : void</text><ellipse cx="2175" cy="5671.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2184" y="5674.8879">convert(Int64 &amp; val) const : void</text><ellipse cx="2175" cy="5684.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2184" y="5687.6926">convert(UInt8 &amp; val) const : void</text><ellipse cx="2175" cy="5697.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2184" y="5700.4973">convert(UInt16 &amp; val) const : void</text><ellipse cx="2175" cy="5710.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2184" y="5713.302">convert(UInt32 &amp; val) const : void</text><ellipse cx="2175" cy="5722.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2184" y="5726.1067">convert(UInt64 &amp; val) const : void</text><ellipse cx="2175" cy="5735.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2184" y="5738.9114">convert(long long &amp; val) const : void</text><ellipse cx="2175" cy="5748.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2184" y="5751.7161">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2175" cy="5761.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2184" y="5764.5208">convert(bool &amp; val) const : void</text><ellipse cx="2175" cy="5774.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2184" y="5777.3254">convert(float &amp; val) const : void</text><ellipse cx="2175" cy="5786.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2184" y="5790.1301">convert(double &amp; val) const : void</text><ellipse cx="2175" cy="5799.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2184" y="5802.9348">convert(char &amp; val) const : void</text><ellipse cx="2175" cy="5812.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2184" y="5815.7395">convert(std::string &amp; val) const : void</text><ellipse cx="2175" cy="5825.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2184" y="5828.5442">convert(UTF16String &amp; val) const : void</text><ellipse cx="2175" cy="5838.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2184" y="5841.3489">convert(DateTime &amp; val) const : void</text><ellipse cx="2175" cy="5850.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2184" y="5854.1536">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2175" cy="5863.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2184" y="5866.9583">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2175" cy="5876.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2184" y="5879.7629">convert(UUID &amp; uuid) const : void</text><ellipse cx="2175" cy="5889.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2184" y="5892.5676">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2175" cy="5902.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2184" y="5905.3723">value() const : const std::string &amp;</text><ellipse cx="2175" cy="5914.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2184" y="5918.177">isString() const : bool</text><ellipse cx="2175" cy="5927.7713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2184" y="5930.9817">size() const : std::size_t</text><ellipse cx="2175" cy="5940.5759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2184" y="5943.7864">operator[](std::string::size_type n) : char &amp;</text><ellipse cx="2175" cy="5953.3806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="2184" y="5956.5911">operator[](std::string::size_type n) const : const char &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5963.1853"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2184" y="5969.3958">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5975.99"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="2184" y="5982.2004">VarHolderImpl(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5988.7947"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="571" x="2184" y="5995.0051">operator=(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp; ) : Dynamic::VarHolderImpl&lt;std::string&gt; &amp;</text><!--MD5=[86ee270c6ca46a77592e60691a644b89]
class C_0001280441251658550342--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="483.3594" id="C_0001280441251658550342" style="stroke: #A80036; stroke-width: 1.5;" width="617" x="2154" y="5000.24"/><ellipse cx="2234.25" cy="5016.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2237.2188,5021.8806 Q2236.6406,5022.1775 2236,5022.3181 Q2235.3594,5022.4744 2234.6563,5022.4744 Q2232.1563,5022.4744 2230.8281,5020.8338 Q2229.5156,5019.1775 2229.5156,5016.0525 Q2229.5156,5012.9275 2230.8281,5011.2713 Q2232.1563,5009.615 2234.6563,5009.615 Q2235.3594,5009.615 2236,5009.7713 Q2236.6563,5009.9275 2237.2188,5010.2244 L2237.2188,5012.9431 Q2236.5938,5012.365 2236,5012.0994 Q2235.4063,5011.8181 2234.7813,5011.8181 Q2233.4375,5011.8181 2232.75,5012.8963 Q2232.0625,5013.9588 2232.0625,5016.0525 Q2232.0625,5018.1463 2232.75,5019.2244 Q2233.4375,5020.2869 2234.7813,5020.2869 Q2235.4063,5020.2869 2236,5020.0213 Q2236.5938,5019.74 2237.2188,5019.1619 L2237.2188,5021.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2254.75" y="5020.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="359" x="2415" y="4997.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="2416" y="5009.3787">std::basic_string&lt;unsigned short,Poco::UTF16CharTraits&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2155" x2="2770" y1="5032.24" y2="5032.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2160" y="5038.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5040.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2174" y="5046.4504">_val : UTF16String</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2155" x2="2770" y1="5053.0447" y2="5053.0447"/><ellipse cx="2165" cy="5064.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2174" y="5067.2551">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2165" cy="5076.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="2174" y="5080.0598">VarHolderImpl(const UTF16String &amp; val) : void</text><ellipse cx="2165" cy="5089.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2174" y="5092.8645">~VarHolderImpl() : void</text><ellipse cx="2165" cy="5102.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2174" y="5105.6692">type() const : const std::type_info &amp;</text><ellipse cx="2165" cy="5115.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2174" y="5118.4739">convert(Int8 &amp; val) const : void</text><ellipse cx="2165" cy="5128.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2174" y="5131.2786">convert(Int16 &amp; val) const : void</text><ellipse cx="2165" cy="5140.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2174" y="5144.0833">convert(Int32 &amp; val) const : void</text><ellipse cx="2165" cy="5153.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2174" y="5156.8879">convert(Int64 &amp; val) const : void</text><ellipse cx="2165" cy="5166.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2174" y="5169.6926">convert(UInt8 &amp; val) const : void</text><ellipse cx="2165" cy="5179.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2174" y="5182.4973">convert(UInt16 &amp; val) const : void</text><ellipse cx="2165" cy="5192.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2174" y="5195.302">convert(UInt32 &amp; val) const : void</text><ellipse cx="2165" cy="5204.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2174" y="5208.1067">convert(UInt64 &amp; val) const : void</text><ellipse cx="2165" cy="5217.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2174" y="5220.9114">convert(long long &amp; val) const : void</text><ellipse cx="2165" cy="5230.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2174" y="5233.7161">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2165" cy="5243.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2174" y="5246.5208">convert(bool &amp; val) const : void</text><ellipse cx="2165" cy="5256.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2174" y="5259.3254">convert(float &amp; val) const : void</text><ellipse cx="2165" cy="5268.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2174" y="5272.1301">convert(double &amp; val) const : void</text><ellipse cx="2165" cy="5281.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2174" y="5284.9348">convert(char &amp; val) const : void</text><ellipse cx="2165" cy="5294.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2174" y="5297.7395">convert(UTF16String &amp; val) const : void</text><ellipse cx="2165" cy="5307.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2174" y="5310.5442">convert(std::string &amp; val) const : void</text><ellipse cx="2165" cy="5320.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2174" y="5323.3489">convert(DateTime &amp; val) const : void</text><ellipse cx="2165" cy="5332.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2174" y="5336.1536">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2165" cy="5345.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2174" y="5348.9583">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2165" cy="5358.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2174" y="5361.7629">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2165" cy="5371.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2174" y="5374.5676">value() const : const UTF16String &amp;</text><ellipse cx="2165" cy="5384.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2174" y="5387.3723">isString() const : bool</text><ellipse cx="2165" cy="5396.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2174" y="5400.177">size() const : std::size_t</text><ellipse cx="2165" cy="5409.7713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2174" y="5412.9817">operator[](UTF16String::size_type n) : UTF16Char &amp;</text><ellipse cx="2165" cy="5422.5759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="2174" y="5425.7864">operator[](UTF16String::size_type n) const : const UTF16Char &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5432.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2174" y="5438.5911">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5445.1853"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="2174" y="5451.3958">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5457.99"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="2174" y="5464.2004">operator=(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5470.7947"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2174" y="5477.0051">toStdString() const : std::string</text><!--MD5=[e547b5e99773e1bba43a948d274a41c6]
class C_0001646173285346905617--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="2171" y="4520.24"/><ellipse cx="2383.75" cy="4536.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2386.7188,4541.8806 Q2386.1406,4542.1775 2385.5,4542.3181 Q2384.8594,4542.4744 2384.1563,4542.4744 Q2381.6563,4542.4744 2380.3281,4540.8338 Q2379.0156,4539.1775 2379.0156,4536.0525 Q2379.0156,4532.9275 2380.3281,4531.2713 Q2381.6563,4529.615 2384.1563,4529.615 Q2384.8594,4529.615 2385.5,4529.7713 Q2386.1563,4529.9275 2386.7188,4530.2244 L2386.7188,4532.9431 Q2386.0938,4532.365 2385.5,4532.0994 Q2384.9063,4531.8181 2384.2813,4531.8181 Q2382.9375,4531.8181 2382.25,4532.8963 Q2381.5625,4533.9588 2381.5625,4536.0525 Q2381.5625,4538.1463 2382.25,4539.2244 Q2382.9375,4540.2869 2384.2813,4540.2869 Q2384.9063,4540.2869 2385.5,4540.0213 Q2386.0938,4539.74 2386.7188,4539.1619 L2386.7188,4541.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2404.25" y="4540.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="60" x="2697" y="4517.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="2698" y="4529.3787">long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2172" x2="2753" y1="4552.24" y2="4552.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2177" y="4558.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4560.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2191" y="4566.4504">_val : long long</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2172" x2="2753" y1="4573.0447" y2="4573.0447"/><ellipse cx="2182" cy="4584.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2191" y="4587.2551">VarHolderImpl(long long val) : void</text><ellipse cx="2182" cy="4596.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2191" y="4600.0598">~VarHolderImpl() : void</text><ellipse cx="2182" cy="4609.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2191" y="4612.8645">type() const : const std::type_info &amp;</text><ellipse cx="2182" cy="4622.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2191" y="4625.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2182" cy="4635.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2191" y="4638.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2182" cy="4648.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2191" y="4651.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2182" cy="4660.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2191" y="4664.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2182" cy="4673.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2191" y="4676.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2182" cy="4686.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2191" y="4689.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2182" cy="4699.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2191" y="4702.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2182" cy="4712.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2191" y="4715.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2182" cy="4724.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2191" y="4728.1067">convert(long long &amp; val) const : void</text><ellipse cx="2182" cy="4737.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2191" y="4740.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2182" cy="4750.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2191" y="4753.7161">convert(bool &amp; val) const : void</text><ellipse cx="2182" cy="4763.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2191" y="4766.5208">convert(float &amp; val) const : void</text><ellipse cx="2182" cy="4776.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2191" y="4779.3254">convert(double &amp; val) const : void</text><ellipse cx="2182" cy="4788.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2191" y="4792.1301">convert(char &amp; val) const : void</text><ellipse cx="2182" cy="4801.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2191" y="4804.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2182" cy="4814.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2191" y="4817.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2182" cy="4827.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2191" y="4830.5442">value() const : const long long &amp;</text><ellipse cx="2182" cy="4840.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2191" y="4843.3489">isArray() const : bool</text><ellipse cx="2182" cy="4852.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2191" y="4856.1536">isStruct() const : bool</text><ellipse cx="2182" cy="4865.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2191" y="4868.9583">isInteger() const : bool</text><ellipse cx="2182" cy="4878.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2191" y="4881.7629">isSigned() const : bool</text><ellipse cx="2182" cy="4891.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2191" y="4894.5676">isNumeric() const : bool</text><ellipse cx="2182" cy="4904.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2191" y="4907.3723">isBoolean() const : bool</text><ellipse cx="2182" cy="4916.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2191" y="4920.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4926.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2191" y="4932.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4939.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="2191" y="4945.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;long long&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4952.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="2191" y="4958.5911">operator=(const Dynamic::VarHolderImpl&lt;long long&gt; &amp; ) : Dynamic::VarHolderImpl&lt;long long&gt; &amp;</text><!--MD5=[d32390979af13b4d5d37b0e60ea6c197]
class C_0001583654034047392858--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.5;" width="695" x="2115" y="4040.24"/><ellipse cx="2353.25" cy="4056.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2356.2188,4061.8806 Q2355.6406,4062.1775 2355,4062.3181 Q2354.3594,4062.4744 2353.6563,4062.4744 Q2351.1563,4062.4744 2349.8281,4060.8338 Q2348.5156,4059.1775 2348.5156,4056.0525 Q2348.5156,4052.9275 2349.8281,4051.2713 Q2351.1563,4049.615 2353.6563,4049.615 Q2354.3594,4049.615 2355,4049.7713 Q2355.6563,4049.9275 2356.2188,4050.2244 L2356.2188,4052.9431 Q2355.5938,4052.365 2355,4052.0994 Q2354.4063,4051.8181 2353.7813,4051.8181 Q2352.4375,4051.8181 2351.75,4052.8963 Q2351.0625,4053.9588 2351.0625,4056.0525 Q2351.0625,4058.1463 2351.75,4059.2244 Q2352.4375,4060.2869 2353.7813,4060.2869 Q2354.4063,4060.2869 2355,4060.0213 Q2355.5938,4059.74 2356.2188,4059.1619 L2356.2188,4061.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2373.75" y="4060.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="121" x="2692" y="4037.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="2693" y="4049.3787">unsigned long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2116" x2="2809" y1="4072.24" y2="4072.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2121" y="4078.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4080.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2135" y="4086.4504">_val : unsigned long long</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2116" x2="2809" y1="4093.0447" y2="4093.0447"/><ellipse cx="2126" cy="4104.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2135" y="4107.2551">VarHolderImpl(unsigned long long val) : void</text><ellipse cx="2126" cy="4116.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2135" y="4120.0598">~VarHolderImpl() : void</text><ellipse cx="2126" cy="4129.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2135" y="4132.8645">type() const : const std::type_info &amp;</text><ellipse cx="2126" cy="4142.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2135" y="4145.6692">convert(Int8 &amp; val) const : void</text><ellipse cx="2126" cy="4155.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135" y="4158.4739">convert(Int16 &amp; val) const : void</text><ellipse cx="2126" cy="4168.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135" y="4171.2786">convert(Int32 &amp; val) const : void</text><ellipse cx="2126" cy="4180.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135" y="4184.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2126" cy="4193.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2135" y="4196.8879">convert(UInt8 &amp; val) const : void</text><ellipse cx="2126" cy="4206.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2135" y="4209.6926">convert(UInt16 &amp; val) const : void</text><ellipse cx="2126" cy="4219.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2135" y="4222.4973">convert(UInt32 &amp; val) const : void</text><ellipse cx="2126" cy="4232.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2135" y="4235.302">convert(UInt64 &amp; val) const : void</text><ellipse cx="2126" cy="4244.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2135" y="4248.1067">convert(long long &amp; val) const : void</text><ellipse cx="2126" cy="4257.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2135" y="4260.9114">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2126" cy="4270.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2135" y="4273.7161">convert(bool &amp; val) const : void</text><ellipse cx="2126" cy="4283.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2135" y="4286.5208">convert(float &amp; val) const : void</text><ellipse cx="2126" cy="4296.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2135" y="4299.3254">convert(double &amp; val) const : void</text><ellipse cx="2126" cy="4308.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2135" y="4312.1301">convert(char &amp; val) const : void</text><ellipse cx="2126" cy="4321.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2135" y="4324.9348">convert(std::string &amp; val) const : void</text><ellipse cx="2126" cy="4334.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2135" y="4337.7395">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2126" cy="4347.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2135" y="4350.5442">value() const : const unsigned long long &amp;</text><ellipse cx="2126" cy="4360.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2135" y="4363.3489">isArray() const : bool</text><ellipse cx="2126" cy="4372.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2135" y="4376.1536">isStruct() const : bool</text><ellipse cx="2126" cy="4385.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2135" y="4388.9583">isInteger() const : bool</text><ellipse cx="2126" cy="4398.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2135" y="4401.7629">isSigned() const : bool</text><ellipse cx="2126" cy="4411.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2135" y="4414.5676">isNumeric() const : bool</text><ellipse cx="2126" cy="4424.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2135" y="4427.3723">isBoolean() const : bool</text><ellipse cx="2126" cy="4436.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2135" y="4440.177">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4446.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2135" y="4452.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4459.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="2135" y="4465.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4472.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="2135" y="4478.5911">operator=(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp; ) : Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp;</text><!--MD5=[8fd1ca9b81cacf5b2ec4a18419930b7a]
class C_0002133497947762084276--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="227.2656" id="C_0002133497947762084276" style="stroke: #A80036; stroke-width: 1.5;" width="1055" x="1935" y="3778.24"/><ellipse cx="2194.75" cy="3794.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2197.7188,3799.8806 Q2197.1406,3800.1775 2196.5,3800.3181 Q2195.8594,3800.4744 2195.1563,3800.4744 Q2192.6563,3800.4744 2191.3281,3798.8338 Q2190.0156,3797.1775 2190.0156,3794.0525 Q2190.0156,3790.9275 2191.3281,3789.2713 Q2192.6563,3787.615 2195.1563,3787.615 Q2195.8594,3787.615 2196.5,3787.7713 Q2197.1563,3787.9275 2197.7188,3788.2244 L2197.7188,3790.9431 Q2197.0938,3790.365 2196.5,3790.0994 Q2195.9063,3789.8181 2195.2813,3789.8181 Q2193.9375,3789.8181 2193.25,3790.8963 Q2192.5625,3791.9588 2192.5625,3794.0525 Q2192.5625,3796.1463 2193.25,3797.2244 Q2193.9375,3798.2869 2195.2813,3798.2869 Q2195.9063,3798.2869 2196.5,3798.0213 Q2197.0938,3797.74 2197.7188,3797.1619 L2197.7188,3799.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2215.25" y="3798.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="438" x="2555" y="3775.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="2556" y="3787.3787">std::vector&lt;type-parameter-0-0,std::allocator&lt;type-parameter-0-0&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3810.24" y2="3810.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1941" y="3816.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3818.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1955" y="3824.4504">_val : std::vector&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3831.0447" y2="3831.0447"/><ellipse cx="1946" cy="3842.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="1955" y="3845.2551">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::vector&lt;T&gt; &amp; val) : void</text><ellipse cx="1946" cy="3854.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="1955" y="3858.0598">~VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="1946" cy="3867.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1955" y="3870.8645">type() const : const std::type_info &amp;</text><ellipse cx="1946" cy="3880.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1955" y="3883.6692">convert(std::string &amp; val) const : void</text><ellipse cx="1946" cy="3893.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1955" y="3896.4739">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1946" cy="3906.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1955" y="3909.2786">value() const : const std::vector&lt;T&gt; &amp;</text><ellipse cx="1946" cy="3918.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1955" y="3922.0833">isVector() const : bool</text><ellipse cx="1946" cy="3931.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1955" y="3934.8879">size() const : std::size_t</text><ellipse cx="1946" cy="3944.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1955" y="3947.6926">operator[](typename std::vector&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="1946" cy="3957.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="1955" y="3960.4973">operator[](typename std::vector&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3967.0916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="1955" y="3973.302">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3979.8963"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1955" y="3986.1067">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3992.7009"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1029" x="1955" y="3998.9114">operator=(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[b7228e8e9d8bc56c1a6064169c71917c]
class C_0000249766987467623805--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="227.2656" id="C_0000249766987467623805" style="stroke: #A80036; stroke-width: 1.5;" width="1019" x="1953" y="3516.24"/><ellipse cx="2205.75" cy="3532.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2208.7188,3537.8806 Q2208.1406,3538.1775 2207.5,3538.3181 Q2206.8594,3538.4744 2206.1563,3538.4744 Q2203.6563,3538.4744 2202.3281,3536.8338 Q2201.0156,3535.1775 2201.0156,3532.0525 Q2201.0156,3528.9275 2202.3281,3527.2713 Q2203.6563,3525.615 2206.1563,3525.615 Q2206.8594,3525.615 2207.5,3525.7713 Q2208.1563,3525.9275 2208.7188,3526.2244 L2208.7188,3528.9431 Q2208.0938,3528.365 2207.5,3528.0994 Q2206.9063,3527.8181 2206.2813,3527.8181 Q2204.9375,3527.8181 2204.25,3528.8963 Q2203.5625,3529.9588 2203.5625,3532.0525 Q2203.5625,3534.1463 2204.25,3535.2244 Q2204.9375,3536.2869 2206.2813,3536.2869 Q2206.9063,3536.2869 2207.5,3536.0213 Q2208.0938,3535.74 2208.7188,3535.1619 L2208.7188,3537.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2226.25" y="3536.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="416" x="2559" y="3513.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="414" x="2560" y="3525.3787">std::list&lt;type-parameter-0-0,std::allocator&lt;type-parameter-0-0&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954" x2="2971" y1="3548.24" y2="3548.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1959" y="3554.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3556.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1973" y="3562.4504">_val : std::list&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954" x2="2971" y1="3569.0447" y2="3569.0447"/><ellipse cx="1964" cy="3580.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="616" x="1973" y="3583.2551">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::list&lt;T&gt; &amp; val) : void</text><ellipse cx="1964" cy="3592.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="1973" y="3596.0598">~VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="1964" cy="3605.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1973" y="3608.8645">type() const : const std::type_info &amp;</text><ellipse cx="1964" cy="3618.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1973" y="3621.6692">convert(std::string &amp; val) const : void</text><ellipse cx="1964" cy="3631.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1973" y="3634.4739">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1964" cy="3644.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1973" y="3647.2786">value() const : const std::list&lt;T&gt; &amp;</text><ellipse cx="1964" cy="3656.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="3660.0833">isList() const : bool</text><ellipse cx="1964" cy="3669.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1973" y="3672.8879">size() const : std::size_t</text><ellipse cx="1964" cy="3682.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="1973" y="3685.6926">operator[](typename std::list&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="1964" cy="3695.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="1973" y="3698.4973">operator[](typename std::list&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3705.0916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="1973" y="3711.302">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3717.8963"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="956" x="1973" y="3724.1067">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3730.7009"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="993" x="1973" y="3736.9114">operator=(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[6302338bbf789b1d80756567115132f1]
class C_0000781520838380739124--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="227.2656" id="C_0000781520838380739124" style="stroke: #A80036; stroke-width: 1.5;" width="1055" x="1935" y="3254.24"/><ellipse cx="2194.25" cy="3270.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2197.2188,3275.8806 Q2196.6406,3276.1775 2196,3276.3181 Q2195.3594,3276.4744 2194.6563,3276.4744 Q2192.1563,3276.4744 2190.8281,3274.8338 Q2189.5156,3273.1775 2189.5156,3270.0525 Q2189.5156,3266.9275 2190.8281,3265.2713 Q2192.1563,3263.615 2194.6563,3263.615 Q2195.3594,3263.615 2196,3263.7713 Q2196.6563,3263.9275 2197.2188,3264.2244 L2197.2188,3266.9431 Q2196.5938,3266.365 2196,3266.0994 Q2195.4063,3265.8181 2194.7813,3265.8181 Q2193.4375,3265.8181 2192.75,3266.8963 Q2192.0625,3267.9588 2192.0625,3270.0525 Q2192.0625,3272.1463 2192.75,3273.2244 Q2193.4375,3274.2869 2194.7813,3274.2869 Q2195.4063,3274.2869 2196,3274.0213 Q2196.5938,3273.74 2197.2188,3273.1619 L2197.2188,3275.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2214.75" y="3274.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="439" x="2554" y="3251.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="2555" y="3263.3787">std::deque&lt;type-parameter-0-0,std::allocator&lt;type-parameter-0-0&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3286.24" y2="3286.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1941" y="3292.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3294.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1955" y="3300.4504">_val : std::deque&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3307.0447" y2="3307.0447"/><ellipse cx="1946" cy="3318.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="1955" y="3321.2551">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::deque&lt;T&gt; &amp; val) : void</text><ellipse cx="1946" cy="3330.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="1955" y="3334.0598">~VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="1946" cy="3343.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1955" y="3346.8645">type() const : const std::type_info &amp;</text><ellipse cx="1946" cy="3356.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1955" y="3359.6692">convert(std::string &amp; val) const : void</text><ellipse cx="1946" cy="3369.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1955" y="3372.4739">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1946" cy="3382.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1955" y="3385.2786">value() const : const std::deque&lt;T&gt; &amp;</text><ellipse cx="1946" cy="3394.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1955" y="3398.0833">isDeque() const : bool</text><ellipse cx="1946" cy="3407.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1955" y="3410.8879">size() const : std::size_t</text><ellipse cx="1946" cy="3420.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1955" y="3423.6926">operator[](typename std::deque&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="1946" cy="3433.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="1955" y="3436.4973">operator[](typename std::deque&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3443.0916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="1955" y="3449.302">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3455.8963"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1955" y="3462.1067">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3468.7009"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1029" x="1955" y="3474.9114">operator=(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[d3f4e35f4bae44fdf6c46a1300227a72]
class C_0000699000175415913074--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="444.9453" id="C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.5;" width="587" x="2169" y="2774.24"/><ellipse cx="2364.25" cy="2790.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2367.2188,2795.8806 Q2366.6406,2796.1775 2366,2796.3181 Q2365.3594,2796.4744 2364.6563,2796.4744 Q2362.1563,2796.4744 2360.8281,2794.8338 Q2359.5156,2793.1775 2359.5156,2790.0525 Q2359.5156,2786.9275 2360.8281,2785.2713 Q2362.1563,2783.615 2364.6563,2783.615 Q2365.3594,2783.615 2366,2783.7713 Q2366.6563,2783.9275 2367.2188,2784.2244 L2367.2188,2786.9431 Q2366.5938,2786.365 2366,2786.0994 Q2365.4063,2785.8181 2364.7813,2785.8181 Q2363.4375,2785.8181 2362.75,2786.8963 Q2362.0625,2787.9588 2362.0625,2790.0525 Q2362.0625,2792.1463 2362.75,2793.2244 Q2363.4375,2794.2869 2364.7813,2794.2869 Q2365.4063,2794.2869 2366,2794.0213 Q2366.5938,2793.74 2367.2188,2793.1619 L2367.2188,2795.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2384.75" y="2794.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="99" x="2660" y="2771.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="2661" y="2783.3787">Poco::DateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2170" x2="2755" y1="2806.24" y2="2806.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2175" y="2812.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="2814.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2189" y="2820.4504">_val : DateTime</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2170" x2="2755" y1="2827.0447" y2="2827.0447"/><ellipse cx="2180" cy="2838.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2189" y="2841.2551">VarHolderImpl(const DateTime &amp; val) : void</text><ellipse cx="2180" cy="2850.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2189" y="2854.0598">~VarHolderImpl() : void</text><ellipse cx="2180" cy="2863.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2189" y="2866.8645">type() const : const std::type_info &amp;</text><ellipse cx="2180" cy="2876.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2189" y="2879.6692">convert(Int8 &amp; ) const : void</text><ellipse cx="2180" cy="2889.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2189" y="2892.4739">convert(Int16 &amp; ) const : void</text><ellipse cx="2180" cy="2902.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2189" y="2905.2786">convert(Int32 &amp; ) const : void</text><ellipse cx="2180" cy="2914.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2189" y="2918.0833">convert(Int64 &amp; val) const : void</text><ellipse cx="2180" cy="2927.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2189" y="2930.8879">convert(UInt64 &amp; val) const : void</text><ellipse cx="2180" cy="2940.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2189" y="2943.6926">convert(long long &amp; val) const : void</text><ellipse cx="2180" cy="2953.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2189" y="2956.4973">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2180" cy="2966.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2189" y="2969.302">convert(std::string &amp; val) const : void</text><ellipse cx="2180" cy="2978.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2189" y="2982.1067">convert(DateTime &amp; val) const : void</text><ellipse cx="2180" cy="2991.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2189" y="2994.9114">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2180" cy="3004.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2189" y="3007.7161">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2180" cy="3017.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2189" y="3020.5208">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2180" cy="3030.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2189" y="3033.3254">value() const : const DateTime &amp;</text><ellipse cx="2180" cy="3042.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2189" y="3046.1301">isArray() const : bool</text><ellipse cx="2180" cy="3055.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2189" y="3058.9348">isStruct() const : bool</text><ellipse cx="2180" cy="3068.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2189" y="3071.7395">isInteger() const : bool</text><ellipse cx="2180" cy="3081.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2189" y="3084.5442">isSigned() const : bool</text><ellipse cx="2180" cy="3094.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2189" y="3097.3489">isNumeric() const : bool</text><ellipse cx="2180" cy="3106.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2189" y="3110.1536">isBoolean() const : bool</text><ellipse cx="2180" cy="3119.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2189" y="3122.9583">isString() const : bool</text><ellipse cx="2180" cy="3132.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2189" y="3135.7629">isDate() const : bool</text><ellipse cx="2180" cy="3145.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2189" y="3148.5676">isTime() const : bool</text><ellipse cx="2180" cy="3158.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2189" y="3161.3723">isDateTime() const : bool</text><ellipse cx="2180" cy="3170.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2189" y="3174.177">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="3180.7713"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2189" y="3186.9817">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="3193.5759"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="2189" y="3199.7864">VarHolderImpl(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="3206.3806"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="2189" y="3212.5911">operator=(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp; ) : Dynamic::VarHolderImpl&lt;DateTime&gt; &amp;</text><!--MD5=[535f5640b87cab7cf4763634b5dabc9e]
class C_0001850771625416044357--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="406.5313" id="C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.5;" width="645" x="2140" y="2332.24"/><ellipse cx="2347.75" cy="2348.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2350.7188,2353.8806 Q2350.1406,2354.1775 2349.5,2354.3181 Q2348.8594,2354.4744 2348.1563,2354.4744 Q2345.6563,2354.4744 2344.3281,2352.8338 Q2343.0156,2351.1775 2343.0156,2348.0525 Q2343.0156,2344.9275 2344.3281,2343.2713 Q2345.6563,2341.615 2348.1563,2341.615 Q2348.8594,2341.615 2349.5,2341.7713 Q2350.1563,2341.9275 2350.7188,2342.2244 L2350.7188,2344.9431 Q2350.0938,2344.365 2349.5,2344.0994 Q2348.9063,2343.8181 2348.2813,2343.8181 Q2346.9375,2343.8181 2346.25,2344.8963 Q2345.5625,2345.9588 2345.5625,2348.0525 Q2345.5625,2350.1463 2346.25,2351.2244 Q2346.9375,2352.2869 2348.2813,2352.2869 Q2348.9063,2352.2869 2349.5,2352.0213 Q2350.0938,2351.74 2350.7188,2351.1619 L2350.7188,2353.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2368.25" y="2352.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="132" x="2656" y="2329.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="2657" y="2341.3787">Poco::LocalDateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2141" x2="2784" y1="2364.24" y2="2364.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2146" y="2370.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2372.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2160" y="2378.4504">_val : LocalDateTime</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2141" x2="2784" y1="2385.0447" y2="2385.0447"/><ellipse cx="2151" cy="2396.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="2160" y="2399.2551">VarHolderImpl(const LocalDateTime &amp; val) : void</text><ellipse cx="2151" cy="2408.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2160" y="2412.0598">~VarHolderImpl() : void</text><ellipse cx="2151" cy="2421.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2160" y="2424.8645">type() const : const std::type_info &amp;</text><ellipse cx="2151" cy="2434.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2160" y="2437.6692">convert(Int64 &amp; val) const : void</text><ellipse cx="2151" cy="2447.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2160" y="2450.4739">convert(UInt64 &amp; val) const : void</text><ellipse cx="2151" cy="2460.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2160" y="2463.2786">convert(long long &amp; val) const : void</text><ellipse cx="2151" cy="2472.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2160" y="2476.0833">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2151" cy="2485.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2160" y="2488.8879">convert(std::string &amp; val) const : void</text><ellipse cx="2151" cy="2498.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2160" y="2501.6926">convert(DateTime &amp; val) const : void</text><ellipse cx="2151" cy="2511.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2160" y="2514.4973">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2151" cy="2524.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2160" y="2527.302">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2151" cy="2536.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2160" y="2540.1067">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2151" cy="2549.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2160" y="2552.9114">value() const : const LocalDateTime &amp;</text><ellipse cx="2151" cy="2562.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2160" y="2565.7161">isArray() const : bool</text><ellipse cx="2151" cy="2575.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2160" y="2578.5208">isStruct() const : bool</text><ellipse cx="2151" cy="2588.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2160" y="2591.3254">isInteger() const : bool</text><ellipse cx="2151" cy="2600.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2160" y="2604.1301">isSigned() const : bool</text><ellipse cx="2151" cy="2613.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2160" y="2616.9348">isNumeric() const : bool</text><ellipse cx="2151" cy="2626.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2160" y="2629.7395">isBoolean() const : bool</text><ellipse cx="2151" cy="2639.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2160" y="2642.5442">isString() const : bool</text><ellipse cx="2151" cy="2652.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2160" y="2655.3489">isDate() const : bool</text><ellipse cx="2151" cy="2664.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2160" y="2668.1536">isTime() const : bool</text><ellipse cx="2151" cy="2677.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2160" y="2680.9583">isDateTime() const : bool</text><ellipse cx="2151" cy="2690.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2160" y="2693.7629">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2700.3572"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2160" y="2706.5676">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2713.1619"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="2160" y="2719.3723">VarHolderImpl(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2725.9666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="619" x="2160" y="2732.177">operator=(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp; ) : Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp;</text><!--MD5=[7d52b6bd4d6f4b5a6d942536c6534914]
class C_0001458511670125196521--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="406.5313" id="C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.5;" width="607" x="2159" y="1890.24"/><ellipse cx="2360.25" cy="1906.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2363.2188,1911.8806 Q2362.6406,1912.1775 2362,1912.3181 Q2361.3594,1912.4744 2360.6563,1912.4744 Q2358.1563,1912.4744 2356.8281,1910.8337 Q2355.5156,1909.1775 2355.5156,1906.0525 Q2355.5156,1902.9275 2356.8281,1901.2712 Q2358.1563,1899.615 2360.6563,1899.615 Q2361.3594,1899.615 2362,1899.7712 Q2362.6563,1899.9275 2363.2188,1900.2244 L2363.2188,1902.9431 Q2362.5938,1902.365 2362,1902.0994 Q2361.4063,1901.8181 2360.7813,1901.8181 Q2359.4375,1901.8181 2358.75,1902.8962 Q2358.0625,1903.9587 2358.0625,1906.0525 Q2358.0625,1908.1462 2358.75,1909.2244 Q2359.4375,1910.2869 2360.7813,1910.2869 Q2361.4063,1910.2869 2362,1910.0212 Q2362.5938,1909.74 2363.2188,1909.1619 L2363.2188,1911.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2380.75" y="1910.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="107" x="2662" y="1887.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="105" x="2663" y="1899.3787">Poco::Timestamp</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2160" x2="2765" y1="1922.24" y2="1922.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2165" y="1928.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="1930.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2179" y="1936.4504">_val : Timestamp</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2160" x2="2765" y1="1943.0447" y2="1943.0447"/><ellipse cx="2170" cy="1954.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2179" y="1957.2551">VarHolderImpl(const Timestamp &amp; val) : void</text><ellipse cx="2170" cy="1966.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2179" y="1970.0598">~VarHolderImpl() : void</text><ellipse cx="2170" cy="1979.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2179" y="1982.8645">type() const : const std::type_info &amp;</text><ellipse cx="2170" cy="1992.4587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2179" y="1995.6692">convert(Int64 &amp; val) const : void</text><ellipse cx="2170" cy="2005.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2179" y="2008.4739">convert(UInt64 &amp; val) const : void</text><ellipse cx="2170" cy="2018.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2179" y="2021.2786">convert(long long &amp; val) const : void</text><ellipse cx="2170" cy="2030.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2179" y="2034.0833">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2170" cy="2043.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2179" y="2046.8879">convert(std::string &amp; val) const : void</text><ellipse cx="2170" cy="2056.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2179" y="2059.6926">convert(DateTime &amp; val) const : void</text><ellipse cx="2170" cy="2069.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2179" y="2072.4973">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2170" cy="2082.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2179" y="2085.302">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2170" cy="2094.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2179" y="2098.1067">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2170" cy="2107.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2179" y="2110.9114">value() const : const Timestamp &amp;</text><ellipse cx="2170" cy="2120.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2179" y="2123.7161">isArray() const : bool</text><ellipse cx="2170" cy="2133.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2179" y="2136.5208">isStruct() const : bool</text><ellipse cx="2170" cy="2146.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2179" y="2149.3254">isInteger() const : bool</text><ellipse cx="2170" cy="2158.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2179" y="2162.1301">isSigned() const : bool</text><ellipse cx="2170" cy="2171.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2179" y="2174.9348">isNumeric() const : bool</text><ellipse cx="2170" cy="2184.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2179" y="2187.7395">isBoolean() const : bool</text><ellipse cx="2170" cy="2197.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2179" y="2200.5442">isString() const : bool</text><ellipse cx="2170" cy="2210.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2179" y="2213.3489">isDate() const : bool</text><ellipse cx="2170" cy="2222.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2179" y="2226.1536">isTime() const : bool</text><ellipse cx="2170" cy="2235.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2179" y="2238.9583">isDateTime() const : bool</text><ellipse cx="2170" cy="2248.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2179" y="2251.7629">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="2258.3572"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2179" y="2264.5676">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="2271.1619"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="2179" y="2277.3723">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="2283.9666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="581" x="2179" y="2290.177">operator=(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp;</text><!--MD5=[6aaca93ee2c23e99033b42cf172acb7a]
class C_0001286239480653274581--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="316.8984" id="C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="2196" y="1538.24"/><ellipse cx="2378.25" cy="1554.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2381.2188,1559.8806 Q2380.6406,1560.1775 2380,1560.3181 Q2379.3594,1560.4744 2378.6563,1560.4744 Q2376.1563,1560.4744 2374.8281,1558.8337 Q2373.5156,1557.1775 2373.5156,1554.0525 Q2373.5156,1550.9275 2374.8281,1549.2712 Q2376.1563,1547.615 2378.6563,1547.615 Q2379.3594,1547.615 2380,1547.7712 Q2380.6563,1547.9275 2381.2188,1548.2244 L2381.2188,1550.9431 Q2380.5938,1550.365 2380,1550.0994 Q2379.4063,1549.8181 2378.7813,1549.8181 Q2377.4375,1549.8181 2376.75,1550.8962 Q2376.0625,1551.9587 2376.0625,1554.0525 Q2376.0625,1556.1462 2376.75,1557.2244 Q2377.4375,1558.2869 2378.7813,1558.2869 Q2379.4063,1558.2869 2380,1558.0212 Q2380.5938,1557.74 2381.2188,1557.1619 L2381.2188,1559.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2398.75" y="1558.3943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="71" x="2661" y="1535.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="69" x="2662" y="1547.3787">Poco::UUID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2197" x2="2728" y1="1570.24" y2="1570.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2202" y="1576.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1578.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="2216" y="1584.4504">_val : UUID</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2197" x2="2728" y1="1591.0447" y2="1591.0447"/><ellipse cx="2207" cy="1602.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2216" y="1605.2551">VarHolderImpl(const UUID &amp; val) : void</text><ellipse cx="2207" cy="1614.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2216" y="1618.0598">~VarHolderImpl() : void</text><ellipse cx="2207" cy="1627.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2216" y="1630.8645">type() const : const std::type_info &amp;</text><ellipse cx="2207" cy="1640.4587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2216" y="1643.6692">convert(std::string &amp; val) const : void</text><ellipse cx="2207" cy="1653.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2216" y="1656.4739">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2207" cy="1666.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="2216" y="1669.2786">value() const : const UUID &amp;</text><ellipse cx="2207" cy="1678.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2216" y="1682.0833">isArray() const : bool</text><ellipse cx="2207" cy="1691.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2216" y="1694.8879">isStruct() const : bool</text><ellipse cx="2207" cy="1704.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2216" y="1707.6926">isInteger() const : bool</text><ellipse cx="2207" cy="1717.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2216" y="1720.4973">isSigned() const : bool</text><ellipse cx="2207" cy="1730.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2216" y="1733.302">isNumeric() const : bool</text><ellipse cx="2207" cy="1742.8962" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2216" y="1746.1067">isBoolean() const : bool</text><ellipse cx="2207" cy="1755.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2216" y="1758.9114">isString() const : bool</text><ellipse cx="2207" cy="1768.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2216" y="1771.7161">isDate() const : bool</text><ellipse cx="2207" cy="1781.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2216" y="1784.5208">isTime() const : bool</text><ellipse cx="2207" cy="1794.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2216" y="1797.3254">isDateTime() const : bool</text><ellipse cx="2207" cy="1806.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2216" y="1810.1301">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1816.7244"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2216" y="1822.9348">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1829.5291"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="2216" y="1835.7395">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1842.3337"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="2216" y="1848.5442">operator=(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UUID&gt; &amp;</text><!--MD5=[d0a79e34608f36a598cfde4fcdc22a46]
class C_0002237184725500898553--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L33" target="_top" title="VarIterator" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L33" xlink:show="new" xlink:title="VarIterator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="355.3125" id="C_0002237184725500898553" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="38" y="5582.24"/><ellipse cx="217.25" cy="5598.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M220.2188,5603.8806 Q219.6406,5604.1775 219,5604.3181 Q218.3594,5604.4744 217.6563,5604.4744 Q215.1563,5604.4744 213.8281,5602.8338 Q212.5156,5601.1775 212.5156,5598.0525 Q212.5156,5594.9275 213.8281,5593.2713 Q215.1563,5591.615 217.6563,5591.615 Q218.3594,5591.615 219,5591.7713 Q219.6563,5591.9275 220.2188,5592.2244 L220.2188,5594.9431 Q219.5938,5594.365 219,5594.0994 Q218.4063,5593.8181 217.7813,5593.8181 Q216.4375,5593.8181 215.75,5594.8963 Q215.0625,5595.9588 215.0625,5598.0525 Q215.0625,5600.1463 215.75,5601.2244 Q216.4375,5602.2869 217.7813,5602.2869 Q218.4063,5602.2869 219,5602.0213 Q219.5938,5601.74 220.2188,5601.1619 L220.2188,5603.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="237.75" y="5602.3943">VarIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="472" y1="5614.24" y2="5614.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="Sets the iterator position. Throws RangeException if position is out of range." xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="Sets the iterator position. Throws RangeException if position is out of range." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="5620.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5622.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="Sets the iterator position. Throws RangeException if position is out of range." xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="Sets the iterator position. Throws RangeException if position is out of range." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="58" y="5628.4504">_pVar : Dynamic::Var *</text></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="5633.0447"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5635.0447"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="58" y="5641.2551">_position : std::size_t</text></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="5645.8494"/><ellipse cx="49" cy="5650.8494" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="58" y="5654.0598">POSITION_END : const std::size_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="472" y1="5660.6541" y2="5660.6541"/><ellipse cx="49" cy="5671.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="58" y="5674.8645">VarIterator(Dynamic::Var * pVar, bool positionEnd) : void</text><ellipse cx="49" cy="5684.4588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="58" y="5687.6692">VarIterator(const Dynamic::VarIterator &amp; other) : void</text><ellipse cx="49" cy="5697.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="58" y="5700.4739">VarIterator(Dynamic::VarIterator &amp;&amp; other) : void</text><ellipse cx="49" cy="5710.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="58" y="5713.2786">~VarIterator() : void</text><ellipse cx="49" cy="5722.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="58" y="5726.0833">operator=(const Dynamic::VarIterator &amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="5735.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="58" y="5738.8879">operator=(Dynamic::VarIterator &amp;&amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="5748.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="58" y="5751.6926">operator==(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="5761.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="58" y="5764.4973">operator!=(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="5774.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58" y="5777.302">operator*() const : Dynamic::Var &amp;</text><ellipse cx="49" cy="5786.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="58" y="5790.1067">operator-&gt;() const : Dynamic::Var *</text><ellipse cx="49" cy="5799.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="58" y="5802.9114">operator++() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="5812.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="58" y="5815.7161">operator++(int ) const : Dynamic::VarIterator</text><ellipse cx="49" cy="5825.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="58" y="5828.5208">operator--() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="5838.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="58" y="5841.3254">operator--(int ) const : Dynamic::VarIterator</text><ellipse cx="49" cy="5850.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="58" y="5854.1301">operator+(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="5863.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="58" y="5866.9348">operator-(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="5876.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="58" y="5879.7395">swap(Dynamic::VarIterator &amp; other) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5886.3338"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="58" y="5892.5442">VarIterator() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5899.1384"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="58" y="5905.3489">increment() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5911.9431"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="58" y="5918.1536">decrement() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5924.7478"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="58" y="5930.9583">setPosition(std::size_t pos) const : void</text><!--MD5=[63dfd395c4dfc12b4b097b3e4deec016]
class C_0001827593751126946500--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L41" target="_top" title="Var" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L41" xlink:show="new" xlink:title="Var" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="1392.4922" id="C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="599" y="5063.74"/><ellipse cx="831.25" cy="5079.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M834.2188,5085.3806 Q833.6406,5085.6775 833,5085.8181 Q832.3594,5085.9744 831.6563,5085.9744 Q829.1563,5085.9744 827.8281,5084.3338 Q826.5156,5082.6775 826.5156,5079.5525 Q826.5156,5076.4275 827.8281,5074.7713 Q829.1563,5073.115 831.6563,5073.115 Q832.3594,5073.115 833,5073.2713 Q833.6563,5073.4275 834.2188,5073.7244 L834.2188,5076.4431 Q833.5938,5075.865 833,5075.5994 Q832.4063,5075.3181 831.7813,5075.3181 Q830.4375,5075.3181 829.75,5076.3963 Q829.0625,5077.4588 829.0625,5079.5525 Q829.0625,5081.6463 829.75,5082.7244 Q830.4375,5083.7869 831.7813,5083.7869 Q832.4063,5083.7869 833,5083.5213 Q833.5938,5083.24 834.2188,5082.6619 L834.2188,5085.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="851.75" y="5083.8943">Var</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="600" x2="1092" y1="5095.74" y2="5095.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="605" y="5101.74"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5103.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="619" y="5109.9504">_placeholder : Placeholder&lt;Dynamic::VarHolder&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="600" x2="1092" y1="5116.5447" y2="5116.5447"/><ellipse cx="610" cy="5127.5447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="619" y="5130.7551">Var() : void</text><ellipse cx="610" cy="5140.3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="619" y="5143.5598">Var(const char * pVal) : void</text><ellipse cx="610" cy="5153.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="619" y="5156.3645">Var(const Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="5165.9588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="619" y="5169.1692">~Var() : void</text><ellipse cx="610" cy="5178.7634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="619" y="5181.9739">swap(Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="5191.5681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="619" y="5194.7786">begin() const : Dynamic::Var::ConstIterator</text><ellipse cx="610" cy="5204.3728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="619" y="5207.5833">end() const : Dynamic::Var::ConstIterator</text><ellipse cx="610" cy="5217.1775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="619" y="5220.3879">begin() : Dynamic::Var::Iterator</text><ellipse cx="610" cy="5229.9822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="619" y="5233.1926">end() : Dynamic::Var::Iterator</text><ellipse cx="610" cy="5242.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="619" y="5245.9973">operator!() const : bool</text><ellipse cx="610" cy="5255.5916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="619" y="5258.802">operator=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5268.3963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="619" y="5271.6067">operator+(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5281.2009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="619" y="5284.4114">operator+(const char * other) const : const Dynamic::Var</text><ellipse cx="610" cy="5294.0056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="619" y="5297.2161">operator++() : Dynamic::Var &amp;</text><ellipse cx="610" cy="5306.8103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="619" y="5310.0208">operator++(int ) : const Dynamic::Var</text><ellipse cx="610" cy="5319.615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="619" y="5322.8254">operator--() : Dynamic::Var &amp;</text><ellipse cx="610" cy="5332.4197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="619" y="5335.6301">operator--(int ) : const Dynamic::Var</text><ellipse cx="610" cy="5345.2244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="619" y="5348.4348">operator+=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5358.0291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="619" y="5361.2395">operator+=(const char * other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5370.8338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="619" y="5374.0442">operator-(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5383.6384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="5386.8489">operator-=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5396.4431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="619" y="5399.6536">operator*(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5409.2478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="619" y="5412.4583">operator*=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5422.0525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="619" y="5425.2629">operator/(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5434.8572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="5438.0676">operator/=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5447.6619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="619" y="5450.8723">operator==(const char * other) const : bool</text><ellipse cx="610" cy="5460.4666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="5463.677">operator==(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5473.2713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="619" y="5476.4817">operator!=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5486.0759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="619" y="5489.2864">operator!=(const char * other) const : bool</text><ellipse cx="610" cy="5498.8806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="5502.0911">operator&lt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5511.6853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="5514.8958">operator&lt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5524.49" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="5527.7004">operator&gt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5537.2947" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="5540.5051">operator&gt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5550.0994" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="619" y="5553.3098">operator||(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5562.9041" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="619" y="5566.1145">operator&amp;&amp;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5575.7088" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="619" y="5578.9192">isArray() const : bool</text><ellipse cx="610" cy="5588.5134" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="619" y="5591.7239">isVector() const : bool</text><ellipse cx="610" cy="5601.3181" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="619" y="5604.5286">isList() const : bool</text><ellipse cx="610" cy="5614.1228" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="619" y="5617.3333">isDeque() const : bool</text><ellipse cx="610" cy="5626.9275" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="619" y="5630.1379">isStruct() const : bool</text><ellipse cx="610" cy="5639.7322" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="619" y="5642.9426">isOrdered() const : bool</text><ellipse cx="610" cy="5652.5369" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="619" y="5655.7473">at(std::size_t n) : char &amp;</text><ellipse cx="610" cy="5665.3416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="619" y="5668.552">operator[](const std::string &amp; name) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5678.1463" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="619" y="5681.3567">operator[](const std::string &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="610" cy="5690.9509" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="619" y="5694.1614">type() const : const std::type_info &amp;</text><ellipse cx="610" cy="5703.7556" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="619" y="5706.9661">empty() : void</text><ellipse cx="610" cy="5716.5603" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="619" y="5719.7708">clear() : void</text><ellipse cx="610" cy="5729.365" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="619" y="5732.5754">isEmpty() const : bool</text><ellipse cx="610" cy="5742.1697" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="619" y="5745.3801">isInteger() const : bool</text><ellipse cx="610" cy="5754.9744" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="619" y="5758.1848">isSigned() const : bool</text><ellipse cx="610" cy="5767.7791" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="619" y="5770.9895">isNumeric() const : bool</text><ellipse cx="610" cy="5780.5838" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="619" y="5783.7942">isBoolean() const : bool</text><ellipse cx="610" cy="5793.3884" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="619" y="5796.5989">isString() const : bool</text><ellipse cx="610" cy="5806.1931" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="619" y="5809.4036">isDate() const : bool</text><ellipse cx="610" cy="5818.9978" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="619" y="5822.2083">isTime() const : bool</text><ellipse cx="610" cy="5831.8025" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="619" y="5835.0129">isDateTime() const : bool</text><ellipse cx="610" cy="5844.6072" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="619" y="5847.8176">isUUID() const : bool</text><ellipse cx="610" cy="5857.4119" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="619" y="5860.6223">size() const : std::size_t</text><ellipse cx="610" cy="5870.2166" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="619" y="5873.427">toString() const : std::string</text><ellipse cx="610" cy="5883.0213" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="619" y="5886.2317">parse(const std::string &amp; val) : Dynamic::Var</text><ellipse cx="610" cy="5895.8259" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="270" x="619" y="5899.0364">toString(const Dynamic::Var &amp; var) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5905.6306"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="619" y="5911.8411">getAt(std::size_t n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5918.4353"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="619" y="5924.6458">getAt(const std::string &amp; n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5931.24"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="434" x="619" y="5937.4504">parse(const std::string &amp; val, std::string::size_type &amp; offset) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5944.0447"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="458" x="619" y="5950.2551">parseObject(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5956.8494"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="452" x="619" y="5963.0598">parseArray(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5969.6541"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="440" x="619" y="5975.8645">parseString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5982.4588"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="619" y="5988.6692">parseJSONString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5995.2634"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="425" x="619" y="6001.4739">skipWhiteSpace(const std::string &amp; val, std::string::size_type &amp; pos) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6008.0681"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="619" y="6014.2786">content() const : Dynamic::VarHolder *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6020.8728"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="619" y="6027.0833">destruct() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6033.6775"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="619" y="6039.8879">construct(const char * value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6046.4822"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="619" y="6052.6926">construct(const Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="6062.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="619" y="6065.4973">Var(const T &amp; val) : void</text><ellipse cx="610" cy="6075.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="619" y="6078.302">convert(T &amp; val) : void</text><ellipse cx="610" cy="6087.8963" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="619" y="6091.1067">convert() : T</text><ellipse cx="610" cy="6100.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="619" y="6103.9114">operator type-parameter-0-0() : T</text><ellipse cx="610" cy="6113.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="619" y="6116.7161">extract() : const T &amp;</text><ellipse cx="610" cy="6126.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="619" y="6129.5208">operator=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6139.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="619" y="6142.3254">operator+(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6151.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="619" y="6155.1301">operator+=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6164.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="619" y="6167.9348">operator-(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6177.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="6180.7395">operator-=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6190.3338" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="619" y="6193.5442">operator*(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6203.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="619" y="6206.3489">operator*=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6215.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="619" y="6219.1536">operator/(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6228.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="6231.9583">operator/=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6241.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="619" y="6244.7629">operator==(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6254.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="619" y="6257.5676">operator!=(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6267.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="619" y="6270.3723">operator&lt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6279.9666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="619" y="6283.177">operator&lt;=(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6292.7713" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="619" y="6295.9817">operator&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6305.5759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="619" y="6308.7864">operator&gt;=(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6318.3806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="619" y="6321.5911">operator||(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6331.1853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="619" y="6334.3958">operator&amp;&amp;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6343.99" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="619" y="6347.2004">operator[](const T &amp; n) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6356.7947" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="619" y="6360.0051">operator[](const T &amp; n) : const class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6366.5994"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="619" y="6372.8098">add(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6379.4041"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="619" y="6385.6145">subtract(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6392.2088"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="619" y="6398.4192">multiply(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6405.0134"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="619" y="6411.2239">divide(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6417.8181"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="619" y="6424.0286">holderImpl(const std::string errorMessage = "") : VarHolderImpl&lt;T&gt; *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6430.6228"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="6436.8333">structIndexOperator(T * pStr, N n) : class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6443.4275"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="619" y="6449.6379">construct(const ValueType &amp; value) : void</text><!--MD5=[0e1432047d47ec9a6b00dab152215e00]
class C_0000876644825045799418--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="406.5313" id="C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="5782" y="747.24"/><ellipse cx="5973.25" cy="763.24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5976.2188,768.8806 Q5975.6406,769.1775 5975,769.3181 Q5974.3594,769.4744 5973.6563,769.4744 Q5971.1563,769.4744 5969.8281,767.8337 Q5968.5156,766.1775 5968.5156,763.0525 Q5968.5156,759.9275 5969.8281,758.2712 Q5971.1563,756.615 5973.6563,756.615 Q5974.3594,756.615 5975,756.7712 Q5975.6563,756.9275 5976.2188,757.2244 L5976.2188,759.9431 Q5975.5938,759.365 5975,759.0994 Q5974.4063,758.8181 5973.7813,758.8181 Q5972.4375,758.8181 5971.75,759.8962 Q5971.0625,760.9587 5971.0625,763.0525 Q5971.0625,765.1462 5971.75,766.2244 Q5972.4375,767.2869 5973.7813,767.2869 Q5974.4063,767.2869 5975,767.0212 Q5975.5938,766.74 5976.2188,766.1619 L5976.2188,768.8806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="5993.75" y="767.3943">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="6216" y="744.24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="6217" y="756.3787">K,M,S</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5783" x2="6248" y1="779.24" y2="779.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5788" y="785.24"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5790" y="787.24"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="5802" y="793.4504">_data : Dynamic::Struct::Data</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5783" x2="6248" y1="800.0447" y2="800.0447"/><ellipse cx="5793" cy="811.0447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="5802" y="814.2551">Struct&lt;K, M, S&gt;() : void</text><ellipse cx="5793" cy="823.8494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="5802" y="827.0598">Struct&lt;K, M, S&gt;(const Dynamic::Struct::Data &amp; val) : void</text><ellipse cx="5793" cy="836.6541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5802" y="839.8645">~Struct&lt;K, M, S&gt;() : void</text><ellipse cx="5793" cy="849.4587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="5802" y="852.6692">operator[](const K &amp; name) : Dynamic::Var &amp;</text><ellipse cx="5793" cy="862.2634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="5802" y="865.4739">operator[](const K &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="5793" cy="875.0681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5802" y="878.2786">contains(const K &amp; name) const : bool</text><ellipse cx="5793" cy="887.8728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5802" y="891.0833">find(const K &amp; name) : Dynamic::Struct::Iterator</text><ellipse cx="5793" cy="900.6775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="5802" y="903.8879">find(const K &amp; name) const : Dynamic::Struct::ConstIterator</text><ellipse cx="5793" cy="913.4822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5802" y="916.6926">end() : Dynamic::Struct::Iterator</text><ellipse cx="5793" cy="926.2869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="5802" y="929.4973">end() const : Dynamic::Struct::ConstIterator</text><ellipse cx="5793" cy="939.0916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5802" y="942.302">begin() : Dynamic::Struct::Iterator</text><ellipse cx="5793" cy="951.8962" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="5802" y="955.1067">begin() const : Dynamic::Struct::ConstIterator</text><ellipse cx="5793" cy="964.7009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="5802" y="967.9114">insert(const Dynamic::Struct::ValueType &amp; aPair) : Dynamic::Struct::InsRetVal</text><ellipse cx="5793" cy="977.5056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="5802" y="980.7161">erase(const K &amp; key) : Dynamic::Struct::SizeType</text><ellipse cx="5793" cy="990.3103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="5802" y="993.5208">erase(Dynamic::Struct::Iterator &amp; it) : void</text><ellipse cx="5793" cy="1003.115" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5802" y="1006.3254">clear() : void</text><ellipse cx="5793" cy="1015.9197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="5802" y="1019.1301">swap(Struct&lt;K,M,S&gt; &amp; other) : void</text><ellipse cx="5793" cy="1028.7244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="5802" y="1031.9348">empty() const : bool</text><ellipse cx="5793" cy="1041.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5802" y="1044.7395">size() const : Dynamic::Struct::SizeType</text><ellipse cx="5793" cy="1054.3337" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5802" y="1057.5442">members() const : Dynamic::Struct::NameSet</text><ellipse cx="5793" cy="1067.1384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="5802" y="1070.3489">getVar(const K &amp; key) const : Dynamic::Var</text><ellipse cx="5793" cy="1079.9431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5802" y="1083.1536">toString() const : std::string</text><ellipse cx="5793" cy="1092.7478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5802" y="1095.9583">Struct&lt;K, M, S&gt;(const std::map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="5793" cy="1105.5525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5802" y="1108.7629">Struct&lt;K, M, S&gt;(const ordered_map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="5793" cy="1118.3572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="5802" y="1121.5676">insert(const K &amp; key, const T &amp; value) : Dynamic::Struct::InsRetVal</text><ellipse cx="5793" cy="1131.1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="5802" y="1134.3723">getVar(const K &amp; key, const DefT &amp; defaultValue) : class Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5790" y="1140.9666"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="5802" y="1147.177">assignMap(const T &amp; map) : void</text><!--MD5=[ef11c3035ad4f5c70052f8a09e74ea8b]
class C_0000527346272489458655--><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="48" id="C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.5;" width="532" x="4139" y="1018.74"/><ellipse cx="4154" cy="1034.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4156.9688,1040.3806 Q4156.3906,1040.6775 4155.75,1040.8181 Q4155.1094,1040.9744 4154.4063,1040.9744 Q4151.9063,1040.9744 4150.5781,1039.3337 Q4149.2656,1037.6775 4149.2656,1034.5525 Q4149.2656,1031.4275 4150.5781,1029.7712 Q4151.9063,1028.115 4154.4063,1028.115 Q4155.1094,1028.115 4155.75,1028.2712 Q4156.4063,1028.4275 4156.9688,1028.7244 L4156.9688,1031.4431 Q4156.3438,1030.865 4155.75,1030.5994 Q4155.1563,1030.3181 4154.5313,1030.3181 Q4153.1875,1030.3181 4152.5,1031.3962 Q4151.8125,1032.4587 4151.8125,1034.5525 Q4151.8125,1036.6462 4152.5,1037.7244 Q4153.1875,1038.7869 4154.5313,1038.7869 Q4155.1563,1038.7869 4155.75,1038.5212 Q4156.3438,1038.24 4156.9688,1037.6619 L4156.9688,1040.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="4168" y="1038.8943">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="460" x="4214" y="1015.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="458" x="4215" y="1027.8787">std::string,std::map&lt;std::string,Poco::Dynamic::Var&gt;,std::set&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4140" x2="4670" y1="1050.74" y2="1050.74"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4140" x2="4670" y1="1058.74" y2="1058.74"/><!--MD5=[72598a19f4bf6190ed89a0435cb0020e]
class C_0001079370368307575613--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L252" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L252" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="457.75" id="C_0001079370368307575613" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="2101" y="1044.74"/><ellipse cx="2303.25" cy="1060.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2306.2188,1066.3806 Q2305.6406,1066.6775 2305,1066.8181 Q2304.3594,1066.9744 2303.6563,1066.9744 Q2301.1563,1066.9744 2299.8281,1065.3337 Q2298.5156,1063.6775 2298.5156,1060.5525 Q2298.5156,1057.4275 2299.8281,1055.7712 Q2301.1563,1054.115 2303.6563,1054.115 Q2304.3594,1054.115 2305,1054.2712 Q2305.6563,1054.4275 2306.2188,1054.7244 L2306.2188,1057.4431 Q2305.5938,1056.865 2305,1056.5994 Q2304.4063,1056.3181 2303.7813,1056.3181 Q2302.4375,1056.3181 2301.75,1057.3962 Q2301.0625,1058.4587 2301.0625,1060.5525 Q2301.0625,1062.6462 2301.75,1063.7244 Q2302.4375,1064.7869 2303.7813,1064.7869 Q2304.4063,1064.7869 2305,1064.5212 Q2305.5938,1064.24 2306.2188,1063.6619 L2306.2188,1066.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2323.75" y="1064.8943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="221" x="2606" y="1041.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="219" x="2607" y="1053.8787">Poco::Dynamic::Struct&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2102" x2="2823" y1="1076.74" y2="1076.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2107" y="1082.74"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2109" y="1084.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2121" y="1090.9504">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2102" x2="2823" y1="1097.5447" y2="1097.5447"/><ellipse cx="2112" cy="1108.5447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="2121" y="1111.7551">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2112" cy="1121.3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2121" y="1124.5598">~VarHolderImpl() : void</text><ellipse cx="2112" cy="1134.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2121" y="1137.3645">type() const : const std::type_info &amp;</text><ellipse cx="2112" cy="1146.9587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2121" y="1150.1692">convert(Int8 &amp; ) const : void</text><ellipse cx="2112" cy="1159.7634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2121" y="1162.9739">convert(Int16 &amp; ) const : void</text><ellipse cx="2112" cy="1172.5681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2121" y="1175.7786">convert(Int32 &amp; ) const : void</text><ellipse cx="2112" cy="1185.3728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2121" y="1188.5833">convert(Int64 &amp; ) const : void</text><ellipse cx="2112" cy="1198.1775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2121" y="1201.3879">convert(UInt8 &amp; ) const : void</text><ellipse cx="2112" cy="1210.9822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2121" y="1214.1926">convert(UInt16 &amp; ) const : void</text><ellipse cx="2112" cy="1223.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2121" y="1226.9973">convert(UInt32 &amp; ) const : void</text><ellipse cx="2112" cy="1236.5916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2121" y="1239.802">convert(UInt64 &amp; ) const : void</text><ellipse cx="2112" cy="1249.3962" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2121" y="1252.6067">convert(bool &amp; ) const : void</text><ellipse cx="2112" cy="1262.2009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2121" y="1265.4114">convert(float &amp; ) const : void</text><ellipse cx="2112" cy="1275.0056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2121" y="1278.2161">convert(double &amp; ) const : void</text><ellipse cx="2112" cy="1287.8103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2121" y="1291.0208">convert(char &amp; ) const : void</text><ellipse cx="2112" cy="1300.615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2121" y="1303.8254">convert(std::string &amp; val) const : void</text><ellipse cx="2112" cy="1313.4197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2121" y="1316.6301">convert(DateTime &amp; ) const : void</text><ellipse cx="2112" cy="1326.2244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2121" y="1329.4348">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2112" cy="1339.0291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2121" y="1342.2395">convert(Timestamp &amp; ) const : void</text><ellipse cx="2112" cy="1351.8337" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2121" y="1355.0442">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2112" cy="1364.6384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2121" y="1367.8489">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp;</text><ellipse cx="2112" cy="1377.4431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2121" y="1380.6536">isArray() const : bool</text><ellipse cx="2112" cy="1390.2478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2121" y="1393.4583">isStruct() const : bool</text><ellipse cx="2112" cy="1403.0525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2121" y="1406.2629">isOrdered() const : bool</text><ellipse cx="2112" cy="1415.8572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2121" y="1419.0676">isInteger() const : bool</text><ellipse cx="2112" cy="1428.6619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2121" y="1431.8723">isSigned() const : bool</text><ellipse cx="2112" cy="1441.4666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2121" y="1444.677">isNumeric() const : bool</text><ellipse cx="2112" cy="1454.2712" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2121" y="1457.4817">isString() const : bool</text><ellipse cx="2112" cy="1467.0759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2121" y="1470.2864">size() const : std::size_t</text><ellipse cx="2112" cy="1479.8806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="2121" y="1483.0911">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2112" cy="1492.6853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="697" x="2121" y="1495.8958">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[3584b5df2d117e666a89b988d93d3878]
class C_0001212087958231445051--><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="48" id="C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.5;" width="1669" x="3570.5" y="833.74"/><ellipse cx="3585.5" cy="849.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3588.4688,855.3806 Q3587.8906,855.6775 3587.25,855.8181 Q3586.6094,855.9744 3585.9063,855.9744 Q3583.4063,855.9744 3582.0781,854.3337 Q3580.7656,852.6775 3580.7656,849.5525 Q3580.7656,846.4275 3582.0781,844.7712 Q3583.4063,843.115 3585.9063,843.115 Q3586.6094,843.115 3587.25,843.2712 Q3587.9063,843.4275 3588.4688,843.7244 L3588.4688,846.4431 Q3587.8438,845.865 3587.25,845.5994 Q3586.6563,845.3181 3586.0313,845.3181 Q3584.6875,845.3181 3584,846.3962 Q3583.3125,847.4587 3583.3125,849.5525 Q3583.3125,851.6462 3584,852.7244 Q3584.6875,853.7869 3586.0313,853.7869 Q3586.6563,853.7869 3587.25,853.5212 Q3587.8438,853.24 3588.4688,852.6619 L3588.4688,855.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3599.5" y="853.8943">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="1597" x="3645.5" y="830.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1595" x="3646.5" y="842.8787">Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,std::map&lt;Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,Poco::Dynamic::Var&gt;,std::set&lt;Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3571.5" x2="5238.5" y1="865.74" y2="865.74"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3571.5" x2="5238.5" y1="873.74" y2="873.74"/><!--MD5=[e6f1e19ef57a9dc41b27b14ecdca344e]
class C_0002033788483863182904--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L438" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L438" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="457.75" id="C_0002033788483863182904" style="stroke: #A80036; stroke-width: 1.5;" width="678" x="2123.5" y="551.74"/><ellipse cx="2326.25" cy="567.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2329.2188,573.3806 Q2328.6406,573.6775 2328,573.8181 Q2327.3594,573.9744 2326.6563,573.9744 Q2324.1563,573.9744 2322.8281,572.3337 Q2321.5156,570.6775 2321.5156,567.5525 Q2321.5156,564.4275 2322.8281,562.7712 Q2324.1563,561.115 2326.6563,561.115 Q2327.3594,561.115 2328,561.2712 Q2328.6563,561.4275 2329.2188,561.7244 L2329.2188,564.4431 Q2328.5938,563.865 2328,563.5994 Q2327.4063,563.3181 2326.7813,563.3181 Q2325.4375,563.3181 2324.75,564.3962 Q2324.0625,565.4587 2324.0625,567.5525 Q2324.0625,569.6462 2324.75,570.7244 Q2325.4375,571.7869 2326.7813,571.7869 Q2327.4063,571.7869 2328,571.5212 Q2328.5938,571.24 2329.2188,570.6619 L2329.2188,573.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2346.75" y="571.8943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="175" x="2629.5" y="548.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="173" x="2630.5" y="560.8787">Poco::Dynamic::Struct&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2124.5" x2="2800.5" y1="583.74" y2="583.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2129.5" y="589.74"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2131.5" y="591.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2143.5" y="597.9504">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2124.5" x2="2800.5" y1="604.5447" y2="604.5447"/><ellipse cx="2134.5" cy="615.5447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="534" x="2143.5" y="618.7551">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2134.5" cy="628.3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2143.5" y="631.5598">~VarHolderImpl() : void</text><ellipse cx="2134.5" cy="641.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2143.5" y="644.3645">type() const : const std::type_info &amp;</text><ellipse cx="2134.5" cy="653.9587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2143.5" y="657.1692">convert(Int8 &amp; ) const : void</text><ellipse cx="2134.5" cy="666.7634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2143.5" y="669.9739">convert(Int16 &amp; ) const : void</text><ellipse cx="2134.5" cy="679.5681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2143.5" y="682.7786">convert(Int32 &amp; ) const : void</text><ellipse cx="2134.5" cy="692.3728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2143.5" y="695.5833">convert(Int64 &amp; ) const : void</text><ellipse cx="2134.5" cy="705.1775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2143.5" y="708.3879">convert(UInt8 &amp; ) const : void</text><ellipse cx="2134.5" cy="717.9822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2143.5" y="721.1926">convert(UInt16 &amp; ) const : void</text><ellipse cx="2134.5" cy="730.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2143.5" y="733.9973">convert(UInt32 &amp; ) const : void</text><ellipse cx="2134.5" cy="743.5916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2143.5" y="746.802">convert(UInt64 &amp; ) const : void</text><ellipse cx="2134.5" cy="756.3962" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2143.5" y="759.6067">convert(bool &amp; ) const : void</text><ellipse cx="2134.5" cy="769.2009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2143.5" y="772.4114">convert(float &amp; ) const : void</text><ellipse cx="2134.5" cy="782.0056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2143.5" y="785.2161">convert(double &amp; ) const : void</text><ellipse cx="2134.5" cy="794.8103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2143.5" y="798.0208">convert(char &amp; ) const : void</text><ellipse cx="2134.5" cy="807.615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2143.5" y="810.8254">convert(std::string &amp; val) const : void</text><ellipse cx="2134.5" cy="820.4197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2143.5" y="823.6301">convert(DateTime &amp; ) const : void</text><ellipse cx="2134.5" cy="833.2244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2143.5" y="836.4348">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2134.5" cy="846.0291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2143.5" y="849.2395">convert(Timestamp &amp; ) const : void</text><ellipse cx="2134.5" cy="858.8337" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2143.5" y="862.0442">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2134.5" cy="871.6384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="2143.5" y="874.8489">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp;</text><ellipse cx="2134.5" cy="884.4431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2143.5" y="887.6536">isArray() const : bool</text><ellipse cx="2134.5" cy="897.2478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2143.5" y="900.4583">isStruct() const : bool</text><ellipse cx="2134.5" cy="910.0525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2143.5" y="913.2629">isOrdered() const : bool</text><ellipse cx="2134.5" cy="922.8572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2143.5" y="926.0676">isInteger() const : bool</text><ellipse cx="2134.5" cy="935.6619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2143.5" y="938.8723">isSigned() const : bool</text><ellipse cx="2134.5" cy="948.4666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2143.5" y="951.677">isNumeric() const : bool</text><ellipse cx="2134.5" cy="961.2712" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2143.5" y="964.4817">isString() const : bool</text><ellipse cx="2134.5" cy="974.0759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2143.5" y="977.2864">size() const : std::size_t</text><ellipse cx="2134.5" cy="986.8806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="2143.5" y="990.0911">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2134.5" cy="999.6853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2143.5" y="1002.8958">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[e7e8c3742ed89c5d66f3705a30595898]
class C_0000922731127244749220--><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="48" id="C_0000922731127244749220" style="stroke: #A80036; stroke-width: 1.5;" width="2307" x="3251.5" y="5679.74"/><ellipse cx="3266.5" cy="5695.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3269.4688,5701.3806 Q3268.8906,5701.6775 3268.25,5701.8181 Q3267.6094,5701.9744 3266.9063,5701.9744 Q3264.4063,5701.9744 3263.0781,5700.3338 Q3261.7656,5698.6775 3261.7656,5695.5525 Q3261.7656,5692.4275 3263.0781,5690.7713 Q3264.4063,5689.115 3266.9063,5689.115 Q3267.6094,5689.115 3268.25,5689.2713 Q3268.9063,5689.4275 3269.4688,5689.7244 L3269.4688,5692.4431 Q3268.8438,5691.865 3268.25,5691.5994 Q3267.6563,5691.3181 3267.0313,5691.3181 Q3265.6875,5691.3181 3265,5692.3963 Q3264.3125,5693.4588 3264.3125,5695.5525 Q3264.3125,5697.6463 3265,5698.7244 Q3265.6875,5699.7869 3267.0313,5699.7869 Q3267.6563,5699.7869 3268.25,5699.5213 Q3268.8438,5699.24 3269.4688,5698.6619 L3269.4688,5701.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3280.5" y="5699.8943">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="2235" x="3326.5" y="5676.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2233" x="3327.5" y="5688.8787">std::string,Poco::OrderedMap&lt;std::string,Poco::Dynamic::Var,std::hash&lt;std::string&gt;,std::equal_to&lt;std::string&gt;,std::allocator&lt;std::pair&lt;std::string,Poco::Dynamic::Var&gt;&gt;,std::deque&lt;std::pair&lt;std::string,Poco::Dynamic::Var&gt;&gt;&gt;,Poco::OrderedSet&lt;std::string,std::hash&lt;std::string&gt;,std::equal_to&lt;std::string&gt;,std::allocator&lt;std::string&gt;,std::deque&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3252.5" x2="5557.5" y1="5711.74" y2="5711.74"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3252.5" x2="5557.5" y1="5719.74" y2="5719.74"/><!--MD5=[59b47b7e2684e0ef765a3962a8c8f784]
class C_0001894636435809858910--><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="48" id="C_0001894636435809858910" style="stroke: #A80036; stroke-width: 1.5;" width="2632" x="3089" y="494.74"/><ellipse cx="3104" cy="510.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3106.9688,516.3806 Q3106.3906,516.6775 3105.75,516.8181 Q3105.1094,516.9744 3104.4063,516.9744 Q3101.9063,516.9744 3100.5781,515.3337 Q3099.2656,513.6775 3099.2656,510.5525 Q3099.2656,507.4275 3100.5781,505.7712 Q3101.9063,504.115 3104.4063,504.115 Q3105.1094,504.115 3105.75,504.2712 Q3106.4063,504.4275 3106.9688,504.7244 L3106.9688,507.4431 Q3106.3438,506.865 3105.75,506.5994 Q3105.1563,506.3181 3104.5313,506.3181 Q3103.1875,506.3181 3102.5,507.3962 Q3101.8125,508.4587 3101.8125,510.5525 Q3101.8125,512.6462 3102.5,513.7244 Q3103.1875,514.7869 3104.5313,514.7869 Q3105.1563,514.7869 3105.75,514.5212 Q3106.3438,514.24 3106.9688,513.6619 L3106.9688,516.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3118" y="514.8943">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="2560" x="3164" y="491.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2558" x="3165" y="503.8787">Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Poco::Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType,Poco::OrderedMap&lt;int,Poco::Dynamic::Var,std::hash&lt;int&gt;,std::equal_to&lt;int&gt;,std::allocator&lt;std::pair&lt;int,Poco::Dynamic::Var&gt;&gt;,std::deque&lt;std::pair&lt;int,Poco::Dynamic::Var&gt;&gt;&gt;,Poco::OrderedSet&lt;int,std::hash&lt;int&gt;,std::equal_to&lt;int&gt;,std::allocator&lt;int&gt;,std::deque&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3090" x2="5720" y1="526.74" y2="526.74"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3090" x2="5720" y1="534.74" y2="534.74"/><!--MD5=[905a42f704710888f9b2f878cc669d6b]
class C_0002153171854526901050--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L810" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L810" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1910cjtffu8ct)" height="457.75" id="C_0002153171854526901050" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="1953.5" y="58.74"/><ellipse cx="2191.75" cy="74.74" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2194.7188,80.3806 Q2194.1406,80.6775 2193.5,80.8181 Q2192.8594,80.9744 2192.1563,80.9744 Q2189.6563,80.9744 2188.3281,79.3337 Q2187.0156,77.6775 2187.0156,74.5525 Q2187.0156,71.4275 2188.3281,69.7712 Q2189.6563,68.115 2192.1563,68.115 Q2192.8594,68.115 2193.5,68.2712 Q2194.1563,68.4275 2194.7188,68.7244 L2194.7188,71.4431 Q2194.0938,70.865 2193.5,70.5994 Q2192.9063,70.3181 2192.2813,70.3181 Q2190.9375,70.3181 2190.25,71.3962 Q2189.5625,72.4587 2189.5625,74.5525 Q2189.5625,76.6462 2190.25,77.7244 Q2190.9375,78.7869 2192.2813,78.7869 Q2192.9063,78.7869 2193.5,78.5212 Q2194.0938,78.24 2194.7188,77.6619 L2194.7188,80.3806 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2212.25" y="78.8943">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="444" x="2530.5" y="55.74"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="442" x="2531.5" y="67.8787">Poco::Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Poco::Dynamic::Var&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954.5" x2="2970.5" y1="90.74" y2="90.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1959.5" y="96.74"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961.5" y="98.74"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="716" x="1973.5" y="104.9504">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954.5" x2="2970.5" y1="111.5447" y2="111.5447"/><ellipse cx="1964.5" cy="122.5447" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="874" x="1973.5" y="125.7551">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="1964.5" cy="135.3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1973.5" y="138.5598">~VarHolderImpl() : void</text><ellipse cx="1964.5" cy="148.1541" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1973.5" y="151.3645">type() const : const std::type_info &amp;</text><ellipse cx="1964.5" cy="160.9587" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1973.5" y="164.1692">convert(Int8 &amp; ) const : void</text><ellipse cx="1964.5" cy="173.7634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1973.5" y="176.9739">convert(Int16 &amp; ) const : void</text><ellipse cx="1964.5" cy="186.5681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1973.5" y="189.7786">convert(Int32 &amp; ) const : void</text><ellipse cx="1964.5" cy="199.3728" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1973.5" y="202.5833">convert(Int64 &amp; ) const : void</text><ellipse cx="1964.5" cy="212.1775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1973.5" y="215.3879">convert(UInt8 &amp; ) const : void</text><ellipse cx="1964.5" cy="224.9822" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1973.5" y="228.1926">convert(UInt16 &amp; ) const : void</text><ellipse cx="1964.5" cy="237.7869" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1973.5" y="240.9973">convert(UInt32 &amp; ) const : void</text><ellipse cx="1964.5" cy="250.5916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1973.5" y="253.802">convert(UInt64 &amp; ) const : void</text><ellipse cx="1964.5" cy="263.3962" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1973.5" y="266.6067">convert(bool &amp; ) const : void</text><ellipse cx="1964.5" cy="276.2009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1973.5" y="279.4114">convert(float &amp; ) const : void</text><ellipse cx="1964.5" cy="289.0056" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1973.5" y="292.2161">convert(double &amp; ) const : void</text><ellipse cx="1964.5" cy="301.8103" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1973.5" y="305.0208">convert(char &amp; ) const : void</text><ellipse cx="1964.5" cy="314.615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1973.5" y="317.8254">convert(std::string &amp; val) const : void</text><ellipse cx="1964.5" cy="327.4197" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1973.5" y="330.6301">convert(DateTime &amp; ) const : void</text><ellipse cx="1964.5" cy="340.2244" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1973.5" y="343.4348">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="1964.5" cy="353.0291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1973.5" y="356.2395">convert(Timestamp &amp; ) const : void</text><ellipse cx="1964.5" cy="365.8337" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1973.5" y="369.0442">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1964.5" cy="378.6384" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="816" x="1973.5" y="381.8489">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp;</text><ellipse cx="1964.5" cy="391.4431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1973.5" y="394.6536">isArray() const : bool</text><ellipse cx="1964.5" cy="404.2478" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1973.5" y="407.4583">isStruct() const : bool</text><ellipse cx="1964.5" cy="417.0525" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1973.5" y="420.2629">isOrdered() const : bool</text><ellipse cx="1964.5" cy="429.8572" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1973.5" y="433.0676">isInteger() const : bool</text><ellipse cx="1964.5" cy="442.6619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1973.5" y="445.8723">isSigned() const : bool</text><ellipse cx="1964.5" cy="455.4666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1973.5" y="458.677">isNumeric() const : bool</text><ellipse cx="1964.5" cy="468.2712" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1973.5" y="471.4817">isString() const : bool</text><ellipse cx="1964.5" cy="481.0759" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1973.5" y="484.2864">size() const : std::size_t</text><ellipse cx="1964.5" cy="493.8806" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="922" x="1973.5" y="497.0911">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="1964.5" cy="506.6853" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1973.5" y="509.8958">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[1813d3e55208b95598efe5b058f25358]
reverse link C_0000820091630223006238 to C_0001112867090784569162--><path d="M1570.61,6124.06 C1602.77,7410.15 1724.86,11671.04 1935,11868.74 C2020.38,11949.07 2902.02,11946.2 2990,11868.74 C3171.6,11708.87 3043,11570.16 3059,11328.74 C3061.6,11289.47 3062.16,5690.53 3089,5661.74 C3351.9,5379.81 3837.82,5425.91 4139.68,5490.51 " fill="none" id="C_0000820091630223006238&lt;-C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1563.61,6124.12,1570.11,6103.95,1577.61,6123.77,1563.61,6124.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b1676534adbb49052c1fb5187823a2e7]
link C_0002149165824584484566 to C_0001112867090784569162--><path d="M2727.51,11556.22 C2824.75,11518.87 2926.53,11461.54 2990,11374.74 C3128.92,11184.78 3042.95,11084.53 3059,10849.74 C3061.46,10813.8 3064.42,5688.09 3089,5661.74 C3346.31,5385.93 3817.1,5424.13 4120,5486.4 " fill="none" id="C_0002149165824584484566-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.56,5479.57,4139.7,5490.53,4118.69,5493.27,4121.56,5479.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6bdc8c9895b8e16795c15260689a53af]
reverse link C_0000820091630223006238 to C_0002149165824584484566--><path d="M1564.97,6124.1 C1577.46,7299.92 1639.82,10942.57 1935,11374.74 C1996.22,11464.37 2098.86,11522.28 2197.35,11559.3 " fill="none" id="C_0000820091630223006238&lt;-C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1557.97,6124.06,1564.76,6103.99,1571.97,6123.92,1557.97,6124.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce861a412352c4848640aa13ce250abf]
link C_0000198808093629002393 to C_0001112867090784569162--><path d="M2730.03,11071.72 C2826.4,11035.63 2926.91,10979.9 2990,10894.74 C3128.52,10707.77 3042.89,10607.88 3059,10375.74 C3061.27,10343.08 3066.66,5685.67 3089,5661.74 C3346.39,5386.01 3817.15,5424.18 4120.03,5486.42 " fill="none" id="C_0000198808093629002393-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.59,5479.6,4139.73,5490.56,4118.72,5493.3,4121.59,5479.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[32fffe82ef1ff3e5d4ec3ab4204d9ea8]
reverse link C_0000820091630223006238 to C_0000198808093629002393--><path d="M1567.22,6124.15 C1586.01,7231.54 1664.13,10505.38 1935,10894.74 C1996.02,10982.46 2097.24,11038.72 2194.71,11074.52 " fill="none" id="C_0000820091630223006238&lt;-C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1560.22,6124.11,1566.88,6103.99,1574.22,6123.87,1560.22,6124.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1c5c7610e8f865c2dc4167ff6cd581c]
link C_0000976768452323437983 to C_0001112867090784569162--><path d="M2730.15,10592.19 C2826.69,10556.15 2927.28,10500.33 2990,10414.74 C3139.27,10211.05 3042.74,10102.75 3059,9850.74 C3062.75,9792.68 3049.28,5704.26 3089,5661.74 C3346.5,5386.11 3817.23,5424.26 4120.07,5486.46 " fill="none" id="C_0000976768452323437983-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.63,5479.64,4139.77,5490.59,4118.76,5493.34,4121.63,5479.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a23ffed8306e2f84c3073ac11c9de323]
reverse link C_0000820091630223006238 to C_0000976768452323437983--><path d="M1570.17,6124.52 C1596.28,7160.18 1690.76,10066.42 1935,10414.74 C1996.28,10502.13 2097.38,10558.32 2194.7,10594.16 " fill="none" id="C_0000820091630223006238&lt;-C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1563.17,6124.32,1569.66,6104.15,1577.16,6123.97,1563.17,6124.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf09b5ff695bcf5acdf9fe71fab14e0c]
link C_0001804431617899042426 to C_0001112867090784569162--><path d="M2730.18,10083.15 C2826.72,10043.56 2927.3,9984.19 2990,9896.74 C3127.39,9705.12 3042.68,9605.96 3059,9370.74 C3062.57,9319.35 3053.81,5699.37 3089,5661.74 C3346.63,5386.23 3817.32,5424.34 4120.12,5486.51 " fill="none" id="C_0001804431617899042426-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.68,5479.68,4139.82,5490.64,4118.8,5493.39,4121.68,5479.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a049817c63d933cddd056e43c020ea39]
reverse link C_0000820091630223006238 to C_0001804431617899042426--><path d="M1574.6,6123.99 C1610.36,7076.54 1723.84,9589.26 1935,9896.74 C1996.27,9985.96 2097.38,10045.74 2194.7,10085.14 " fill="none" id="C_0000820091630223006238&lt;-C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1567.6,6124.1,1573.84,6103.85,1581.59,6123.58,1567.6,6124.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ada95bdef8ba6058ff0ffd2c4f1b6e8]
link C_0001832009513687525374 to C_0001112867090784569162--><path d="M2731.13,9593.38 C2827.19,9557.29 2927.2,9501.64 2990,9416.74 C3129.96,9227.54 3042.54,9126.51 3059,8891.74 C3062.14,8846.99 3058.34,5694.49 3089,5661.74 C3346.8,5386.38 3817.44,5424.45 4120.18,5486.57 " fill="none" id="C_0001832009513687525374-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.73,5479.74,4139.87,5490.69,4118.86,5493.44,4121.73,5479.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[484d0d91554dbc242a223067b026dfc6]
reverse link C_0000820091630223006238 to C_0001832009513687525374--><path d="M1578.72,6124.17 C1621.61,6996.68 1745.68,9152.88 1935,9416.74 C1996.86,9502.95 2097.3,9558.88 2193.96,9594.84 " fill="none" id="C_0000820091630223006238&lt;-C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1571.72,6124.44,1577.73,6104.12,1585.7,6123.75,1571.72,6124.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5febac11223087f60c8ceb52a26a3b2]
link C_0000572186414558919480 to C_0001112867090784569162--><path d="M2738.26,9110.59 C2832.09,9074.43 2928.7,9019.48 2990,8936.74 C3128.52,8749.77 3042.37,8649.84 3059,8417.74 C3061.74,8379.56 3062.82,5689.67 3089,5661.74 C3347.02,5386.59 3817.6,5424.6 4120.26,5486.65 " fill="none" id="C_0000572186414558919480-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.81,5479.82,4139.95,5490.77,4118.94,5493.52,4121.81,5479.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[691a55eeeadeb89a9d3fc7ffb09e60fc]
reverse link C_0000820091630223006238 to C_0000572186414558919480--><path d="M1584.71,6124.09 C1636.57,6910.24 1771.9,8713.04 1935,8936.74 C1995.81,9020.15 2092.62,9075.26 2186.74,9111.36 " fill="none" id="C_0000820091630223006238&lt;-C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1577.72,6124.41,1583.39,6103.99,1591.69,6123.49,1577.72,6124.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4cf50edd11d32dea601aa62a24b3e4ec]
link C_0000166253842255815357 to C_0001112867090784569162--><path d="M2738.04,8631.2 C2832.14,8595.08 2928.99,8540 2990,8456.74 C3139.27,8253.05 3041.94,8144.7 3059,7892.74 C3063.19,7830.91 3046.55,5706.9 3089,5661.74 C3347.27,5387.02 3817.5,5424.81 4120.06,5486.7 " fill="none" id="C_0000166253842255815357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.6,5479.87,4139.74,5490.81,4118.74,5493.58,4121.6,5479.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[519713684ef996f3f0258fe781b367b9]
reverse link C_0000820091630223006238 to C_0000166253842255815357--><path d="M1569.81,6124.26 C1590.51,6773.26 1665.49,8094.96 1935,8456.74 C1996.51,8539.32 2093.17,8594.24 2186.97,8630.42 " fill="none" id="C_0000820091630223006238&lt;-C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1562.8,6124.04,1569.17,6103.83,1576.79,6123.6,1562.8,6124.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[572ed8953022a63b1c36627852249f51]
link C_0001459401574844645109 to C_0001112867090784569162--><path d="M2738.07,8121.87 C2832.16,8082.31 2929.01,8023.81 2990,7938.74 C3127.39,7747.12 3041.62,7647.88 3059,7412.74 C3062.59,7364.23 3055.61,5697.12 3089,5661.74 C3347.78,5387.5 3817.86,5425.15 4120.25,5486.89 " fill="none" id="C_0001459401574844645109-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.77,5480.05,4139.93,5490.98,4118.92,5493.76,4121.77,5480.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[919765d0794332eb101e551e54b6c414]
reverse link C_0000820091630223006238 to C_0001459401574844645109--><path d="M1584.59,6123.91 C1624.82,6667.62 1725.13,7657.79 1935,7938.74 C1997.26,8022.09 2093.63,8080.15 2187,8119.85 " fill="none" id="C_0000820091630223006238&lt;-C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1577.61,6124.42,1583.13,6103.96,1591.58,6123.4,1577.61,6124.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd6471d66cc3b88dfb3ca1f72cf6db91]
link C_0000599279109574326060 to C_0001112867090784569162--><path d="M2727.71,7636.67 C2824.82,7600.61 2926.46,7544.66 2990,7458.74 C3130.19,7269.17 3040.86,7167.82 3059,6932.74 C3061.72,6897.53 3064.68,5687.35 3089,5661.74 C3348.57,5388.44 3818.14,5425.72 4120.26,5487.14 " fill="none" id="C_0000599279109574326060-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.75,5480.3,4139.91,5491.21,4118.9,5494.01,4121.75,5480.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8bf8b0ca9d39d118bab5baddd92056a5]
reverse link C_0000820091630223006238 to C_0000599279109574326060--><path d="M1603.48,6123.83 C1659.61,6559.87 1771.85,7256.83 1935,7458.74 C2001.29,7540.79 2101.78,7595.9 2197.25,7632.38 " fill="none" id="C_0000820091630223006238&lt;-C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1596.53,6124.64,1600.93,6103.91,1610.41,6122.86,1596.53,6124.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a03be0583b80b52ec3c7cfbb1381204c]
link C_0000384619052225252533 to C_0001112867090784569162--><path d="M2727.71,7156.67 C2824.82,7120.61 2926.46,7064.66 2990,6978.74 C3130.19,6789.17 3039.18,6687.69 3059,6452.74 C3062.7,6408.92 3058.49,5693.41 3089,5661.74 C3350.32,5390.5 3818.84,5426.99 4120.33,5487.71 " fill="none" id="C_0000384619052225252533-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.76,5480.86,4139.94,5491.75,4118.94,5494.57,4121.76,5480.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[73026f33281fe8ca4ab78e818466913d]
reverse link C_0000820091630223006238 to C_0000384619052225252533--><path d="M1593.96,6124 C1634.49,6388.76 1726.44,6740.96 1935,6978.74 C2003.72,7057.1 2103.22,7111.36 2197.26,7148.19 " fill="none" id="C_0000820091630223006238&lt;-C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1586.99,6124.71,1590.95,6103.89,1600.83,6122.64,1586.99,6124.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ff447ae9b44164ab1163a8d58a067dd]
link C_0002242257052791493112 to C_0001112867090784569162--><path d="M2740.04,6671.97 C2833.33,6635.81 2929.13,6581.01 2990,6498.74 C3129.72,6309.91 3032.46,6208.14 3059,5974.74 C3062.95,5940.03 3064.04,5686.19 3089,5661.74 C3357,5399.16 3820.76,5432.2 4119.83,5489.97 " fill="none" id="C_0002242257052791493112-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.46,5483.16,4139.73,5493.9,4118.75,5496.9,4121.46,5483.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3f595935a0f15239c0a18509c92a77a4]
reverse link C_0000820091630223006238 to C_0002242257052791493112--><path d="M1686.39,6122.47 C1745.49,6253.84 1827.25,6395.19 1935,6498.74 C2004.98,6566 2097.15,6616.68 2184.77,6653.71 " fill="none" id="C_0000820091630223006238&lt;-C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1679.91,6125.13,1678.2,6104.01,1692.71,6119.45,1679.91,6125.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[34ccf54faad2732560850bd8665d0a82]
link C_0001942181379759217898 to C_0001112867090784569162--><path d="M2727.83,6189.54 C2822.3,6152.82 2922.07,6098.28 2990,6018.74 C3096.93,5893.53 2961.77,5766.26 3089,5661.74 C3376.18,5425.83 3827.91,5449.3 4120.03,5498.06 " fill="none" id="C_0001942181379759217898-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.37,5491.18,4139.91,5501.45,4119.01,5504.98,4121.37,5491.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a510e46abb3e3fb8d1e108ee127ac321]
reverse link C_0000820091630223006238 to C_0001942181379759217898--><path d="M1891.27,5992.96 C1905.91,6001.87 1920.53,6010.51 1935,6018.74 C2018.05,6066 2112.08,6111.28 2197.46,6149.52 " fill="none" id="C_0000820091630223006238&lt;-C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1887.43,5998.82,1874.07,5982.37,1894.77,5986.89,1887.43,5998.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6340afec94b7710ba348d42f46eb27c]
link C_0002291903337356664508 to C_0001112867090784569162--><path d="M2761.12,5708.12 C2864.66,5691.49 2981.72,5674.16 3089,5661.74 C3443.13,5620.74 3852.96,5592.99 4119.72,5577.54 " fill="none" id="C_0002291903337356664508-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4119.51,5570.54,4139.88,5576.38,4120.31,5584.52,4119.51,5570.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[107b7a7327243dacf301851c70d6fb71]
reverse link C_0000820091630223006238 to C_0002291903337356664508--><path d="M1894.31,5759.74 C1982.69,5759.74 2077.59,5759.74 2163.98,5759.74 " fill="none" id="C_0000820091630223006238&lt;-C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1894.08,5766.74,1874.08,5759.74,1894.08,5752.74,1894.08,5766.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[09328317908e988c3e2ab8c947bc90e6]
link C_0001280441251658550342 to C_0001112867090784569162--><path d="M2771.25,5292.65 C3142.04,5353.99 3759.92,5456.2 4119.84,5515.74 " fill="none" id="C_0001280441251658550342-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.12,5508.85,4139.71,5519.02,4118.84,5522.67,4121.12,5508.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fda0a7e4c72c2762c389565da7fda8e3]
reverse link C_0000820091630223006238 to C_0001280441251658550342--><path d="M1891.39,5527.18 C1906.02,5518.07 1920.59,5509.22 1935,5500.74 C2004.35,5459.92 2081.04,5419.62 2153.93,5383.42 " fill="none" id="C_0000820091630223006238&lt;-C_0001280441251658550342" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1894.87,5533.26,1874.21,5537.98,1887.42,5521.41,1894.87,5533.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64e7a6eb91daa34b4f5dcbf61cbc2691]
link C_0001646173285346905617 to C_0001112867090784569162--><path d="M2754.01,4865.5 C3148.36,5032.15 3843.78,5326.01 4192.35,5473.3 " fill="none" id="C_0001646173285346905617-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4195.28,5466.94,4210.98,5481.18,4189.83,5479.84,4195.28,5466.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c873d28af5cee0be36435c20505a3add]
reverse link C_0000820091630223006238 to C_0001646173285346905617--><path d="M1675.14,5396.79 C1734.22,5253.62 1818.94,5096.52 1935,4982.74 C2000.82,4918.22 2087.08,4869.12 2170.69,4832.67 " fill="none" id="C_0000820091630223006238&lt;-C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1681.54,5399.65,1667.52,5415.54,1668.57,5394.37,1681.54,5399.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[337e370d25248223a42f6486bf3bc227]
link C_0001583654034047392858 to C_0001112867090784569162--><path d="M2810.23,4407.87 C2871.31,4437.06 2933.41,4469.17 2990,4502.74 C3508.77,4810.53 4064.72,5270.77 4294.76,5467.75 " fill="none" id="C_0001583654034047392858-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4299.47,5462.57,4310.09,5480.91,4290.36,5473.2,4299.47,5462.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[987121a660fa81e318dcd4dcec5949cd]
reverse link C_0000820091630223006238 to C_0001583654034047392858--><path d="M1589.49,5395.54 C1627.65,5121.41 1718.58,4751.61 1935,4502.74 C1983.62,4446.84 2047.92,4403.23 2114.83,4369.46 " fill="none" id="C_0000820091630223006238&lt;-C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1596.41,5396.65,1586.78,5415.53,1582.53,5394.77,1596.41,5396.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bcf1ddd8aadb83c5e617c20b17438243]
link C_0002133497947762084276 to C_0001112867090784569162--><path d="M2958.56,4005.35 C2969.28,4010.88 2979.78,4016.67 2990,4022.74 C3641.14,4409.48 4170.18,5188.81 4343.6,5463.87 " fill="none" id="C_0002133497947762084276-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4349.56,5460.2,4354.27,5480.86,4337.71,5467.64,4349.56,5460.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ad627db98f49ac60302c84a08616813]
reverse link C_0000820091630223006238 to C_0002133497947762084276--><path d="M1595.17,5395.55 C1643.59,4945.39 1748.77,4215.09 1935,4022.74 C1940.9,4016.65 1947.03,4010.83 1953.37,4005.26 " fill="none" id="C_0000820091630223006238&lt;-C_0002133497947762084276" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1602.13,5396.29,1593.05,5415.44,1588.21,5394.81,1602.13,5396.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0357894772686b47a6378d63c35d4f9b]
link C_0000249766987467623805 to C_0001112867090784569162--><path d="M2961.09,3743.34 C2970.96,3748.87 2980.61,3754.66 2990,3760.74 C3698.6,4219.61 4204.33,5156.6 4356.38,5463.21 " fill="none" id="C_0000249766987467623805-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4362.68,5460.16,4365.25,5481.2,4350.13,5466.36,4362.68,5460.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[00bd6c50e576448bc1d2a17334e3595e]
reverse link C_0000820091630223006238 to C_0000249766987467623805--><path d="M1583.6,5395.38 C1621.41,4884.5 1717.32,3991.75 1935,3760.74 C1940.73,3754.66 1946.7,3748.84 1952.88,3743.27 " fill="none" id="C_0000820091630223006238&lt;-C_0000249766987467623805" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1590.56,5396.22,1582.12,5415.65,1576.6,5395.2,1590.56,5396.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[903cc68fcab4b2ad680960490a636eeb]
link C_0000781520838380739124 to C_0001112867090784569162--><path d="M2962.87,3481.25 C2972.14,3486.8 2981.2,3492.63 2990,3498.74 C3757.53,4031.77 4233.64,5126.57 4366.09,5462.5 " fill="none" id="C_0000781520838380739124-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4372.63,5460.03,4373.41,5481.2,4359.6,5465.13,4372.63,5460.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f770af1606e7265378545619811d229b]
reverse link C_0000820091630223006238 to C_0000781520838380739124--><path d="M1574.63,5395.68 C1601.9,4828.04 1685.62,3769.01 1935,3498.74 C1940.59,3492.69 1946.41,3486.89 1952.44,3481.34 " fill="none" id="C_0000820091630223006238&lt;-C_0000781520838380739124" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1581.62,5396.02,1573.68,5415.67,1567.64,5395.36,1581.62,5396.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44340e84b40a20fdf98816525a96d67d]
link C_0000699000175415913074 to C_0001112867090784569162--><path d="M2756.28,3093.34 C2837.96,3129.62 2922.68,3176.96 2990,3236.74 C3755.13,3916.17 4237.51,5110.24 4368.08,5462.34 " fill="none" id="C_0000699000175415913074-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4374.67,5459.97,4375.02,5481.15,4361.53,5464.81,4374.67,5459.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[357ee025e25188b7db79cb0c516fe097]
reverse link C_0000820091630223006238 to C_0000699000175415913074--><path d="M1573.81,5395.28 C1600.5,4780.13 1684.17,3570.19 1935,3236.74 C1992.82,3159.88 2081.04,3106.94 2168.84,3070.78 " fill="none" id="C_0000820091630223006238&lt;-C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1580.79,5395.87,1572.94,5415.55,1566.8,5395.27,1580.79,5395.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e457dc81a3cb2d1b80d6d916d7238368]
link C_0001850771625416044357 to C_0001112867090784569162--><path d="M2785.32,2628.62 C2858.62,2660.64 2931.92,2702.56 2990,2756.74 C3868.19,3576.04 4281.7,5061.53 4380.26,5461.35 " fill="none" id="C_0001850771625416044357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4387.1,5459.85,4385.05,5480.94,4373.5,5463.17,4387.1,5459.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[346f4031a9ef3d19012d66959f7223cc]
reverse link C_0000820091630223006238 to C_0001850771625416044357--><path d="M1562.79,5395.33 C1571.34,4688.36 1626.17,3164.28 1935,2756.74 C1986.12,2689.29 2061.7,2642.25 2139.74,2609.5 " fill="none" id="C_0000820091630223006238&lt;-C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1569.79,5395.57,1562.56,5415.49,1555.79,5395.41,1569.79,5395.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0ed859701260fc0467c79ba328d333e0]
link C_0001458511670125196521 to C_0001112867090784569162--><path d="M2766.25,2175.32 C2846.52,2208.33 2928,2253.55 2990,2314.74 C3964.9,3276.87 4313.72,5023.23 4387.95,5461.09 " fill="none" id="C_0001458511670125196521-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4394.87,5460.06,4391.28,5480.94,4381.06,5462.38,4394.87,5460.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7d4a4b49b4ab143b71158128b6404bf]
reverse link C_0000820091630223006238 to C_0001458511670125196521--><path d="M1580.64,5395.34 C1626.34,4559.65 1753.55,2558.14 1935,2314.74 C1989.88,2241.13 2073.97,2191.85 2158.95,2158.94 " fill="none" id="C_0000820091630223006238&lt;-C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1587.63,5395.88,1579.55,5415.47,1573.65,5395.12,1587.63,5395.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d6e6f5aa7b358770fcfcca193064bc8e]
link C_0001286239480653274581 to C_0001112867090784569162--><path d="M2729.11,1737.47 C2821.23,1763.1 2919.08,1804.84 2990,1872.74 C4105.31,2940.74 4352.48,4983.29 4395.91,5461.03 " fill="none" id="C_0001286239480653274581-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4402.89,5460.42,4397.69,5480.96,4388.94,5461.66,4402.89,5460.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[773c2b4e76d7127123f7363ca3d37bd1]
reverse link C_0000820091630223006238 to C_0001286239480653274581--><path d="M1574.58,5395.6 C1609.26,4481.81 1718.34,2145.13 1935,1872.74 C1998.44,1792.98 2099.32,1749.08 2195.87,1725.03 " fill="none" id="C_0000820091630223006238&lt;-C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1581.57,5395.87,1573.82,5415.59,1567.58,5395.34,1581.57,5395.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f3a746549c88b4848ab56ea8219bc3da]
link C_0002237184725500898553 to C_0001827593751126946500--><path d="M473.11,5789.45 C483.2,5790.34 493.2,5791.11 503,5791.74 C532.25,5793.63 562.88,5793.62 593.28,5792.36 " fill="none" id="C_0002237184725500898553-&gt;C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="598.55,5792.13,589.387,5788.519,593.5546,5792.3441,589.7295,5796.5117,598.55,5792.13" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="513.5" y="5780.8064"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="523.5" y="5787.8069">_pVar</text><!--MD5=[cde88d746544cdc3d561e033289d5a39]
reverse link C_0002237184725500898553 to C_0001827593751126946500--><path d="M478.41,5759.74 C517.71,5759.74 558.84,5759.74 598.77,5759.74 " fill="none" id="C_0002237184725500898553&lt;-C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="473.13,5759.74,482.13,5763.74,478.13,5759.74,482.13,5755.74,473.13,5759.74" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="509" cy="5751.8064" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="516" y="5755.8069">«friend»</text><!--MD5=[ef2198e91bebda66d46e12ab6957cbf1]
reverse link C_0001827593751126946500 to C_0000820091630223006238--><path d="M1106.58,5759.74 C1152.49,5759.74 1200.72,5759.74 1247.9,5759.74 " fill="none" id="C_0001827593751126946500&lt;-C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1093.37,5759.74,1099.37,5763.74,1105.37,5759.74,1099.37,5755.74,1093.37,5759.74" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1126" y="5748.8064"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1136" y="5755.8069">_placeholder</text><!--MD5=[af1b854f0fce94204789169f4190aec0]
link C_0000527346272489458655 to C_0000876644825045799418--><path d="M4671.16,1027.58 C4973.53,1010.28 5464.31,982.21 5761.51,965.21 " fill="none" id="C_0000527346272489458655-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5761.32,958.21,5781.69,964.06,5762.12,972.19,5761.32,958.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[328624817cff1bac4ed3e3de36e437b0]
reverse link C_0001079370368307575613 to C_0000527346272489458655--><path d="M2837.4,1229.23 C3244.34,1180.79 3879.88,1105.13 4202.1,1066.78 " fill="none" id="C_0001079370368307575613&lt;-C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2824.23,1230.8,2830.6626,1234.0592,2836.1451,1229.3749,2829.7125,1226.1158,2824.23,1230.8" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3023" y="1194.8064"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3033" y="1201.8069">_val</text><!--MD5=[4b8597690a8e5d4babb50488f33fd31a]
link C_0001079370368307575613 to C_0001112867090784569162--><path d="M2824.2,1395.45 C2885.5,1428.62 2944.08,1469.87 2990,1520.74 C4116.16,2768.22 4356.01,4964.37 4396.71,5461 " fill="none" id="C_0001079370368307575613-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4403.7,5460.51,4398.32,5481.01,4389.74,5461.63,4403.7,5460.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5823e55ef52830fef1fc6cf62393d317]
reverse link C_0000820091630223006238 to C_0001079370368307575613--><path d="M1573.43,5395.41 C1606.71,4425.88 1715.42,1834.95 1935,1520.74 C1976.57,1461.26 2036.3,1415.71 2100.72,1380.95 " fill="none" id="C_0000820091630223006238&lt;-C_0001079370368307575613" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1580.42,5395.81,1572.74,5415.55,1566.43,5395.33,1580.42,5395.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0d70e6edca4c1a3cda9b972f00878c51]
link C_0001212087958231445051 to C_0000876644825045799418--><path d="M4821.27,881.75 C5118.77,898.95 5509.79,921.56 5761.66,936.12 " fill="none" id="C_0001212087958231445051-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5762.25,929.15,5781.81,937.29,5761.44,943.12,5762.25,929.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[242a819c3a0f4fa63aba588b96ae2bea]
reverse link C_0002033788483863182904 to C_0001212087958231445051--><path d="M2814.88,794.69 C3088.79,805.55 3475.65,820.91 3799.09,833.74 " fill="none" id="C_0002033788483863182904&lt;-C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2801.51,794.15,2807.3472,798.3841,2813.5006,794.6244,2807.6634,790.3903,2801.51,794.15" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3023" y="792.8064"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3033" y="799.8069">_val</text><!--MD5=[6f744eb985ef8ee659f2408032a47be8]
link C_0002033788483863182904 to C_0001112867090784569162--><path d="M2801.65,895.07 C2869.98,929.51 2937.01,972.9 2990,1026.74 C3042.61,1080.19 3032.61,1110.54 3059,1180.74 C3690.03,2859.65 4252.45,4978.83 4377.96,5461.74 " fill="none" id="C_0002033788483863182904-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4384.76,5460.08,4383.01,5481.2,4371.21,5463.6,4384.76,5460.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[680c02ba0bdea153ae48b5740a1b4e37]
reverse link C_0000820091630223006238 to C_0002033788483863182904--><path d="M1569.81,5395.42 C1595.12,4348.4 1688.09,1382.91 1935,1026.74 C1981.2,960.1 2050.29,911.05 2123.34,875.13 " fill="none" id="C_0000820091630223006238&lt;-C_0002033788483863182904" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1576.8,5395.8,1569.32,5415.63,1562.8,5395.46,1576.8,5395.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7951f37496beee7369c4bb5a4a60257b]
link C_0000922731127244749220 to C_0000876644825045799418--><path d="M4471.12,5727.82 C4684.58,5802.07 5369.55,6002.7 5721,5661.74 C5883.91,5503.69 5984.7,2089.66 6008.85,1174.67 " fill="none" id="C_0000922731127244749220-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="6001.85,1174.31,6009.38,1154.5,6015.85,1174.68,6001.85,1174.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ddec3b5436ba1989f0a7c21a3d5f90e2]
link C_0001894636435809858910 to C_0000876644825045799418--><path d="M4559.97,542.76 C4808.49,583.9 5311.59,677.06 5721,815.74 C5734.94,820.47 5749.11,825.64 5763.32,831.12 " fill="none" id="C_0001894636435809858910-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5765.96,824.64,5781.99,838.5,5760.82,837.66,5765.96,824.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cda81f951e2e67f32e39af73003c6835]
reverse link C_0002153171854526901050 to C_0001894636435809858910--><path d="M2984.76,349.79 C3385.35,397.48 3916.93,460.76 4202.33,494.74 " fill="none" id="C_0002153171854526901050&lt;-C_0001894636435809858910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2971.76,348.25,2977.2425,352.9342,2983.6751,349.6751,2978.1926,344.9908,2971.76,348.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3023" y="345.8064"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3033" y="352.8069">_val</text><!--MD5=[0db60458f039b5c71cadbb8ed2a329e9]
link C_0002153171854526901050 to C_0001112867090784569162--><path d="M2971.68,513.52 C2978.01,520.08 2984.12,526.82 2990,533.74 C3063.23,619.96 3038.05,667.57 3059,778.74 C3084.23,912.6 3063.03,950.03 3089,1083.74 C3437,2875.77 4190.68,4981.91 4366.71,5461.98 " fill="none" id="C_0002153171854526901050-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4373.37,5459.81,4373.69,5481,4360.23,5464.64,4373.37,5459.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fd7ae46a78d05cff731d28fa2173826f]
reverse link C_0000820091630223006238 to C_0002153171854526901050--><path d="M1566.9,5394.92 C1584.84,4274.06 1660.99,932.13 1935,533.74 C1940.79,525.33 1946.94,517.19 1953.43,509.33 " fill="none" id="C_0000820091630223006238&lt;-C_0002153171854526901050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1573.89,5395.43,1566.57,5415.32,1559.89,5395.21,1573.89,5395.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[24b2918713aff4a60e5560128da5f947]
@startuml
left to right direction
package [Dynamic] as C_0002281307121949168090 {
abstract "VarHolder" as C_0000820091630223006238
abstract C_0000820091630223006238 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L104{VarHolder}]] {
+~VarHolder() : void
{abstract} +clone(Placeholder<Dynamic::VarHolder> * pHolder = 0) const = 0 : Dynamic::VarHolder *
{abstract} +type() const = 0 : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & val) const : void
+convert(Timestamp & val) const : void
+convert(UUID & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
#VarHolder() : void
#cloneHolder(Placeholder<Dynamic::VarHolder> * pVarHolder, const T & val) : class Dynamic::VarHolder *
#convertToSmaller(const F & from, T & to) : void
#convertToSmallerUnsigned(const F & from, T & to) : void
#convertSignedToUnsigned(const F & from, T & to) : void
#convertSignedFloatToUnsigned(const F & from, T & to) : void
#convertUnsignedToSigned(const F & from, T & to) : void
-checkUpperLimit(const F & from) : void
-checkLowerLimit(const F & from) : void
-checkUpperLimitFloat(const F & from) : void
-checkLowerLimitFloat(const F & from) : void
}
class "VarHolderImpl<T>" as C_0001112867090784569162
class C_0001112867090784569162 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L705{VarHolderImpl}]] {
+VarHolderImpl<T>(const T & val) : void
+~VarHolderImpl<T>() : void
+type() const : const std::type_info &
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const T &
-VarHolderImpl<T>() : void
-VarHolderImpl<T>(const VarHolderImpl<T> & ) : void
-operator=(const VarHolderImpl<T> & ) : VarHolderImpl<T> &
-_val : T [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754{_val}]]]
}
class "VarHolderImpl<signed char>" as C_0002149165824584484566
class C_0002149165824584484566 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
+VarHolderImpl(Int8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int8> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int8> & ) : Dynamic::VarHolderImpl<Int8> &
-_val : Int8 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910{_val}]]]
}
class "VarHolderImpl<short>" as C_0000198808093629002393
class C_0000198808093629002393 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L915{VarHolderImpl}]] {
+VarHolderImpl(Int16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int16> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int16> & ) : Dynamic::VarHolderImpl<Int16> &
-_val : Int16 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063{_val}]]]
}
class "VarHolderImpl<int>" as C_0000976768452323437983
class C_0000976768452323437983 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1068{VarHolderImpl}]] {
+VarHolderImpl(Int32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int32> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int32> & ) : Dynamic::VarHolderImpl<Int32> &
-_val : Int32 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215{_val}]]]
}
class "VarHolderImpl<long>" as C_0001804431617899042426
class C_0001804431617899042426 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1220{VarHolderImpl}]] {
+VarHolderImpl(Int64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int64> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int64> & ) : Dynamic::VarHolderImpl<Int64> &
-_val : Int64 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382{_val}]]]
}
class "VarHolderImpl<unsigned char>" as C_0001832009513687525374
class C_0001832009513687525374 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1387{VarHolderImpl}]] {
+VarHolderImpl(UInt8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt8> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt8> & ) : Dynamic::VarHolderImpl<UInt8> &
-_val : UInt8 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534{_val}]]]
}
class "VarHolderImpl<unsigned short>" as C_0000572186414558919480
class C_0000572186414558919480 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1539{VarHolderImpl}]] {
+VarHolderImpl(UInt16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt16> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt16> & ) : Dynamic::VarHolderImpl<UInt16> &
-_val : UInt16 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686{_val}]]]
}
class "VarHolderImpl<unsigned int>" as C_0000166253842255815357
class C_0000166253842255815357 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1691{VarHolderImpl}]] {
+VarHolderImpl(UInt32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt32> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt32> & ) : Dynamic::VarHolderImpl<UInt32> &
-_val : UInt32 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838{_val}]]]
}
class "VarHolderImpl<unsigned long>" as C_0001459401574844645109
class C_0001459401574844645109 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1843{VarHolderImpl}]] {
+VarHolderImpl(UInt64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt64> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt64> & ) : Dynamic::VarHolderImpl<UInt64> &
-_val : UInt64 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011{_val}]]]
}
class "VarHolderImpl<bool>" as C_0000599279109574326060
class C_0000599279109574326060 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2016{VarHolderImpl}]] {
+VarHolderImpl(bool val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const bool &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<bool> & ) : void
-operator=(const Dynamic::VarHolderImpl<bool> & ) : Dynamic::VarHolderImpl<bool> &
-_val : bool [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161{_val}]]]
}
class "VarHolderImpl<float>" as C_0000384619052225252533
class C_0000384619052225252533 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2166{VarHolderImpl}]] {
+VarHolderImpl(float val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const float &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<float> & ) : void
-operator=(const Dynamic::VarHolderImpl<float> & ) : Dynamic::VarHolderImpl<float> &
-_val : float [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314{_val}]]]
}
class "VarHolderImpl<double>" as C_0002242257052791493112
class C_0002242257052791493112 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2319{VarHolderImpl}]] {
+VarHolderImpl(double val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const double &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<double> & ) : void
-operator=(const Dynamic::VarHolderImpl<double> & ) : Dynamic::VarHolderImpl<double> &
-_val : double [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473{_val}]]]
}
class "VarHolderImpl<char>" as C_0001942181379759217898
class C_0001942181379759217898 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2478{VarHolderImpl}]] {
+VarHolderImpl(char val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const char &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<char> & ) : void
-operator=(const Dynamic::VarHolderImpl<char> & ) : Dynamic::VarHolderImpl<char> &
-_val : char [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623{_val}]]]
}
class "VarHolderImpl<std::string>" as C_0002291903337356664508
class C_0002291903337356664508 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2628{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const std::string & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+convert(UUID & uuid) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::string &
+isString() const : bool
+size() const : std::size_t
+operator[](std::string::size_type n) : char &
+operator[](std::string::size_type n) const : const char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<std::string> & ) : void
-operator=(const Dynamic::VarHolderImpl<std::string> & ) : Dynamic::VarHolderImpl<std::string> &
-_val : std::string [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820{_val}]]]
}
class "VarHolderImpl<std::basic_string<unsigned short,Poco::UTF16CharTraits>>" as C_0001280441251658550342
class C_0001280441251658550342 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2825{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const UTF16String & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UTF16String &
+isString() const : bool
+size() const : std::size_t
+operator[](UTF16String::size_type n) : UTF16Char &
+operator[](UTF16String::size_type n) const : const UTF16Char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UTF16String> & ) : void
-operator=(const Dynamic::VarHolderImpl<UTF16String> & ) : Dynamic::VarHolderImpl<UTF16String> &
-toStdString() const : std::string
-_val : UTF16String [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022{_val}]]]
}
class "VarHolderImpl<long long>" as C_0001646173285346905617
class C_0001646173285346905617 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3309{VarHolderImpl}]] {
+VarHolderImpl(long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<long long> & ) : Dynamic::VarHolderImpl<long long> &
-_val : long long [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452{_val}]]]
}
class "VarHolderImpl<unsigned long long>" as C_0001583654034047392858
class C_0001583654034047392858 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3457{VarHolderImpl}]] {
+VarHolderImpl(unsigned long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const unsigned long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<unsigned long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<unsigned long long> & ) : Dynamic::VarHolderImpl<unsigned long long> &
-_val : unsigned long long [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600{_val}]]]
}
class "VarHolderImpl<std::vector<type-parameter-0-0,std::allocator<type-parameter-0-0>>>" as C_0002133497947762084276
class C_0002133497947762084276 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3608{VarHolderImpl}]] {
+VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::vector<T> & val) : void
+~VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::vector<T> &
+isVector() const : bool
+size() const : std::size_t
+operator[](typename std::vector<T>::size_type n) : T &
+operator[](typename std::vector<T>::size_type n) const : const T &
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::vector<T> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668{_val}]]]
}
class "VarHolderImpl<std::list<type-parameter-0-0,std::allocator<type-parameter-0-0>>>" as C_0000249766987467623805
class C_0000249766987467623805 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3673{VarHolderImpl}]] {
+VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::list<T> & val) : void
+~VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::list<T> &
+isList() const : bool
+size() const : std::size_t
+operator[](typename std::list<T>::size_type n) : T &
+operator[](typename std::list<T>::size_type n) const : const T &
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::list<T> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743{_val}]]]
}
class "VarHolderImpl<std::deque<type-parameter-0-0,std::allocator<type-parameter-0-0>>>" as C_0000781520838380739124
class C_0000781520838380739124 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3748{VarHolderImpl}]] {
+VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::deque<T> & val) : void
+~VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::deque<T> &
+isDeque() const : bool
+size() const : std::size_t
+operator[](typename std::deque<T>::size_type n) : T &
+operator[](typename std::deque<T>::size_type n) const : const T &
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::deque<T> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808{_val}]]]
}
class "VarHolderImpl<Poco::DateTime>" as C_0000699000175415913074
class C_0000699000175415913074 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3813{VarHolderImpl}]] {
+VarHolderImpl(const DateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const DateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<DateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<DateTime> & ) : Dynamic::VarHolderImpl<DateTime> &
-_val : DateTime [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958{_val}]]]
}
class "VarHolderImpl<Poco::LocalDateTime>" as C_0001850771625416044357
class C_0001850771625416044357 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3963{VarHolderImpl}]] {
+VarHolderImpl(const LocalDateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const LocalDateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<LocalDateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<LocalDateTime> & ) : Dynamic::VarHolderImpl<LocalDateTime> &
-_val : LocalDateTime [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093{_val}]]]
}
class "VarHolderImpl<Poco::Timestamp>" as C_0001458511670125196521
class C_0001458511670125196521 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4098{VarHolderImpl}]] {
+VarHolderImpl(const Timestamp & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Timestamp &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Timestamp> & ) : void
-operator=(const Dynamic::VarHolderImpl<Timestamp> & ) : Dynamic::VarHolderImpl<Timestamp> &
-_val : Timestamp [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228{_val}]]]
}
class "VarHolderImpl<Poco::UUID>" as C_0001286239480653274581
class C_0001286239480653274581 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4233{VarHolderImpl}]] {
+VarHolderImpl(const UUID & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UUID &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UUID> & ) : void
-operator=(const Dynamic::VarHolderImpl<UUID> & ) : Dynamic::VarHolderImpl<UUID> &
-_val : UUID [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324{_val}]]]
}
class "VarIterator" as C_0002237184725500898553
class C_0002237184725500898553 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L33{VarIterator}]] {
+VarIterator(Dynamic::Var * pVar, bool positionEnd) : void
+VarIterator(const Dynamic::VarIterator & other) : void
+VarIterator(Dynamic::VarIterator && other) : void
+~VarIterator() : void
+operator=(const Dynamic::VarIterator & other) : Dynamic::VarIterator &
+operator=(Dynamic::VarIterator && other) : Dynamic::VarIterator &
+operator==(const Dynamic::VarIterator & other) const : bool
+operator!=(const Dynamic::VarIterator & other) const : bool
+operator*() const : Dynamic::Var &
+operator->() const : Dynamic::Var *
+operator++() const : const Dynamic::VarIterator &
+operator++(int ) const : Dynamic::VarIterator
+operator- -() const : const Dynamic::VarIterator &
+operator- -(int ) const : Dynamic::VarIterator
+operator+(std::size_t diff) const : Dynamic::VarIterator
+operator-(std::size_t diff) const : Dynamic::VarIterator
+swap(Dynamic::VarIterator & other) : void
-VarIterator() : void
-increment() const : void
-decrement() const : void
-setPosition(std::size_t pos) const : void
-_pVar : Dynamic::Var * [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117{Sets the iterator position. Throws RangeException if position is out of range.}]]]
-_position : std::size_t [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118{_position}]]]
{static} +POSITION_END : const std::size_t [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43{POSITION_END}]]]
}
class "Var" as C_0001827593751126946500
class C_0001827593751126946500 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L41{Var}]] {
+Var() : void
+Var(const char * pVal) : void
+Var(const Dynamic::Var & other) : void
+~Var() : void
+swap(Dynamic::Var & other) : void
+begin() const : Dynamic::Var::ConstIterator
+end() const : Dynamic::Var::ConstIterator
+begin() : Dynamic::Var::Iterator
+end() : Dynamic::Var::Iterator
+operator!() const : bool
+operator=(const Dynamic::Var & other) : Dynamic::Var &
+operator+(const Dynamic::Var & other) const : const Dynamic::Var
+operator+(const char * other) const : const Dynamic::Var
+operator++() : Dynamic::Var &
+operator++(int ) : const Dynamic::Var
+operator- -() : Dynamic::Var &
+operator- -(int ) : const Dynamic::Var
+operator+=(const Dynamic::Var & other) : Dynamic::Var &
+operator+=(const char * other) : Dynamic::Var &
+operator-(const Dynamic::Var & other) const : const Dynamic::Var
+operator-=(const Dynamic::Var & other) : Dynamic::Var &
+operator*(const Dynamic::Var & other) const : const Dynamic::Var
+operator*=(const Dynamic::Var & other) : Dynamic::Var &
+operator/(const Dynamic::Var & other) const : const Dynamic::Var
+operator/=(const Dynamic::Var & other) : Dynamic::Var &
+operator==(const char * other) const : bool
+operator==(const Dynamic::Var & other) const : bool
+operator!=(const Dynamic::Var & other) const : bool
+operator!=(const char * other) const : bool
+operator<(const Dynamic::Var & other) const : bool
+operator<=(const Dynamic::Var & other) const : bool
+operator>(const Dynamic::Var & other) const : bool
+operator>=(const Dynamic::Var & other) const : bool
+operator||(const Dynamic::Var & other) const : bool
+operator&&(const Dynamic::Var & other) const : bool
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+at(std::size_t n) : char &
+operator[](const std::string & name) : Dynamic::Var &
+operator[](const std::string & name) const : const Dynamic::Var &
+type() const : const std::type_info &
+empty() : void
+clear() : void
+isEmpty() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
+toString() const : std::string
{static} +parse(const std::string & val) : Dynamic::Var
{static} +toString(const Dynamic::Var & var) : std::string
-getAt(std::size_t n) : Dynamic::Var &
-getAt(const std::string & n) : Dynamic::Var &
{static} -parse(const std::string & val, std::string::size_type & offset) : Dynamic::Var
{static} -parseObject(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseArray(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseString(const std::string & val, std::string::size_type & pos) : std::string
{static} -parseJSONString(const std::string & val, std::string::size_type & pos) : std::string
{static} -skipWhiteSpace(const std::string & val, std::string::size_type & pos) : void
-content() const : Dynamic::VarHolder *
-destruct() : void
-construct(const char * value) : void
-construct(const Dynamic::Var & other) : void
+Var(const T & val) : void
+convert(T & val) : void
+convert() : T
+operator type-parameter-0-0() : T
+extract() : const T &
+operator=(const T & other) : class Dynamic::Var &
+operator+(const T & other) : const class Dynamic::Var
+operator+=(const T & other) : class Dynamic::Var &
+operator-(const T & other) : const class Dynamic::Var
+operator-=(const T & other) : class Dynamic::Var &
+operator*(const T & other) : const class Dynamic::Var
+operator*=(const T & other) : class Dynamic::Var &
+operator/(const T & other) : const class Dynamic::Var
+operator/=(const T & other) : class Dynamic::Var &
+operator==(const T & other) : _Bool
+operator!=(const T & other) : _Bool
+operator<(const T & other) : _Bool
+operator<=(const T & other) : _Bool
+operator>(const T & other) : _Bool
+operator>=(const T & other) : _Bool
+operator||(const T & other) : _Bool
+operator&&(const T & other) : _Bool
+operator[](const T & n) : class Dynamic::Var &
+operator[](const T & n) : const class Dynamic::Var &
-add(const Dynamic::Var & other) : T
-subtract(const Dynamic::Var & other) : T
-multiply(const Dynamic::Var & other) : T
-divide(const Dynamic::Var & other) : T
-holderImpl(const std::string errorMessage = "") : VarHolderImpl<T> *
-structIndexOperator(T * pStr, N n) : class Dynamic::Var &
-construct(const ValueType & value) : void
-_placeholder : Placeholder<Dynamic::VarHolder> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632{_placeholder}]]]
}
class "Struct<K,M,S>" as C_0000876644825045799418
class C_0000876644825045799418 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
+Struct<K, M, S>() : void
+Struct<K, M, S>(const Dynamic::Struct::Data & val) : void
+~Struct<K, M, S>() : void
+operator[](const K & name) : Dynamic::Var &
+operator[](const K & name) const : const Dynamic::Var &
+contains(const K & name) const : bool
+find(const K & name) : Dynamic::Struct::Iterator
+find(const K & name) const : Dynamic::Struct::ConstIterator
+end() : Dynamic::Struct::Iterator
+end() const : Dynamic::Struct::ConstIterator
+begin() : Dynamic::Struct::Iterator
+begin() const : Dynamic::Struct::ConstIterator
+insert(const Dynamic::Struct::ValueType & aPair) : Dynamic::Struct::InsRetVal
+erase(const K & key) : Dynamic::Struct::SizeType
+erase(Dynamic::Struct::Iterator & it) : void
+clear() : void
+swap(Struct<K,M,S> & other) : void
+empty() const : bool
+size() const : Dynamic::Struct::SizeType
+members() const : Dynamic::Struct::NameSet
+getVar(const K & key) const : Dynamic::Var
+toString() const : std::string
+Struct<K, M, S>(const std::map<K,T> & val) : void
+Struct<K, M, S>(const ordered_map<K,T> & val) : void
+insert(const K & key, const T & value) : Dynamic::Struct::InsRetVal
+getVar(const K & key, const DefT & defaultValue) : class Dynamic::Var
-assignMap(const T & map) : void
-_data : Dynamic::Struct::Data [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247{_data}]]]
}
class "Struct<std::string,std::map<std::string,Poco::Dynamic::Var>,std::set<std::string>>" as C_0000527346272489458655
class C_0000527346272489458655 {
}
class "VarHolderImpl<Poco::Dynamic::Struct<std::string>>" as C_0001079370368307575613
class C_0001079370368307575613 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L252{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433{_val}]]]
}
class "Struct<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,std::map<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,Poco::Dynamic::Var>,std::set<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType>>" as C_0001212087958231445051
class C_0001212087958231445051 {
}
class "VarHolderImpl<Poco::Dynamic::Struct<int>>" as C_0002033788483863182904
class C_0002033788483863182904 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L438{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619{_val}]]]
}
class "Struct<std::string,Poco::OrderedMap<std::string,Poco::Dynamic::Var,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<std::string,Poco::Dynamic::Var>>,std::deque<std::pair<std::string,Poco::Dynamic::Var>>>,Poco::OrderedSet<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>,std::deque<std::string>>>" as C_0000922731127244749220
class C_0000922731127244749220 {
}
class "Struct<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int,tsl::ordered_map<int,Poco::Dynamic::Var>,tsl::ordered_set<int>>>::KeyType,Poco::OrderedMap<int,Poco::Dynamic::Var,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int,Poco::Dynamic::Var>>,std::deque<std::pair<int,Poco::Dynamic::Var>>>,Poco::OrderedSet<int,std::hash<int>,std::equal_to<int>,std::allocator<int>,std::deque<int>>>" as C_0001894636435809858910
class C_0001894636435809858910 {
}
class "VarHolderImpl<Poco::Dynamic::Struct<int,tsl::ordered_map<int,Poco::Dynamic::Var>>>" as C_0002153171854526901050
class C_0002153171854526901050 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L810{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991{_val}]]]
}
}
C_0000820091630223006238 <|- - C_0001112867090784569162
C_0002149165824584484566 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002149165824584484566
C_0000198808093629002393 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000198808093629002393
C_0000976768452323437983 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000976768452323437983
C_0001804431617899042426 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001804431617899042426
C_0001832009513687525374 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001832009513687525374
C_0000572186414558919480 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000572186414558919480
C_0000166253842255815357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000166253842255815357
C_0001459401574844645109 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001459401574844645109
C_0000599279109574326060 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000599279109574326060
C_0000384619052225252533 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000384619052225252533
C_0002242257052791493112 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002242257052791493112
C_0001942181379759217898 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001942181379759217898
C_0002291903337356664508 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002291903337356664508
C_0001280441251658550342 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001280441251658550342
C_0001646173285346905617 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001646173285346905617
C_0001583654034047392858 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001583654034047392858
C_0002133497947762084276 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002133497947762084276
C_0000249766987467623805 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000249766987467623805
C_0000781520838380739124 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000781520838380739124
C_0000699000175415913074 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000699000175415913074
C_0001850771625416044357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001850771625416044357
C_0001458511670125196521 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001458511670125196521
C_0001286239480653274581 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001286239480653274581
C_0002237184725500898553 - -> C_0001827593751126946500 : -_pVar
C_0002237184725500898553 <.. C_0001827593751126946500 : +<<friend>>
C_0001827593751126946500 o- - C_0000820091630223006238 : -_placeholder
C_0000527346272489458655 ..|> C_0000876644825045799418
C_0001079370368307575613 o- - C_0000527346272489458655 : -_val
C_0001079370368307575613 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001079370368307575613
C_0001212087958231445051 ..|> C_0000876644825045799418
C_0002033788483863182904 o- - C_0001212087958231445051 : -_val
C_0002033788483863182904 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002033788483863182904
C_0000922731127244749220 ..|> C_0000876644825045799418
C_0001894636435809858910 ..|> C_0000876644825045799418
C_0002153171854526901050 o- - C_0001894636435809858910 : -_val
C_0002153171854526901050 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002153171854526901050
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>