<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="12410px" preserveAspectRatio="none" style="width:5453px;height:12410px;" version="1.1" viewBox="0 0 5453 12410" width="5453px" zoomAndPan="magnify"><defs><filter height="300%" id="fwmlktjjxpa3s" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[031cc931b6e6b4333e02cc6a702b3341]
cluster C_0002281307121949168090--><polygon fill="#FFFFFF" filter="url(#fwmlktjjxpa3s)" points="22,24,94,24,101,46.2969,5431,46.2969,5431,12398,22,12398,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="101" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="38.9951">Dynamic</text><!--MD5=[63e3babcd9679d0fc26b559e71357f11]
class C_0000820091630223006238--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104" target="_top" title="VarHolder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104" xlink:show="new" xlink:title="VarHolder" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="688.2344" id="C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.5;" width="651" x="1248" y="5967"/><ellipse cx="1538.25" cy="5983" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1538.3594,5978.3438 L1537.2031,5983.4219 L1539.5313,5983.4219 L1538.3594,5978.3438 Z M1536.875,5976.1094 L1539.8594,5976.1094 L1543.2188,5988.5 L1540.7656,5988.5 L1540,5985.4375 L1536.7188,5985.4375 L1535.9688,5988.5 L1533.5313,5988.5 L1536.875,5976.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="1558.75" y="5987.1543">VarHolder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1249" x2="1898" y1="5999" y2="5999"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1249" x2="1898" y1="6007" y2="6007"/><ellipse cx="1259" cy="6018" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1268" y="6021.2104">~VarHolder() : void</text><ellipse cx="1259" cy="6030.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="512" x="1268" y="6034.0151">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pHolder = 0) const = 0 : Dynamic::VarHolder *</text><ellipse cx="1259" cy="6043.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="1268" y="6046.8198">type() const = 0 : const std::type_info &amp;</text><ellipse cx="1259" cy="6056.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1268" y="6059.6245">convert(Int8 &amp; val) const : void</text><ellipse cx="1259" cy="6069.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="6072.4292">convert(Int16 &amp; val) const : void</text><ellipse cx="1259" cy="6082.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="6085.2339">convert(Int32 &amp; val) const : void</text><ellipse cx="1259" cy="6094.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="6098.0386">convert(Int64 &amp; val) const : void</text><ellipse cx="1259" cy="6107.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1268" y="6110.8433">convert(UInt8 &amp; val) const : void</text><ellipse cx="1259" cy="6120.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="6123.6479">convert(UInt16 &amp; val) const : void</text><ellipse cx="1259" cy="6133.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="6136.4526">convert(UInt32 &amp; val) const : void</text><ellipse cx="1259" cy="6146.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="6149.2573">convert(UInt64 &amp; val) const : void</text><ellipse cx="1259" cy="6158.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1268" y="6162.062">convert(DateTime &amp; val) const : void</text><ellipse cx="1259" cy="6171.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1268" y="6174.8667">convert(LocalDateTime &amp; val) const : void</text><ellipse cx="1259" cy="6184.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1268" y="6187.6714">convert(Timestamp &amp; val) const : void</text><ellipse cx="1259" cy="6197.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1268" y="6200.4761">convert(UUID &amp; val) const : void</text><ellipse cx="1259" cy="6210.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1268" y="6213.2808">convert(long long &amp; val) const : void</text><ellipse cx="1259" cy="6222.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1268" y="6226.0854">convert(unsigned long long &amp; val) const : void</text><ellipse cx="1259" cy="6235.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1268" y="6238.8901">convert(bool &amp; val) const : void</text><ellipse cx="1259" cy="6248.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1268" y="6251.6948">convert(float &amp; val) const : void</text><ellipse cx="1259" cy="6261.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1268" y="6264.4995">convert(double &amp; val) const : void</text><ellipse cx="1259" cy="6274.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1268" y="6277.3042">convert(char &amp; val) const : void</text><ellipse cx="1259" cy="6286.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1268" y="6290.1089">convert(std::string &amp; val) const : void</text><ellipse cx="1259" cy="6299.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1268" y="6302.9136">convert(UTF16String &amp; val) const : void</text><ellipse cx="1259" cy="6312.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1268" y="6315.7183">isArray() const : bool</text><ellipse cx="1259" cy="6325.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1268" y="6328.5229">isVector() const : bool</text><ellipse cx="1259" cy="6338.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1268" y="6341.3276">isList() const : bool</text><ellipse cx="1259" cy="6350.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1268" y="6354.1323">isDeque() const : bool</text><ellipse cx="1259" cy="6363.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1268" y="6366.937">isStruct() const : bool</text><ellipse cx="1259" cy="6376.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1268" y="6379.7417">isOrdered() const : bool</text><ellipse cx="1259" cy="6389.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1268" y="6392.5464">isInteger() const : bool</text><ellipse cx="1259" cy="6402.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1268" y="6405.3511">isSigned() const : bool</text><ellipse cx="1259" cy="6414.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1268" y="6418.1558">isNumeric() const : bool</text><ellipse cx="1259" cy="6427.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1268" y="6430.9604">isBoolean() const : bool</text><ellipse cx="1259" cy="6440.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1268" y="6443.7651">isString() const : bool</text><ellipse cx="1259" cy="6453.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1268" y="6456.5698">isDate() const : bool</text><ellipse cx="1259" cy="6466.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1268" y="6469.3745">isTime() const : bool</text><ellipse cx="1259" cy="6478.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1268" y="6482.1792">isDateTime() const : bool</text><ellipse cx="1259" cy="6491.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1268" y="6494.9839">isUUID() const : bool</text><ellipse cx="1259" cy="6504.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1268" y="6507.7886">size() const : std::size_t</text><polygon fill="#FFFF44" points="1259,6512.3828,1263,6516.3828,1259,6520.3828,1255,6516.3828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1268" y="6520.5933">VarHolder() : void</text><polygon fill="#FFFF44" points="1259,6525.1875,1263,6529.1875,1259,6533.1875,1255,6529.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="1268" y="6533.3979">cloneHolder&lt;T&gt;(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder, const T &amp; val) : class Dynamic::VarHolder *</text><polygon fill="#FFFF44" points="1259,6537.9922,1263,6541.9922,1259,6545.9922,1255,6541.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="1268" y="6546.2026">convertToSmaller&lt;F,T&gt;(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6550.7969,1263,6554.7969,1259,6558.7969,1255,6554.7969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1268" y="6559.0073">convertToSmallerUnsigned&lt;F,T&gt;(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6563.6016,1263,6567.6016,1259,6571.6016,1255,6567.6016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1268" y="6571.812">convertSignedToUnsigned&lt;F,T&gt;(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6576.4063,1263,6580.4063,1259,6584.4063,1255,6580.4063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="1268" y="6584.6167">convertSignedFloatToUnsigned&lt;F,T&gt;(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6589.2109,1263,6593.2109,1259,6597.2109,1255,6593.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1268" y="6597.4214">convertUnsignedToSigned&lt;F,T&gt;(const F &amp; from, T &amp; to) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6604.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="1268" y="6610.2261">checkUpperLimit&lt;F,T&gt;(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6616.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="1268" y="6623.0308">checkLowerLimit&lt;F,T&gt;(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6629.625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="1268" y="6635.8354">checkUpperLimitFloat&lt;F,T&gt;(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6642.4297"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="1268" y="6648.6401">checkLowerLimitFloat&lt;F,T&gt;(const F &amp; from) : void</text></a><!--MD5=[5bec7878bc8351ff61befe9ac854c5da]
class C_0001112867090784569162--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="163.2422" id="C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="3705.5" y="5557.5"/><ellipse cx="3917.25" cy="5573.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3920.2188,5579.1406 Q3919.6406,5579.4375 3919,5579.5781 Q3918.3594,5579.7344 3917.6563,5579.7344 Q3915.1563,5579.7344 3913.8281,5578.0938 Q3912.5156,5576.4375 3912.5156,5573.3125 Q3912.5156,5570.1875 3913.8281,5568.5313 Q3915.1563,5566.875 3917.6563,5566.875 Q3918.3594,5566.875 3919,5567.0313 Q3919.6563,5567.1875 3920.2188,5567.4844 L3920.2188,5570.2031 Q3919.5938,5569.625 3919,5569.3594 Q3918.4063,5569.0781 3917.7813,5569.0781 Q3916.4375,5569.0781 3915.75,5570.1563 Q3915.0625,5571.2188 3915.0625,5573.3125 Q3915.0625,5575.4063 3915.75,5576.4844 Q3916.4375,5577.5469 3917.7813,5577.5469 Q3918.4063,5577.5469 3919,5577.2813 Q3919.5938,5577 3920.2188,5576.4219 L3920.2188,5579.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="3937.75" y="5577.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="4229.5" y="5554.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="4230.5" y="5566.6387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3706.5" x2="4234.5" y1="5589.5" y2="5589.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3711.5" y="5595.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3713.5" y="5597.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="3725.5" y="5603.7104">_val : T</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3706.5" x2="4234.5" y1="5610.3047" y2="5610.3047"/><ellipse cx="3716.5" cy="5621.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3725.5" y="5624.5151">VarHolderImpl&lt;T&gt;(const T &amp; val) : void</text><ellipse cx="3716.5" cy="5634.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3725.5" y="5637.3198">~VarHolderImpl&lt;T&gt;() : void</text><ellipse cx="3716.5" cy="5646.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="3725.5" y="5650.1245">type() const : const std::type_info &amp;</text><ellipse cx="3716.5" cy="5659.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="3725.5" y="5662.9292">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="3716.5" cy="5672.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3725.5" y="5675.7339">value() const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3713.5" y="5682.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3725.5" y="5688.5386">VarHolderImpl&lt;T&gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3713.5" y="5695.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="3725.5" y="5701.3433">VarHolderImpl&lt;T&gt;(const VarHolderImpl&lt;T&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3713.5" y="5707.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3725.5" y="5714.1479">operator=(const VarHolderImpl&lt;T&gt; &amp; ) : VarHolderImpl&lt;T&gt; &amp;</text><!--MD5=[ca8da3ab2e5c399aaf21ac160b12bb93]
class C_0002149165824584484566--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="457.75" id="C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2271.5" y="4950"/><ellipse cx="2450.25" cy="4966" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2453.2188,4971.6406 Q2452.6406,4971.9375 2452,4972.0781 Q2451.3594,4972.2344 2450.6563,4972.2344 Q2448.1563,4972.2344 2446.8281,4970.5938 Q2445.5156,4968.9375 2445.5156,4965.8125 Q2445.5156,4962.6875 2446.8281,4961.0313 Q2448.1563,4959.375 2450.6563,4959.375 Q2451.3594,4959.375 2452,4959.5313 Q2452.6563,4959.6875 2453.2188,4959.9844 L2453.2188,4962.7031 Q2452.5938,4962.125 2452,4961.8594 Q2451.4063,4961.5781 2450.7813,4961.5781 Q2449.4375,4961.5781 2448.75,4962.6563 Q2448.0625,4963.7188 2448.0625,4965.8125 Q2448.0625,4967.9063 2448.75,4968.9844 Q2449.4375,4970.0469 2450.7813,4970.0469 Q2451.4063,4970.0469 2452,4969.7813 Q2452.5938,4969.5 2453.2188,4968.9219 L2453.2188,4971.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2470.75" y="4970.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="2729.5" y="4947"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="2730.5" y="4959.1387">signed char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="4982" y2="4982"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2277.5" y="4988"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="4990"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2291.5" y="4996.2104">_val : Int8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="5002.8047" y2="5002.8047"/><ellipse cx="2282.5" cy="5013.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2291.5" y="5017.0151">VarHolderImpl(Int8 val) : void</text><ellipse cx="2282.5" cy="5026.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2291.5" y="5029.8198">~VarHolderImpl() : void</text><ellipse cx="2282.5" cy="5039.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2291.5" y="5042.6245">type() const : const std::type_info &amp;</text><ellipse cx="2282.5" cy="5052.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2291.5" y="5055.4292">convert(Int8 &amp; val) const : void</text><ellipse cx="2282.5" cy="5065.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="5068.2339">convert(Int16 &amp; val) const : void</text><ellipse cx="2282.5" cy="5077.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="5081.0386">convert(Int32 &amp; val) const : void</text><ellipse cx="2282.5" cy="5090.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="5093.8433">convert(Int64 &amp; val) const : void</text><ellipse cx="2282.5" cy="5103.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2291.5" y="5106.6479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2282.5" cy="5116.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="5119.4526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2282.5" cy="5129.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="5132.2573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2282.5" cy="5141.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="5145.062">convert(UInt64 &amp; val) const : void</text><ellipse cx="2282.5" cy="5154.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2291.5" y="5157.8667">convert(long long &amp; val) const : void</text><ellipse cx="2282.5" cy="5167.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2291.5" y="5170.6714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2282.5" cy="5180.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2291.5" y="5183.4761">convert(bool &amp; val) const : void</text><ellipse cx="2282.5" cy="5193.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="5196.2808">convert(float &amp; val) const : void</text><ellipse cx="2282.5" cy="5205.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2291.5" y="5209.0854">convert(double &amp; val) const : void</text><ellipse cx="2282.5" cy="5218.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="5221.8901">convert(char &amp; val) const : void</text><ellipse cx="2282.5" cy="5231.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2291.5" y="5234.6948">convert(std::string &amp; val) const : void</text><ellipse cx="2282.5" cy="5244.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2291.5" y="5247.4995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2282.5" cy="5257.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2291.5" y="5260.3042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2282.5" cy="5269.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2291.5" y="5273.1089">value() const : const Int8 &amp;</text><ellipse cx="2282.5" cy="5282.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2291.5" y="5285.9136">isArray() const : bool</text><ellipse cx="2282.5" cy="5295.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="5298.7183">isStruct() const : bool</text><ellipse cx="2282.5" cy="5308.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2291.5" y="5311.5229">isInteger() const : bool</text><ellipse cx="2282.5" cy="5321.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2291.5" y="5324.3276">isSigned() const : bool</text><ellipse cx="2282.5" cy="5333.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2291.5" y="5337.1323">isNumeric() const : bool</text><ellipse cx="2282.5" cy="5346.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2291.5" y="5349.937">isBoolean() const : bool</text><ellipse cx="2282.5" cy="5359.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="5362.7417">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="5369.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="5375.5464">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="5382.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2291.5" y="5388.3511">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="5394.9453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="2291.5" y="5401.1558">operator=(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int8&gt; &amp;</text><!--MD5=[7368cdd56a5292fac79769f5043446e9]
class C_0000198808093629002393--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2269" y="4469.5"/><ellipse cx="2470.75" cy="4485.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2473.7188,4491.1406 Q2473.1406,4491.4375 2472.5,4491.5781 Q2471.8594,4491.7344 2471.1563,4491.7344 Q2468.6563,4491.7344 2467.3281,4490.0938 Q2466.0156,4488.4375 2466.0156,4485.3125 Q2466.0156,4482.1875 2467.3281,4480.5313 Q2468.6563,4478.875 2471.1563,4478.875 Q2471.8594,4478.875 2472.5,4479.0313 Q2473.1563,4479.1875 2473.7188,4479.4844 L2473.7188,4482.2031 Q2473.0938,4481.625 2472.5,4481.3594 Q2471.9063,4481.0781 2471.2813,4481.0781 Q2469.9375,4481.0781 2469.25,4482.1563 Q2468.5625,4483.2188 2468.5625,4485.3125 Q2468.5625,4487.4063 2469.25,4488.4844 Q2469.9375,4489.5469 2471.2813,4489.5469 Q2471.9063,4489.5469 2472.5,4489.2813 Q2473.0938,4489 2473.7188,4488.4219 L2473.7188,4491.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2491.25" y="4489.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="2773" y="4466.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2774" y="4478.6387">short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="2803" y1="4501.5" y2="4501.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="4507.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4509.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2289" y="4515.7104">_val : Int16</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="2803" y1="4522.3047" y2="4522.3047"/><ellipse cx="2280" cy="4533.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2289" y="4536.5151">VarHolderImpl(Int16 val) : void</text><ellipse cx="2280" cy="4546.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2289" y="4549.3198">~VarHolderImpl() : void</text><ellipse cx="2280" cy="4558.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2289" y="4562.1245">type() const : const std::type_info &amp;</text><ellipse cx="2280" cy="4571.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2289" y="4574.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2280" cy="4584.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="4587.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2280" cy="4597.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="4600.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2280" cy="4610.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="4613.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2280" cy="4622.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2289" y="4626.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2280" cy="4635.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="4638.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2280" cy="4648.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="4651.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2280" cy="4661.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="4664.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2280" cy="4674.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2289" y="4677.3667">convert(long long &amp; val) const : void</text><ellipse cx="2280" cy="4686.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2289" y="4690.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2280" cy="4699.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2289" y="4702.9761">convert(bool &amp; val) const : void</text><ellipse cx="2280" cy="4712.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2289" y="4715.7808">convert(float &amp; val) const : void</text><ellipse cx="2280" cy="4725.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2289" y="4728.5854">convert(double &amp; val) const : void</text><ellipse cx="2280" cy="4738.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2289" y="4741.3901">convert(char &amp; val) const : void</text><ellipse cx="2280" cy="4750.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2289" y="4754.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2280" cy="4763.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2289" y="4766.9995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2280" cy="4776.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2289" y="4779.8042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2280" cy="4789.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2289" y="4792.6089">value() const : const Int16 &amp;</text><ellipse cx="2280" cy="4802.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2289" y="4805.4136">isArray() const : bool</text><ellipse cx="2280" cy="4815.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="4818.2183">isStruct() const : bool</text><ellipse cx="2280" cy="4827.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2289" y="4831.0229">isInteger() const : bool</text><ellipse cx="2280" cy="4840.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2289" y="4843.8276">isSigned() const : bool</text><ellipse cx="2280" cy="4853.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2289" y="4856.6323">isNumeric() const : bool</text><ellipse cx="2280" cy="4866.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="4869.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4876.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="4882.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4888.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2289" y="4895.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4901.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2289" y="4907.8511">operator=(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int16&gt; &amp;</text><!--MD5=[f50690fc04d6f94ff7c398237d3e157e]
class C_0000976768452323437983--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2269" y="3989.5"/><ellipse cx="2478.75" cy="4005.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2481.7188,4011.1406 Q2481.1406,4011.4375 2480.5,4011.5781 Q2479.8594,4011.7344 2479.1563,4011.7344 Q2476.6563,4011.7344 2475.3281,4010.0938 Q2474.0156,4008.4375 2474.0156,4005.3125 Q2474.0156,4002.1875 2475.3281,4000.5313 Q2476.6563,3998.875 2479.1563,3998.875 Q2479.8594,3998.875 2480.5,3999.0313 Q2481.1563,3999.1875 2481.7188,3999.4844 L2481.7188,4002.2031 Q2481.0938,4001.625 2480.5,4001.3594 Q2479.9063,4001.0781 2479.2813,4001.0781 Q2477.9375,4001.0781 2477.25,4002.1563 Q2476.5625,4003.2188 2476.5625,4005.3125 Q2476.5625,4007.4063 2477.25,4008.4844 Q2477.9375,4009.5469 2479.2813,4009.5469 Q2479.9063,4009.5469 2480.5,4009.2813 Q2481.0938,4009 2481.7188,4008.4219 L2481.7188,4011.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2499.25" y="4009.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="18" x="2789" y="3986.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="16" x="2790" y="3998.6387">int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="2803" y1="4021.5" y2="4021.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="4027.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4029.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2289" y="4035.7104">_val : Int32</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="2803" y1="4042.3047" y2="4042.3047"/><ellipse cx="2280" cy="4053.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2289" y="4056.5151">VarHolderImpl(Int32 val) : void</text><ellipse cx="2280" cy="4066.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2289" y="4069.3198">~VarHolderImpl() : void</text><ellipse cx="2280" cy="4078.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2289" y="4082.1245">type() const : const std::type_info &amp;</text><ellipse cx="2280" cy="4091.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2289" y="4094.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2280" cy="4104.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="4107.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2280" cy="4117.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="4120.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2280" cy="4130.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="4133.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2280" cy="4142.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2289" y="4146.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2280" cy="4155.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="4158.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2280" cy="4168.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="4171.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2280" cy="4181.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="4184.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2280" cy="4194.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2289" y="4197.3667">convert(long long &amp; val) const : void</text><ellipse cx="2280" cy="4206.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2289" y="4210.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2280" cy="4219.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2289" y="4222.9761">convert(bool &amp; val) const : void</text><ellipse cx="2280" cy="4232.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2289" y="4235.7808">convert(float &amp; val) const : void</text><ellipse cx="2280" cy="4245.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2289" y="4248.5854">convert(double &amp; val) const : void</text><ellipse cx="2280" cy="4258.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2289" y="4261.3901">convert(char &amp; val) const : void</text><ellipse cx="2280" cy="4270.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2289" y="4274.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2280" cy="4283.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2289" y="4286.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2280" cy="4296.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2289" y="4299.8042">value() const : const Int32 &amp;</text><ellipse cx="2280" cy="4309.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2289" y="4312.6089">isArray() const : bool</text><ellipse cx="2280" cy="4322.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="4325.4136">isStruct() const : bool</text><ellipse cx="2280" cy="4335.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2289" y="4338.2183">isInteger() const : bool</text><ellipse cx="2280" cy="4347.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2289" y="4351.0229">isSigned() const : bool</text><ellipse cx="2280" cy="4360.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2289" y="4363.8276">isNumeric() const : bool</text><ellipse cx="2280" cy="4373.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2289" y="4376.6323">isBoolean() const : bool</text><ellipse cx="2280" cy="4386.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="4389.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4396.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="4402.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4408.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2289" y="4415.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="4421.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2289" y="4427.8511">operator=(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int32&gt; &amp;</text><!--MD5=[e85a9a84f93969f17bffa344a47641ce]
class C_0001804431617899042426--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="483.3594" id="C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2269" y="3471.5"/><ellipse cx="2473.25" cy="3487.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2476.2188,3493.1406 Q2475.6406,3493.4375 2475,3493.5781 Q2474.3594,3493.7344 2473.6563,3493.7344 Q2471.1563,3493.7344 2469.8281,3492.0938 Q2468.5156,3490.4375 2468.5156,3487.3125 Q2468.5156,3484.1875 2469.8281,3482.5313 Q2471.1563,3480.875 2473.6563,3480.875 Q2474.3594,3480.875 2475,3481.0313 Q2475.6563,3481.1875 2476.2188,3481.4844 L2476.2188,3484.2031 Q2475.5938,3483.625 2475,3483.3594 Q2474.4063,3483.0781 2473.7813,3483.0781 Q2472.4375,3483.0781 2471.75,3484.1563 Q2471.0625,3485.2188 2471.0625,3487.3125 Q2471.0625,3489.4063 2471.75,3490.4844 Q2472.4375,3491.5469 2473.7813,3491.5469 Q2474.4063,3491.5469 2475,3491.2813 Q2475.5938,3491 2476.2188,3490.4219 L2476.2188,3493.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2493.75" y="3491.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2778" y="3468.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2779" y="3480.6387">long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="2803" y1="3503.5" y2="3503.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="3509.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="3511.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2289" y="3517.7104">_val : Int64</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="2803" y1="3524.3047" y2="3524.3047"/><ellipse cx="2280" cy="3535.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2289" y="3538.5151">VarHolderImpl(Int64 val) : void</text><ellipse cx="2280" cy="3548.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2289" y="3551.3198">~VarHolderImpl() : void</text><ellipse cx="2280" cy="3560.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2289" y="3564.1245">type() const : const std::type_info &amp;</text><ellipse cx="2280" cy="3573.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2289" y="3576.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2280" cy="3586.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="3589.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2280" cy="3599.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="3602.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2280" cy="3612.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2289" y="3615.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2280" cy="3624.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2289" y="3628.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2280" cy="3637.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="3640.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2280" cy="3650.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="3653.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2280" cy="3663.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2289" y="3666.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2280" cy="3676.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2289" y="3679.3667">convert(long long &amp; val) const : void</text><ellipse cx="2280" cy="3688.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2289" y="3692.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2280" cy="3701.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2289" y="3704.9761">convert(bool &amp; val) const : void</text><ellipse cx="2280" cy="3714.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2289" y="3717.7808">convert(float &amp; val) const : void</text><ellipse cx="2280" cy="3727.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2289" y="3730.5854">convert(double &amp; val) const : void</text><ellipse cx="2280" cy="3740.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2289" y="3743.3901">convert(char &amp; val) const : void</text><ellipse cx="2280" cy="3752.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2289" y="3756.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2280" cy="3765.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2289" y="3768.9995">convert(DateTime &amp; dt) const : void</text><ellipse cx="2280" cy="3778.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2289" y="3781.8042">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2280" cy="3791.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2289" y="3794.6089">convert(Timestamp &amp; val) const : void</text><ellipse cx="2280" cy="3804.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2289" y="3807.4136">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2280" cy="3817.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2289" y="3820.2183">value() const : const Int64 &amp;</text><ellipse cx="2280" cy="3829.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2289" y="3833.0229">isArray() const : bool</text><ellipse cx="2280" cy="3842.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="3845.8276">isStruct() const : bool</text><ellipse cx="2280" cy="3855.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2289" y="3858.6323">isInteger() const : bool</text><ellipse cx="2280" cy="3868.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2289" y="3871.437">isSigned() const : bool</text><ellipse cx="2280" cy="3881.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2289" y="3884.2417">isNumeric() const : bool</text><ellipse cx="2280" cy="3893.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2289" y="3897.0464">isBoolean() const : bool</text><ellipse cx="2280" cy="3906.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="3909.8511">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="3916.4453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2289" y="3922.6558">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="3929.25"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2289" y="3935.4604">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="3942.0547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2289" y="3948.2651">operator=(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int64&gt; &amp;</text><!--MD5=[c3f52ae62d27edaf0dbe6c8c72118abf]
class C_0001832009513687525374--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.5;" width="537" x="2268" y="2991.5"/><ellipse cx="2442.25" cy="3007.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2445.2188,3013.1406 Q2444.6406,3013.4375 2444,3013.5781 Q2443.3594,3013.7344 2442.6563,3013.7344 Q2440.1563,3013.7344 2438.8281,3012.0938 Q2437.5156,3010.4375 2437.5156,3007.3125 Q2437.5156,3004.1875 2438.8281,3002.5313 Q2440.1563,3000.875 2442.6563,3000.875 Q2443.3594,3000.875 2444,3001.0313 Q2444.6563,3001.1875 2445.2188,3001.4844 L2445.2188,3004.2031 Q2444.5938,3003.625 2444,3003.3594 Q2443.4063,3003.0781 2442.7813,3003.0781 Q2441.4375,3003.0781 2440.75,3004.1563 Q2440.0625,3005.2188 2440.0625,3007.3125 Q2440.0625,3009.4063 2440.75,3010.4844 Q2441.4375,3011.5469 2442.7813,3011.5469 Q2443.4063,3011.5469 2444,3011.2813 Q2444.5938,3011 2445.2188,3010.4219 L2445.2188,3013.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2462.75" y="3011.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="91" x="2717" y="2988.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="2718" y="3000.6387">unsigned char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2269" x2="2804" y1="3023.5" y2="3023.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2274" y="3029.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2276" y="3031.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="2288" y="3037.7104">_val : UInt8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2269" x2="2804" y1="3044.3047" y2="3044.3047"/><ellipse cx="2279" cy="3055.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2288" y="3058.5151">VarHolderImpl(UInt8 val) : void</text><ellipse cx="2279" cy="3068.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2288" y="3071.3198">~VarHolderImpl() : void</text><ellipse cx="2279" cy="3080.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2288" y="3084.1245">type() const : const std::type_info &amp;</text><ellipse cx="2279" cy="3093.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2288" y="3096.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2279" cy="3106.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2288" y="3109.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2279" cy="3119.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2288" y="3122.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2279" cy="3132.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2288" y="3135.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2279" cy="3144.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2288" y="3148.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2279" cy="3157.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2288" y="3160.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2279" cy="3170.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2288" y="3173.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2279" cy="3183.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2288" y="3186.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2279" cy="3196.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2288" y="3199.3667">convert(long long &amp; val) const : void</text><ellipse cx="2279" cy="3208.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2288" y="3212.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2279" cy="3221.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2288" y="3224.9761">convert(bool &amp; val) const : void</text><ellipse cx="2279" cy="3234.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2288" y="3237.7808">convert(float &amp; val) const : void</text><ellipse cx="2279" cy="3247.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2288" y="3250.5854">convert(double &amp; val) const : void</text><ellipse cx="2279" cy="3260.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2288" y="3263.3901">convert(char &amp; val) const : void</text><ellipse cx="2279" cy="3272.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2288" y="3276.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2279" cy="3285.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2288" y="3288.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2279" cy="3298.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2288" y="3301.8042">value() const : const UInt8 &amp;</text><ellipse cx="2279" cy="3311.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2288" y="3314.6089">isArray() const : bool</text><ellipse cx="2279" cy="3324.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2288" y="3327.4136">isStruct() const : bool</text><ellipse cx="2279" cy="3337.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2288" y="3340.2183">isInteger() const : bool</text><ellipse cx="2279" cy="3349.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2288" y="3353.0229">isSigned() const : bool</text><ellipse cx="2279" cy="3362.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2288" y="3365.8276">isNumeric() const : bool</text><ellipse cx="2279" cy="3375.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2288" y="3378.6323">isBoolean() const : bool</text><ellipse cx="2279" cy="3388.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2288" y="3391.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2276" y="3398.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2288" y="3404.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2276" y="3410.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2288" y="3417.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2276" y="3423.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="2288" y="3429.8511">operator=(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt8&gt; &amp;</text><!--MD5=[bcd98692da4ec66009419cce89ce6bad]
class C_0000572186414558919480--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2261" y="2511.5"/><ellipse cx="2440.25" cy="2527.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2443.2188,2533.1406 Q2442.6406,2533.4375 2442,2533.5781 Q2441.3594,2533.7344 2440.6563,2533.7344 Q2438.1563,2533.7344 2436.8281,2532.0938 Q2435.5156,2530.4375 2435.5156,2527.3125 Q2435.5156,2524.1875 2436.8281,2522.5313 Q2438.1563,2520.875 2440.6563,2520.875 Q2441.3594,2520.875 2442,2521.0313 Q2442.6563,2521.1875 2443.2188,2521.4844 L2443.2188,2524.2031 Q2442.5938,2523.625 2442,2523.3594 Q2441.4063,2523.0781 2440.7813,2523.0781 Q2439.4375,2523.0781 2438.75,2524.1563 Q2438.0625,2525.2188 2438.0625,2527.3125 Q2438.0625,2529.4063 2438.75,2530.4844 Q2439.4375,2531.5469 2440.7813,2531.5469 Q2441.4063,2531.5469 2442,2531.2813 Q2442.5938,2531 2443.2188,2530.4219 L2443.2188,2533.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2460.75" y="2531.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="95" x="2720" y="2508.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="2721" y="2520.6387">unsigned short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2262" x2="2811" y1="2543.5" y2="2543.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2267" y="2549.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2551.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2281" y="2557.7104">_val : UInt16</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2262" x2="2811" y1="2564.3047" y2="2564.3047"/><ellipse cx="2272" cy="2575.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="2578.5151">VarHolderImpl(UInt16 val) : void</text><ellipse cx="2272" cy="2588.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2281" y="2591.3198">~VarHolderImpl() : void</text><ellipse cx="2272" cy="2600.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2281" y="2604.1245">type() const : const std::type_info &amp;</text><ellipse cx="2272" cy="2613.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2281" y="2616.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2272" cy="2626.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="2629.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2272" cy="2639.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="2642.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2272" cy="2652.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="2655.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2272" cy="2664.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2281" y="2668.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2272" cy="2677.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="2680.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2272" cy="2690.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="2693.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2272" cy="2703.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="2706.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2272" cy="2716.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2281" y="2719.3667">convert(long long &amp; val) const : void</text><ellipse cx="2272" cy="2728.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2281" y="2732.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2272" cy="2741.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2281" y="2744.9761">convert(bool &amp; val) const : void</text><ellipse cx="2272" cy="2754.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="2757.7808">convert(float &amp; val) const : void</text><ellipse cx="2272" cy="2767.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2281" y="2770.5854">convert(double &amp; val) const : void</text><ellipse cx="2272" cy="2780.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="2783.3901">convert(char &amp; val) const : void</text><ellipse cx="2272" cy="2792.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2281" y="2796.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2272" cy="2805.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2281" y="2808.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2272" cy="2818.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2281" y="2821.8042">value() const : const UInt16 &amp;</text><ellipse cx="2272" cy="2831.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2281" y="2834.6089">isArray() const : bool</text><ellipse cx="2272" cy="2844.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="2847.4136">isStruct() const : bool</text><ellipse cx="2272" cy="2857.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2281" y="2860.2183">isInteger() const : bool</text><ellipse cx="2272" cy="2869.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2281" y="2873.0229">isSigned() const : bool</text><ellipse cx="2272" cy="2882.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2281" y="2885.8276">isNumeric() const : bool</text><ellipse cx="2272" cy="2895.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2281" y="2898.6323">isBoolean() const : bool</text><ellipse cx="2272" cy="2908.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="2911.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2918.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="2924.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2930.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2281" y="2937.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2943.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2281" y="2949.8511">operator=(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt16&gt; &amp;</text><!--MD5=[99e94c671a89454544ae053963034ed1]
class C_0000166253842255815357--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2261" y="2031.5"/><ellipse cx="2448.25" cy="2047.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2451.2188,2053.1406 Q2450.6406,2053.4375 2450,2053.5781 Q2449.3594,2053.7344 2448.6563,2053.7344 Q2446.1563,2053.7344 2444.8281,2052.0938 Q2443.5156,2050.4375 2443.5156,2047.3125 Q2443.5156,2044.1875 2444.8281,2042.5313 Q2446.1563,2040.875 2448.6563,2040.875 Q2449.3594,2040.875 2450,2041.0313 Q2450.6563,2041.1875 2451.2188,2041.4844 L2451.2188,2044.2031 Q2450.5938,2043.625 2450,2043.3594 Q2449.4063,2043.0781 2448.7813,2043.0781 Q2447.4375,2043.0781 2446.75,2044.1563 Q2446.0625,2045.2188 2446.0625,2047.3125 Q2446.0625,2049.4063 2446.75,2050.4844 Q2447.4375,2051.5469 2448.7813,2051.5469 Q2449.4063,2051.5469 2450,2051.2813 Q2450.5938,2051 2451.2188,2050.4219 L2451.2188,2053.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2468.75" y="2051.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="79" x="2736" y="2028.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="2737" y="2040.6387">unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2262" x2="2811" y1="2063.5" y2="2063.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2267" y="2069.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2071.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2281" y="2077.7104">_val : UInt32</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2262" x2="2811" y1="2084.3047" y2="2084.3047"/><ellipse cx="2272" cy="2095.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="2098.5151">VarHolderImpl(UInt32 val) : void</text><ellipse cx="2272" cy="2108.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2281" y="2111.3198">~VarHolderImpl() : void</text><ellipse cx="2272" cy="2120.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2281" y="2124.1245">type() const : const std::type_info &amp;</text><ellipse cx="2272" cy="2133.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2281" y="2136.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2272" cy="2146.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="2149.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2272" cy="2159.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="2162.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2272" cy="2172.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="2175.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2272" cy="2184.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2281" y="2188.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2272" cy="2197.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="2200.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2272" cy="2210.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="2213.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2272" cy="2223.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="2226.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2272" cy="2236.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2281" y="2239.3667">convert(long long &amp; val) const : void</text><ellipse cx="2272" cy="2248.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2281" y="2252.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2272" cy="2261.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2281" y="2264.9761">convert(bool &amp; val) const : void</text><ellipse cx="2272" cy="2274.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="2277.7808">convert(float &amp; val) const : void</text><ellipse cx="2272" cy="2287.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2281" y="2290.5854">convert(double &amp; val) const : void</text><ellipse cx="2272" cy="2300.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="2303.3901">convert(char &amp; val) const : void</text><ellipse cx="2272" cy="2312.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2281" y="2316.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2272" cy="2325.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2281" y="2328.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2272" cy="2338.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2281" y="2341.8042">value() const : const UInt32 &amp;</text><ellipse cx="2272" cy="2351.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2281" y="2354.6089">isArray() const : bool</text><ellipse cx="2272" cy="2364.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="2367.4136">isStruct() const : bool</text><ellipse cx="2272" cy="2377.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2281" y="2380.2183">isInteger() const : bool</text><ellipse cx="2272" cy="2389.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2281" y="2393.0229">isSigned() const : bool</text><ellipse cx="2272" cy="2402.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2281" y="2405.8276">isNumeric() const : bool</text><ellipse cx="2272" cy="2415.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2281" y="2418.6323">isBoolean() const : bool</text><ellipse cx="2272" cy="2428.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="2431.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2438.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="2444.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2450.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2281" y="2457.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="2463.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2281" y="2469.8511">operator=(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt32&gt; &amp;</text><!--MD5=[0633cb007ce02e0b2259d7a912a0a465]
class C_0001459401574844645109--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="483.3594" id="C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2261" y="11898.5"/><ellipse cx="2442.75" cy="11914.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2445.7188,11920.1406 Q2445.1406,11920.4375 2444.5,11920.5781 Q2443.8594,11920.7344 2443.1563,11920.7344 Q2440.6563,11920.7344 2439.3281,11919.0938 Q2438.0156,11917.4375 2438.0156,11914.3125 Q2438.0156,11911.1875 2439.3281,11909.5313 Q2440.6563,11907.875 2443.1563,11907.875 Q2443.8594,11907.875 2444.5,11908.0313 Q2445.1563,11908.1875 2445.7188,11908.4844 L2445.7188,11911.2031 Q2445.0938,11910.625 2444.5,11910.3594 Q2443.9063,11910.0781 2443.2813,11910.0781 Q2441.9375,11910.0781 2441.25,11911.1563 Q2440.5625,11912.2188 2440.5625,11914.3125 Q2440.5625,11916.4063 2441.25,11917.4844 Q2441.9375,11918.5469 2443.2813,11918.5469 Q2443.9063,11918.5469 2444.5,11918.2813 Q2445.0938,11918 2445.7188,11917.4219 L2445.7188,11920.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2463.25" y="11918.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="90" x="2725" y="11895.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="2726" y="11907.6387">unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2262" x2="2811" y1="11930.5" y2="11930.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2267" y="11936.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="11938.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2281" y="11944.7104">_val : UInt64</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2262" x2="2811" y1="11951.3047" y2="11951.3047"/><ellipse cx="2272" cy="11962.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="11965.5151">VarHolderImpl(UInt64 val) : void</text><ellipse cx="2272" cy="11975.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2281" y="11978.3198">~VarHolderImpl() : void</text><ellipse cx="2272" cy="11987.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2281" y="11991.1245">type() const : const std::type_info &amp;</text><ellipse cx="2272" cy="12000.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2281" y="12003.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2272" cy="12013.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="12016.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2272" cy="12026.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="12029.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2272" cy="12039.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2281" y="12042.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2272" cy="12051.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2281" y="12055.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2272" cy="12064.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="12067.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2272" cy="12077.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="12080.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2272" cy="12090.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2281" y="12093.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2272" cy="12103.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2281" y="12106.3667">convert(long long &amp; val) const : void</text><ellipse cx="2272" cy="12115.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2281" y="12119.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2272" cy="12128.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2281" y="12131.9761">convert(bool &amp; val) const : void</text><ellipse cx="2272" cy="12141.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="12144.7808">convert(float &amp; val) const : void</text><ellipse cx="2272" cy="12154.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2281" y="12157.5854">convert(double &amp; val) const : void</text><ellipse cx="2272" cy="12167.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2281" y="12170.3901">convert(char &amp; val) const : void</text><ellipse cx="2272" cy="12179.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2281" y="12183.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2272" cy="12192.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2281" y="12195.9995">convert(DateTime &amp; dt) const : void</text><ellipse cx="2272" cy="12205.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2281" y="12208.8042">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2272" cy="12218.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2281" y="12221.6089">convert(Timestamp &amp; val) const : void</text><ellipse cx="2272" cy="12231.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2281" y="12234.4136">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2272" cy="12244.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2281" y="12247.2183">value() const : const UInt64 &amp;</text><ellipse cx="2272" cy="12256.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2281" y="12260.0229">isArray() const : bool</text><ellipse cx="2272" cy="12269.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="12272.8276">isStruct() const : bool</text><ellipse cx="2272" cy="12282.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2281" y="12285.6323">isInteger() const : bool</text><ellipse cx="2272" cy="12295.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2281" y="12298.437">isSigned() const : bool</text><ellipse cx="2272" cy="12308.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2281" y="12311.2417">isNumeric() const : bool</text><ellipse cx="2272" cy="12320.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2281" y="12324.0464">isBoolean() const : bool</text><ellipse cx="2272" cy="12333.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="12336.8511">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="12343.4453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2281" y="12349.6558">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="12356.25"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2281" y="12362.4604">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2269" y="12369.0547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2281" y="12375.2651">operator=(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt64&gt; &amp;</text><!--MD5=[ada13b8892848e1551fb92aa3c5167f5]
class C_0000599279109574326060--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2271.5" y="11418.5"/><ellipse cx="2473.25" cy="11434.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2476.2188,11440.1406 Q2475.6406,11440.4375 2475,11440.5781 Q2474.3594,11440.7344 2473.6563,11440.7344 Q2471.1563,11440.7344 2469.8281,11439.0938 Q2468.5156,11437.4375 2468.5156,11434.3125 Q2468.5156,11431.1875 2469.8281,11429.5313 Q2471.1563,11427.875 2473.6563,11427.875 Q2474.3594,11427.875 2475,11428.0313 Q2475.6563,11428.1875 2476.2188,11428.4844 L2476.2188,11431.2031 Q2475.5938,11430.625 2475,11430.3594 Q2474.4063,11430.0781 2473.7813,11430.0781 Q2472.4375,11430.0781 2471.75,11431.1563 Q2471.0625,11432.2188 2471.0625,11434.3125 Q2471.0625,11436.4063 2471.75,11437.4844 Q2472.4375,11438.5469 2473.7813,11438.5469 Q2474.4063,11438.5469 2475,11438.2813 Q2475.5938,11438 2476.2188,11437.4219 L2476.2188,11440.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2493.75" y="11438.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2775.5" y="11415.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2776.5" y="11427.6387">bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="11450.5" y2="11450.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2277.5" y="11456.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11458.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="2291.5" y="11464.7104">_val : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="11471.3047" y2="11471.3047"/><ellipse cx="2282.5" cy="11482.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2291.5" y="11485.5151">VarHolderImpl(bool val) : void</text><ellipse cx="2282.5" cy="11495.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2291.5" y="11498.3198">~VarHolderImpl() : void</text><ellipse cx="2282.5" cy="11507.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2291.5" y="11511.1245">type() const : const std::type_info &amp;</text><ellipse cx="2282.5" cy="11520.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2291.5" y="11523.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2282.5" cy="11533.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="11536.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2282.5" cy="11546.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="11549.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2282.5" cy="11559.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="11562.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2282.5" cy="11571.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2291.5" y="11575.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2282.5" cy="11584.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="11587.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2282.5" cy="11597.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="11600.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2282.5" cy="11610.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="11613.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2282.5" cy="11623.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2291.5" y="11626.3667">convert(long long &amp; val) const : void</text><ellipse cx="2282.5" cy="11635.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2291.5" y="11639.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2282.5" cy="11648.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2291.5" y="11651.9761">convert(bool &amp; val) const : void</text><ellipse cx="2282.5" cy="11661.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="11664.7808">convert(float &amp; val) const : void</text><ellipse cx="2282.5" cy="11674.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2291.5" y="11677.5854">convert(double &amp; val) const : void</text><ellipse cx="2282.5" cy="11687.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="11690.3901">convert(char &amp; val) const : void</text><ellipse cx="2282.5" cy="11699.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2291.5" y="11703.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2282.5" cy="11712.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2291.5" y="11715.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2282.5" cy="11725.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2291.5" y="11728.8042">value() const : const bool &amp;</text><ellipse cx="2282.5" cy="11738.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2291.5" y="11741.6089">isArray() const : bool</text><ellipse cx="2282.5" cy="11751.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="11754.4136">isStruct() const : bool</text><ellipse cx="2282.5" cy="11764.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2291.5" y="11767.2183">isInteger() const : bool</text><ellipse cx="2282.5" cy="11776.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2291.5" y="11780.0229">isSigned() const : bool</text><ellipse cx="2282.5" cy="11789.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2291.5" y="11792.8276">isNumeric() const : bool</text><ellipse cx="2282.5" cy="11802.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2291.5" y="11805.6323">isBoolean() const : bool</text><ellipse cx="2282.5" cy="11815.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="11818.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11825.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="11831.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11837.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2291.5" y="11844.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;bool&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11850.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="2291.5" y="11856.8511">operator=(const Dynamic::VarHolderImpl&lt;bool&gt; &amp; ) : Dynamic::VarHolderImpl&lt;bool&gt; &amp;</text><!--MD5=[982864d46e735f5fc451b1a43e8b29c9]
class C_0000384619052225252533--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2271.5" y="10938.5"/><ellipse cx="2472.75" cy="10954.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2475.7188,10960.1406 Q2475.1406,10960.4375 2474.5,10960.5781 Q2473.8594,10960.7344 2473.1563,10960.7344 Q2470.6563,10960.7344 2469.3281,10959.0938 Q2468.0156,10957.4375 2468.0156,10954.3125 Q2468.0156,10951.1875 2469.3281,10949.5313 Q2470.6563,10947.875 2473.1563,10947.875 Q2473.8594,10947.875 2474.5,10948.0313 Q2475.1563,10948.1875 2475.7188,10948.4844 L2475.7188,10951.2031 Q2475.0938,10950.625 2474.5,10950.3594 Q2473.9063,10950.0781 2473.2813,10950.0781 Q2471.9375,10950.0781 2471.25,10951.1563 Q2470.5625,10952.2188 2470.5625,10954.3125 Q2470.5625,10956.4063 2471.25,10957.4844 Q2471.9375,10958.5469 2473.2813,10958.5469 Q2473.9063,10958.5469 2474.5,10958.2813 Q2475.0938,10958 2475.7188,10957.4219 L2475.7188,10960.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2493.25" y="10958.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2774.5" y="10935.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2775.5" y="10947.6387">float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="10970.5" y2="10970.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2277.5" y="10976.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="10978.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2291.5" y="10984.7104">_val : float</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="10991.3047" y2="10991.3047"/><ellipse cx="2282.5" cy="11002.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2291.5" y="11005.5151">VarHolderImpl(float val) : void</text><ellipse cx="2282.5" cy="11015.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2291.5" y="11018.3198">~VarHolderImpl() : void</text><ellipse cx="2282.5" cy="11027.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2291.5" y="11031.1245">type() const : const std::type_info &amp;</text><ellipse cx="2282.5" cy="11040.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2291.5" y="11043.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2282.5" cy="11053.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="11056.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2282.5" cy="11066.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="11069.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2282.5" cy="11079.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="11082.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2282.5" cy="11091.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2291.5" y="11095.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2282.5" cy="11104.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="11107.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2282.5" cy="11117.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="11120.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2282.5" cy="11130.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="11133.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2282.5" cy="11143.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2291.5" y="11146.3667">convert(long long &amp; val) const : void</text><ellipse cx="2282.5" cy="11155.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2291.5" y="11159.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2282.5" cy="11168.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2291.5" y="11171.9761">convert(bool &amp; val) const : void</text><ellipse cx="2282.5" cy="11181.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="11184.7808">convert(float &amp; val) const : void</text><ellipse cx="2282.5" cy="11194.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2291.5" y="11197.5854">convert(double &amp; val) const : void</text><ellipse cx="2282.5" cy="11207.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="11210.3901">convert(char &amp; val) const : void</text><ellipse cx="2282.5" cy="11219.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2291.5" y="11223.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2282.5" cy="11232.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2291.5" y="11235.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2282.5" cy="11245.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2291.5" y="11248.8042">value() const : const float &amp;</text><ellipse cx="2282.5" cy="11258.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2291.5" y="11261.6089">isArray() const : bool</text><ellipse cx="2282.5" cy="11271.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="11274.4136">isStruct() const : bool</text><ellipse cx="2282.5" cy="11284.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2291.5" y="11287.2183">isInteger() const : bool</text><ellipse cx="2282.5" cy="11296.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2291.5" y="11300.0229">isSigned() const : bool</text><ellipse cx="2282.5" cy="11309.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2291.5" y="11312.8276">isNumeric() const : bool</text><ellipse cx="2282.5" cy="11322.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2291.5" y="11325.6323">isBoolean() const : bool</text><ellipse cx="2282.5" cy="11335.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="11338.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11345.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="11351.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11357.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2291.5" y="11364.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;float&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="11370.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2291.5" y="11376.8511">operator=(const Dynamic::VarHolderImpl&lt;float&gt; &amp; ) : Dynamic::VarHolderImpl&lt;float&gt; &amp;</text><!--MD5=[3b61c949f1c84cb7dc26cc961df146df]
class C_0002242257052791493112--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.5;" width="555" x="2259" y="10458.5"/><ellipse cx="2465.25" cy="10474.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2468.2188,10480.1406 Q2467.6406,10480.4375 2467,10480.5781 Q2466.3594,10480.7344 2465.6563,10480.7344 Q2463.1563,10480.7344 2461.8281,10479.0938 Q2460.5156,10477.4375 2460.5156,10474.3125 Q2460.5156,10471.1875 2461.8281,10469.5313 Q2463.1563,10467.875 2465.6563,10467.875 Q2466.3594,10467.875 2467,10468.0313 Q2467.6563,10468.1875 2468.2188,10468.4844 L2468.2188,10471.2031 Q2467.5938,10470.625 2467,10470.3594 Q2466.4063,10470.0781 2465.7813,10470.0781 Q2464.4375,10470.0781 2463.75,10471.1563 Q2463.0625,10472.2188 2463.0625,10474.3125 Q2463.0625,10476.4063 2463.75,10477.4844 Q2464.4375,10478.5469 2465.7813,10478.5469 Q2466.4063,10478.5469 2467,10478.2813 Q2467.5938,10478 2468.2188,10477.4219 L2468.2188,10480.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2485.75" y="10478.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="45" x="2772" y="10455.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="2773" y="10467.6387">double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2260" x2="2813" y1="10490.5" y2="10490.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2265" y="10496.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="10498.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2279" y="10504.7104">_val : double</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2260" x2="2813" y1="10511.3047" y2="10511.3047"/><ellipse cx="2270" cy="10522.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2279" y="10525.5151">VarHolderImpl(double val) : void</text><ellipse cx="2270" cy="10535.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2279" y="10538.3198">~VarHolderImpl() : void</text><ellipse cx="2270" cy="10547.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2279" y="10551.1245">type() const : const std::type_info &amp;</text><ellipse cx="2270" cy="10560.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2279" y="10563.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2270" cy="10573.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2279" y="10576.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2270" cy="10586.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2279" y="10589.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2270" cy="10599.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2279" y="10602.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2270" cy="10611.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2279" y="10615.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2270" cy="10624.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2279" y="10627.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2270" cy="10637.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2279" y="10640.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2270" cy="10650.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2279" y="10653.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2270" cy="10663.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2279" y="10666.3667">convert(long long &amp; val) const : void</text><ellipse cx="2270" cy="10675.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2279" y="10679.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2270" cy="10688.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2279" y="10691.9761">convert(bool &amp; val) const : void</text><ellipse cx="2270" cy="10701.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2279" y="10704.7808">convert(float &amp; val) const : void</text><ellipse cx="2270" cy="10714.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2279" y="10717.5854">convert(double &amp; val) const : void</text><ellipse cx="2270" cy="10727.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2279" y="10730.3901">convert(char &amp; val) const : void</text><ellipse cx="2270" cy="10739.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2279" y="10743.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2270" cy="10752.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2279" y="10755.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2270" cy="10765.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2279" y="10768.8042">value() const : const double &amp;</text><ellipse cx="2270" cy="10778.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2279" y="10781.6089">isArray() const : bool</text><ellipse cx="2270" cy="10791.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2279" y="10794.4136">isStruct() const : bool</text><ellipse cx="2270" cy="10804.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2279" y="10807.2183">isInteger() const : bool</text><ellipse cx="2270" cy="10816.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2279" y="10820.0229">isSigned() const : bool</text><ellipse cx="2270" cy="10829.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2279" y="10832.8276">isNumeric() const : bool</text><ellipse cx="2270" cy="10842.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2279" y="10845.6323">isBoolean() const : bool</text><ellipse cx="2270" cy="10855.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2279" y="10858.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="10865.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2279" y="10871.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="10877.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="2279" y="10884.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;double&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2267" y="10890.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="2279" y="10896.8511">operator=(const Dynamic::VarHolderImpl&lt;double&gt; &amp; ) : Dynamic::VarHolderImpl&lt;double&gt; &amp;</text><!--MD5=[987f6efd9f336e45ba4e394ec0708635]
class C_0001942181379759217898--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2271.5" y="9978.5"/><ellipse cx="2472.75" cy="9994.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2475.7188,10000.1406 Q2475.1406,10000.4375 2474.5,10000.5781 Q2473.8594,10000.7344 2473.1563,10000.7344 Q2470.6563,10000.7344 2469.3281,9999.0938 Q2468.0156,9997.4375 2468.0156,9994.3125 Q2468.0156,9991.1875 2469.3281,9989.5313 Q2470.6563,9987.875 2473.1563,9987.875 Q2473.8594,9987.875 2474.5,9988.0313 Q2475.1563,9988.1875 2475.7188,9988.4844 L2475.7188,9991.2031 Q2475.0938,9990.625 2474.5,9990.3594 Q2473.9063,9990.0781 2473.2813,9990.0781 Q2471.9375,9990.0781 2471.25,9991.1563 Q2470.5625,9992.2188 2470.5625,9994.3125 Q2470.5625,9996.4063 2471.25,9997.4844 Q2471.9375,9998.5469 2473.2813,9998.5469 Q2473.9063,9998.5469 2474.5,9998.2813 Q2475.0938,9998 2475.7188,9997.4219 L2475.7188,10000.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2493.25" y="9998.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2774.5" y="9975.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2775.5" y="9987.6387">char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="10010.5" y2="10010.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2277.5" y="10016.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="10018.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2291.5" y="10024.7104">_val : char</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2272.5" x2="2800.5" y1="10031.3047" y2="10031.3047"/><ellipse cx="2282.5" cy="10042.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2291.5" y="10045.5151">VarHolderImpl(char val) : void</text><ellipse cx="2282.5" cy="10055.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2291.5" y="10058.3198">~VarHolderImpl() : void</text><ellipse cx="2282.5" cy="10067.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2291.5" y="10071.1245">type() const : const std::type_info &amp;</text><ellipse cx="2282.5" cy="10080.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2291.5" y="10083.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2282.5" cy="10093.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="10096.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2282.5" cy="10106.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="10109.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2282.5" cy="10119.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2291.5" y="10122.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2282.5" cy="10131.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2291.5" y="10135.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2282.5" cy="10144.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="10147.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2282.5" cy="10157.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="10160.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2282.5" cy="10170.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2291.5" y="10173.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2282.5" cy="10183.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2291.5" y="10186.3667">convert(long long &amp; val) const : void</text><ellipse cx="2282.5" cy="10195.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2291.5" y="10199.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2282.5" cy="10208.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2291.5" y="10211.9761">convert(bool &amp; val) const : void</text><ellipse cx="2282.5" cy="10221.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="10224.7808">convert(float &amp; val) const : void</text><ellipse cx="2282.5" cy="10234.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2291.5" y="10237.5854">convert(double &amp; val) const : void</text><ellipse cx="2282.5" cy="10247.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2291.5" y="10250.3901">convert(char &amp; val) const : void</text><ellipse cx="2282.5" cy="10259.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2291.5" y="10263.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2282.5" cy="10272.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2291.5" y="10275.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2282.5" cy="10285.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2291.5" y="10288.8042">value() const : const char &amp;</text><ellipse cx="2282.5" cy="10298.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2291.5" y="10301.6089">isArray() const : bool</text><ellipse cx="2282.5" cy="10311.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="10314.4136">isStruct() const : bool</text><ellipse cx="2282.5" cy="10324.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2291.5" y="10327.2183">isInteger() const : bool</text><ellipse cx="2282.5" cy="10336.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2291.5" y="10340.0229">isSigned() const : bool</text><ellipse cx="2282.5" cy="10349.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2291.5" y="10352.8276">isNumeric() const : bool</text><ellipse cx="2282.5" cy="10362.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2291.5" y="10365.6323">isBoolean() const : bool</text><ellipse cx="2282.5" cy="10375.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="10378.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="10385.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2291.5" y="10391.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="10397.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2291.5" y="10404.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;char&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2279.5" y="10410.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2291.5" y="10416.8511">operator=(const Dynamic::VarHolderImpl&lt;char&gt; &amp; ) : Dynamic::VarHolderImpl&lt;char&gt; &amp;</text><!--MD5=[8b5df5fe94a553e6538357e4a77a944c]
class C_0002291903337356664508--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="483.3594" id="C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.5;" width="597" x="2238" y="9460.5"/><ellipse cx="2455.75" cy="9476.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2458.7188,9482.1406 Q2458.1406,9482.4375 2457.5,9482.5781 Q2456.8594,9482.7344 2456.1563,9482.7344 Q2453.6563,9482.7344 2452.3281,9481.0938 Q2451.0156,9479.4375 2451.0156,9476.3125 Q2451.0156,9473.1875 2452.3281,9471.5313 Q2453.6563,9469.875 2456.1563,9469.875 Q2456.8594,9469.875 2457.5,9470.0313 Q2458.1563,9470.1875 2458.7188,9470.4844 L2458.7188,9473.2031 Q2458.0938,9472.625 2457.5,9472.3594 Q2456.9063,9472.0781 2456.2813,9472.0781 Q2454.9375,9472.0781 2454.25,9473.1563 Q2453.5625,9474.2188 2453.5625,9476.3125 Q2453.5625,9478.4063 2454.25,9479.4844 Q2454.9375,9480.5469 2456.2813,9480.5469 Q2456.9063,9480.5469 2457.5,9480.2813 Q2458.0938,9480 2458.7188,9479.4219 L2458.7188,9482.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2476.25" y="9480.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="2774" y="9457.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="2775" y="9469.6387">std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2239" x2="2834" y1="9492.5" y2="9492.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2244" y="9498.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2246" y="9500.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2258" y="9506.7104">_val : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2239" x2="2834" y1="9513.3047" y2="9513.3047"/><ellipse cx="2249" cy="9524.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2258" y="9527.5151">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2249" cy="9537.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2258" y="9540.3198">VarHolderImpl(const std::string &amp; val) : void</text><ellipse cx="2249" cy="9549.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2258" y="9553.1245">~VarHolderImpl() : void</text><ellipse cx="2249" cy="9562.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2258" y="9565.9292">type() const : const std::type_info &amp;</text><ellipse cx="2249" cy="9575.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2258" y="9578.7339">convert(Int8 &amp; val) const : void</text><ellipse cx="2249" cy="9588.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2258" y="9591.5386">convert(Int16 &amp; val) const : void</text><ellipse cx="2249" cy="9601.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2258" y="9604.3433">convert(Int32 &amp; val) const : void</text><ellipse cx="2249" cy="9613.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2258" y="9617.1479">convert(Int64 &amp; val) const : void</text><ellipse cx="2249" cy="9626.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2258" y="9629.9526">convert(UInt8 &amp; val) const : void</text><ellipse cx="2249" cy="9639.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2258" y="9642.7573">convert(UInt16 &amp; val) const : void</text><ellipse cx="2249" cy="9652.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2258" y="9655.562">convert(UInt32 &amp; val) const : void</text><ellipse cx="2249" cy="9665.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2258" y="9668.3667">convert(UInt64 &amp; val) const : void</text><ellipse cx="2249" cy="9677.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2258" y="9681.1714">convert(long long &amp; val) const : void</text><ellipse cx="2249" cy="9690.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2258" y="9693.9761">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2249" cy="9703.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2258" y="9706.7808">convert(bool &amp; val) const : void</text><ellipse cx="2249" cy="9716.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2258" y="9719.5854">convert(float &amp; val) const : void</text><ellipse cx="2249" cy="9729.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2258" y="9732.3901">convert(double &amp; val) const : void</text><ellipse cx="2249" cy="9741.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2258" y="9745.1948">convert(char &amp; val) const : void</text><ellipse cx="2249" cy="9754.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2258" y="9757.9995">convert(std::string &amp; val) const : void</text><ellipse cx="2249" cy="9767.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2258" y="9770.8042">convert(UTF16String &amp; val) const : void</text><ellipse cx="2249" cy="9780.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2258" y="9783.6089">convert(DateTime &amp; val) const : void</text><ellipse cx="2249" cy="9793.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2258" y="9796.4136">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2249" cy="9806.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2258" y="9809.2183">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2249" cy="9818.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2258" y="9822.0229">convert(UUID &amp; uuid) const : void</text><ellipse cx="2249" cy="9831.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2258" y="9834.8276">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2249" cy="9844.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2258" y="9847.6323">value() const : const std::string &amp;</text><ellipse cx="2249" cy="9857.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2258" y="9860.437">isString() const : bool</text><ellipse cx="2249" cy="9870.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2258" y="9873.2417">size() const : std::size_t</text><ellipse cx="2249" cy="9882.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2258" y="9886.0464">operator[](std::string::size_type n) : char &amp;</text><ellipse cx="2249" cy="9895.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="2258" y="9898.8511">operator[](std::string::size_type n) const : const char &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2246" y="9905.4453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2258" y="9911.6558">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2246" y="9918.25"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="2258" y="9924.4604">VarHolderImpl(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2246" y="9931.0547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="571" x="2258" y="9937.2651">operator=(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp; ) : Dynamic::VarHolderImpl&lt;std::string&gt; &amp;</text><!--MD5=[c8c5b35706b5d0cb2134b841b5ae133a]
class C_0001370368867041199969--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="483.3594" id="C_0001370368867041199969" style="stroke: #A80036; stroke-width: 1.5;" width="617" x="2228" y="8942.5"/><ellipse cx="2380.25" cy="8958.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2383.2188,8964.1406 Q2382.6406,8964.4375 2382,8964.5781 Q2381.3594,8964.7344 2380.6563,8964.7344 Q2378.1563,8964.7344 2376.8281,8963.0938 Q2375.5156,8961.4375 2375.5156,8958.3125 Q2375.5156,8955.1875 2376.8281,8953.5313 Q2378.1563,8951.875 2380.6563,8951.875 Q2381.3594,8951.875 2382,8952.0313 Q2382.6563,8952.1875 2383.2188,8952.4844 L2383.2188,8955.2031 Q2382.5938,8954.625 2382,8954.3594 Q2381.4063,8954.0781 2380.7813,8954.0781 Q2379.4375,8954.0781 2378.75,8955.1563 Q2378.0625,8956.2188 2378.0625,8958.3125 Q2378.0625,8960.4063 2378.75,8961.4844 Q2379.4375,8962.5469 2380.7813,8962.5469 Q2381.4063,8962.5469 2382,8962.2813 Q2382.5938,8962 2383.2188,8961.4219 L2383.2188,8964.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2400.75" y="8962.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="215" x="2633" y="8939.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="213" x="2634" y="8951.6387">std::basic_string&lt;unsigned short&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2229" x2="2844" y1="8974.5" y2="8974.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2234" y="8980.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2236" y="8982.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2248" y="8988.7104">_val : UTF16String</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2229" x2="2844" y1="8995.3047" y2="8995.3047"/><ellipse cx="2239" cy="9006.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2248" y="9009.5151">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2239" cy="9019.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="2248" y="9022.3198">VarHolderImpl(const UTF16String &amp; val) : void</text><ellipse cx="2239" cy="9031.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2248" y="9035.1245">~VarHolderImpl() : void</text><ellipse cx="2239" cy="9044.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2248" y="9047.9292">type() const : const std::type_info &amp;</text><ellipse cx="2239" cy="9057.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2248" y="9060.7339">convert(Int8 &amp; val) const : void</text><ellipse cx="2239" cy="9070.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2248" y="9073.5386">convert(Int16 &amp; val) const : void</text><ellipse cx="2239" cy="9083.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2248" y="9086.3433">convert(Int32 &amp; val) const : void</text><ellipse cx="2239" cy="9095.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2248" y="9099.1479">convert(Int64 &amp; val) const : void</text><ellipse cx="2239" cy="9108.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2248" y="9111.9526">convert(UInt8 &amp; val) const : void</text><ellipse cx="2239" cy="9121.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2248" y="9124.7573">convert(UInt16 &amp; val) const : void</text><ellipse cx="2239" cy="9134.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2248" y="9137.562">convert(UInt32 &amp; val) const : void</text><ellipse cx="2239" cy="9147.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2248" y="9150.3667">convert(UInt64 &amp; val) const : void</text><ellipse cx="2239" cy="9159.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2248" y="9163.1714">convert(long long &amp; val) const : void</text><ellipse cx="2239" cy="9172.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2248" y="9175.9761">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2239" cy="9185.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2248" y="9188.7808">convert(bool &amp; val) const : void</text><ellipse cx="2239" cy="9198.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2248" y="9201.5854">convert(float &amp; val) const : void</text><ellipse cx="2239" cy="9211.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2248" y="9214.3901">convert(double &amp; val) const : void</text><ellipse cx="2239" cy="9223.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2248" y="9227.1948">convert(char &amp; val) const : void</text><ellipse cx="2239" cy="9236.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2248" y="9239.9995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2239" cy="9249.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2248" y="9252.8042">convert(std::string &amp; val) const : void</text><ellipse cx="2239" cy="9262.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2248" y="9265.6089">convert(DateTime &amp; val) const : void</text><ellipse cx="2239" cy="9275.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2248" y="9278.4136">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2239" cy="9288.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2248" y="9291.2183">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2239" cy="9300.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2248" y="9304.0229">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2239" cy="9313.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2248" y="9316.8276">value() const : const UTF16String &amp;</text><ellipse cx="2239" cy="9326.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2248" y="9329.6323">isString() const : bool</text><ellipse cx="2239" cy="9339.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2248" y="9342.437">size() const : std::size_t</text><ellipse cx="2239" cy="9352.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2248" y="9355.2417">operator[](UTF16String::size_type n) : UTF16Char &amp;</text><ellipse cx="2239" cy="9364.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="2248" y="9368.0464">operator[](UTF16String::size_type n) const : const UTF16Char &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2236" y="9374.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2248" y="9380.8511">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2236" y="9387.4453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="2248" y="9393.6558">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2236" y="9400.25"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="2248" y="9406.4604">operator=(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2236" y="9413.0547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2248" y="9419.2651">toStdString() const : std::string</text><!--MD5=[e547b5e99773e1bba43a948d274a41c6]
class C_0001646173285346905617--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="2245" y="8462.5"/><ellipse cx="2457.75" cy="8478.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2460.7188,8484.1406 Q2460.1406,8484.4375 2459.5,8484.5781 Q2458.8594,8484.7344 2458.1563,8484.7344 Q2455.6563,8484.7344 2454.3281,8483.0938 Q2453.0156,8481.4375 2453.0156,8478.3125 Q2453.0156,8475.1875 2454.3281,8473.5313 Q2455.6563,8471.875 2458.1563,8471.875 Q2458.8594,8471.875 2459.5,8472.0313 Q2460.1563,8472.1875 2460.7188,8472.4844 L2460.7188,8475.2031 Q2460.0938,8474.625 2459.5,8474.3594 Q2458.9063,8474.0781 2458.2813,8474.0781 Q2456.9375,8474.0781 2456.25,8475.1563 Q2455.5625,8476.2188 2455.5625,8478.3125 Q2455.5625,8480.4063 2456.25,8481.4844 Q2456.9375,8482.5469 2458.2813,8482.5469 Q2458.9063,8482.5469 2459.5,8482.2813 Q2460.0938,8482 2460.7188,8481.4219 L2460.7188,8484.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2478.25" y="8482.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="60" x="2771" y="8459.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="2772" y="8471.6387">long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2246" x2="2827" y1="8494.5" y2="8494.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2251" y="8500.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2253" y="8502.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2265" y="8508.7104">_val : long long</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2246" x2="2827" y1="8515.3047" y2="8515.3047"/><ellipse cx="2256" cy="8526.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2265" y="8529.5151">VarHolderImpl(long long val) : void</text><ellipse cx="2256" cy="8539.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2265" y="8542.3198">~VarHolderImpl() : void</text><ellipse cx="2256" cy="8551.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2265" y="8555.1245">type() const : const std::type_info &amp;</text><ellipse cx="2256" cy="8564.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2265" y="8567.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2256" cy="8577.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2265" y="8580.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2256" cy="8590.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2265" y="8593.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2256" cy="8603.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2265" y="8606.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2256" cy="8615.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2265" y="8619.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2256" cy="8628.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2265" y="8631.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2256" cy="8641.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2265" y="8644.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2256" cy="8654.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2265" y="8657.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2256" cy="8667.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2265" y="8670.3667">convert(long long &amp; val) const : void</text><ellipse cx="2256" cy="8679.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2265" y="8683.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2256" cy="8692.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2265" y="8695.9761">convert(bool &amp; val) const : void</text><ellipse cx="2256" cy="8705.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2265" y="8708.7808">convert(float &amp; val) const : void</text><ellipse cx="2256" cy="8718.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2265" y="8721.5854">convert(double &amp; val) const : void</text><ellipse cx="2256" cy="8731.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2265" y="8734.3901">convert(char &amp; val) const : void</text><ellipse cx="2256" cy="8743.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2265" y="8747.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2256" cy="8756.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2265" y="8759.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2256" cy="8769.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2265" y="8772.8042">value() const : const long long &amp;</text><ellipse cx="2256" cy="8782.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2265" y="8785.6089">isArray() const : bool</text><ellipse cx="2256" cy="8795.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2265" y="8798.4136">isStruct() const : bool</text><ellipse cx="2256" cy="8808.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2265" y="8811.2183">isInteger() const : bool</text><ellipse cx="2256" cy="8820.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2265" y="8824.0229">isSigned() const : bool</text><ellipse cx="2256" cy="8833.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2265" y="8836.8276">isNumeric() const : bool</text><ellipse cx="2256" cy="8846.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2265" y="8849.6323">isBoolean() const : bool</text><ellipse cx="2256" cy="8859.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2265" y="8862.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2253" y="8869.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2265" y="8875.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2253" y="8881.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="2265" y="8888.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;long long&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2253" y="8894.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="2265" y="8900.8511">operator=(const Dynamic::VarHolderImpl&lt;long long&gt; &amp; ) : Dynamic::VarHolderImpl&lt;long long&gt; &amp;</text><!--MD5=[d32390979af13b4d5d37b0e60ea6c197]
class C_0001583654034047392858--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.5;" width="695" x="2189" y="7982.5"/><ellipse cx="2427.25" cy="7998.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2430.2188,8004.1406 Q2429.6406,8004.4375 2429,8004.5781 Q2428.3594,8004.7344 2427.6563,8004.7344 Q2425.1563,8004.7344 2423.8281,8003.0938 Q2422.5156,8001.4375 2422.5156,7998.3125 Q2422.5156,7995.1875 2423.8281,7993.5313 Q2425.1563,7991.875 2427.6563,7991.875 Q2428.3594,7991.875 2429,7992.0313 Q2429.6563,7992.1875 2430.2188,7992.4844 L2430.2188,7995.2031 Q2429.5938,7994.625 2429,7994.3594 Q2428.4063,7994.0781 2427.7813,7994.0781 Q2426.4375,7994.0781 2425.75,7995.1563 Q2425.0625,7996.2188 2425.0625,7998.3125 Q2425.0625,8000.4063 2425.75,8001.4844 Q2426.4375,8002.5469 2427.7813,8002.5469 Q2428.4063,8002.5469 2429,8002.2813 Q2429.5938,8002 2430.2188,8001.4219 L2430.2188,8004.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2447.75" y="8002.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="121" x="2766" y="7979.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="2767" y="7991.6387">unsigned long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2190" x2="2883" y1="8014.5" y2="8014.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2195" y="8020.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2197" y="8022.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2209" y="8028.7104">_val : unsigned long long</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2190" x2="2883" y1="8035.3047" y2="8035.3047"/><ellipse cx="2200" cy="8046.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2209" y="8049.5151">VarHolderImpl(unsigned long long val) : void</text><ellipse cx="2200" cy="8059.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2209" y="8062.3198">~VarHolderImpl() : void</text><ellipse cx="2200" cy="8071.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2209" y="8075.1245">type() const : const std::type_info &amp;</text><ellipse cx="2200" cy="8084.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2209" y="8087.9292">convert(Int8 &amp; val) const : void</text><ellipse cx="2200" cy="8097.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2209" y="8100.7339">convert(Int16 &amp; val) const : void</text><ellipse cx="2200" cy="8110.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2209" y="8113.5386">convert(Int32 &amp; val) const : void</text><ellipse cx="2200" cy="8123.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2209" y="8126.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2200" cy="8135.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2209" y="8139.1479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2200" cy="8148.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2209" y="8151.9526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2200" cy="8161.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2209" y="8164.7573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2200" cy="8174.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2209" y="8177.562">convert(UInt64 &amp; val) const : void</text><ellipse cx="2200" cy="8187.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2209" y="8190.3667">convert(long long &amp; val) const : void</text><ellipse cx="2200" cy="8199.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2209" y="8203.1714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2200" cy="8212.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2209" y="8215.9761">convert(bool &amp; val) const : void</text><ellipse cx="2200" cy="8225.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2209" y="8228.7808">convert(float &amp; val) const : void</text><ellipse cx="2200" cy="8238.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2209" y="8241.5854">convert(double &amp; val) const : void</text><ellipse cx="2200" cy="8251.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2209" y="8254.3901">convert(char &amp; val) const : void</text><ellipse cx="2200" cy="8263.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2209" y="8267.1948">convert(std::string &amp; val) const : void</text><ellipse cx="2200" cy="8276.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2209" y="8279.9995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2200" cy="8289.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2209" y="8292.8042">value() const : const unsigned long long &amp;</text><ellipse cx="2200" cy="8302.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2209" y="8305.6089">isArray() const : bool</text><ellipse cx="2200" cy="8315.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2209" y="8318.4136">isStruct() const : bool</text><ellipse cx="2200" cy="8328.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2209" y="8331.2183">isInteger() const : bool</text><ellipse cx="2200" cy="8340.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2209" y="8344.0229">isSigned() const : bool</text><ellipse cx="2200" cy="8353.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2209" y="8356.8276">isNumeric() const : bool</text><ellipse cx="2200" cy="8366.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2209" y="8369.6323">isBoolean() const : bool</text><ellipse cx="2200" cy="8379.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2209" y="8382.437">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2197" y="8389.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2209" y="8395.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2197" y="8401.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="2209" y="8408.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2197" y="8414.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="2209" y="8420.8511">operator=(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp; ) : Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp;</text><!--MD5=[5774863192e27d837b2947413a649565]
class C_0000910307965681926894--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="227.2656" id="C_0000910307965681926894" style="stroke: #A80036; stroke-width: 1.5;" width="1055" x="2009" y="7720.5"/><ellipse cx="2440.25" cy="7736.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2443.2188,7742.1406 Q2442.6406,7742.4375 2442,7742.5781 Q2441.3594,7742.7344 2440.6563,7742.7344 Q2438.1563,7742.7344 2436.8281,7741.0938 Q2435.5156,7739.4375 2435.5156,7736.3125 Q2435.5156,7733.1875 2436.8281,7731.5313 Q2438.1563,7729.875 2440.6563,7729.875 Q2441.3594,7729.875 2442,7730.0313 Q2442.6563,7730.1875 2443.2188,7730.4844 L2443.2188,7733.2031 Q2442.5938,7732.625 2442,7732.3594 Q2441.4063,7732.0781 2440.7813,7732.0781 Q2439.4375,7732.0781 2438.75,7733.1563 Q2438.0625,7734.2188 2438.0625,7736.3125 Q2438.0625,7738.4063 2438.75,7739.4844 Q2439.4375,7740.5469 2440.7813,7740.5469 Q2441.4063,7740.5469 2442,7740.2813 Q2442.5938,7740 2443.2188,7739.4219 L2443.2188,7742.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2460.75" y="7740.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="95" x="2972" y="7717.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="2973" y="7729.6387">std::vector&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2010" x2="3063" y1="7752.5" y2="7752.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2015" y="7758.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7760.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2029" y="7766.7104">_val : std::vector&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2010" x2="3063" y1="7773.3047" y2="7773.3047"/><ellipse cx="2020" cy="7784.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2029" y="7787.5151">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::vector&lt;T&gt; &amp; val) : void</text><ellipse cx="2020" cy="7797.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="2029" y="7800.3198">~VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="2020" cy="7809.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2029" y="7813.1245">type() const : const std::type_info &amp;</text><ellipse cx="2020" cy="7822.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2029" y="7825.9292">convert(std::string &amp; val) const : void</text><ellipse cx="2020" cy="7835.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2029" y="7838.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2020" cy="7848.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2029" y="7851.5386">value() const : const std::vector&lt;T&gt; &amp;</text><ellipse cx="2020" cy="7861.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2029" y="7864.3433">isVector() const : bool</text><ellipse cx="2020" cy="7873.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2029" y="7877.1479">size() const : std::size_t</text><ellipse cx="2020" cy="7886.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2029" y="7889.9526">operator[](typename std::vector&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="2020" cy="7899.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2029" y="7902.7573">operator[](typename std::vector&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7909.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="2029" y="7915.562">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7922.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="2029" y="7928.3667">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7934.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1029" x="2029" y="7941.1714">operator=(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[98ccd02d0df14638a1247e05b06b34a2]
class C_0000355772964752054032--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="227.2656" id="C_0000355772964752054032" style="stroke: #A80036; stroke-width: 1.5;" width="1019" x="2027" y="7458.5"/><ellipse cx="2451.25" cy="7474.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2454.2188,7480.1406 Q2453.6406,7480.4375 2453,7480.5781 Q2452.3594,7480.7344 2451.6563,7480.7344 Q2449.1563,7480.7344 2447.8281,7479.0938 Q2446.5156,7477.4375 2446.5156,7474.3125 Q2446.5156,7471.1875 2447.8281,7469.5313 Q2449.1563,7467.875 2451.6563,7467.875 Q2452.3594,7467.875 2453,7468.0313 Q2453.6563,7468.1875 2454.2188,7468.4844 L2454.2188,7471.2031 Q2453.5938,7470.625 2453,7470.3594 Q2452.4063,7470.0781 2451.7813,7470.0781 Q2450.4375,7470.0781 2449.75,7471.1563 Q2449.0625,7472.2188 2449.0625,7474.3125 Q2449.0625,7476.4063 2449.75,7477.4844 Q2450.4375,7478.5469 2451.7813,7478.5469 Q2452.4063,7478.5469 2453,7478.2813 Q2453.5938,7478 2454.2188,7477.4219 L2454.2188,7480.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2471.75" y="7478.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="73" x="2976" y="7455.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="2977" y="7467.6387">std::list&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2028" x2="3045" y1="7490.5" y2="7490.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2033" y="7496.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2035" y="7498.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2047" y="7504.7104">_val : std::list&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2028" x2="3045" y1="7511.3047" y2="7511.3047"/><ellipse cx="2038" cy="7522.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="616" x="2047" y="7525.5151">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::list&lt;T&gt; &amp; val) : void</text><ellipse cx="2038" cy="7535.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="2047" y="7538.3198">~VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="2038" cy="7547.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2047" y="7551.1245">type() const : const std::type_info &amp;</text><ellipse cx="2038" cy="7560.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2047" y="7563.9292">convert(std::string &amp; val) const : void</text><ellipse cx="2038" cy="7573.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2047" y="7576.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2038" cy="7586.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2047" y="7589.5386">value() const : const std::list&lt;T&gt; &amp;</text><ellipse cx="2038" cy="7599.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2047" y="7602.3433">isList() const : bool</text><ellipse cx="2038" cy="7611.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2047" y="7615.1479">size() const : std::size_t</text><ellipse cx="2038" cy="7624.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="2047" y="7627.9526">operator[](typename std::list&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="2038" cy="7637.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="2047" y="7640.7573">operator[](typename std::list&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2035" y="7647.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="2047" y="7653.562">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2035" y="7660.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="956" x="2047" y="7666.3667">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2035" y="7672.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="993" x="2047" y="7679.1714">operator=(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[a4496fd8b9f9f58f5ef896c71d14cd41]
class C_0001350084679139174053--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="227.2656" id="C_0001350084679139174053" style="stroke: #A80036; stroke-width: 1.5;" width="1055" x="2009" y="7196.5"/><ellipse cx="2439.75" cy="7212.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2442.7188,7218.1406 Q2442.1406,7218.4375 2441.5,7218.5781 Q2440.8594,7218.7344 2440.1563,7218.7344 Q2437.6563,7218.7344 2436.3281,7217.0938 Q2435.0156,7215.4375 2435.0156,7212.3125 Q2435.0156,7209.1875 2436.3281,7207.5313 Q2437.6563,7205.875 2440.1563,7205.875 Q2440.8594,7205.875 2441.5,7206.0313 Q2442.1563,7206.1875 2442.7188,7206.4844 L2442.7188,7209.2031 Q2442.0938,7208.625 2441.5,7208.3594 Q2440.9063,7208.0781 2440.2813,7208.0781 Q2438.9375,7208.0781 2438.25,7209.1563 Q2437.5625,7210.2188 2437.5625,7212.3125 Q2437.5625,7214.4063 2438.25,7215.4844 Q2438.9375,7216.5469 2440.2813,7216.5469 Q2440.9063,7216.5469 2441.5,7216.2813 Q2442.0938,7216 2442.7188,7215.4219 L2442.7188,7218.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2460.25" y="7216.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="96" x="2971" y="7193.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="2972" y="7205.6387">std::deque&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2010" x2="3063" y1="7228.5" y2="7228.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2015" y="7234.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7236.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2029" y="7242.7104">_val : std::deque&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2010" x2="3063" y1="7249.3047" y2="7249.3047"/><ellipse cx="2020" cy="7260.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2029" y="7263.5151">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::deque&lt;T&gt; &amp; val) : void</text><ellipse cx="2020" cy="7273.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="2029" y="7276.3198">~VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="2020" cy="7285.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2029" y="7289.1245">type() const : const std::type_info &amp;</text><ellipse cx="2020" cy="7298.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2029" y="7301.9292">convert(std::string &amp; val) const : void</text><ellipse cx="2020" cy="7311.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2029" y="7314.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2020" cy="7324.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2029" y="7327.5386">value() const : const std::deque&lt;T&gt; &amp;</text><ellipse cx="2020" cy="7337.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2029" y="7340.3433">isDeque() const : bool</text><ellipse cx="2020" cy="7349.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2029" y="7353.1479">size() const : std::size_t</text><ellipse cx="2020" cy="7362.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2029" y="7365.9526">operator[](typename std::deque&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="2020" cy="7375.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2029" y="7378.7573">operator[](typename std::deque&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7385.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="2029" y="7391.562">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7398.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="2029" y="7404.3667">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2017" y="7410.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1029" x="2029" y="7417.1714">operator=(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[d3f4e35f4bae44fdf6c46a1300227a72]
class C_0000699000175415913074--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="444.9453" id="C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.5;" width="587" x="2243" y="6716.5"/><ellipse cx="2457.25" cy="6732.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2460.2188,6738.1406 Q2459.6406,6738.4375 2459,6738.5781 Q2458.3594,6738.7344 2457.6563,6738.7344 Q2455.1563,6738.7344 2453.8281,6737.0938 Q2452.5156,6735.4375 2452.5156,6732.3125 Q2452.5156,6729.1875 2453.8281,6727.5313 Q2455.1563,6725.875 2457.6563,6725.875 Q2458.3594,6725.875 2459,6726.0313 Q2459.6563,6726.1875 2460.2188,6726.4844 L2460.2188,6729.2031 Q2459.5938,6728.625 2459,6728.3594 Q2458.4063,6728.0781 2457.7813,6728.0781 Q2456.4375,6728.0781 2455.75,6729.1563 Q2455.0625,6730.2188 2455.0625,6732.3125 Q2455.0625,6734.4063 2455.75,6735.4844 Q2456.4375,6736.5469 2457.7813,6736.5469 Q2458.4063,6736.5469 2459,6736.2813 Q2459.5938,6736 2460.2188,6735.4219 L2460.2188,6738.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2477.75" y="6736.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="61" x="2772" y="6713.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="59" x="2773" y="6725.6387">DateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2244" x2="2829" y1="6748.5" y2="6748.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2249" y="6754.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2251" y="6756.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2263" y="6762.7104">_val : DateTime</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2244" x2="2829" y1="6769.3047" y2="6769.3047"/><ellipse cx="2254" cy="6780.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2263" y="6783.5151">VarHolderImpl(const DateTime &amp; val) : void</text><ellipse cx="2254" cy="6793.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2263" y="6796.3198">~VarHolderImpl() : void</text><ellipse cx="2254" cy="6805.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2263" y="6809.1245">type() const : const std::type_info &amp;</text><ellipse cx="2254" cy="6818.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2263" y="6821.9292">convert(Int8 &amp; ) const : void</text><ellipse cx="2254" cy="6831.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2263" y="6834.7339">convert(Int16 &amp; ) const : void</text><ellipse cx="2254" cy="6844.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2263" y="6847.5386">convert(Int32 &amp; ) const : void</text><ellipse cx="2254" cy="6857.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2263" y="6860.3433">convert(Int64 &amp; val) const : void</text><ellipse cx="2254" cy="6869.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2263" y="6873.1479">convert(UInt64 &amp; val) const : void</text><ellipse cx="2254" cy="6882.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2263" y="6885.9526">convert(long long &amp; val) const : void</text><ellipse cx="2254" cy="6895.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2263" y="6898.7573">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2254" cy="6908.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2263" y="6911.562">convert(std::string &amp; val) const : void</text><ellipse cx="2254" cy="6921.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2263" y="6924.3667">convert(DateTime &amp; val) const : void</text><ellipse cx="2254" cy="6933.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2263" y="6937.1714">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2254" cy="6946.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2263" y="6949.9761">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2254" cy="6959.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2263" y="6962.7808">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2254" cy="6972.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2263" y="6975.5854">value() const : const DateTime &amp;</text><ellipse cx="2254" cy="6985.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2263" y="6988.3901">isArray() const : bool</text><ellipse cx="2254" cy="6997.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2263" y="7001.1948">isStruct() const : bool</text><ellipse cx="2254" cy="7010.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2263" y="7013.9995">isInteger() const : bool</text><ellipse cx="2254" cy="7023.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2263" y="7026.8042">isSigned() const : bool</text><ellipse cx="2254" cy="7036.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2263" y="7039.6089">isNumeric() const : bool</text><ellipse cx="2254" cy="7049.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2263" y="7052.4136">isBoolean() const : bool</text><ellipse cx="2254" cy="7062.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2263" y="7065.2183">isString() const : bool</text><ellipse cx="2254" cy="7074.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2263" y="7078.0229">isDate() const : bool</text><ellipse cx="2254" cy="7087.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2263" y="7090.8276">isTime() const : bool</text><ellipse cx="2254" cy="7100.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2263" y="7103.6323">isDateTime() const : bool</text><ellipse cx="2254" cy="7113.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2263" y="7116.437">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2251" y="7123.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2263" y="7129.2417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2251" y="7135.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="2263" y="7142.0464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2251" y="7148.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="2263" y="7154.8511">operator=(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp; ) : Dynamic::VarHolderImpl&lt;DateTime&gt; &amp;</text><!--MD5=[535f5640b87cab7cf4763634b5dabc9e]
class C_0001850771625416044357--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="406.5313" id="C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.5;" width="645" x="2214" y="6274.5"/><ellipse cx="2440.75" cy="6290.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2443.7188,6296.1406 Q2443.1406,6296.4375 2442.5,6296.5781 Q2441.8594,6296.7344 2441.1563,6296.7344 Q2438.6563,6296.7344 2437.3281,6295.0938 Q2436.0156,6293.4375 2436.0156,6290.3125 Q2436.0156,6287.1875 2437.3281,6285.5313 Q2438.6563,6283.875 2441.1563,6283.875 Q2441.8594,6283.875 2442.5,6284.0313 Q2443.1563,6284.1875 2443.7188,6284.4844 L2443.7188,6287.2031 Q2443.0938,6286.625 2442.5,6286.3594 Q2441.9063,6286.0781 2441.2813,6286.0781 Q2439.9375,6286.0781 2439.25,6287.1563 Q2438.5625,6288.2188 2438.5625,6290.3125 Q2438.5625,6292.4063 2439.25,6293.4844 Q2439.9375,6294.5469 2441.2813,6294.5469 Q2441.9063,6294.5469 2442.5,6294.2813 Q2443.0938,6294 2443.7188,6293.4219 L2443.7188,6296.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2461.25" y="6294.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="94" x="2768" y="6271.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="2769" y="6283.6387">LocalDateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2215" x2="2858" y1="6306.5" y2="6306.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2220" y="6312.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2222" y="6314.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2234" y="6320.7104">_val : LocalDateTime</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2215" x2="2858" y1="6327.3047" y2="6327.3047"/><ellipse cx="2225" cy="6338.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="2234" y="6341.5151">VarHolderImpl(const LocalDateTime &amp; val) : void</text><ellipse cx="2225" cy="6351.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2234" y="6354.3198">~VarHolderImpl() : void</text><ellipse cx="2225" cy="6363.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2234" y="6367.1245">type() const : const std::type_info &amp;</text><ellipse cx="2225" cy="6376.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2234" y="6379.9292">convert(Int64 &amp; val) const : void</text><ellipse cx="2225" cy="6389.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2234" y="6392.7339">convert(UInt64 &amp; val) const : void</text><ellipse cx="2225" cy="6402.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2234" y="6405.5386">convert(long long &amp; val) const : void</text><ellipse cx="2225" cy="6415.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2234" y="6418.3433">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2225" cy="6427.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2234" y="6431.1479">convert(std::string &amp; val) const : void</text><ellipse cx="2225" cy="6440.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2234" y="6443.9526">convert(DateTime &amp; val) const : void</text><ellipse cx="2225" cy="6453.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2234" y="6456.7573">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2225" cy="6466.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2234" y="6469.562">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2225" cy="6479.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2234" y="6482.3667">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2225" cy="6491.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2234" y="6495.1714">value() const : const LocalDateTime &amp;</text><ellipse cx="2225" cy="6504.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2234" y="6507.9761">isArray() const : bool</text><ellipse cx="2225" cy="6517.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2234" y="6520.7808">isStruct() const : bool</text><ellipse cx="2225" cy="6530.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2234" y="6533.5854">isInteger() const : bool</text><ellipse cx="2225" cy="6543.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2234" y="6546.3901">isSigned() const : bool</text><ellipse cx="2225" cy="6555.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2234" y="6559.1948">isNumeric() const : bool</text><ellipse cx="2225" cy="6568.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2234" y="6571.9995">isBoolean() const : bool</text><ellipse cx="2225" cy="6581.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2234" y="6584.8042">isString() const : bool</text><ellipse cx="2225" cy="6594.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2234" y="6597.6089">isDate() const : bool</text><ellipse cx="2225" cy="6607.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2234" y="6610.4136">isTime() const : bool</text><ellipse cx="2225" cy="6620.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2234" y="6623.2183">isDateTime() const : bool</text><ellipse cx="2225" cy="6632.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2234" y="6636.0229">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2222" y="6642.6172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2234" y="6648.8276">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2222" y="6655.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="2234" y="6661.6323">VarHolderImpl(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2222" y="6668.2266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="619" x="2234" y="6674.437">operator=(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp; ) : Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp;</text><!--MD5=[7d52b6bd4d6f4b5a6d942536c6534914]
class C_0001458511670125196521--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="406.5313" id="C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.5;" width="607" x="2233" y="5832.5"/><ellipse cx="2453.25" cy="5848.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2456.2188,5854.1406 Q2455.6406,5854.4375 2455,5854.5781 Q2454.3594,5854.7344 2453.6563,5854.7344 Q2451.1563,5854.7344 2449.8281,5853.0938 Q2448.5156,5851.4375 2448.5156,5848.3125 Q2448.5156,5845.1875 2449.8281,5843.5313 Q2451.1563,5841.875 2453.6563,5841.875 Q2454.3594,5841.875 2455,5842.0313 Q2455.6563,5842.1875 2456.2188,5842.4844 L2456.2188,5845.2031 Q2455.5938,5844.625 2455,5844.3594 Q2454.4063,5844.0781 2453.7813,5844.0781 Q2452.4375,5844.0781 2451.75,5845.1563 Q2451.0625,5846.2188 2451.0625,5848.3125 Q2451.0625,5850.4063 2451.75,5851.4844 Q2452.4375,5852.5469 2453.7813,5852.5469 Q2454.4063,5852.5469 2455,5852.2813 Q2455.5938,5852 2456.2188,5851.4219 L2456.2188,5854.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2473.75" y="5852.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="69" x="2774" y="5829.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="67" x="2775" y="5841.6387">Timestamp</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2234" x2="2839" y1="5864.5" y2="5864.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2239" y="5870.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2241" y="5872.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2253" y="5878.7104">_val : Timestamp</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2234" x2="2839" y1="5885.3047" y2="5885.3047"/><ellipse cx="2244" cy="5896.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2253" y="5899.5151">VarHolderImpl(const Timestamp &amp; val) : void</text><ellipse cx="2244" cy="5909.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2253" y="5912.3198">~VarHolderImpl() : void</text><ellipse cx="2244" cy="5921.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2253" y="5925.1245">type() const : const std::type_info &amp;</text><ellipse cx="2244" cy="5934.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2253" y="5937.9292">convert(Int64 &amp; val) const : void</text><ellipse cx="2244" cy="5947.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2253" y="5950.7339">convert(UInt64 &amp; val) const : void</text><ellipse cx="2244" cy="5960.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2253" y="5963.5386">convert(long long &amp; val) const : void</text><ellipse cx="2244" cy="5973.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2253" y="5976.3433">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2244" cy="5985.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2253" y="5989.1479">convert(std::string &amp; val) const : void</text><ellipse cx="2244" cy="5998.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2253" y="6001.9526">convert(DateTime &amp; val) const : void</text><ellipse cx="2244" cy="6011.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2253" y="6014.7573">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2244" cy="6024.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2253" y="6027.562">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2244" cy="6037.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2253" y="6040.3667">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2244" cy="6049.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2253" y="6053.1714">value() const : const Timestamp &amp;</text><ellipse cx="2244" cy="6062.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2253" y="6065.9761">isArray() const : bool</text><ellipse cx="2244" cy="6075.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2253" y="6078.7808">isStruct() const : bool</text><ellipse cx="2244" cy="6088.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2253" y="6091.5854">isInteger() const : bool</text><ellipse cx="2244" cy="6101.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2253" y="6104.3901">isSigned() const : bool</text><ellipse cx="2244" cy="6113.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2253" y="6117.1948">isNumeric() const : bool</text><ellipse cx="2244" cy="6126.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2253" y="6129.9995">isBoolean() const : bool</text><ellipse cx="2244" cy="6139.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2253" y="6142.8042">isString() const : bool</text><ellipse cx="2244" cy="6152.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2253" y="6155.6089">isDate() const : bool</text><ellipse cx="2244" cy="6165.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2253" y="6168.4136">isTime() const : bool</text><ellipse cx="2244" cy="6178.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2253" y="6181.2183">isDateTime() const : bool</text><ellipse cx="2244" cy="6190.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2253" y="6194.0229">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2241" y="6200.6172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2253" y="6206.8276">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2241" y="6213.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="2253" y="6219.6323">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2241" y="6226.2266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="581" x="2253" y="6232.437">operator=(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp;</text><!--MD5=[6aaca93ee2c23e99033b42cf172acb7a]
class C_0001286239480653274581--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="316.8984" id="C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="2270" y="5480.5"/><ellipse cx="2471.25" cy="5496.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2474.2188,5502.1406 Q2473.6406,5502.4375 2473,5502.5781 Q2472.3594,5502.7344 2471.6563,5502.7344 Q2469.1563,5502.7344 2467.8281,5501.0938 Q2466.5156,5499.4375 2466.5156,5496.3125 Q2466.5156,5493.1875 2467.8281,5491.5313 Q2469.1563,5489.875 2471.6563,5489.875 Q2472.3594,5489.875 2473,5490.0313 Q2473.6563,5490.1875 2474.2188,5490.4844 L2474.2188,5493.2031 Q2473.5938,5492.625 2473,5492.3594 Q2472.4063,5492.0781 2471.7813,5492.0781 Q2470.4375,5492.0781 2469.75,5493.1563 Q2469.0625,5494.2188 2469.0625,5496.3125 Q2469.0625,5498.4063 2469.75,5499.4844 Q2470.4375,5500.5469 2471.7813,5500.5469 Q2472.4063,5500.5469 2473,5500.2813 Q2473.5938,5500 2474.2188,5499.4219 L2474.2188,5502.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2491.75" y="5500.6543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="33" x="2773" y="5477.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="31" x="2774" y="5489.6387">UUID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2271" x2="2802" y1="5512.5" y2="5512.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2276" y="5518.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2278" y="5520.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="2290" y="5526.7104">_val : UUID</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2271" x2="2802" y1="5533.3047" y2="5533.3047"/><ellipse cx="2281" cy="5544.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2290" y="5547.5151">VarHolderImpl(const UUID &amp; val) : void</text><ellipse cx="2281" cy="5557.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2290" y="5560.3198">~VarHolderImpl() : void</text><ellipse cx="2281" cy="5569.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2290" y="5573.1245">type() const : const std::type_info &amp;</text><ellipse cx="2281" cy="5582.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2290" y="5585.9292">convert(std::string &amp; val) const : void</text><ellipse cx="2281" cy="5595.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2290" y="5598.7339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2281" cy="5608.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="2290" y="5611.5386">value() const : const UUID &amp;</text><ellipse cx="2281" cy="5621.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2290" y="5624.3433">isArray() const : bool</text><ellipse cx="2281" cy="5633.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2290" y="5637.1479">isStruct() const : bool</text><ellipse cx="2281" cy="5646.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2290" y="5649.9526">isInteger() const : bool</text><ellipse cx="2281" cy="5659.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2290" y="5662.7573">isSigned() const : bool</text><ellipse cx="2281" cy="5672.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2290" y="5675.562">isNumeric() const : bool</text><ellipse cx="2281" cy="5685.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2290" y="5688.3667">isBoolean() const : bool</text><ellipse cx="2281" cy="5697.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2290" y="5701.1714">isString() const : bool</text><ellipse cx="2281" cy="5710.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2290" y="5713.9761">isDate() const : bool</text><ellipse cx="2281" cy="5723.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2290" y="5726.7808">isTime() const : bool</text><ellipse cx="2281" cy="5736.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2290" y="5739.5854">isDateTime() const : bool</text><ellipse cx="2281" cy="5749.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2290" y="5752.3901">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2278" y="5758.9844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2290" y="5765.1948">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2278" y="5771.7891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="2290" y="5777.9995">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2278" y="5784.5938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="2290" y="5790.8042">operator=(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UUID&gt; &amp;</text><!--MD5=[d0a79e34608f36a598cfde4fcdc22a46]
class C_0002237184725500898553--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33" target="_top" title="VarIterator" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33" xlink:show="new" xlink:title="VarIterator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="355.3125" id="C_0002237184725500898553" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="38" y="6133.5"/><ellipse cx="217.25" cy="6149.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M220.2188,6155.1406 Q219.6406,6155.4375 219,6155.5781 Q218.3594,6155.7344 217.6563,6155.7344 Q215.1563,6155.7344 213.8281,6154.0938 Q212.5156,6152.4375 212.5156,6149.3125 Q212.5156,6146.1875 213.8281,6144.5313 Q215.1563,6142.875 217.6563,6142.875 Q218.3594,6142.875 219,6143.0313 Q219.6563,6143.1875 220.2188,6143.4844 L220.2188,6146.2031 Q219.5938,6145.625 219,6145.3594 Q218.4063,6145.0781 217.7813,6145.0781 Q216.4375,6145.0781 215.75,6146.1563 Q215.0625,6147.2188 215.0625,6149.3125 Q215.0625,6151.4063 215.75,6152.4844 Q216.4375,6153.5469 217.7813,6153.5469 Q218.4063,6153.5469 219,6153.2813 Q219.5938,6153 220.2188,6152.4219 L220.2188,6155.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="237.75" y="6153.6543">VarIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="472" y1="6165.5" y2="6165.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="_pVar" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="_pVar" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="6171.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6173.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="_pVar" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="_pVar" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="58" y="6179.7104">_pVar : Dynamic::Var *</text></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="6184.3047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6186.3047"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="58" y="6192.5151">_position : std::size_t</text></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="6197.1094"/><ellipse cx="49" cy="6202.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="58" y="6205.3198">POSITION_END : const std::size_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="472" y1="6211.9141" y2="6211.9141"/><ellipse cx="49" cy="6222.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="58" y="6226.1245">VarIterator(Dynamic::Var * pVar, bool positionEnd) : void</text><ellipse cx="49" cy="6235.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="58" y="6238.9292">VarIterator(const Dynamic::VarIterator &amp; other) : void</text><ellipse cx="49" cy="6248.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="58" y="6251.7339">VarIterator(Dynamic::VarIterator &amp;&amp; other) : void</text><ellipse cx="49" cy="6261.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="58" y="6264.5386">~VarIterator() : void</text><ellipse cx="49" cy="6274.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="58" y="6277.3433">operator=(const Dynamic::VarIterator &amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6286.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="58" y="6290.1479">operator=(Dynamic::VarIterator &amp;&amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6299.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="58" y="6302.9526">operator==(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="6312.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="58" y="6315.7573">operator!=(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="6325.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58" y="6328.562">operator*() const : Dynamic::Var &amp;</text><ellipse cx="49" cy="6338.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="58" y="6341.3667">operator-&gt;() const : Dynamic::Var *</text><ellipse cx="49" cy="6350.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="58" y="6354.1714">operator++() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6363.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="58" y="6366.9761">operator++(int ) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6376.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="58" y="6379.7808">operator--() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6389.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="58" y="6392.5854">operator--(int ) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6402.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="58" y="6405.3901">operator+(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6414.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="58" y="6418.1948">operator-(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6427.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="58" y="6430.9995">swap(Dynamic::VarIterator &amp; other) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6437.5938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="58" y="6443.8042">VarIterator() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6450.3984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="58" y="6456.6089">increment() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6463.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="58" y="6469.4136">decrement() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6476.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="58" y="6482.2183">setPosition(std::size_t pos) const : void</text><!--MD5=[63dfd395c4dfc12b4b097b3e4deec016]
class C_0001827593751126946500--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41" target="_top" title="Var" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41" xlink:show="new" xlink:title="Var" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="1392.4922" id="C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="599" y="5615"/><ellipse cx="831.25" cy="5631" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M834.2188,5636.6406 Q833.6406,5636.9375 833,5637.0781 Q832.3594,5637.2344 831.6563,5637.2344 Q829.1563,5637.2344 827.8281,5635.5938 Q826.5156,5633.9375 826.5156,5630.8125 Q826.5156,5627.6875 827.8281,5626.0313 Q829.1563,5624.375 831.6563,5624.375 Q832.3594,5624.375 833,5624.5313 Q833.6563,5624.6875 834.2188,5624.9844 L834.2188,5627.7031 Q833.5938,5627.125 833,5626.8594 Q832.4063,5626.5781 831.7813,5626.5781 Q830.4375,5626.5781 829.75,5627.6563 Q829.0625,5628.7188 829.0625,5630.8125 Q829.0625,5632.9063 829.75,5633.9844 Q830.4375,5635.0469 831.7813,5635.0469 Q832.4063,5635.0469 833,5634.7813 Q833.5938,5634.5 834.2188,5633.9219 L834.2188,5636.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="851.75" y="5635.1543">Var</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="600" x2="1092" y1="5647" y2="5647"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="605" y="5653"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5655"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="619" y="5661.2104">_placeholder : Placeholder&lt;Dynamic::VarHolder&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="600" x2="1092" y1="5667.8047" y2="5667.8047"/><ellipse cx="610" cy="5678.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="619" y="5682.0151">Var() : void</text><ellipse cx="610" cy="5691.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="619" y="5694.8198">Var(const char * pVal) : void</text><ellipse cx="610" cy="5704.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="619" y="5707.6245">Var(const Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="5717.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="619" y="5720.4292">~Var() : void</text><ellipse cx="610" cy="5730.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="619" y="5733.2339">swap(Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="5742.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="619" y="5746.0386">begin() const : Dynamic::Var::ConstIterator</text><ellipse cx="610" cy="5755.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="619" y="5758.8433">end() const : Dynamic::Var::ConstIterator</text><ellipse cx="610" cy="5768.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="619" y="5771.6479">begin() : Dynamic::Var::Iterator</text><ellipse cx="610" cy="5781.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="619" y="5784.4526">end() : Dynamic::Var::Iterator</text><ellipse cx="610" cy="5794.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="619" y="5797.2573">operator!() const : bool</text><ellipse cx="610" cy="5806.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="619" y="5810.062">operator=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5819.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="619" y="5822.8667">operator+(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5832.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="619" y="5835.6714">operator+(const char * other) const : const Dynamic::Var</text><ellipse cx="610" cy="5845.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="619" y="5848.4761">operator++() : Dynamic::Var &amp;</text><ellipse cx="610" cy="5858.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="619" y="5861.2808">operator++(int ) : const Dynamic::Var</text><ellipse cx="610" cy="5870.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="619" y="5874.0854">operator--() : Dynamic::Var &amp;</text><ellipse cx="610" cy="5883.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="619" y="5886.8901">operator--(int ) : const Dynamic::Var</text><ellipse cx="610" cy="5896.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="619" y="5899.6948">operator+=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5909.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="619" y="5912.4995">operator+=(const char * other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5922.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="619" y="5925.3042">operator-(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5934.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="5938.1089">operator-=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5947.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="619" y="5950.9136">operator*(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5960.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="619" y="5963.7183">operator*=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5973.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="619" y="5976.5229">operator/(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5986.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="5989.3276">operator/=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5998.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="619" y="6002.1323">operator==(const char * other) const : bool</text><ellipse cx="610" cy="6011.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="6014.937">operator==(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6024.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="619" y="6027.7417">operator!=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6037.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="619" y="6040.5464">operator!=(const char * other) const : bool</text><ellipse cx="610" cy="6050.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="6053.3511">operator&lt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6062.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="6066.1558">operator&lt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6075.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="6078.9604">operator&gt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6088.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="6091.7651">operator&gt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6101.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="619" y="6104.5698">operator||(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6114.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="619" y="6117.3745">operator&amp;&amp;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="6126.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="619" y="6130.1792">isArray() const : bool</text><ellipse cx="610" cy="6139.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="619" y="6142.9839">isVector() const : bool</text><ellipse cx="610" cy="6152.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="619" y="6155.7886">isList() const : bool</text><ellipse cx="610" cy="6165.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="619" y="6168.5933">isDeque() const : bool</text><ellipse cx="610" cy="6178.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="619" y="6181.3979">isStruct() const : bool</text><ellipse cx="610" cy="6190.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="619" y="6194.2026">isOrdered() const : bool</text><ellipse cx="610" cy="6203.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="619" y="6207.0073">at(std::size_t n) : char &amp;</text><ellipse cx="610" cy="6216.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="619" y="6219.812">operator[](const std::string &amp; name) : Dynamic::Var &amp;</text><ellipse cx="610" cy="6229.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="619" y="6232.6167">operator[](const std::string &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="610" cy="6242.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="619" y="6245.4214">type() const : const std::type_info &amp;</text><ellipse cx="610" cy="6255.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="619" y="6258.2261">empty() : void</text><ellipse cx="610" cy="6267.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="619" y="6271.0308">clear() : void</text><ellipse cx="610" cy="6280.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="619" y="6283.8354">isEmpty() const : bool</text><ellipse cx="610" cy="6293.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="619" y="6296.6401">isInteger() const : bool</text><ellipse cx="610" cy="6306.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="619" y="6309.4448">isSigned() const : bool</text><ellipse cx="610" cy="6319.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="619" y="6322.2495">isNumeric() const : bool</text><ellipse cx="610" cy="6331.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="619" y="6335.0542">isBoolean() const : bool</text><ellipse cx="610" cy="6344.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="619" y="6347.8589">isString() const : bool</text><ellipse cx="610" cy="6357.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="619" y="6360.6636">isDate() const : bool</text><ellipse cx="610" cy="6370.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="619" y="6373.4683">isTime() const : bool</text><ellipse cx="610" cy="6383.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="619" y="6386.2729">isDateTime() const : bool</text><ellipse cx="610" cy="6395.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="619" y="6399.0776">isUUID() const : bool</text><ellipse cx="610" cy="6408.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="619" y="6411.8823">size() const : std::size_t</text><ellipse cx="610" cy="6421.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="619" y="6424.687">toString() const : std::string</text><ellipse cx="610" cy="6434.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="619" y="6437.4917">parse(const std::string &amp; val) : Dynamic::Var</text><ellipse cx="610" cy="6447.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="270" x="619" y="6450.2964">toString(const Dynamic::Var &amp; var) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6456.8906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="619" y="6463.1011">getAt(std::size_t n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6469.6953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="619" y="6475.9058">getAt(const std::string &amp; n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6482.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="434" x="619" y="6488.7104">parse(const std::string &amp; val, std::string::size_type &amp; offset) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6495.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="458" x="619" y="6501.5151">parseObject(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6508.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="452" x="619" y="6514.3198">parseArray(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6520.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="440" x="619" y="6527.1245">parseString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6533.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="619" y="6539.9292">parseJSONString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6546.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="425" x="619" y="6552.7339">skipWhiteSpace(const std::string &amp; val, std::string::size_type &amp; pos) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6559.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="619" y="6565.5386">content() const : Dynamic::VarHolder *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6572.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="619" y="6578.3433">destruct() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6584.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="619" y="6591.1479">construct(const char * value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6597.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="619" y="6603.9526">construct(const Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="6613.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="619" y="6616.7573">Var&lt;T&gt;(const T &amp; val) : void</text><ellipse cx="610" cy="6626.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="619" y="6629.562">convert&lt;T&gt;(T &amp; val) : void</text><ellipse cx="610" cy="6639.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="619" y="6642.3667">convert&lt;T&gt;() : T</text><ellipse cx="610" cy="6651.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="619" y="6655.1714">operator type-parameter-0-0&lt;T&gt;() : T</text><ellipse cx="610" cy="6664.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="619" y="6667.9761">extract&lt;T&gt;() : const T &amp;</text><ellipse cx="610" cy="6677.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="619" y="6680.7808">operator=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6690.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="619" y="6693.5854">operator+&lt;T&gt;(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6703.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="619" y="6706.3901">operator+=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6715.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="619" y="6719.1948">operator-&lt;T&gt;(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6728.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="619" y="6731.9995">operator-=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6741.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="619" y="6744.8042">operator*&lt;T&gt;(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6754.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="619" y="6757.6089">operator*=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6767.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="619" y="6770.4136">operator/&lt;T&gt;(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6780.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="619" y="6783.2183">operator/=&lt;T&gt;(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6792.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="619" y="6796.0229">operator==&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6805.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="619" y="6808.8276">operator!=&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6818.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="619" y="6821.6323">operator&lt;&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6831.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="619" y="6834.437">operator&lt;=&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6844.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="619" y="6847.2417">operator&gt;&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6856.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="619" y="6860.0464">operator&gt;=&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6869.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="619" y="6872.8511">operator||&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6882.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="619" y="6885.6558">operator&amp;&amp;&lt;T&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6895.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="619" y="6898.4604">operator[]&lt;T&gt;(const T &amp; n) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6908.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="619" y="6911.2651">operator[]&lt;T&gt;(const T &amp; n) : const class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6917.8594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="619" y="6924.0698">add&lt;T&gt;(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6930.6641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="619" y="6936.8745">subtract&lt;T&gt;(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6943.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="619" y="6949.6792">multiply&lt;T&gt;(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6956.2734"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="619" y="6962.4839">divide&lt;T&gt;(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6969.0781"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="619" y="6975.2886">holderImpl&lt;T,E&gt;(const std::string errorMessage = "") : VarHolderImpl&lt;T&gt; *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6981.8828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="619" y="6988.0933">structIndexOperator&lt;T,N&gt;(T * pStr, N n) : class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6994.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="619" y="7000.8979">construct&lt;ValueType&gt;(const ValueType &amp; value) : void</text><!--MD5=[95d73bf2b97fc8fdea8c18859211afca]
class C_0000562679976742134348--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="406.5313" id="C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.5;" width="625" x="4790" y="1130.5"/><ellipse cx="4957.75" cy="1146.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4960.7188,1152.1406 Q4960.1406,1152.4375 4959.5,1152.5781 Q4958.8594,1152.7344 4958.1563,1152.7344 Q4955.6563,1152.7344 4954.3281,1151.0938 Q4953.0156,1149.4375 4953.0156,1146.3125 Q4953.0156,1143.1875 4954.3281,1141.5313 Q4955.6563,1139.875 4958.1563,1139.875 Q4958.8594,1139.875 4959.5,1140.0313 Q4960.1563,1140.1875 4960.7188,1140.4844 L4960.7188,1143.2031 Q4960.0938,1142.625 4959.5,1142.3594 Q4958.9063,1142.0781 4958.2813,1142.0781 Q4956.9375,1142.0781 4956.25,1143.1563 Q4955.5625,1144.2188 4955.5625,1146.3125 Q4955.5625,1148.4063 4956.25,1149.4844 Q4956.9375,1150.5469 4958.2813,1150.5469 Q4958.9063,1150.5469 4959.5,1150.2813 Q4960.0938,1150 4960.7188,1149.4219 L4960.7188,1152.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="4978.25" y="1150.6543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="241" x="5177" y="1127.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="5178" y="1139.6387">K,M=std::map&lt;K, Var&gt;,S=std::set&lt;K&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4791" x2="5414" y1="1162.5" y2="1162.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4796" y="1168.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4798" y="1170.5"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4810" y="1176.7104">_data : Dynamic::Struct::Data</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4791" x2="5414" y1="1183.3047" y2="1183.3047"/><ellipse cx="4801" cy="1194.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4810" y="1197.5151">Struct&lt;K, M, S&gt;() : void</text><ellipse cx="4801" cy="1207.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="4810" y="1210.3198">Struct&lt;K, M, S&gt;(const Dynamic::Struct::Data &amp; val) : void</text><ellipse cx="4801" cy="1219.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4810" y="1223.1245">~Struct&lt;K, M, S&gt;() : void</text><ellipse cx="4801" cy="1232.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4810" y="1235.9292">operator[](const K &amp; name) : Dynamic::Var &amp;</text><ellipse cx="4801" cy="1245.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="4810" y="1248.7339">operator[](const K &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="4801" cy="1258.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4810" y="1261.5386">contains(const K &amp; name) const : bool</text><ellipse cx="4801" cy="1271.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4810" y="1274.3433">find(const K &amp; name) : Dynamic::Struct::Iterator</text><ellipse cx="4801" cy="1283.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="4810" y="1287.1479">find(const K &amp; name) const : Dynamic::Struct::ConstIterator</text><ellipse cx="4801" cy="1296.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4810" y="1299.9526">end() : Dynamic::Struct::Iterator</text><ellipse cx="4801" cy="1309.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4810" y="1312.7573">end() const : Dynamic::Struct::ConstIterator</text><ellipse cx="4801" cy="1322.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4810" y="1325.562">begin() : Dynamic::Struct::Iterator</text><ellipse cx="4801" cy="1335.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="4810" y="1338.3667">begin() const : Dynamic::Struct::ConstIterator</text><ellipse cx="4801" cy="1347.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="4810" y="1351.1714">insert(const Dynamic::Struct::ValueType &amp; aPair) : Dynamic::Struct::InsRetVal</text><ellipse cx="4801" cy="1360.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="4810" y="1363.9761">erase(const K &amp; key) : Dynamic::Struct::SizeType</text><ellipse cx="4801" cy="1373.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="4810" y="1376.7808">erase(Dynamic::Struct::Iterator &amp; it) : void</text><ellipse cx="4801" cy="1386.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4810" y="1389.5854">clear() : void</text><ellipse cx="4801" cy="1399.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="4810" y="1402.3901">swap(Struct&lt;K,M,S&gt; &amp; other) : void</text><ellipse cx="4801" cy="1411.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4810" y="1415.1948">empty() const : bool</text><ellipse cx="4801" cy="1424.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4810" y="1427.9995">size() const : Dynamic::Struct::SizeType</text><ellipse cx="4801" cy="1437.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4810" y="1440.8042">members() const : Dynamic::Struct::NameSet</text><ellipse cx="4801" cy="1450.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="4810" y="1453.6089">getVar(const K &amp; key) const : Dynamic::Var</text><ellipse cx="4801" cy="1463.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4810" y="1466.4136">toString() const : std::string</text><ellipse cx="4801" cy="1476.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4810" y="1479.2183">Struct&lt;K, M, S&gt;&lt;T&gt;(const std::map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="4801" cy="1488.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="4810" y="1492.0229">Struct&lt;K, M, S&gt;&lt;T&gt;(const ordered_map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="4801" cy="1501.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="4810" y="1504.8276">insert&lt;T&gt;(const K &amp; key, const T &amp; value) : Dynamic::Struct::InsRetVal</text><ellipse cx="4801" cy="1514.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="599" x="4810" y="1517.6323">getVar&lt;DefT=class Poco::Dynamic::Var&gt;(const K &amp; key, const DefT &amp; defaultValue) : class Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4798" y="1524.2266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4810" y="1530.437">assignMap&lt;T&gt;(const T &amp; map) : void</text><!--MD5=[ef11c3035ad4f5c70052f8a09e74ea8b]
class C_0000527346272489458655--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="3723.5" y="1538"/><ellipse cx="3738.5" cy="1554" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3741.4688,1559.6406 Q3740.8906,1559.9375 3740.25,1560.0781 Q3739.6094,1560.2344 3738.9063,1560.2344 Q3736.4063,1560.2344 3735.0781,1558.5938 Q3733.7656,1556.9375 3733.7656,1553.8125 Q3733.7656,1550.6875 3735.0781,1549.0313 Q3736.4063,1547.375 3738.9063,1547.375 Q3739.6094,1547.375 3740.25,1547.5313 Q3740.9063,1547.6875 3741.4688,1547.9844 L3741.4688,1550.7031 Q3740.8438,1550.125 3740.25,1549.8594 Q3739.6563,1549.5781 3739.0313,1549.5781 Q3737.6875,1549.5781 3737,1550.6563 Q3736.3125,1551.7188 3736.3125,1553.8125 Q3736.3125,1555.9063 3737,1556.9844 Q3737.6875,1558.0469 3739.0313,1558.0469 Q3739.6563,1558.0469 3740.25,1557.7813 Q3740.8438,1557.5 3741.4688,1556.9219 L3741.4688,1559.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3752.5" y="1558.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="422" x="3798.5" y="1535"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="420" x="3799.5" y="1547.1387">std::string,std::map&lt;std::string,Dynamic::Var&gt;,std::set&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3724.5" x2="4216.5" y1="1570" y2="1570"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3724.5" x2="4216.5" y1="1578" y2="1578"/><!--MD5=[bc05caa69ddd26642187ca9f1706e489]
class C_0000005959213735263804--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="457.75" id="C_0000005959213735263804" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="2175" y="1538"/><ellipse cx="2217.45" cy="1554" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2220.4188,1559.6406 Q2219.8406,1559.9375 2219.2,1560.0781 Q2218.5594,1560.2344 2217.8563,1560.2344 Q2215.3563,1560.2344 2214.0281,1558.5938 Q2212.7156,1556.9375 2212.7156,1553.8125 Q2212.7156,1550.6875 2214.0281,1549.0313 Q2215.3563,1547.375 2217.8563,1547.375 Q2218.5594,1547.375 2219.2,1547.5313 Q2219.8563,1547.6875 2220.4188,1547.9844 L2220.4188,1550.7031 Q2219.7938,1550.125 2219.2,1549.8594 Q2218.6063,1549.5781 2217.9813,1549.5781 Q2216.6375,1549.5781 2215.95,1550.6563 Q2215.2625,1551.7188 2215.2625,1553.8125 Q2215.2625,1555.9063 2215.95,1556.9844 Q2216.6375,1558.0469 2217.9813,1558.0469 Q2218.6063,1558.0469 2219.2,1557.7813 Q2219.7938,1557.5 2220.4188,1556.9219 L2220.4188,1559.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2237.55" y="1558.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="541" x="2360" y="1535"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="539" x="2361" y="1547.1387">Dynamic::Struct&lt;std::string,std::map&lt;std::string,Dynamic::Var&gt;,std::set&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2176" x2="2897" y1="1570" y2="1570"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2181" y="1576"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2183" y="1578"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2195" y="1584.2104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2176" x2="2897" y1="1590.8047" y2="1590.8047"/><ellipse cx="2186" cy="1601.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="2195" y="1605.0151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2186" cy="1614.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2195" y="1617.8198">~VarHolderImpl() : void</text><ellipse cx="2186" cy="1627.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2195" y="1630.6245">type() const : const std::type_info &amp;</text><ellipse cx="2186" cy="1640.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2195" y="1643.4292">convert(Int8 &amp; ) const : void</text><ellipse cx="2186" cy="1653.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2195" y="1656.2339">convert(Int16 &amp; ) const : void</text><ellipse cx="2186" cy="1665.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2195" y="1669.0386">convert(Int32 &amp; ) const : void</text><ellipse cx="2186" cy="1678.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2195" y="1681.8433">convert(Int64 &amp; ) const : void</text><ellipse cx="2186" cy="1691.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2195" y="1694.6479">convert(UInt8 &amp; ) const : void</text><ellipse cx="2186" cy="1704.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2195" y="1707.4526">convert(UInt16 &amp; ) const : void</text><ellipse cx="2186" cy="1717.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2195" y="1720.2573">convert(UInt32 &amp; ) const : void</text><ellipse cx="2186" cy="1729.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2195" y="1733.062">convert(UInt64 &amp; ) const : void</text><ellipse cx="2186" cy="1742.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2195" y="1745.8667">convert(bool &amp; ) const : void</text><ellipse cx="2186" cy="1755.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2195" y="1758.6714">convert(float &amp; ) const : void</text><ellipse cx="2186" cy="1768.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2195" y="1771.4761">convert(double &amp; ) const : void</text><ellipse cx="2186" cy="1781.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2195" y="1784.2808">convert(char &amp; ) const : void</text><ellipse cx="2186" cy="1793.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2195" y="1797.0854">convert(std::string &amp; val) const : void</text><ellipse cx="2186" cy="1806.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2195" y="1809.8901">convert(DateTime &amp; ) const : void</text><ellipse cx="2186" cy="1819.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2195" y="1822.6948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2186" cy="1832.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2195" y="1835.4995">convert(Timestamp &amp; ) const : void</text><ellipse cx="2186" cy="1845.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2195" y="1848.3042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2186" cy="1857.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2195" y="1861.1089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp;</text><ellipse cx="2186" cy="1870.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2195" y="1873.9136">isArray() const : bool</text><ellipse cx="2186" cy="1883.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2195" y="1886.7183">isStruct() const : bool</text><ellipse cx="2186" cy="1896.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2195" y="1899.5229">isOrdered() const : bool</text><ellipse cx="2186" cy="1909.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2195" y="1912.3276">isInteger() const : bool</text><ellipse cx="2186" cy="1921.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2195" y="1925.1323">isSigned() const : bool</text><ellipse cx="2186" cy="1934.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2195" y="1937.937">isNumeric() const : bool</text><ellipse cx="2186" cy="1947.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2195" y="1950.7417">isString() const : bool</text><ellipse cx="2186" cy="1960.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2195" y="1963.5464">size() const : std::size_t</text><ellipse cx="2186" cy="1973.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="2195" y="1976.3511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2186" cy="1985.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="697" x="2195" y="1989.1558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[8da18a33f69aad8b92bd6de042e748b8]
class C_0000234522456695339728--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0000234522456695339728" style="stroke: #A80036; stroke-width: 1.5;" width="356" x="3792.5" y="5756"/><ellipse cx="3807.5" cy="5772" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3810.4688,5777.6406 Q3809.8906,5777.9375 3809.25,5778.0781 Q3808.6094,5778.2344 3807.9063,5778.2344 Q3805.4063,5778.2344 3804.0781,5776.5938 Q3802.7656,5774.9375 3802.7656,5771.8125 Q3802.7656,5768.6875 3804.0781,5767.0313 Q3805.4063,5765.375 3807.9063,5765.375 Q3808.6094,5765.375 3809.25,5765.5313 Q3809.9063,5765.6875 3810.4688,5765.9844 L3810.4688,5768.7031 Q3809.8438,5768.125 3809.25,5767.8594 Q3808.6563,5767.5781 3808.0313,5767.5781 Q3806.6875,5767.5781 3806,5768.6563 Q3805.3125,5769.7188 3805.3125,5771.8125 Q3805.3125,5773.9063 3806,5774.9844 Q3806.6875,5776.0469 3808.0313,5776.0469 Q3808.6563,5776.0469 3809.25,5775.7813 Q3809.8438,5775.5 3810.4688,5774.9219 L3810.4688,5777.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3821.5" y="5776.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="284" x="3867.5" y="5753"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="3868.5" y="5765.1387">int,std::map&lt;int,Dynamic::Var&gt;,std::set&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3793.5" x2="4147.5" y1="5788" y2="5788"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3793.5" x2="4147.5" y1="5796" y2="5796"/><!--MD5=[3584b5df2d117e666a89b988d93d3878]
class C_0001212087958231445051--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.5;" width="1517" x="3212" y="1310"/><ellipse cx="3227" cy="1326" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3229.9688,1331.6406 Q3229.3906,1331.9375 3228.75,1332.0781 Q3228.1094,1332.2344 3227.4063,1332.2344 Q3224.9063,1332.2344 3223.5781,1330.5938 Q3222.2656,1328.9375 3222.2656,1325.8125 Q3222.2656,1322.6875 3223.5781,1321.0313 Q3224.9063,1319.375 3227.4063,1319.375 Q3228.1094,1319.375 3228.75,1319.5313 Q3229.4063,1319.6875 3229.9688,1319.9844 L3229.9688,1322.7031 Q3229.3438,1322.125 3228.75,1321.8594 Q3228.1563,1321.5781 3227.5313,1321.5781 Q3226.1875,1321.5781 3225.5,1322.6563 Q3224.8125,1323.7188 3224.8125,1325.8125 Q3224.8125,1327.9063 3225.5,1328.9844 Q3226.1875,1330.0469 3227.5313,1330.0469 Q3228.1563,1330.0469 3228.75,1329.7813 Q3229.3438,1329.5 3229.9688,1328.9219 L3229.9688,1331.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3241" y="1330.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="1445" x="3287" y="1307"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1443" x="3288" y="1319.1387">Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,std::map&lt;Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,Dynamic::Var&gt;,std::set&lt;Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3213" x2="4728" y1="1342" y2="1342"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3213" x2="4728" y1="1350" y2="1350"/><!--MD5=[5ca1b0c5a44cc583161c08ae13192bc1]
class C_0000337724165693095141--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="457.75" id="C_0000337724165693095141" style="stroke: #A80036; stroke-width: 1.5;" width="678" x="2197.5" y="1045"/><ellipse cx="2286.25" cy="1061" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2289.2188,1066.6406 Q2288.6406,1066.9375 2288,1067.0781 Q2287.3594,1067.2344 2286.6563,1067.2344 Q2284.1563,1067.2344 2282.8281,1065.5938 Q2281.5156,1063.9375 2281.5156,1060.8125 Q2281.5156,1057.6875 2282.8281,1056.0313 Q2284.1563,1054.375 2286.6563,1054.375 Q2287.3594,1054.375 2288,1054.5313 Q2288.6563,1054.6875 2289.2188,1054.9844 L2289.2188,1057.7031 Q2288.5938,1057.125 2288,1056.8594 Q2287.4063,1056.5781 2286.7813,1056.5781 Q2285.4375,1056.5781 2284.75,1057.6563 Q2284.0625,1058.7188 2284.0625,1060.8125 Q2284.0625,1062.9063 2284.75,1063.9844 Q2285.4375,1065.0469 2286.7813,1065.0469 Q2287.4063,1065.0469 2288,1064.7813 Q2288.5938,1064.5 2289.2188,1063.9219 L2289.2188,1066.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2306.75" y="1065.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="403" x="2475.5" y="1042"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="2476.5" y="1054.1387">Dynamic::Struct&lt;int,std::map&lt;int,Dynamic::Var&gt;,std::set&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2874.5" y1="1077" y2="1077"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="1083"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="1085"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2217.5" y="1091.2104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2874.5" y1="1097.8047" y2="1097.8047"/><ellipse cx="2208.5" cy="1108.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="534" x="2217.5" y="1112.0151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2208.5" cy="1121.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="1124.8198">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="1134.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="1137.6245">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="1147.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2217.5" y="1150.4292">convert(Int8 &amp; ) const : void</text><ellipse cx="2208.5" cy="1160.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2217.5" y="1163.2339">convert(Int16 &amp; ) const : void</text><ellipse cx="2208.5" cy="1172.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2217.5" y="1176.0386">convert(Int32 &amp; ) const : void</text><ellipse cx="2208.5" cy="1185.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2217.5" y="1188.8433">convert(Int64 &amp; ) const : void</text><ellipse cx="2208.5" cy="1198.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2217.5" y="1201.6479">convert(UInt8 &amp; ) const : void</text><ellipse cx="2208.5" cy="1211.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2217.5" y="1214.4526">convert(UInt16 &amp; ) const : void</text><ellipse cx="2208.5" cy="1224.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2217.5" y="1227.2573">convert(UInt32 &amp; ) const : void</text><ellipse cx="2208.5" cy="1236.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2217.5" y="1240.062">convert(UInt64 &amp; ) const : void</text><ellipse cx="2208.5" cy="1249.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2217.5" y="1252.8667">convert(bool &amp; ) const : void</text><ellipse cx="2208.5" cy="1262.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2217.5" y="1265.6714">convert(float &amp; ) const : void</text><ellipse cx="2208.5" cy="1275.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2217.5" y="1278.4761">convert(double &amp; ) const : void</text><ellipse cx="2208.5" cy="1288.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2217.5" y="1291.2808">convert(char &amp; ) const : void</text><ellipse cx="2208.5" cy="1300.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="1304.0854">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="1313.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="1316.8901">convert(DateTime &amp; ) const : void</text><ellipse cx="2208.5" cy="1326.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2217.5" y="1329.6948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2208.5" cy="1339.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2217.5" y="1342.4995">convert(Timestamp &amp; ) const : void</text><ellipse cx="2208.5" cy="1352.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="1355.3042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="1364.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="2217.5" y="1368.1089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp;</text><ellipse cx="2208.5" cy="1377.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="1380.9136">isArray() const : bool</text><ellipse cx="2208.5" cy="1390.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="1393.7183">isStruct() const : bool</text><ellipse cx="2208.5" cy="1403.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="1406.5229">isOrdered() const : bool</text><ellipse cx="2208.5" cy="1416.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="1419.3276">isInteger() const : bool</text><ellipse cx="2208.5" cy="1428.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="1432.1323">isSigned() const : bool</text><ellipse cx="2208.5" cy="1441.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="1444.937">isNumeric() const : bool</text><ellipse cx="2208.5" cy="1454.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="1457.7417">isString() const : bool</text><ellipse cx="2208.5" cy="1467.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="1470.5464">size() const : std::size_t</text><ellipse cx="2208.5" cy="1480.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="2217.5" y="1483.3511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2208.5" cy="1492.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2217.5" y="1496.1558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[7dce1e83d9bc6d739d3bdcc1e2ca180f]
class C_0001994773360593884629--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0001994773360593884629" style="stroke: #A80036; stroke-width: 1.5;" width="596" x="3672.5" y="5839"/><ellipse cx="3687.5" cy="5855" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3690.4688,5860.6406 Q3689.8906,5860.9375 3689.25,5861.0781 Q3688.6094,5861.2344 3687.9063,5861.2344 Q3685.4063,5861.2344 3684.0781,5859.5938 Q3682.7656,5857.9375 3682.7656,5854.8125 Q3682.7656,5851.6875 3684.0781,5850.0313 Q3685.4063,5848.375 3687.9063,5848.375 Q3688.6094,5848.375 3689.25,5848.5313 Q3689.9063,5848.6875 3690.4688,5848.9844 L3690.4688,5851.7031 Q3689.8438,5851.125 3689.25,5850.8594 Q3688.6563,5850.5781 3688.0313,5850.5781 Q3686.6875,5850.5781 3686,5851.6563 Q3685.3125,5852.7188 3685.3125,5854.8125 Q3685.3125,5856.9063 3686,5857.9844 Q3686.6875,5859.0469 3688.0313,5859.0469 Q3688.6563,5859.0469 3689.25,5858.7813 Q3689.8438,5858.5 3690.4688,5857.9219 L3690.4688,5860.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3701.5" y="5859.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="524" x="3747.5" y="5836"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="522" x="3748.5" y="5848.1387">std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3673.5" x2="4267.5" y1="5871" y2="5871"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3673.5" x2="4267.5" y1="5879" y2="5879"/><!--MD5=[67eb792a3eb91148f1bf3f366020c83a]
class C_0000285075638289121010--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0000285075638289121010" style="stroke: #A80036; stroke-width: 1.5;" width="541" x="3700" y="856"/><ellipse cx="3715" cy="872" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3717.9688,877.6406 Q3717.3906,877.9375 3716.75,878.0781 Q3716.1094,878.2344 3715.4063,878.2344 Q3712.9063,878.2344 3711.5781,876.5938 Q3710.2656,874.9375 3710.2656,871.8125 Q3710.2656,868.6875 3711.5781,867.0313 Q3712.9063,865.375 3715.4063,865.375 Q3716.1094,865.375 3716.75,865.5313 Q3717.4063,865.6875 3717.9688,865.9844 L3717.9688,868.7031 Q3717.3438,868.125 3716.75,867.8594 Q3716.1563,867.5781 3715.5313,867.5781 Q3714.1875,867.5781 3713.5,868.6563 Q3712.8125,869.7188 3712.8125,871.8125 Q3712.8125,873.9063 3713.5,874.9844 Q3714.1875,876.0469 3715.5313,876.0469 Q3716.1563,876.0469 3716.75,875.7813 Q3717.3438,875.5 3717.9688,874.9219 L3717.9688,877.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3729" y="876.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="469" x="3775" y="853"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="467" x="3776" y="865.1387">std::string,OrderedMap&lt;std::string,Dynamic::Var&gt;,OrderedSet&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3701" x2="4240" y1="888" y2="888"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3701" x2="4240" y1="896" y2="896"/><!--MD5=[a67fc32f467ffdb77fa2ed92c7ee5886]
class C_0000919753061206343041--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="457.75" id="C_0000919753061206343041" style="stroke: #A80036; stroke-width: 1.5;" width="1153" x="1960" y="552"/><ellipse cx="2166.25" cy="568" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2169.2188,573.6406 Q2168.6406,573.9375 2168,574.0781 Q2167.3594,574.2344 2166.6563,574.2344 Q2164.1563,574.2344 2162.8281,572.5938 Q2161.5156,570.9375 2161.5156,567.8125 Q2161.5156,564.6875 2162.8281,563.0313 Q2164.1563,561.375 2166.6563,561.375 Q2167.3594,561.375 2168,561.5313 Q2168.6563,561.6875 2169.2188,561.9844 L2169.2188,564.7031 Q2168.5938,564.125 2168,563.8594 Q2167.4063,563.5781 2166.7813,563.5781 Q2165.4375,563.5781 2164.75,564.6563 Q2164.0625,565.7188 2164.0625,567.8125 Q2164.0625,569.9063 2164.75,570.9844 Q2165.4375,572.0469 2166.7813,572.0469 Q2167.4063,572.0469 2168,571.7813 Q2168.5938,571.5 2169.2188,570.9219 L2169.2188,573.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2186.75" y="572.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="643" x="2473" y="549"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="641" x="2474" y="561.1387">Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1961" x2="3112" y1="584" y2="584"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1966" y="590"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1968" y="592"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="851" x="1980" y="598.2104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1961" x2="3112" y1="604.8047" y2="604.8047"/><ellipse cx="1971" cy="615.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1009" x="1980" y="619.0151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="1971" cy="628.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1980" y="631.8198">~VarHolderImpl() : void</text><ellipse cx="1971" cy="641.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1980" y="644.6245">type() const : const std::type_info &amp;</text><ellipse cx="1971" cy="654.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1980" y="657.4292">convert(Int8 &amp; ) const : void</text><ellipse cx="1971" cy="667.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1980" y="670.2339">convert(Int16 &amp; ) const : void</text><ellipse cx="1971" cy="679.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1980" y="683.0386">convert(Int32 &amp; ) const : void</text><ellipse cx="1971" cy="692.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1980" y="695.8433">convert(Int64 &amp; ) const : void</text><ellipse cx="1971" cy="705.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1980" y="708.6479">convert(UInt8 &amp; ) const : void</text><ellipse cx="1971" cy="718.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1980" y="721.4526">convert(UInt16 &amp; ) const : void</text><ellipse cx="1971" cy="731.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1980" y="734.2573">convert(UInt32 &amp; ) const : void</text><ellipse cx="1971" cy="743.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1980" y="747.062">convert(UInt64 &amp; ) const : void</text><ellipse cx="1971" cy="756.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1980" y="759.8667">convert(bool &amp; ) const : void</text><ellipse cx="1971" cy="769.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1980" y="772.6714">convert(float &amp; ) const : void</text><ellipse cx="1971" cy="782.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1980" y="785.4761">convert(double &amp; ) const : void</text><ellipse cx="1971" cy="795.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1980" y="798.2808">convert(char &amp; ) const : void</text><ellipse cx="1971" cy="807.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1980" y="811.0854">convert(std::string &amp; val) const : void</text><ellipse cx="1971" cy="820.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1980" y="823.8901">convert(DateTime &amp; ) const : void</text><ellipse cx="1971" cy="833.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1980" y="836.6948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="1971" cy="846.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1980" y="849.4995">convert(Timestamp &amp; ) const : void</text><ellipse cx="1971" cy="859.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1980" y="862.3042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1971" cy="871.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="951" x="1980" y="875.1089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::ValueType &amp;</text><ellipse cx="1971" cy="884.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1980" y="887.9136">isArray() const : bool</text><ellipse cx="1971" cy="897.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1980" y="900.7183">isStruct() const : bool</text><ellipse cx="1971" cy="910.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1980" y="913.5229">isOrdered() const : bool</text><ellipse cx="1971" cy="923.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1980" y="926.3276">isInteger() const : bool</text><ellipse cx="1971" cy="935.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1980" y="939.1323">isSigned() const : bool</text><ellipse cx="1971" cy="948.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1980" y="951.937">isNumeric() const : bool</text><ellipse cx="1971" cy="961.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1980" y="964.7417">isString() const : bool</text><ellipse cx="1971" cy="974.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1980" y="977.5464">size() const : std::size_t</text><ellipse cx="1971" cy="987.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1057" x="1980" y="990.3511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="1971" cy="999.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1127" x="1980" y="1003.1558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string,tsl::ordered_map&lt;std::string,Dynamic::Var&gt;,tsl::ordered_set&lt;std::string&gt;&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[fec368cb4d74b084cc09a5beb5db002e]
class C_0000976793773745790650--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0000976793773745790650" style="stroke: #A80036; stroke-width: 1.5;" width="458" x="3741.5" y="5922"/><ellipse cx="3756.5" cy="5938" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3759.4688,5943.6406 Q3758.8906,5943.9375 3758.25,5944.0781 Q3757.6094,5944.2344 3756.9063,5944.2344 Q3754.4063,5944.2344 3753.0781,5942.5938 Q3751.7656,5940.9375 3751.7656,5937.8125 Q3751.7656,5934.6875 3753.0781,5933.0313 Q3754.4063,5931.375 3756.9063,5931.375 Q3757.6094,5931.375 3758.25,5931.5313 Q3758.9063,5931.6875 3759.4688,5931.9844 L3759.4688,5934.7031 Q3758.8438,5934.125 3758.25,5933.8594 Q3757.6563,5933.5781 3757.0313,5933.5781 Q3755.6875,5933.5781 3755,5934.6563 Q3754.3125,5935.7188 3754.3125,5937.8125 Q3754.3125,5939.9063 3755,5940.9844 Q3755.6875,5942.0469 3757.0313,5942.0469 Q3757.6563,5942.0469 3758.25,5941.7813 Q3758.8438,5941.5 3759.4688,5940.9219 L3759.4688,5943.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3770.5" y="5942.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="386" x="3816.5" y="5919"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="3817.5" y="5931.1387">int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3742.5" x2="4198.5" y1="5954" y2="5954"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3742.5" x2="4198.5" y1="5962" y2="5962"/><!--MD5=[07af6ca818682013910ce89616019af2]
class C_0001731737538524969332--><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0001731737538524969332" style="stroke: #A80036; stroke-width: 1.5;" width="1196" x="3372.5" y="382"/><ellipse cx="3387.5" cy="398" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3390.4688,403.6406 Q3389.8906,403.9375 3389.25,404.0781 Q3388.6094,404.2344 3387.9063,404.2344 Q3385.4063,404.2344 3384.0781,402.5938 Q3382.7656,400.9375 3382.7656,397.8125 Q3382.7656,394.6875 3384.0781,393.0313 Q3385.4063,391.375 3387.9063,391.375 Q3388.6094,391.375 3389.25,391.5313 Q3389.9063,391.6875 3390.4688,391.9844 L3390.4688,394.7031 Q3389.8438,394.125 3389.25,393.8594 Q3388.6563,393.5781 3388.0313,393.5781 Q3386.6875,393.5781 3386,394.6563 Q3385.3125,395.7188 3385.3125,397.8125 Q3385.3125,399.9063 3386,400.9844 Q3386.6875,402.0469 3388.0313,402.0469 Q3388.6563,402.0469 3389.25,401.7813 Q3389.8438,401.5 3390.4688,400.9219 L3390.4688,403.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3401.5" y="402.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="1124" x="3447.5" y="379"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1122" x="3448.5" y="391.1387">Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Poco::Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType,OrderedMap&lt;int,Dynamic::Var&gt;,OrderedSet&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3373.5" x2="4567.5" y1="414" y2="414"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3373.5" x2="4567.5" y1="422" y2="422"/><!--MD5=[4827b590d81e6a7d54540a32f69dd9c4]
class C_0000988703063712340439--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="457.75" id="C_0000988703063712340439" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="2027.5" y="59"/><ellipse cx="2235.25" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2238.2188,80.6406 Q2237.6406,80.9375 2237,81.0781 Q2236.3594,81.2344 2235.6563,81.2344 Q2233.1563,81.2344 2231.8281,79.5938 Q2230.5156,77.9375 2230.5156,74.8125 Q2230.5156,71.6875 2231.8281,70.0313 Q2233.1563,68.375 2235.6563,68.375 Q2236.3594,68.375 2237,68.5313 Q2237.6563,68.6875 2238.2188,68.9844 L2238.2188,71.7031 Q2237.5938,71.125 2237,70.8594 Q2236.4063,70.5781 2235.7813,70.5781 Q2234.4375,70.5781 2233.75,71.6563 Q2233.0625,72.7188 2233.0625,74.8125 Q2233.0625,76.9063 2233.75,77.9844 Q2234.4375,79.0469 2235.7813,79.0469 Q2236.4063,79.0469 2237,78.7813 Q2237.5938,78.5 2238.2188,77.9219 L2238.2188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2255.75" y="79.1543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="505" x="2543.5" y="56"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="2544.5" y="68.1387">Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2028.5" x2="3044.5" y1="91" y2="91"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2033.5" y="97"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2035.5" y="99"/></a><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="716" x="2047.5" y="105.2104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2028.5" x2="3044.5" y1="111.8047" y2="111.8047"/><ellipse cx="2038.5" cy="122.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="874" x="2047.5" y="126.0151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2038.5" cy="135.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2047.5" y="138.8198">~VarHolderImpl() : void</text><ellipse cx="2038.5" cy="148.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2047.5" y="151.6245">type() const : const std::type_info &amp;</text><ellipse cx="2038.5" cy="161.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2047.5" y="164.4292">convert(Int8 &amp; ) const : void</text><ellipse cx="2038.5" cy="174.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2047.5" y="177.2339">convert(Int16 &amp; ) const : void</text><ellipse cx="2038.5" cy="186.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2047.5" y="190.0386">convert(Int32 &amp; ) const : void</text><ellipse cx="2038.5" cy="199.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2047.5" y="202.8433">convert(Int64 &amp; ) const : void</text><ellipse cx="2038.5" cy="212.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2047.5" y="215.6479">convert(UInt8 &amp; ) const : void</text><ellipse cx="2038.5" cy="225.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2047.5" y="228.4526">convert(UInt16 &amp; ) const : void</text><ellipse cx="2038.5" cy="238.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2047.5" y="241.2573">convert(UInt32 &amp; ) const : void</text><ellipse cx="2038.5" cy="250.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2047.5" y="254.062">convert(UInt64 &amp; ) const : void</text><ellipse cx="2038.5" cy="263.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2047.5" y="266.8667">convert(bool &amp; ) const : void</text><ellipse cx="2038.5" cy="276.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2047.5" y="279.6714">convert(float &amp; ) const : void</text><ellipse cx="2038.5" cy="289.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2047.5" y="292.4761">convert(double &amp; ) const : void</text><ellipse cx="2038.5" cy="302.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2047.5" y="305.2808">convert(char &amp; ) const : void</text><ellipse cx="2038.5" cy="314.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2047.5" y="318.0854">convert(std::string &amp; val) const : void</text><ellipse cx="2038.5" cy="327.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2047.5" y="330.8901">convert(DateTime &amp; ) const : void</text><ellipse cx="2038.5" cy="340.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2047.5" y="343.6948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2038.5" cy="353.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2047.5" y="356.4995">convert(Timestamp &amp; ) const : void</text><ellipse cx="2038.5" cy="366.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2047.5" y="369.3042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2038.5" cy="378.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="816" x="2047.5" y="382.1089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp;</text><ellipse cx="2038.5" cy="391.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2047.5" y="394.9136">isArray() const : bool</text><ellipse cx="2038.5" cy="404.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2047.5" y="407.7183">isStruct() const : bool</text><ellipse cx="2038.5" cy="417.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2047.5" y="420.5229">isOrdered() const : bool</text><ellipse cx="2038.5" cy="430.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2047.5" y="433.3276">isInteger() const : bool</text><ellipse cx="2038.5" cy="442.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2047.5" y="446.1323">isSigned() const : bool</text><ellipse cx="2038.5" cy="455.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2047.5" y="458.937">isNumeric() const : bool</text><ellipse cx="2038.5" cy="468.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2047.5" y="471.7417">isString() const : bool</text><ellipse cx="2038.5" cy="481.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2047.5" y="484.5464">size() const : std::size_t</text><ellipse cx="2038.5" cy="494.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="922" x="2047.5" y="497.3511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2038.5" cy="506.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="2047.5" y="510.1558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[0e1432047d47ec9a6b00dab152215e00]
class C_0000876644825045799418--><a href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fwmlktjjxpa3s)" height="48" id="C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.5;" width="108" x="201.5" y="9345"/><ellipse cx="216.5" cy="9361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M219.4688,9366.6406 Q218.8906,9366.9375 218.25,9367.0781 Q217.6094,9367.2344 216.9063,9367.2344 Q214.4063,9367.2344 213.0781,9365.5938 Q211.7656,9363.9375 211.7656,9360.8125 Q211.7656,9357.6875 213.0781,9356.0313 Q214.4063,9354.375 216.9063,9354.375 Q217.6094,9354.375 218.25,9354.5313 Q218.9063,9354.6875 219.4688,9354.9844 L219.4688,9357.7031 Q218.8438,9357.125 218.25,9356.8594 Q217.6563,9356.5781 217.0313,9356.5781 Q215.6875,9356.5781 215,9357.6563 Q214.3125,9358.7188 214.3125,9360.8125 Q214.3125,9362.9063 215,9363.9844 Q215.6875,9365.0469 217.0313,9365.0469 Q217.6563,9365.0469 218.25,9364.7813 Q218.8438,9364.5 219.4688,9363.9219 L219.4688,9366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="230.5" y="9365.1543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="276.5" y="9342"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="277.5" y="9354.1387">K,M,S</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="202.5" x2="308.5" y1="9377" y2="9377"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="202.5" x2="308.5" y1="9385" y2="9385"/></a><!--MD5=[1813d3e55208b95598efe5b058f25358]
reverse link C_0000820091630223006238 to C_0001112867090784569162--><path d="M1643.73,5947.34 C1697.95,5769.14 1793.39,5570.28 1960,5463 C2067.71,5393.64 2985.55,5450.04 3113,5463 C3313.86,5483.42 3537.2,5530.13 3705.44,5570.3 " fill="none" id="C_0000820091630223006238&lt;-C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1650.37,5949.55,1637.96,5966.73,1636.95,5945.57,1650.37,5949.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b1676534adbb49052c1fb5187823a2e7]
link C_0002149165824584484566 to C_0001112867090784569162--><path d="M2801.82,5263.91 C3056.28,5345.65 3439.38,5468.71 3696.66,5551.36 " fill="none" id="C_0002149165824584484566-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3698.84,5544.7,3715.74,5557.48,3694.56,5558.03,3698.84,5544.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6bdc8c9895b8e16795c15260689a53af]
reverse link C_0000820091630223006238 to C_0002149165824584484566--><path d="M1652.31,5947.59 C1705.34,5774.07 1791.66,5574.4 1929,5435 C2021.55,5341.07 2153.86,5279.81 2271.31,5240.84 " fill="none" id="C_0000820091630223006238&lt;-C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1658.95,5949.84,1646.49,5966.99,1645.54,5945.82,1658.95,5949.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce861a412352c4848640aa13ce250abf]
link C_0000198808093629002393 to C_0001112867090784569162--><path d="M2804.35,4784.3 C2904.34,4823.72 3016.93,4874.08 3113,4932 C3414.82,5113.98 3722.29,5396.53 3873.47,5543.25 " fill="none" id="C_0000198808093629002393-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3878.6,5538.48,3888.05,5557.45,3868.84,5548.51,3878.6,5538.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[32fffe82ef1ff3e5d4ec3ab4204d9ea8]
reverse link C_0000820091630223006238 to C_0000198808093629002393--><path d="M1590.44,5946.4 C1622.05,5641.64 1711.55,5212.92 1960,4932 C2039.96,4841.59 2159.45,4784.4 2268.85,4748.65 " fill="none" id="C_0000820091630223006238&lt;-C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1597.36,5947.55,1588.4,5966.75,1583.43,5946.15,1597.36,5947.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1c5c7610e8f865c2dc4167ff6cd581c]
link C_0000976768452323437983 to C_0001112867090784569162--><path d="M2804.28,4288.53 C2907.62,4326.67 3022.56,4380.28 3113,4452 C3511.49,4767.98 3810.37,5315.32 3921.85,5539.2 " fill="none" id="C_0000976768452323437983-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3928.21,5536.27,3930.81,5557.3,3915.67,5542.48,3928.21,5536.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a23ffed8306e2f84c3073ac11c9de323]
reverse link C_0000820091630223006238 to C_0000976768452323437983--><path d="M1609.63,5946.99 C1662.13,5472.29 1775.14,4675.94 1960,4452 C2037.53,4358.08 2158.06,4300.36 2268.82,4265.16 " fill="none" id="C_0000820091630223006238&lt;-C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1616.59,5947.78,1607.45,5966.9,1602.67,5946.25,1616.59,5947.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf09b5ff695bcf5acdf9fe71fab14e0c]
link C_0001804431617899042426 to C_0001112867090784569162--><path d="M2804.28,3790.2 C2910.02,3831.01 3026.7,3890.05 3113,3972 C3605.81,4439.95 3864.6,5253.95 3943.2,5537.85 " fill="none" id="C_0001804431617899042426-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3950.01,5536.23,3948.55,5557.37,3936.51,5539.93,3950.01,5536.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a049817c63d933cddd056e43c020ea39]
reverse link C_0000820091630223006238 to C_0001804431617899042426--><path d="M1593.09,5946.42 C1629.3,5368.08 1727.14,4274.76 1960,3972 C2035.65,3873.64 2156.99,3811.62 2268.8,3773.04 " fill="none" id="C_0000820091630223006238&lt;-C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1600.06,5947.24,1591.83,5966.77,1586.08,5946.38,1600.06,5947.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ada95bdef8ba6058ff0ffd2c4f1b6e8]
link C_0001832009513687525374 to C_0001112867090784569162--><path d="M2805.01,3276.35 C2912.28,3312.87 3029.9,3369.09 3113,3454 C3726.03,4080.36 3913.57,5196.79 3957.84,5537.49 " fill="none" id="C_0001832009513687525374-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3964.8,5536.67,3960.38,5557.39,3950.91,5538.44,3964.8,5536.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[484d0d91554dbc242a223067b026dfc6]
reverse link C_0000820091630223006238 to C_0001832009513687525374--><path d="M1579.6,5946.79 C1596.09,5266.53 1665.81,3837.08 1960,3454 C2034.67,3356.77 2155.9,3298.6 2267.89,3263.95 " fill="none" id="C_0000820091630223006238&lt;-C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1586.59,5947.11,1579.12,5966.94,1572.6,5946.78,1586.59,5947.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5febac11223087f60c8ceb52a26a3b2]
link C_0000572186414558919480 to C_0001112867090784569162--><path d="M2812.07,2795.34 C2918.56,2831.5 3033.7,2887.73 3113,2974 C3833.34,3757.65 3948.04,5151.14 3966.14,5537.32 " fill="none" id="C_0000572186414558919480-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3973.13,5537.05,3967.03,5557.34,3959.15,5537.67,3973.13,5537.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[691a55eeeadeb89a9d3fc7ffb09e60fc]
reverse link C_0000820091630223006238 to C_0000572186414558919480--><path d="M1595.88,5946.75 C1646.7,5130.55 1783.79,3208.04 1960,2974 C2032.36,2877.9 2150.34,2820 2260.69,2785.26 " fill="none" id="C_0000820091630223006238&lt;-C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1602.86,5947.18,1594.64,5966.71,1588.89,5946.32,1602.86,5947.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4cf50edd11d32dea601aa62a24b3e4ec]
link C_0000166253842255815357 to C_0001112867090784569162--><path d="M2812.19,2312.96 C2919.5,2348.81 3035.21,2405.45 3113,2494 C3166.27,2554.63 3805.1,5006 3943.26,5537.87 " fill="none" id="C_0000166253842255815357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3950.09,5536.31,3948.34,5557.43,3936.54,5539.83,3950.09,5536.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[519713684ef996f3f0258fe781b367b9]
reverse link C_0000820091630223006238 to C_0000166253842255815357--><path d="M1590.23,5946.59 C1632.05,5045.91 1756.87,2767.87 1960,2494 C2031.83,2397.16 2150.08,2339.16 2260.78,2304.53 " fill="none" id="C_0000820091630223006238&lt;-C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1597.22,5946.97,1589.3,5966.62,1583.23,5946.32,1597.22,5946.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[572ed8953022a63b1c36627852249f51]
link C_0001459401574844645109 to C_0001112867090784569162--><path d="M2812.02,12078.91 C2922.33,12040.38 3040.35,11978.7 3113,11881 C3253.17,11692.51 3166.01,11591.35 3182,11357 C3184.66,11318.07 3186.18,5767.26 3212,5738 C3326.68,5608.06 3521.66,5584.98 3685.07,5593.52 " fill="none" id="C_0001459401574844645109-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.81,5586.55,3705.35,5594.75,3684.96,5600.53,3685.81,5586.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[919765d0794332eb101e551e54b6c414]
reverse link C_0000820091630223006238 to C_0001459401574844645109--><path d="M1578.26,6675.19 C1593.26,7844.94 1663.38,11455.25 1960,11881 C2030.15,11981.69 2149.07,12043.85 2260.66,12081.92 " fill="none" id="C_0000820091630223006238&lt;-C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1571.26,6675.27,1578.01,6655.19,1585.26,6675.09,1571.26,6675.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd6471d66cc3b88dfb3ca1f72cf6db91]
link C_0000599279109574326060 to C_0001112867090784569162--><path d="M2801.82,11592.11 C2914.73,11557.6 3037.63,11499.23 3113,11401 C3253.57,11217.78 3165.96,11116.38 3182,10886 C3184.48,10850.34 3188.34,5764.8 3212,5738 C3326.71,5608.08 3521.69,5585 3685.1,5593.54 " fill="none" id="C_0000599279109574326060-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.83,5586.57,3705.37,5594.77,3684.98,5600.55,3685.83,5586.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8bf8b0ca9d39d118bab5baddd92056a5]
reverse link C_0000820091630223006238 to C_0000599279109574326060--><path d="M1580.34,6675.05 C1600.99,7776.28 1684.8,11020.09 1960,11401 C2033.06,11502.13 2156.98,11560.85 2271.16,11594.84 " fill="none" id="C_0000820091630223006238&lt;-C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1573.34,6675.13,1579.97,6655,1587.34,6674.87,1573.34,6675.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a03be0583b80b52ec3c7cfbb1381204c]
link C_0000384619052225252533 to C_0001112867090784569162--><path d="M2801.56,11112.31 C2914.6,11077.83 3037.67,11019.43 3113,10921 C3256.02,10734.1 3165.88,10630.79 3182,10396 C3186.43,10331.46 3169.16,5786.48 3212,5738 C3326.75,5608.12 3521.73,5585.04 3685.13,5593.57 " fill="none" id="C_0000384619052225252533-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.86,5586.6,3705.4,5594.79,3685.01,5600.57,3685.86,5586.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[73026f33281fe8ca4ab78e818466913d]
reverse link C_0000820091630223006238 to C_0000384619052225252533--><path d="M1583.44,6675.41 C1611.66,7704.57 1712.09,10580.67 1960,10921 C2033.38,11021.73 2157.15,11080.4 2271.14,11114.47 " fill="none" id="C_0000820091630223006238&lt;-C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1576.44,6675.35,1582.89,6655.16,1590.43,6674.97,1576.44,6675.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ff447ae9b44164ab1163a8d58a067dd]
link C_0002242257052791493112 to C_0001112867090784569162--><path d="M2814.11,10628.31 C2923.58,10593.37 3040.39,10535.72 3113,10441 C3254.31,10256.68 3165.8,10154.69 3182,9923 C3186.05,9865.02 3173.5,5781.55 3212,5738 C3326.8,5608.16 3521.77,5585.08 3685.16,5593.6 " fill="none" id="C_0002242257052791493112-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.89,5586.63,3705.43,5594.82,3685.04,5600.6,3685.89,5586.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3f595935a0f15239c0a18509c92a77a4]
reverse link C_0000820091630223006238 to C_0002242257052791493112--><path d="M1587.24,6675.4 C1623.51,7628.24 1739.23,10140.99 1960,10441 C2031.14,10537.67 2148.61,10595.63 2258.93,10630.27 " fill="none" id="C_0000820091630223006238&lt;-C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1580.24,6675.5,1586.48,6655.25,1594.23,6674.97,1580.24,6675.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[34ccf54faad2732560850bd8665d0a82]
link C_0001942181379759217898 to C_0001112867090784569162--><path d="M2801.53,10152.67 C2914.74,10118.26 3037.96,10059.82 3113,9961 C3263.86,9762.34 3165.62,9652.91 3182,9404 C3185.34,9353.19 3178.25,5776.13 3212,5738 C3326.87,5608.22 3521.84,5585.14 3685.21,5593.64 " fill="none" id="C_0001942181379759217898-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.93,5586.67,3705.48,5594.86,3685.09,5600.64,3685.93,5586.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a510e46abb3e3fb8d1e108ee127ac321]
reverse link C_0000820091630223006238 to C_0001942181379759217898--><path d="M1592.02,6675.16 C1636.89,7546.94 1766.24,9701.01 1960,9961 C2034.31,10060.71 2157.81,10119.26 2271.4,10153.51 " fill="none" id="C_0000820091630223006238&lt;-C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1585.02,6675.45,1590.99,6655.12,1599,6674.73,1585.02,6675.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6340afec94b7710ba348d42f46eb27c]
link C_0002291903337356664508 to C_0001112867090784569162--><path d="M2835.26,9632.98 C2938.81,9594.12 3045.75,9534.31 3113,9443 C3262.76,9239.66 3165.43,9130.99 3182,8879 C3184.86,8835.47 3183.06,5770.65 3212,5738 C3326.85,5608.42 3521.57,5585.26 3684.82,5593.67 " fill="none" id="C_0002291903337356664508-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.53,5586.7,3705.08,5594.88,3684.69,5600.68,3685.53,5586.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[107b7a7327243dacf301851c70d6fb71]
reverse link C_0000820091630223006238 to C_0002291903337356664508--><path d="M1575.61,6675.52 C1584.72,7404.87 1641.48,9010.87 1960,9443 C2027.28,9534.28 2134.23,9594.09 2237.77,9632.95 " fill="none" id="C_0000820091630223006238&lt;-C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1568.61,6675.35,1575.37,6655.27,1582.61,6675.18,1568.61,6675.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4335525f83bb33992247c2f504ebdb89]
link C_0001370368867041199969 to C_0001112867090784569162--><path d="M2845.33,9110.63 C2945.5,9071.67 3047.62,9012.92 3113,8925 C3253.17,8736.51 3165.31,8635.31 3182,8401 C3184.63,8364.1 3187.44,5765.66 3212,5738 C3326.96,5608.52 3521.68,5585.35 3684.9,5593.74 " fill="none" id="C_0001370368867041199969-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.6,5586.77,3705.15,5594.95,3684.77,5600.75,3685.6,5586.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b3bbe848390de6adceecba0984d6ab3b]
reverse link C_0000820091630223006238 to C_0001370368867041199969--><path d="M1585.86,6675.49 C1612.36,7308.73 1697.55,8577.72 1960,8925 C2025.89,9012.19 2127.81,9070.76 2227.68,9109.77 " fill="none" id="C_0000820091630223006238&lt;-C_0001370368867041199969" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1578.84,6675.36,1585.01,6655.09,1592.83,6674.78,1578.84,6675.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64e7a6eb91daa34b4f5dcbf61cbc2691]
link C_0001646173285346905617 to C_0001112867090784569162--><path d="M2828.28,8627.65 C2933.55,8592.32 3043.5,8535.63 3113,8445 C3254.06,8261.04 3165.05,8159.19 3182,7928 C3186.45,7867.32 3171.55,5783.45 3212,5738 C3327.12,5608.66 3521.83,5585.49 3685.01,5593.84 " fill="none" id="C_0001646173285346905617-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.71,5586.87,3705.26,5595.05,3684.88,5600.85,3685.71,5586.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c873d28af5cee0be36435c20505a3add]
reverse link C_0000820091630223006238 to C_0001646173285346905617--><path d="M1598.64,6675.22 C1640.95,7211.21 1745.23,8177.89 1960,8445 C2031.14,8533.48 2140.58,8589.74 2244.99,8625.34 " fill="none" id="C_0000820091630223006238&lt;-C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1591.65,6675.64,1597.07,6655.15,1605.61,6674.54,1591.65,6675.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[337e370d25248223a42f6486bf3bc227]
link C_0001583654034047392858 to C_0001112867090784569162--><path d="M2884.33,8121.01 C2969.51,8085.47 3053.28,8035.35 3113,7965 C3199.3,7863.34 3165.54,7805.33 3182,7673 C3188.64,7619.65 3176.22,5778.12 3212,5738 C3327.23,5608.76 3521.94,5585.59 3685.1,5593.92 " fill="none" id="C_0001583654034047392858-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.79,5586.95,3705.34,5595.12,3684.96,5600.92,3685.79,5586.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[987121a660fa81e318dcd4dcec5949cd]
reverse link C_0000820091630223006238 to C_0001583654034047392858--><path d="M1620.2,6675.34 C1680.22,7101.37 1797.4,7772.87 1960,7965 C2019.7,8035.55 2103.59,8085.73 2188.9,8121.29 " fill="none" id="C_0000820091630223006238&lt;-C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1613.23,6676.02,1617.39,6655.24,1627.09,6674.08,1613.23,6676.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b8d755c5734ff075dd4b223530b745f0]
link C_0000910307965681926894 to C_0001112867090784569162--><path d="M3064.02,7743.37 C3081.47,7731.38 3097.9,7717.97 3113,7703 C3207.68,7609.09 3165.38,7543.31 3182,7411 C3187.79,7364.88 3181.03,5772.65 3212,5738 C3327.39,5608.9 3522.1,5585.73 3685.21,5594.02 " fill="none" id="C_0000910307965681926894-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.9,5587.05,3705.45,5595.22,3685.07,5601.02,3685.9,5587.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c921dbdc6baac32669acd5a5489bfe5d]
reverse link C_0000820091630223006238 to C_0000910307965681926894--><path d="M1632.07,6675.23 C1696.83,7038.5 1812.51,7562.19 1960,7703 C1975.1,7717.42 1991.44,7730.37 2008.74,7742 " fill="none" id="C_0000820091630223006238&lt;-C_0000910307965681926894" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1625.15,6676.26,1628.55,6655.35,1638.93,6673.82,1625.15,6676.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e56bc7cb5e1c993d7325b75e7934ff15]
link C_0000355772964752054032 to C_0001112867090784569162--><path d="M3046.07,7493.07 C3070.26,7478.27 3092.83,7461.04 3113,7441 C3208.22,7346.41 3165.15,7280.15 3182,7147 C3186.92,7108.16 3185.86,5767.14 3212,5738 C3327.5,5609.21 3521.95,5585.96 3684.92,5594.14 " fill="none" id="C_0000355772964752054032-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.58,5587.16,3705.14,5595.32,3684.76,5601.14,3685.58,5587.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f390089f8e370e58f5b7681ad92fa29f]
reverse link C_0000820091630223006238 to C_0000355772964752054032--><path d="M1607.02,6675.07 C1648.71,6925.29 1743.71,7246.3 1960,7441 C1980.47,7459.42 2002.98,7475.42 2026.88,7489.31 " fill="none" id="C_0000820091630223006238&lt;-C_0000355772964752054032" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1600.1,6676.15,1603.81,6655.28,1613.92,6673.9,1600.1,6676.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[56379add94182020160684402ab3bc99]
link C_0001350084679139174053 to C_0001112867090784569162--><path d="M3064.13,7222.59 C3081.74,7209.74 3098.15,7195.28 3113,7179 C3269.83,7007.09 3162.86,6891.91 3182,6660 C3186.22,6608.92 3177.57,5775.96 3212,5738 C3328.12,5609.98 3522.3,5586.64 3684.99,5594.58 " fill="none" id="C_0001350084679139174053-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.6,5587.61,3705.17,5595.74,3684.81,5601.59,3685.6,5587.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aef5a102ff54aaa0543cf48071f78482]
reverse link C_0000820091630223006238 to C_0001350084679139174053--><path d="M1654.37,6674.44 C1711.23,6851.12 1805.8,7052.17 1960,7179 C1975.33,7191.61 1991.64,7203.06 2008.69,7213.46 " fill="none" id="C_0000820091630223006238&lt;-C_0001350084679139174053" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1647.65,6676.41,1648.31,6655.23,1661,6672.2,1647.65,6676.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44340e84b40a20fdf98816525a96d67d]
link C_0000699000175415913074 to C_0001112867090784569162--><path d="M2830.37,6881.6 C2935.25,6846.29 3044.39,6789.63 3113,6699 C3267.29,6495.19 3156.86,6382.38 3182,6128 C3186.27,6084.75 3182.1,5769.54 3212,5738 C3330.48,5613.04 3523.63,5589.37 3685.23,5596.39 " fill="none" id="C_0000699000175415913074-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.66,5589.4,3705.27,5597.42,3684.94,5603.38,3685.66,5589.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[357ee025e25188b7db79cb0c516fe097]
reverse link C_0000820091630223006238 to C_0000699000175415913074--><path d="M1915.23,6666.86 C1930.01,6678.12 1944.95,6688.88 1960,6699 C2046.13,6756.9 2148.47,6805.1 2242.79,6842.74 " fill="none" id="C_0000820091630223006238&lt;-C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1910.76,6672.25,1899.26,6654.45,1919.35,6661.2,1910.76,6672.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e457dc81a3cb2d1b80d6d916d7238368]
link C_0001850771625416044357 to C_0001112867090784569162--><path d="M2859.31,6417.37 C2953.49,6384.62 3048.39,6334.29 3113,6257 C3150.65,6211.96 3169.29,5778.28 3212,5738 C3335.99,5621.06 3526.37,5596.58 3685.25,5601.19 " fill="none" id="C_0001850771625416044357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.73,5594.21,3705.45,5601.94,3685.21,5608.2,3685.73,5594.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[346f4031a9ef3d19012d66959f7223cc]
reverse link C_0000820091630223006238 to C_0001850771625416044357--><path d="M1918.92,6370.85 C2015.01,6387.55 2119,6405.62 2213.73,6422.08 " fill="none" id="C_0000820091630223006238&lt;-C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1917.69,6377.74,1899.18,6367.42,1920.08,6363.95,1917.69,6377.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0ed859701260fc0467c79ba328d333e0]
link C_0001458511670125196521 to C_0001112867090784569162--><path d="M2840.09,5938.86 C2930.41,5904.87 3027.95,5863 3113,5815 C3161.54,5787.6 3160.56,5759.48 3212,5738 C3360.6,5675.96 3538.63,5650.5 3684.76,5640.88 " fill="none" id="C_0001458511670125196521-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3684.77,5633.86,3705.16,5639.62,3685.63,5647.84,3684.77,5633.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7d4a4b49b4ab143b71158128b6404bf]
reverse link C_0000820091630223006238 to C_0001458511670125196521--><path d="M1918.57,6212.54 C2021.23,6183.16 2132.95,6151.19 2232.76,6122.63 " fill="none" id="C_0000820091630223006238&lt;-C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1920.33,6219.32,1899.18,6218.09,1916.48,6205.86,1920.33,6219.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d6e6f5aa7b358770fcfcca193064bc8e]
link C_0001286239480653274581 to C_0001112867090784569162--><path d="M2803.07,5639 C3053.77,5639 3428.52,5639 3685.18,5639 " fill="none" id="C_0001286239480653274581-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3685.38,5632,3705.38,5639,3685.38,5646,3685.38,5632" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[773c2b4e76d7127123f7363ca3d37bd1]
reverse link C_0000820091630223006238 to C_0001286239480653274581--><path d="M1809.46,5951.73 C1854.69,5900.65 1905.24,5852.74 1960,5815 C2051.62,5751.85 2166.61,5710.79 2269.67,5684.36 " fill="none" id="C_0000820091630223006238&lt;-C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1814.63,5956.45,1796.22,5966.94,1804.07,5947.26,1814.63,5956.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f3a746549c88b4848ab56ea8219bc3da]
link C_0002237184725500898553 to C_0001827593751126946500--><path d="M473.11,6340.71 C483.2,6341.59 493.2,6342.37 503,6343 C532.25,6344.89 562.88,6344.88 593.28,6343.62 " fill="none" id="C_0002237184725500898553-&gt;C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="598.55,6343.39,589.3865,6339.7802,593.5546,6343.6047,589.7301,6347.7728,598.55,6343.39" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="513.5" y="6332.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="523.5" y="6339.0669">_pVar</text><!--MD5=[cde88d746544cdc3d561e033289d5a39]
reverse link C_0002237184725500898553 to C_0001827593751126946500--><path d="M478.41,6311 C517.71,6311 558.84,6311 598.77,6311 " fill="none" id="C_0002237184725500898553&lt;-C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="473.13,6311,482.13,6315,478.13,6311,482.13,6307,473.13,6311" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="509" cy="6303.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="516" y="6307.0669">«friend»</text><!--MD5=[ef2198e91bebda66d46e12ab6957cbf1]
reverse link C_0001827593751126946500 to C_0000820091630223006238--><path d="M1106.31,6311 C1152.16,6311 1200.41,6311 1247.79,6311 " fill="none" id="C_0001827593751126946500&lt;-C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1093.13,6311,1099.13,6315,1105.13,6311,1099.13,6307,1093.13,6311" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1126" y="6300.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1136" y="6307.0669">_placeholder</text><!--MD5=[6dcc2079e7138c6daf78dfdba04cf639]
link C_0000527346272489458655 to C_0000562679976742134348--><path d="M4090.56,1537.98 C4250.54,1505.7 4541.2,1447.05 4769.94,1400.9 " fill="none" id="C_0000527346272489458655-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4768.78,1393.99,4789.77,1396.9,4771.55,1407.71,4768.78,1393.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93e37ca313af482d22d79ad2a1242be8]
link C_0000005959213735263804 to C_0000562679976742134348--><path d="M2898.2,1798.71 C3343.09,1824.76 4115.7,1826.92 4729,1603 C4767.41,1588.98 4805.37,1569.79 4841.52,1548.06 " fill="none" id="C_0000005959213735263804-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4837.86,1542.09,4858.56,1537.55,4845.21,1554.01,4837.86,1542.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da16bdd81ccd32c5345f4657a0311a5e]
link C_0000005959213735263804 to C_0001112867090784569162--><path d="M2898.32,1861.43 C2978.66,1897.54 3056.61,1946.88 3113,2014 C3172.83,2085.22 3817.32,4958.17 3946.89,5537.73 " fill="none" id="C_0000005959213735263804-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3953.75,5536.32,3951.28,5557.37,3940.08,5539.38,3953.75,5536.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c1ef560bc3e0f209cf8592a03b480402]
reverse link C_0000005959213735263804 to C_0000527346272489458655--><path d="M2911.61,1713.44 C3199.83,1672.18 3584.64,1617.1 3801.81,1586.01 " fill="none" id="C_0000005959213735263804&lt;-C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2898.39,1715.34,2904.8963,1718.4492,2910.2689,1713.6393,2903.7625,1710.53,2898.39,1715.34" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3146" y="1666.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3156" y="1673.0669">_val</text><!--MD5=[57043d4c3ff71e0c1ad226b68711ab62]
reverse link C_0000820091630223006238 to C_0000005959213735263804--><path d="M1586,5946.55 C1619.85,4966.85 1731.44,2329.18 1960,2014 C2012.98,1940.94 2092.1,1889.3 2174.84,1852.85 " fill="none" id="C_0000820091630223006238&lt;-C_0000005959213735263804" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1592.98,5947.15,1585.3,5966.9,1578.99,5946.67,1592.98,5947.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[557e1931b371155983b4f532a720c14b]
link C_0000234522456695339728 to C_0000562679976742134348--><path d="M4148.87,5796.42 C4347.36,5810.43 4651.38,5817.42 4729,5738 C4764.86,5701.31 4755.65,4866.2 4759,4815 C4839.61,3581.95 5008.47,2109.79 5074.35,1557.69 " fill="none" id="C_0000234522456695339728-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5067.42,1556.67,5076.75,1537.64,5081.32,1558.33,5067.42,1556.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0726cef29eeff02e0366a2a3eedb0bda]
link C_0001212087958231445051 to C_0000562679976742134348--><path d="M4729.15,1334 C4742.87,1334 4756.43,1334 4769.77,1334 " fill="none" id="C_0001212087958231445051-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4769.85,1327,4789.85,1334,4769.85,1341,4769.85,1327" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eaf16a6c5f1df092a02413a19a1eff1f]
link C_0000337724165693095141 to C_0000562679976742134348--><path d="M2875.75,1276.58 C2974.48,1277.35 3082.56,1278.2 3182,1279 C3869.56,1284.56 4042.67,1250.54 4729,1292 C4742.37,1292.81 4755.99,1293.76 4769.75,1294.82 " fill="none" id="C_0000337724165693095141-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4770.6,1287.87,4789.97,1296.45,4769.48,1301.82,4770.6,1287.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[16511a2f4c37fe51681fec60226a2973]
link C_0000337724165693095141 to C_0001112867090784569162--><path d="M2875.68,1349.71 C2966.41,1386.35 3055.25,1440.41 3113,1520 C3157.28,1581.03 3131.59,1783.46 3143,1858 C3369.2,3335.98 3826.63,5101.34 3942.4,5537.77 " fill="none" id="C_0000337724165693095141-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3949.2,5536.11,3947.57,5557.24,3935.67,5539.71,3949.2,5536.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fe439d5e765335e37cf9df5fa7d3979]
reverse link C_0000337724165693095141 to C_0001212087958231445051--><path d="M2888.82,1289.19 C2972.14,1292.77 3060.72,1296.54 3143,1300 C3220.57,1303.26 3302.24,1306.66 3382.81,1310 " fill="none" id="C_0000337724165693095141&lt;-C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2875.76,1288.63,2881.5832,1292.8832,2887.749,1289.1438,2881.9258,1284.8906,2875.76,1288.63" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3146" y="1289.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3156" y="1296.0669">_val</text><!--MD5=[e5f99a919a61a4e42aca90a18e3fda58]
reverse link C_0000820091630223006238 to C_0000337724165693095141--><path d="M1582.35,5946.87 C1608.06,4890.43 1703.39,1876.75 1960,1520 C2017.5,1440.06 2106.41,1385.89 2197.29,1349.26 " fill="none" id="C_0000820091630223006238&lt;-C_0000337724165693095141" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1589.34,5947.05,1581.86,5966.88,1575.35,5946.71,1589.34,5947.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[66a9300658efedb4b1a93e23e9ff93f7]
link C_0001994773360593884629 to C_0000562679976742134348--><path d="M4268.5,5885.3 C4452.18,5891.97 4664.77,5884.43 4729,5821 C4763.95,5786.49 4755.26,5428.97 4759,5380 C4870.34,3921.43 5026.21,2169.07 5081.27,1557.52 " fill="none" id="C_0001994773360593884629-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5074.3,1556.86,5083.07,1537.57,5088.25,1558.11,5074.3,1556.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c3e3f5d6f986708e944aeb087ff93a0]
link C_0000285075638289121010 to C_0000562679976742134348--><path d="M4241.15,895.37 C4399.01,912.96 4598.43,950.42 4760,1030 C4806.57,1052.94 4851.63,1083.99 4892.91,1117.52 " fill="none" id="C_0000285075638289121010-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4897.61,1112.33,4908.54,1130.48,4888.68,1123.11,4897.61,1112.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[88b22e236c247f697595a8a031ef384e]
link C_0000919753061206343041 to C_0000562679976742134348--><path d="M3113.31,905.19 C3623.84,1015.3 4351.55,1172.25 4770.28,1262.56 " fill="none" id="C_0000919753061206343041-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4771.91,1255.75,4789.98,1266.81,4768.96,1269.44,4771.91,1255.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9e5689f27ad3ab40777162f8e227abae]
link C_0000919753061206343041 to C_0001112867090784569162--><path d="M3100.69,1010.31 C3104.95,1015.75 3109.05,1021.31 3113,1027 C3154.7,1087.15 3133.82,1612.39 3143,1685 C3243.43,2479.04 3821.81,5000.44 3946.02,5537.7 " fill="none" id="C_0000919753061206343041-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3952.89,5536.37,3950.58,5557.43,3939.25,5539.52,3952.89,5536.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9aabf9c28edcc453494b77d207249301]
reverse link C_0000919753061206343041 to C_0000285075638289121010--><path d="M3126.33,821.71 C3325.31,835.46 3537.83,850.16 3699.73,861.35 " fill="none" id="C_0000919753061206343041&lt;-C_0000285075638289121010" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3113.24,820.8,3118.9487,825.2057,3125.2112,821.6306,3119.5025,817.2249,3113.24,820.8" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3146" y="814.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3156" y="821.0669">_val</text><!--MD5=[9f3f5d87c1b4e7d8b1cb63940590e5b7]
reverse link C_0000820091630223006238 to C_0000919753061206343041--><path d="M1579.41,5946.59 C1597.59,4816.92 1675.56,1425.56 1960,1027 C1964.1,1021.25 1968.37,1015.64 1972.79,1010.15 " fill="none" id="C_0000820091630223006238&lt;-C_0000919753061206343041" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1586.41,5946.85,1579.09,5966.74,1572.41,5946.63,1586.41,5946.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[01bcfd93dfd380bd3fb6d526bf3eb237]
link C_0000976793773745790650 to C_0000562679976742134348--><path d="M4046.94,5970.02 C4199.18,6013.25 4544.34,6083.93 4729,5904 C5043,5598.04 5092.43,2434.49 5100.11,1558.02 " fill="none" id="C_0000976793773745790650-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5093.11,1557.69,5100.28,1537.75,5107.11,1557.81,5093.11,1557.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f0fe444b5b6275dc17f35f6ac9aecee1]
link C_0001731737538524969332 to C_0000562679976742134348--><path d="M4426.62,430.01 C4545.06,454.86 4665.73,498.84 4760,575 C4925.18,708.45 5013.25,938.81 5058.31,1110.84 " fill="none" id="C_0001731737538524969332-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5065.16,1109.35,5063.33,1130.46,5051.59,1112.82,5065.16,1109.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a2d3ffeb0b578b62dc98362b1e858224]
link C_0000988703063712340439 to C_0000562679976742134348--><path d="M3045.78,411.13 C3681.93,565.87 4693.25,814.26 4729,838 C4832.99,907.06 4919.18,1015.28 4982.37,1113.03 " fill="none" id="C_0000988703063712340439-&gt;C_0000562679976742134348" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4988.46,1109.56,4993.3,1130.19,4976.65,1117.09,4988.46,1109.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2892913b73a1d83496cb15dea195eaa1]
link C_0000988703063712340439 to C_0001112867090784569162--><path d="M3045.67,470.16 C3070.18,489.41 3092.9,510.62 3113,534 C3152.82,580.3 3173.14,739.58 3182,800 C3233.81,1153.36 3172.28,1248.08 3212,1603 C3389.29,3187.36 3834.84,5083.37 3944.72,5537.66 " fill="none" id="C_0000988703063712340439-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3951.56,5536.19,3949.47,5557.27,3937.96,5539.48,3951.56,5536.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dcefae2390a2798e6a439bdb17eed6e6]
reverse link C_0000988703063712340439 to C_0001731737538524969332--><path d="M3058.73,330.95 C3267.51,348.15 3500.2,367.33 3678.13,381.99 " fill="none" id="C_0000988703063712340439&lt;-C_0001731737538524969332" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3045.65,329.87,3051.3045,334.3452,3057.6102,330.8469,3051.9557,326.3717,3045.65,329.87" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3146" y="329.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3156" y="336.0669">_val</text><!--MD5=[f15e7c41921f9782046233198505d12e]
reverse link C_0000820091630223006238 to C_0000988703063712340439--><path d="M1576.96,5946.88 C1588.03,4747.89 1647.59,974.63 1960,534 C1979.25,506.85 2002.12,482.68 2027.49,461.16 " fill="none" id="C_0000820091630223006238&lt;-C_0000988703063712340439" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1583.96,5947.01,1576.78,5966.94,1569.96,5946.88,1583.96,5947.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c9d17b8f3e4e5199e421d28e00f06c4]
@startuml
left to right direction
package [Dynamic] as C_0002281307121949168090 {
abstract "VarHolder" as C_0000820091630223006238
abstract C_0000820091630223006238 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104{VarHolder}]] {
+~VarHolder() : void
{abstract} +clone(Placeholder<Dynamic::VarHolder> * pHolder = 0) const = 0 : Dynamic::VarHolder *
{abstract} +type() const = 0 : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & val) const : void
+convert(Timestamp & val) const : void
+convert(UUID & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
#VarHolder() : void
#cloneHolder<T>(Placeholder<Dynamic::VarHolder> * pVarHolder, const T & val) : class Dynamic::VarHolder *
#convertToSmaller<F,T>(const F & from, T & to) : void
#convertToSmallerUnsigned<F,T>(const F & from, T & to) : void
#convertSignedToUnsigned<F,T>(const F & from, T & to) : void
#convertSignedFloatToUnsigned<F,T>(const F & from, T & to) : void
#convertUnsignedToSigned<F,T>(const F & from, T & to) : void
-checkUpperLimit<F,T>(const F & from) : void
-checkLowerLimit<F,T>(const F & from) : void
-checkUpperLimitFloat<F,T>(const F & from) : void
-checkLowerLimitFloat<F,T>(const F & from) : void
}
class "VarHolderImpl<T>" as C_0001112867090784569162
class C_0001112867090784569162 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{VarHolderImpl}]] {
+VarHolderImpl<T>(const T & val) : void
+~VarHolderImpl<T>() : void
+type() const : const std::type_info &
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const T &
-VarHolderImpl<T>() : void
-VarHolderImpl<T>(const VarHolderImpl<T> & ) : void
-operator=(const VarHolderImpl<T> & ) : VarHolderImpl<T> &
-_val : T [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754{_val}]]]
}
class "VarHolderImpl<signed char>" as C_0002149165824584484566
class C_0002149165824584484566 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
+VarHolderImpl(Int8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int8> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int8> & ) : Dynamic::VarHolderImpl<Int8> &
-_val : Int8 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910{_val}]]]
}
class "VarHolderImpl<short>" as C_0000198808093629002393
class C_0000198808093629002393 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915{VarHolderImpl}]] {
+VarHolderImpl(Int16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int16> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int16> & ) : Dynamic::VarHolderImpl<Int16> &
-_val : Int16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063{_val}]]]
}
class "VarHolderImpl<int>" as C_0000976768452323437983
class C_0000976768452323437983 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068{VarHolderImpl}]] {
+VarHolderImpl(Int32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int32> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int32> & ) : Dynamic::VarHolderImpl<Int32> &
-_val : Int32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215{_val}]]]
}
class "VarHolderImpl<long>" as C_0001804431617899042426
class C_0001804431617899042426 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220{VarHolderImpl}]] {
+VarHolderImpl(Int64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int64> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int64> & ) : Dynamic::VarHolderImpl<Int64> &
-_val : Int64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382{_val}]]]
}
class "VarHolderImpl<unsigned char>" as C_0001832009513687525374
class C_0001832009513687525374 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387{VarHolderImpl}]] {
+VarHolderImpl(UInt8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt8> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt8> & ) : Dynamic::VarHolderImpl<UInt8> &
-_val : UInt8 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534{_val}]]]
}
class "VarHolderImpl<unsigned short>" as C_0000572186414558919480
class C_0000572186414558919480 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539{VarHolderImpl}]] {
+VarHolderImpl(UInt16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt16> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt16> & ) : Dynamic::VarHolderImpl<UInt16> &
-_val : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686{_val}]]]
}
class "VarHolderImpl<unsigned int>" as C_0000166253842255815357
class C_0000166253842255815357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691{VarHolderImpl}]] {
+VarHolderImpl(UInt32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt32> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt32> & ) : Dynamic::VarHolderImpl<UInt32> &
-_val : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838{_val}]]]
}
class "VarHolderImpl<unsigned long>" as C_0001459401574844645109
class C_0001459401574844645109 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843{VarHolderImpl}]] {
+VarHolderImpl(UInt64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt64> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt64> & ) : Dynamic::VarHolderImpl<UInt64> &
-_val : UInt64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011{_val}]]]
}
class "VarHolderImpl<bool>" as C_0000599279109574326060
class C_0000599279109574326060 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016{VarHolderImpl}]] {
+VarHolderImpl(bool val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const bool &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<bool> & ) : void
-operator=(const Dynamic::VarHolderImpl<bool> & ) : Dynamic::VarHolderImpl<bool> &
-_val : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161{_val}]]]
}
class "VarHolderImpl<float>" as C_0000384619052225252533
class C_0000384619052225252533 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166{VarHolderImpl}]] {
+VarHolderImpl(float val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const float &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<float> & ) : void
-operator=(const Dynamic::VarHolderImpl<float> & ) : Dynamic::VarHolderImpl<float> &
-_val : float [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314{_val}]]]
}
class "VarHolderImpl<double>" as C_0002242257052791493112
class C_0002242257052791493112 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319{VarHolderImpl}]] {
+VarHolderImpl(double val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const double &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<double> & ) : void
-operator=(const Dynamic::VarHolderImpl<double> & ) : Dynamic::VarHolderImpl<double> &
-_val : double [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473{_val}]]]
}
class "VarHolderImpl<char>" as C_0001942181379759217898
class C_0001942181379759217898 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478{VarHolderImpl}]] {
+VarHolderImpl(char val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const char &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<char> & ) : void
-operator=(const Dynamic::VarHolderImpl<char> & ) : Dynamic::VarHolderImpl<char> &
-_val : char [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623{_val}]]]
}
class "VarHolderImpl<std::string>" as C_0002291903337356664508
class C_0002291903337356664508 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const std::string & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+convert(UUID & uuid) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::string &
+isString() const : bool
+size() const : std::size_t
+operator[](std::string::size_type n) : char &
+operator[](std::string::size_type n) const : const char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<std::string> & ) : void
-operator=(const Dynamic::VarHolderImpl<std::string> & ) : Dynamic::VarHolderImpl<std::string> &
-_val : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820{_val}]]]
}
class "VarHolderImpl<std::basic_string<unsigned short>>" as C_0001370368867041199969
class C_0001370368867041199969 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const UTF16String & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UTF16String &
+isString() const : bool
+size() const : std::size_t
+operator[](UTF16String::size_type n) : UTF16Char &
+operator[](UTF16String::size_type n) const : const UTF16Char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UTF16String> & ) : void
-operator=(const Dynamic::VarHolderImpl<UTF16String> & ) : Dynamic::VarHolderImpl<UTF16String> &
-toStdString() const : std::string
-_val : UTF16String [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022{_val}]]]
}
class "VarHolderImpl<long long>" as C_0001646173285346905617
class C_0001646173285346905617 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309{VarHolderImpl}]] {
+VarHolderImpl(long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<long long> & ) : Dynamic::VarHolderImpl<long long> &
-_val : long long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452{_val}]]]
}
class "VarHolderImpl<unsigned long long>" as C_0001583654034047392858
class C_0001583654034047392858 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457{VarHolderImpl}]] {
+VarHolderImpl(unsigned long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const unsigned long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<unsigned long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<unsigned long long> & ) : Dynamic::VarHolderImpl<unsigned long long> &
-_val : unsigned long long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600{_val}]]]
}
class "VarHolderImpl<std::vector<T>>" as C_0000910307965681926894
class C_0000910307965681926894 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608{VarHolderImpl}]] {
+VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::vector<T> & val) : void
+~VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::vector<T> &
+isVector() const : bool
+size() const : std::size_t
+operator[](typename std::vector<T>::size_type n) : T &
+operator[](typename std::vector<T>::size_type n) const : const T &
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::vector<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668{_val}]]]
}
class "VarHolderImpl<std::list<T>>" as C_0000355772964752054032
class C_0000355772964752054032 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673{VarHolderImpl}]] {
+VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::list<T> & val) : void
+~VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::list<T> &
+isList() const : bool
+size() const : std::size_t
+operator[](typename std::list<T>::size_type n) : T &
+operator[](typename std::list<T>::size_type n) const : const T &
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::list<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743{_val}]]]
}
class "VarHolderImpl<std::deque<T>>" as C_0001350084679139174053
class C_0001350084679139174053 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748{VarHolderImpl}]] {
+VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::deque<T> & val) : void
+~VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::deque<T> &
+isDeque() const : bool
+size() const : std::size_t
+operator[](typename std::deque<T>::size_type n) : T &
+operator[](typename std::deque<T>::size_type n) const : const T &
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::deque<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808{_val}]]]
}
class "VarHolderImpl<DateTime>" as C_0000699000175415913074
class C_0000699000175415913074 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813{VarHolderImpl}]] {
+VarHolderImpl(const DateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const DateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<DateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<DateTime> & ) : Dynamic::VarHolderImpl<DateTime> &
-_val : DateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958{_val}]]]
}
class "VarHolderImpl<LocalDateTime>" as C_0001850771625416044357
class C_0001850771625416044357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963{VarHolderImpl}]] {
+VarHolderImpl(const LocalDateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const LocalDateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<LocalDateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<LocalDateTime> & ) : Dynamic::VarHolderImpl<LocalDateTime> &
-_val : LocalDateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093{_val}]]]
}
class "VarHolderImpl<Timestamp>" as C_0001458511670125196521
class C_0001458511670125196521 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098{VarHolderImpl}]] {
+VarHolderImpl(const Timestamp & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Timestamp &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Timestamp> & ) : void
-operator=(const Dynamic::VarHolderImpl<Timestamp> & ) : Dynamic::VarHolderImpl<Timestamp> &
-_val : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228{_val}]]]
}
class "VarHolderImpl<UUID>" as C_0001286239480653274581
class C_0001286239480653274581 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233{VarHolderImpl}]] {
+VarHolderImpl(const UUID & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UUID &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UUID> & ) : void
-operator=(const Dynamic::VarHolderImpl<UUID> & ) : Dynamic::VarHolderImpl<UUID> &
-_val : UUID [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324{_val}]]]
}
class "VarIterator" as C_0002237184725500898553
class C_0002237184725500898553 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33{VarIterator}]] {
+VarIterator(Dynamic::Var * pVar, bool positionEnd) : void
+VarIterator(const Dynamic::VarIterator & other) : void
+VarIterator(Dynamic::VarIterator && other) : void
+~VarIterator() : void
+operator=(const Dynamic::VarIterator & other) : Dynamic::VarIterator &
+operator=(Dynamic::VarIterator && other) : Dynamic::VarIterator &
+operator==(const Dynamic::VarIterator & other) const : bool
+operator!=(const Dynamic::VarIterator & other) const : bool
+operator*() const : Dynamic::Var &
+operator->() const : Dynamic::Var *
+operator++() const : const Dynamic::VarIterator &
+operator++(int ) const : Dynamic::VarIterator
+operator- -() const : const Dynamic::VarIterator &
+operator- -(int ) const : Dynamic::VarIterator
+operator+(std::size_t diff) const : Dynamic::VarIterator
+operator-(std::size_t diff) const : Dynamic::VarIterator
+swap(Dynamic::VarIterator & other) : void
-VarIterator() : void
-increment() const : void
-decrement() const : void
-setPosition(std::size_t pos) const : void
-_pVar : Dynamic::Var * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117{_pVar}]]]
-_position : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118{_position}]]]
{static} +POSITION_END : const std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43{POSITION_END}]]]
}
class "Var" as C_0001827593751126946500
class C_0001827593751126946500 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41{Var}]] {
+Var() : void
+Var(const char * pVal) : void
+Var(const Dynamic::Var & other) : void
+~Var() : void
+swap(Dynamic::Var & other) : void
+begin() const : Dynamic::Var::ConstIterator
+end() const : Dynamic::Var::ConstIterator
+begin() : Dynamic::Var::Iterator
+end() : Dynamic::Var::Iterator
+operator!() const : bool
+operator=(const Dynamic::Var & other) : Dynamic::Var &
+operator+(const Dynamic::Var & other) const : const Dynamic::Var
+operator+(const char * other) const : const Dynamic::Var
+operator++() : Dynamic::Var &
+operator++(int ) : const Dynamic::Var
+operator- -() : Dynamic::Var &
+operator- -(int ) : const Dynamic::Var
+operator+=(const Dynamic::Var & other) : Dynamic::Var &
+operator+=(const char * other) : Dynamic::Var &
+operator-(const Dynamic::Var & other) const : const Dynamic::Var
+operator-=(const Dynamic::Var & other) : Dynamic::Var &
+operator*(const Dynamic::Var & other) const : const Dynamic::Var
+operator*=(const Dynamic::Var & other) : Dynamic::Var &
+operator/(const Dynamic::Var & other) const : const Dynamic::Var
+operator/=(const Dynamic::Var & other) : Dynamic::Var &
+operator==(const char * other) const : bool
+operator==(const Dynamic::Var & other) const : bool
+operator!=(const Dynamic::Var & other) const : bool
+operator!=(const char * other) const : bool
+operator<(const Dynamic::Var & other) const : bool
+operator<=(const Dynamic::Var & other) const : bool
+operator>(const Dynamic::Var & other) const : bool
+operator>=(const Dynamic::Var & other) const : bool
+operator||(const Dynamic::Var & other) const : bool
+operator&&(const Dynamic::Var & other) const : bool
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+at(std::size_t n) : char &
+operator[](const std::string & name) : Dynamic::Var &
+operator[](const std::string & name) const : const Dynamic::Var &
+type() const : const std::type_info &
+empty() : void
+clear() : void
+isEmpty() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
+toString() const : std::string
{static} +parse(const std::string & val) : Dynamic::Var
{static} +toString(const Dynamic::Var & var) : std::string
-getAt(std::size_t n) : Dynamic::Var &
-getAt(const std::string & n) : Dynamic::Var &
{static} -parse(const std::string & val, std::string::size_type & offset) : Dynamic::Var
{static} -parseObject(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseArray(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseString(const std::string & val, std::string::size_type & pos) : std::string
{static} -parseJSONString(const std::string & val, std::string::size_type & pos) : std::string
{static} -skipWhiteSpace(const std::string & val, std::string::size_type & pos) : void
-content() const : Dynamic::VarHolder *
-destruct() : void
-construct(const char * value) : void
-construct(const Dynamic::Var & other) : void
+Var<T>(const T & val) : void
+convert<T>(T & val) : void
+convert<T>() : T
+operator type-parameter-0-0<T>() : T
+extract<T>() : const T &
+operator=<T>(const T & other) : class Dynamic::Var &
+operator+<T>(const T & other) : const class Dynamic::Var
+operator+=<T>(const T & other) : class Dynamic::Var &
+operator-<T>(const T & other) : const class Dynamic::Var
+operator-=<T>(const T & other) : class Dynamic::Var &
+operator*<T>(const T & other) : const class Dynamic::Var
+operator*=<T>(const T & other) : class Dynamic::Var &
+operator/<T>(const T & other) : const class Dynamic::Var
+operator/=<T>(const T & other) : class Dynamic::Var &
+operator==<T>(const T & other) : _Bool
+operator!=<T>(const T & other) : _Bool
+operator<<T>(const T & other) : _Bool
+operator<=<T>(const T & other) : _Bool
+operator><T>(const T & other) : _Bool
+operator>=<T>(const T & other) : _Bool
+operator||<T>(const T & other) : _Bool
+operator&&<T>(const T & other) : _Bool
+operator[]<T>(const T & n) : class Dynamic::Var &
+operator[]<T>(const T & n) : const class Dynamic::Var &
-add<T>(const Dynamic::Var & other) : T
-subtract<T>(const Dynamic::Var & other) : T
-multiply<T>(const Dynamic::Var & other) : T
-divide<T>(const Dynamic::Var & other) : T
-holderImpl<T,E>(const std::string errorMessage = "") : VarHolderImpl<T> *
-structIndexOperator<T,N>(T * pStr, N n) : class Dynamic::Var &
-construct<ValueType>(const ValueType & value) : void
-_placeholder : Placeholder<Dynamic::VarHolder> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632{_placeholder}]]]
}
class "Struct<K,M=std::map<K, Var>,S=std::set<K>>" as C_0000562679976742134348
class C_0000562679976742134348 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
+Struct<K, M, S>() : void
+Struct<K, M, S>(const Dynamic::Struct::Data & val) : void
+~Struct<K, M, S>() : void
+operator[](const K & name) : Dynamic::Var &
+operator[](const K & name) const : const Dynamic::Var &
+contains(const K & name) const : bool
+find(const K & name) : Dynamic::Struct::Iterator
+find(const K & name) const : Dynamic::Struct::ConstIterator
+end() : Dynamic::Struct::Iterator
+end() const : Dynamic::Struct::ConstIterator
+begin() : Dynamic::Struct::Iterator
+begin() const : Dynamic::Struct::ConstIterator
+insert(const Dynamic::Struct::ValueType & aPair) : Dynamic::Struct::InsRetVal
+erase(const K & key) : Dynamic::Struct::SizeType
+erase(Dynamic::Struct::Iterator & it) : void
+clear() : void
+swap(Struct<K,M,S> & other) : void
+empty() const : bool
+size() const : Dynamic::Struct::SizeType
+members() const : Dynamic::Struct::NameSet
+getVar(const K & key) const : Dynamic::Var
+toString() const : std::string
+Struct<K, M, S><T>(const std::map<K,T> & val) : void
+Struct<K, M, S><T>(const ordered_map<K,T> & val) : void
+insert<T>(const K & key, const T & value) : Dynamic::Struct::InsRetVal
+getVar<DefT=class Poco::Dynamic::Var>(const K & key, const DefT & defaultValue) : class Dynamic::Var
-assignMap<T>(const T & map) : void
-_data : Dynamic::Struct::Data [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247{_data}]]]
}
class "Struct<std::string,std::map<std::string,Dynamic::Var>,std::set<std::string>>" as C_0000527346272489458655
class C_0000527346272489458655 {
}
class "VarHolderImpl<Dynamic::Struct<std::string,std::map<std::string,Dynamic::Var>,std::set<std::string>>>" as C_0000005959213735263804
class C_0000005959213735263804 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433{_val}]]]
}
class "Struct<int,std::map<int,Dynamic::Var>,std::set<int>>" as C_0000234522456695339728
class C_0000234522456695339728 {
}
class "Struct<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,std::map<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,Dynamic::Var>,std::set<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType>>" as C_0001212087958231445051
class C_0001212087958231445051 {
}
class "VarHolderImpl<Dynamic::Struct<int,std::map<int,Dynamic::Var>,std::set<int>>>" as C_0000337724165693095141
class C_0000337724165693095141 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619{_val}]]]
}
class "Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>" as C_0001994773360593884629
class C_0001994773360593884629 {
}
class "Struct<std::string,OrderedMap<std::string,Dynamic::Var>,OrderedSet<std::string>>" as C_0000285075638289121010
class C_0000285075638289121010 {
}
class "VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>" as C_0000919753061206343041
class C_0000919753061206343041 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805{_val}]]]
}
class "Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>" as C_0000976793773745790650
class C_0000976793773745790650 {
}
class "Struct<Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int,tsl::ordered_map<int,Poco::Dynamic::Var>,tsl::ordered_set<int>>>::KeyType,OrderedMap<int,Dynamic::Var>,OrderedSet<int>>" as C_0001731737538524969332
class C_0001731737538524969332 {
}
class "VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>" as C_0000988703063712340439
class C_0000988703063712340439 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991{_val}]]]
}
class "Struct<K,M,S>" as C_0000876644825045799418
class C_0000876644825045799418 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38{Struct}]] {
}
}
C_0000820091630223006238 <|- - C_0001112867090784569162
C_0002149165824584484566 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002149165824584484566
C_0000198808093629002393 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000198808093629002393
C_0000976768452323437983 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000976768452323437983
C_0001804431617899042426 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001804431617899042426
C_0001832009513687525374 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001832009513687525374
C_0000572186414558919480 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000572186414558919480
C_0000166253842255815357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000166253842255815357
C_0001459401574844645109 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001459401574844645109
C_0000599279109574326060 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000599279109574326060
C_0000384619052225252533 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000384619052225252533
C_0002242257052791493112 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002242257052791493112
C_0001942181379759217898 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001942181379759217898
C_0002291903337356664508 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002291903337356664508
C_0001370368867041199969 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001370368867041199969
C_0001646173285346905617 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001646173285346905617
C_0001583654034047392858 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001583654034047392858
C_0000910307965681926894 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000910307965681926894
C_0000355772964752054032 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000355772964752054032
C_0001350084679139174053 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001350084679139174053
C_0000699000175415913074 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000699000175415913074
C_0001850771625416044357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001850771625416044357
C_0001458511670125196521 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001458511670125196521
C_0001286239480653274581 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001286239480653274581
C_0002237184725500898553 - -> C_0001827593751126946500 : -_pVar
C_0002237184725500898553 <.. C_0001827593751126946500 : +<<friend>>
C_0001827593751126946500 o- - C_0000820091630223006238 : -_placeholder
C_0000527346272489458655 ..|> C_0000562679976742134348
C_0000005959213735263804 ..|> C_0000562679976742134348
C_0000005959213735263804 ..|> C_0001112867090784569162
C_0000005959213735263804 o- - C_0000527346272489458655 : -_val
C_0000820091630223006238 <|- - C_0000005959213735263804
C_0000234522456695339728 ..|> C_0000562679976742134348
C_0001212087958231445051 ..|> C_0000562679976742134348
C_0000337724165693095141 ..|> C_0000562679976742134348
C_0000337724165693095141 ..|> C_0001112867090784569162
C_0000337724165693095141 o- - C_0001212087958231445051 : -_val
C_0000820091630223006238 <|- - C_0000337724165693095141
C_0001994773360593884629 ..|> C_0000562679976742134348
C_0000285075638289121010 ..|> C_0000562679976742134348
C_0000919753061206343041 ..|> C_0000562679976742134348
C_0000919753061206343041 ..|> C_0001112867090784569162
C_0000919753061206343041 o- - C_0000285075638289121010 : -_val
C_0000820091630223006238 <|- - C_0000919753061206343041
C_0000976793773745790650 ..|> C_0000562679976742134348
C_0001731737538524969332 ..|> C_0000562679976742134348
C_0000988703063712340439 ..|> C_0000562679976742134348
C_0000988703063712340439 ..|> C_0001112867090784569162
C_0000988703063712340439 o- - C_0001731737538524969332 : -_val
C_0000820091630223006238 <|- - C_0000988703063712340439

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>