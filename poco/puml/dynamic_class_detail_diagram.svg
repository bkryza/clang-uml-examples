<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="12454px" preserveAspectRatio="none" style="width:6287px;height:12454px;" version="1.1" viewBox="0 0 6287 12454" width="6287px" zoomAndPan="magnify"><defs><filter height="300%" id="f5yy1byi9huvy" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[031cc931b6e6b4333e02cc6a702b3341]
cluster C_0002281307121949168090--><polygon fill="#FFFFFF" filter="url(#f5yy1byi9huvy)" points="22,23.8,94,23.8,101,46.0969,6265,46.0969,6265,12396.8,22,12396.8,22,23.8" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="101" y1="46.0969" y2="46.0969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="38.7951">Dynamic</text><!--MD5=[63e3babcd9679d0fc26b559e71357f11]
class C_0000820091630223006238--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L104" target="_top" title="VarHolder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L104" xlink:show="new" xlink:title="VarHolder" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="688.2344" id="C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.5;" width="626" x="1248" y="5665.8"/><ellipse cx="1525.75" cy="5681.8" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1525.8594,5677.1438 L1524.7031,5682.2219 L1527.0313,5682.2219 L1525.8594,5677.1438 Z M1524.375,5674.9094 L1527.3594,5674.9094 L1530.7188,5687.3 L1528.2656,5687.3 L1527.5,5684.2375 L1524.2188,5684.2375 L1523.4688,5687.3 L1521.0313,5687.3 L1524.375,5674.9094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="1546.25" y="5685.9543">VarHolder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1249" x2="1873" y1="5697.8" y2="5697.8"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1249" x2="1873" y1="5705.8" y2="5705.8"/><ellipse cx="1259" cy="5716.8" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1268" y="5720.0104">~VarHolder() : void</text><ellipse cx="1259" cy="5729.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="512" x="1268" y="5732.8151">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pHolder = 0) const = 0 : Dynamic::VarHolder *</text><ellipse cx="1259" cy="5742.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="1268" y="5745.6198">type() const = 0 : const std::type_info &amp;</text><ellipse cx="1259" cy="5755.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1268" y="5758.4245">convert(Int8 &amp; val) const : void</text><ellipse cx="1259" cy="5768.0188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="5771.2292">convert(Int16 &amp; val) const : void</text><ellipse cx="1259" cy="5780.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="5784.0339">convert(Int32 &amp; val) const : void</text><ellipse cx="1259" cy="5793.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1268" y="5796.8386">convert(Int64 &amp; val) const : void</text><ellipse cx="1259" cy="5806.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1268" y="5809.6433">convert(UInt8 &amp; val) const : void</text><ellipse cx="1259" cy="5819.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="5822.4479">convert(UInt16 &amp; val) const : void</text><ellipse cx="1259" cy="5832.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="5835.2526">convert(UInt32 &amp; val) const : void</text><ellipse cx="1259" cy="5844.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1268" y="5848.0573">convert(UInt64 &amp; val) const : void</text><ellipse cx="1259" cy="5857.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1268" y="5860.862">convert(DateTime &amp; val) const : void</text><ellipse cx="1259" cy="5870.4563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1268" y="5873.6667">convert(LocalDateTime &amp; val) const : void</text><ellipse cx="1259" cy="5883.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1268" y="5886.4714">convert(Timestamp &amp; val) const : void</text><ellipse cx="1259" cy="5896.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1268" y="5899.2761">convert(UUID &amp; val) const : void</text><ellipse cx="1259" cy="5908.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1268" y="5912.0808">convert(long long &amp; val) const : void</text><ellipse cx="1259" cy="5921.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1268" y="5924.8854">convert(unsigned long long &amp; val) const : void</text><ellipse cx="1259" cy="5934.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1268" y="5937.6901">convert(bool &amp; val) const : void</text><ellipse cx="1259" cy="5947.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1268" y="5950.4948">convert(float &amp; val) const : void</text><ellipse cx="1259" cy="5960.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1268" y="5963.2995">convert(double &amp; val) const : void</text><ellipse cx="1259" cy="5972.8938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1268" y="5976.1042">convert(char &amp; val) const : void</text><ellipse cx="1259" cy="5985.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1268" y="5988.9089">convert(std::string &amp; val) const : void</text><ellipse cx="1259" cy="5998.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1268" y="6001.7136">convert(UTF16String &amp; val) const : void</text><ellipse cx="1259" cy="6011.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1268" y="6014.5183">isArray() const : bool</text><ellipse cx="1259" cy="6024.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1268" y="6027.3229">isVector() const : bool</text><ellipse cx="1259" cy="6036.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1268" y="6040.1276">isList() const : bool</text><ellipse cx="1259" cy="6049.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1268" y="6052.9323">isDeque() const : bool</text><ellipse cx="1259" cy="6062.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1268" y="6065.737">isStruct() const : bool</text><ellipse cx="1259" cy="6075.3313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1268" y="6078.5417">isOrdered() const : bool</text><ellipse cx="1259" cy="6088.1359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1268" y="6091.3464">isInteger() const : bool</text><ellipse cx="1259" cy="6100.9406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1268" y="6104.1511">isSigned() const : bool</text><ellipse cx="1259" cy="6113.7453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1268" y="6116.9558">isNumeric() const : bool</text><ellipse cx="1259" cy="6126.55" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1268" y="6129.7604">isBoolean() const : bool</text><ellipse cx="1259" cy="6139.3547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1268" y="6142.5651">isString() const : bool</text><ellipse cx="1259" cy="6152.1594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1268" y="6155.3698">isDate() const : bool</text><ellipse cx="1259" cy="6164.9641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1268" y="6168.1745">isTime() const : bool</text><ellipse cx="1259" cy="6177.7688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1268" y="6180.9792">isDateTime() const : bool</text><ellipse cx="1259" cy="6190.5734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1268" y="6193.7839">isUUID() const : bool</text><ellipse cx="1259" cy="6203.3781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1268" y="6206.5886">size() const : std::size_t</text><polygon fill="#FFFF44" points="1259,6211.1828,1263,6215.1828,1259,6219.1828,1255,6215.1828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1268" y="6219.3933">VarHolder() : void</text><polygon fill="#FFFF44" points="1259,6223.9875,1263,6227.9875,1259,6231.9875,1255,6227.9875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="600" x="1268" y="6232.1979">cloneHolder(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder, const T &amp; val) : class Dynamic::VarHolder *</text><polygon fill="#FFFF44" points="1259,6236.7922,1263,6240.7922,1259,6244.7922,1255,6240.7922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="1268" y="6245.0026">convertToSmaller(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6249.5969,1263,6253.5969,1259,6257.5969,1255,6253.5969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="1268" y="6257.8073">convertToSmallerUnsigned(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6262.4016,1263,6266.4016,1259,6270.4016,1255,6266.4016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1268" y="6270.612">convertSignedToUnsigned(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6275.2063,1263,6279.2063,1259,6283.2063,1255,6279.2063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="1268" y="6283.4167">convertSignedFloatToUnsigned(const F &amp; from, T &amp; to) : void</text><polygon fill="#FFFF44" points="1259,6288.0109,1263,6292.0109,1259,6296.0109,1255,6292.0109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="1268" y="6296.2214">convertUnsignedToSigned(const F &amp; from, T &amp; to) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6302.8156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1268" y="6309.0261">checkUpperLimit(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6315.6203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1268" y="6321.8308">checkLowerLimit(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6328.425"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1268" y="6334.6354">checkUpperLimitFloat(const F &amp; from) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1256" y="6341.2297"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1268" y="6347.4401">checkLowerLimitFloat(const F &amp; from) : void</text></a><!--MD5=[5bec7878bc8351ff61befe9ac854c5da]
class C_0001112867090784569162--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L705" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L705" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="163.2422" id="C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="4140" y="5481.3"/><ellipse cx="4351.75" cy="5497.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4354.7188,5502.9406 Q4354.1406,5503.2375 4353.5,5503.3781 Q4352.8594,5503.5344 4352.1563,5503.5344 Q4349.6563,5503.5344 4348.3281,5501.8938 Q4347.0156,5500.2375 4347.0156,5497.1125 Q4347.0156,5493.9875 4348.3281,5492.3313 Q4349.6563,5490.675 4352.1563,5490.675 Q4352.8594,5490.675 4353.5,5490.8313 Q4354.1563,5490.9875 4354.7188,5491.2844 L4354.7188,5494.0031 Q4354.0938,5493.425 4353.5,5493.1594 Q4352.9063,5492.8781 4352.2813,5492.8781 Q4350.9375,5492.8781 4350.25,5493.9563 Q4349.5625,5495.0188 4349.5625,5497.1125 Q4349.5625,5499.2063 4350.25,5500.2844 Q4350.9375,5501.3469 4352.2813,5501.3469 Q4352.9063,5501.3469 4353.5,5501.0813 Q4354.0938,5500.8 4354.7188,5500.2219 L4354.7188,5502.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="4372.25" y="5501.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="4664" y="5478.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="4665" y="5490.4387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4141" x2="4669" y1="5513.3" y2="5513.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4146" y="5519.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5521.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="4160" y="5527.5104">_val : T</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4141" x2="4669" y1="5534.1047" y2="5534.1047"/><ellipse cx="4151" cy="5545.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4160" y="5548.3151">VarHolderImpl&lt;T&gt;(const T &amp; val) : void</text><ellipse cx="4151" cy="5557.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4160" y="5561.1198">~VarHolderImpl&lt;T&gt;() : void</text><ellipse cx="4151" cy="5570.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="4160" y="5573.9245">type() const : const std::type_info &amp;</text><ellipse cx="4151" cy="5583.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="4160" y="5586.7292">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="4151" cy="5596.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4160" y="5599.5339">value() const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5606.1281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4160" y="5612.3386">VarHolderImpl&lt;T&gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5618.9328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4160" y="5625.1433">VarHolderImpl&lt;T&gt;(const VarHolderImpl&lt;T&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4148" y="5631.7375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4160" y="5637.9479">operator=(const VarHolderImpl&lt;T&gt; &amp; ) : VarHolderImpl&lt;T&gt; &amp;</text><!--MD5=[2014e31dc9fcb1c7d7f8ab21fb0d339c]
class C_0002220828280612533118--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="457.75" id="C_0002220828280612533118" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="11885.8"/><ellipse cx="2414.75" cy="11901.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2417.7188,11907.4406 Q2417.1406,11907.7375 2416.5,11907.8781 Q2415.8594,11908.0344 2415.1563,11908.0344 Q2412.6563,11908.0344 2411.3281,11906.3938 Q2410.0156,11904.7375 2410.0156,11901.6125 Q2410.0156,11898.4875 2411.3281,11896.8313 Q2412.6563,11895.175 2415.1563,11895.175 Q2415.8594,11895.175 2416.5,11895.3313 Q2417.1563,11895.4875 2417.7188,11895.7844 L2417.7188,11898.5031 Q2417.0938,11897.925 2416.5,11897.6594 Q2415.9063,11897.3781 2415.2813,11897.3781 Q2413.9375,11897.3781 2413.25,11898.4563 Q2412.5625,11899.5188 2412.5625,11901.6125 Q2412.5625,11903.7063 2413.25,11904.7844 Q2413.9375,11905.8469 2415.2813,11905.8469 Q2415.9063,11905.8469 2416.5,11905.5813 Q2417.0938,11905.3 2417.7188,11904.7219 L2417.7188,11907.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2435.25" y="11905.9543">VarHolderImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="11917.8" y2="11917.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="11923.8"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11925.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2217.5" y="11932.0104">_val : Int8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="11938.6047" y2="11938.6047"/><ellipse cx="2208.5" cy="11949.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2217.5" y="11952.8151">VarHolderImpl(Int8 val) : void</text><ellipse cx="2208.5" cy="11962.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="11965.6198">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="11975.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="11978.4245">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="11988.0188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="11991.2292">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="12000.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="12004.0339">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="12013.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="12016.8386">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="12026.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="12029.6433">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="12039.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="12042.4479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="12052.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="12055.2526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="12064.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="12068.0573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="12077.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="12080.862">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="12090.4563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="12093.6667">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="12103.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="12106.4714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="12116.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="12119.2761">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="12128.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="12132.0808">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="12141.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="12144.8854">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="12154.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="12157.6901">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="12167.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="12170.4948">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="12180.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2217.5" y="12183.2995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2208.5" cy="12192.8938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="12196.1042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="12205.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2217.5" y="12208.9089">value() const : const Int8 &amp;</text><ellipse cx="2208.5" cy="12218.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="12221.7136">isArray() const : bool</text><ellipse cx="2208.5" cy="12231.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="12234.5183">isStruct() const : bool</text><ellipse cx="2208.5" cy="12244.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="12247.3229">isInteger() const : bool</text><ellipse cx="2208.5" cy="12256.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="12260.1276">isSigned() const : bool</text><ellipse cx="2208.5" cy="12269.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="12272.9323">isNumeric() const : bool</text><ellipse cx="2208.5" cy="12282.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="12285.737">isBoolean() const : bool</text><ellipse cx="2208.5" cy="12295.3313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="12298.5417">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="12305.1359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="12311.3464">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="12317.9406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2217.5" y="12324.1511">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="12330.7453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="2217.5" y="12336.9558">operator=(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int8&gt; &amp;</text><!--MD5=[ca8da3ab2e5c399aaf21ac160b12bb93]
class C_0002149165824584484566--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="457.75" id="C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="11392.8"/><ellipse cx="2376.25" cy="11408.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2379.2188,11414.4406 Q2378.6406,11414.7375 2378,11414.8781 Q2377.3594,11415.0344 2376.6563,11415.0344 Q2374.1563,11415.0344 2372.8281,11413.3938 Q2371.5156,11411.7375 2371.5156,11408.6125 Q2371.5156,11405.4875 2372.8281,11403.8313 Q2374.1563,11402.175 2376.6563,11402.175 Q2377.3594,11402.175 2378,11402.3313 Q2378.6563,11402.4875 2379.2188,11402.7844 L2379.2188,11405.5031 Q2378.5938,11404.925 2378,11404.6594 Q2377.4063,11404.3781 2376.7813,11404.3781 Q2375.4375,11404.3781 2374.75,11405.4563 Q2374.0625,11406.5188 2374.0625,11408.6125 Q2374.0625,11410.7063 2374.75,11411.7844 Q2375.4375,11412.8469 2376.7813,11412.8469 Q2377.4063,11412.8469 2378,11412.5813 Q2378.5938,11412.3 2379.2188,11411.7219 L2379.2188,11414.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2396.75" y="11412.9543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="2655.5" y="11389.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="2656.5" y="11401.9387">signed char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="11424.8" y2="11424.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="11430.8"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11432.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2217.5" y="11439.0104">_val : Int8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="11445.6047" y2="11445.6047"/><ellipse cx="2208.5" cy="11456.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2217.5" y="11459.8151">VarHolderImpl(Int8 val) : void</text><ellipse cx="2208.5" cy="11469.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="11472.6198">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="11482.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="11485.4245">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="11495.0188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="11498.2292">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="11507.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="11511.0339">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="11520.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="11523.8386">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="11533.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="11536.6433">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="11546.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="11549.4479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="11559.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="11562.2526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="11571.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="11575.0573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="11584.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="11587.862">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="11597.4563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="11600.6667">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="11610.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="11613.4714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="11623.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="11626.2761">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="11635.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="11639.0808">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="11648.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="11651.8854">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="11661.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="11664.6901">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="11674.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="11677.4948">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="11687.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2217.5" y="11690.2995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2208.5" cy="11699.8938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="11703.1042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="11712.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2217.5" y="11715.9089">value() const : const Int8 &amp;</text><ellipse cx="2208.5" cy="11725.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="11728.7136">isArray() const : bool</text><ellipse cx="2208.5" cy="11738.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="11741.5183">isStruct() const : bool</text><ellipse cx="2208.5" cy="11751.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="11754.3229">isInteger() const : bool</text><ellipse cx="2208.5" cy="11763.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="11767.1276">isSigned() const : bool</text><ellipse cx="2208.5" cy="11776.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="11779.9323">isNumeric() const : bool</text><ellipse cx="2208.5" cy="11789.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="11792.737">isBoolean() const : bool</text><ellipse cx="2208.5" cy="11802.3313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="11805.5417">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11812.1359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="11818.3464">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11824.9406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2217.5" y="11831.1511">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="11837.7453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="2217.5" y="11843.9558">operator=(const Dynamic::VarHolderImpl&lt;Int8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int8&gt; &amp;</text><!--MD5=[7368cdd56a5292fac79769f5043446e9]
class C_0000198808093629002393--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L915" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L915" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2195" y="10912.3"/><ellipse cx="2396.75" cy="10928.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2399.7188,10933.9406 Q2399.1406,10934.2375 2398.5,10934.3781 Q2397.8594,10934.5344 2397.1563,10934.5344 Q2394.6563,10934.5344 2393.3281,10932.8938 Q2392.0156,10931.2375 2392.0156,10928.1125 Q2392.0156,10924.9875 2393.3281,10923.3313 Q2394.6563,10921.675 2397.1563,10921.675 Q2397.8594,10921.675 2398.5,10921.8313 Q2399.1563,10921.9875 2399.7188,10922.2844 L2399.7188,10925.0031 Q2399.0938,10924.425 2398.5,10924.1594 Q2397.9063,10923.8781 2397.2813,10923.8781 Q2395.9375,10923.8781 2395.25,10924.9563 Q2394.5625,10926.0188 2394.5625,10928.1125 Q2394.5625,10930.2063 2395.25,10931.2844 Q2395.9375,10932.3469 2397.2813,10932.3469 Q2397.9063,10932.3469 2398.5,10932.0813 Q2399.0938,10931.8 2399.7188,10931.2219 L2399.7188,10933.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2417.25" y="10932.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="2699" y="10909.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2700" y="10921.4387">short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10944.3" y2="10944.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2201" y="10950.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10952.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2215" y="10958.5104">_val : Int16</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10965.1047" y2="10965.1047"/><ellipse cx="2206" cy="10976.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2215" y="10979.3151">VarHolderImpl(Int16 val) : void</text><ellipse cx="2206" cy="10988.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2215" y="10992.1198">~VarHolderImpl() : void</text><ellipse cx="2206" cy="11001.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2215" y="11004.9245">type() const : const std::type_info &amp;</text><ellipse cx="2206" cy="11014.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2215" y="11017.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2206" cy="11027.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="11030.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2206" cy="11040.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="11043.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2206" cy="11052.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="11056.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2206" cy="11065.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2215" y="11068.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2206" cy="11078.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="11081.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2206" cy="11091.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="11094.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2206" cy="11104.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="11107.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2206" cy="11116.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2215" y="11120.1667">convert(long long &amp; val) const : void</text><ellipse cx="2206" cy="11129.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2215" y="11132.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2206" cy="11142.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2215" y="11145.7761">convert(bool &amp; val) const : void</text><ellipse cx="2206" cy="11155.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="11158.5808">convert(float &amp; val) const : void</text><ellipse cx="2206" cy="11168.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2215" y="11171.3854">convert(double &amp; val) const : void</text><ellipse cx="2206" cy="11180.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="11184.1901">convert(char &amp; val) const : void</text><ellipse cx="2206" cy="11193.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2215" y="11196.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2206" cy="11206.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2215" y="11209.7995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2206" cy="11219.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2215" y="11222.6042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2206" cy="11232.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2215" y="11235.4089">value() const : const Int16 &amp;</text><ellipse cx="2206" cy="11245.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2215" y="11248.2136">isArray() const : bool</text><ellipse cx="2206" cy="11257.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="11261.0183">isStruct() const : bool</text><ellipse cx="2206" cy="11270.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2215" y="11273.8229">isInteger() const : bool</text><ellipse cx="2206" cy="11283.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2215" y="11286.6276">isSigned() const : bool</text><ellipse cx="2206" cy="11296.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2215" y="11299.4323">isNumeric() const : bool</text><ellipse cx="2206" cy="11309.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="11312.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="11318.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="11325.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="11331.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2215" y="11337.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="11344.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2215" y="11350.6511">operator=(const Dynamic::VarHolderImpl&lt;Int16&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int16&gt; &amp;</text><!--MD5=[f50690fc04d6f94ff7c398237d3e157e]
class C_0000976768452323437983--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1068" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2195" y="10432.3"/><ellipse cx="2404.75" cy="10448.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2407.7188,10453.9406 Q2407.1406,10454.2375 2406.5,10454.3781 Q2405.8594,10454.5344 2405.1563,10454.5344 Q2402.6563,10454.5344 2401.3281,10452.8938 Q2400.0156,10451.2375 2400.0156,10448.1125 Q2400.0156,10444.9875 2401.3281,10443.3313 Q2402.6563,10441.675 2405.1563,10441.675 Q2405.8594,10441.675 2406.5,10441.8313 Q2407.1563,10441.9875 2407.7188,10442.2844 L2407.7188,10445.0031 Q2407.0938,10444.425 2406.5,10444.1594 Q2405.9063,10443.8781 2405.2813,10443.8781 Q2403.9375,10443.8781 2403.25,10444.9563 Q2402.5625,10446.0188 2402.5625,10448.1125 Q2402.5625,10450.2063 2403.25,10451.2844 Q2403.9375,10452.3469 2405.2813,10452.3469 Q2405.9063,10452.3469 2406.5,10452.0813 Q2407.0938,10451.8 2407.7188,10451.2219 L2407.7188,10453.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2425.25" y="10452.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="18" x="2715" y="10429.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="16" x="2716" y="10441.4387">int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10464.3" y2="10464.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2201" y="10470.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10472.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2215" y="10478.5104">_val : Int32</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="10485.1047" y2="10485.1047"/><ellipse cx="2206" cy="10496.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2215" y="10499.3151">VarHolderImpl(Int32 val) : void</text><ellipse cx="2206" cy="10508.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2215" y="10512.1198">~VarHolderImpl() : void</text><ellipse cx="2206" cy="10521.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2215" y="10524.9245">type() const : const std::type_info &amp;</text><ellipse cx="2206" cy="10534.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2215" y="10537.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2206" cy="10547.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10550.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2206" cy="10560.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10563.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2206" cy="10572.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10576.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2206" cy="10585.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2215" y="10588.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2206" cy="10598.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10601.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2206" cy="10611.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10614.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2206" cy="10624.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10627.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2206" cy="10636.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2215" y="10640.1667">convert(long long &amp; val) const : void</text><ellipse cx="2206" cy="10649.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2215" y="10652.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2206" cy="10662.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2215" y="10665.7761">convert(bool &amp; val) const : void</text><ellipse cx="2206" cy="10675.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10678.5808">convert(float &amp; val) const : void</text><ellipse cx="2206" cy="10688.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2215" y="10691.3854">convert(double &amp; val) const : void</text><ellipse cx="2206" cy="10700.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10704.1901">convert(char &amp; val) const : void</text><ellipse cx="2206" cy="10713.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2215" y="10716.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2206" cy="10726.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2215" y="10729.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2206" cy="10739.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2215" y="10742.6042">value() const : const Int32 &amp;</text><ellipse cx="2206" cy="10752.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2215" y="10755.4089">isArray() const : bool</text><ellipse cx="2206" cy="10765.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10768.2136">isStruct() const : bool</text><ellipse cx="2206" cy="10777.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2215" y="10781.0183">isInteger() const : bool</text><ellipse cx="2206" cy="10790.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2215" y="10793.8229">isSigned() const : bool</text><ellipse cx="2206" cy="10803.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2215" y="10806.6276">isNumeric() const : bool</text><ellipse cx="2206" cy="10816.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2215" y="10819.4323">isBoolean() const : bool</text><ellipse cx="2206" cy="10829.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10832.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10838.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10845.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10851.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2215" y="10857.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10864.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2215" y="10870.6511">operator=(const Dynamic::VarHolderImpl&lt;Int32&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int32&gt; &amp;</text><!--MD5=[e85a9a84f93969f17bffa344a47641ce]
class C_0001804431617899042426--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1220" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="483.3594" id="C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="2195" y="9914.3"/><ellipse cx="2399.25" cy="9930.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2402.2188,9935.9406 Q2401.6406,9936.2375 2401,9936.3781 Q2400.3594,9936.5344 2399.6563,9936.5344 Q2397.1563,9936.5344 2395.8281,9934.8938 Q2394.5156,9933.2375 2394.5156,9930.1125 Q2394.5156,9926.9875 2395.8281,9925.3313 Q2397.1563,9923.675 2399.6563,9923.675 Q2400.3594,9923.675 2401,9923.8313 Q2401.6563,9923.9875 2402.2188,9924.2844 L2402.2188,9927.0031 Q2401.5938,9926.425 2401,9926.1594 Q2400.4063,9925.8781 2399.7813,9925.8781 Q2398.4375,9925.8781 2397.75,9926.9563 Q2397.0625,9928.0188 2397.0625,9930.1125 Q2397.0625,9932.2063 2397.75,9933.2844 Q2398.4375,9934.3469 2399.7813,9934.3469 Q2400.4063,9934.3469 2401,9934.0813 Q2401.5938,9933.8 2402.2188,9933.2219 L2402.2188,9935.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.75" y="9934.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2704" y="9911.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2705" y="9923.4387">long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="9946.3" y2="9946.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2201" y="9952.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="9954.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2215" y="9960.5104">_val : Int64</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2196" x2="2729" y1="9967.1047" y2="9967.1047"/><ellipse cx="2206" cy="9978.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2215" y="9981.3151">VarHolderImpl(Int64 val) : void</text><ellipse cx="2206" cy="9990.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2215" y="9994.1198">~VarHolderImpl() : void</text><ellipse cx="2206" cy="10003.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2215" y="10006.9245">type() const : const std::type_info &amp;</text><ellipse cx="2206" cy="10016.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2215" y="10019.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2206" cy="10029.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10032.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2206" cy="10042.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10045.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2206" cy="10054.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2215" y="10058.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2206" cy="10067.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2215" y="10070.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2206" cy="10080.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10083.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2206" cy="10093.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10096.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2206" cy="10106.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2215" y="10109.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2206" cy="10118.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2215" y="10122.1667">convert(long long &amp; val) const : void</text><ellipse cx="2206" cy="10131.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2215" y="10134.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2206" cy="10144.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2215" y="10147.7761">convert(bool &amp; val) const : void</text><ellipse cx="2206" cy="10157.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10160.5808">convert(float &amp; val) const : void</text><ellipse cx="2206" cy="10170.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2215" y="10173.3854">convert(double &amp; val) const : void</text><ellipse cx="2206" cy="10182.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2215" y="10186.1901">convert(char &amp; val) const : void</text><ellipse cx="2206" cy="10195.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2215" y="10198.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2206" cy="10208.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2215" y="10211.7995">convert(DateTime &amp; dt) const : void</text><ellipse cx="2206" cy="10221.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2215" y="10224.6042">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2206" cy="10234.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2215" y="10237.4089">convert(Timestamp &amp; val) const : void</text><ellipse cx="2206" cy="10247.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2215" y="10250.2136">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2206" cy="10259.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2215" y="10263.0183">value() const : const Int64 &amp;</text><ellipse cx="2206" cy="10272.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2215" y="10275.8229">isArray() const : bool</text><ellipse cx="2206" cy="10285.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10288.6276">isStruct() const : bool</text><ellipse cx="2206" cy="10298.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2215" y="10301.4323">isInteger() const : bool</text><ellipse cx="2206" cy="10311.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2215" y="10314.237">isSigned() const : bool</text><ellipse cx="2206" cy="10323.8313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2215" y="10327.0417">isNumeric() const : bool</text><ellipse cx="2206" cy="10336.6359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2215" y="10339.8464">isBoolean() const : bool</text><ellipse cx="2206" cy="10349.4406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10352.6511">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10359.2453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2215" y="10365.4558">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10372.05"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2215" y="10378.2604">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2203" y="10384.8547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="2215" y="10391.0651">operator=(const Dynamic::VarHolderImpl&lt;Int64&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Int64&gt; &amp;</text><!--MD5=[c3f52ae62d27edaf0dbe6c8c72118abf]
class C_0001832009513687525374--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1387" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.5;" width="537" x="2194" y="9434.3"/><ellipse cx="2368.25" cy="9450.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2371.2188,9455.9406 Q2370.6406,9456.2375 2370,9456.3781 Q2369.3594,9456.5344 2368.6563,9456.5344 Q2366.1563,9456.5344 2364.8281,9454.8938 Q2363.5156,9453.2375 2363.5156,9450.1125 Q2363.5156,9446.9875 2364.8281,9445.3313 Q2366.1563,9443.675 2368.6563,9443.675 Q2369.3594,9443.675 2370,9443.8313 Q2370.6563,9443.9875 2371.2188,9444.2844 L2371.2188,9447.0031 Q2370.5938,9446.425 2370,9446.1594 Q2369.4063,9445.8781 2368.7813,9445.8781 Q2367.4375,9445.8781 2366.75,9446.9563 Q2366.0625,9448.0188 2366.0625,9450.1125 Q2366.0625,9452.2063 2366.75,9453.2844 Q2367.4375,9454.3469 2368.7813,9454.3469 Q2369.4063,9454.3469 2370,9454.0813 Q2370.5938,9453.8 2371.2188,9453.2219 L2371.2188,9455.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2388.75" y="9454.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="91" x="2643" y="9431.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="2644" y="9443.4387">unsigned char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2195" x2="2730" y1="9466.3" y2="9466.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2200" y="9472.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9474.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="2214" y="9480.5104">_val : UInt8</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2195" x2="2730" y1="9487.1047" y2="9487.1047"/><ellipse cx="2205" cy="9498.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2214" y="9501.3151">VarHolderImpl(UInt8 val) : void</text><ellipse cx="2205" cy="9510.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2214" y="9514.1198">~VarHolderImpl() : void</text><ellipse cx="2205" cy="9523.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2214" y="9526.9245">type() const : const std::type_info &amp;</text><ellipse cx="2205" cy="9536.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2214" y="9539.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2205" cy="9549.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2214" y="9552.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2205" cy="9562.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2214" y="9565.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2205" cy="9574.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2214" y="9578.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2205" cy="9587.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2214" y="9590.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2205" cy="9600.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2214" y="9603.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2205" cy="9613.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2214" y="9616.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2205" cy="9626.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2214" y="9629.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2205" cy="9638.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2214" y="9642.1667">convert(long long &amp; val) const : void</text><ellipse cx="2205" cy="9651.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2214" y="9654.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2205" cy="9664.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2214" y="9667.7761">convert(bool &amp; val) const : void</text><ellipse cx="2205" cy="9677.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2214" y="9680.5808">convert(float &amp; val) const : void</text><ellipse cx="2205" cy="9690.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2214" y="9693.3854">convert(double &amp; val) const : void</text><ellipse cx="2205" cy="9702.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2214" y="9706.1901">convert(char &amp; val) const : void</text><ellipse cx="2205" cy="9715.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2214" y="9718.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2205" cy="9728.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2214" y="9731.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2205" cy="9741.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2214" y="9744.6042">value() const : const UInt8 &amp;</text><ellipse cx="2205" cy="9754.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2214" y="9757.4089">isArray() const : bool</text><ellipse cx="2205" cy="9767.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214" y="9770.2136">isStruct() const : bool</text><ellipse cx="2205" cy="9779.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2214" y="9783.0183">isInteger() const : bool</text><ellipse cx="2205" cy="9792.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2214" y="9795.8229">isSigned() const : bool</text><ellipse cx="2205" cy="9805.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2214" y="9808.6276">isNumeric() const : bool</text><ellipse cx="2205" cy="9818.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2214" y="9821.4323">isBoolean() const : bool</text><ellipse cx="2205" cy="9831.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214" y="9834.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9840.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214" y="9847.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9853.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2214" y="9859.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202" y="9866.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="2214" y="9872.6511">operator=(const Dynamic::VarHolderImpl&lt;UInt8&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt8&gt; &amp;</text><!--MD5=[bcd98692da4ec66009419cce89ce6bad]
class C_0000572186414558919480--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1539" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2187" y="8954.3"/><ellipse cx="2366.25" cy="8970.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2369.2188,8975.9406 Q2368.6406,8976.2375 2368,8976.3781 Q2367.3594,8976.5344 2366.6563,8976.5344 Q2364.1563,8976.5344 2362.8281,8974.8938 Q2361.5156,8973.2375 2361.5156,8970.1125 Q2361.5156,8966.9875 2362.8281,8965.3313 Q2364.1563,8963.675 2366.6563,8963.675 Q2367.3594,8963.675 2368,8963.8313 Q2368.6563,8963.9875 2369.2188,8964.2844 L2369.2188,8967.0031 Q2368.5938,8966.425 2368,8966.1594 Q2367.4063,8965.8781 2366.7813,8965.8781 Q2365.4375,8965.8781 2364.75,8966.9563 Q2364.0625,8968.0188 2364.0625,8970.1125 Q2364.0625,8972.2063 2364.75,8973.2844 Q2365.4375,8974.3469 2366.7813,8974.3469 Q2367.4063,8974.3469 2368,8974.0813 Q2368.5938,8973.8 2369.2188,8973.2219 L2369.2188,8975.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2386.75" y="8974.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="95" x="2646" y="8951.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="2647" y="8963.4387">unsigned short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8986.3" y2="8986.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2193" y="8992.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8994.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2207" y="9000.5104">_val : UInt16</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="9007.1047" y2="9007.1047"/><ellipse cx="2198" cy="9018.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="9021.3151">VarHolderImpl(UInt16 val) : void</text><ellipse cx="2198" cy="9030.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2207" y="9034.1198">~VarHolderImpl() : void</text><ellipse cx="2198" cy="9043.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2207" y="9046.9245">type() const : const std::type_info &amp;</text><ellipse cx="2198" cy="9056.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2207" y="9059.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2198" cy="9069.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="9072.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2198" cy="9082.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="9085.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2198" cy="9094.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="9098.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2198" cy="9107.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2207" y="9110.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2198" cy="9120.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="9123.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2198" cy="9133.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="9136.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2198" cy="9146.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="9149.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2198" cy="9158.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2207" y="9162.1667">convert(long long &amp; val) const : void</text><ellipse cx="2198" cy="9171.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2207" y="9174.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2198" cy="9184.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2207" y="9187.7761">convert(bool &amp; val) const : void</text><ellipse cx="2198" cy="9197.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="9200.5808">convert(float &amp; val) const : void</text><ellipse cx="2198" cy="9210.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2207" y="9213.3854">convert(double &amp; val) const : void</text><ellipse cx="2198" cy="9222.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="9226.1901">convert(char &amp; val) const : void</text><ellipse cx="2198" cy="9235.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2207" y="9238.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2198" cy="9248.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2207" y="9251.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2198" cy="9261.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2207" y="9264.6042">value() const : const UInt16 &amp;</text><ellipse cx="2198" cy="9274.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2207" y="9277.4089">isArray() const : bool</text><ellipse cx="2198" cy="9287.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="9290.2136">isStruct() const : bool</text><ellipse cx="2198" cy="9299.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2207" y="9303.0183">isInteger() const : bool</text><ellipse cx="2198" cy="9312.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2207" y="9315.8229">isSigned() const : bool</text><ellipse cx="2198" cy="9325.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2207" y="9328.6276">isNumeric() const : bool</text><ellipse cx="2198" cy="9338.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2207" y="9341.4323">isBoolean() const : bool</text><ellipse cx="2198" cy="9351.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="9354.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="9360.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="9367.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="9373.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2207" y="9379.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="9386.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2207" y="9392.6511">operator=(const Dynamic::VarHolderImpl&lt;UInt16&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt16&gt; &amp;</text><!--MD5=[99e94c671a89454544ae053963034ed1]
class C_0000166253842255815357--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1691" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2187" y="8474.3"/><ellipse cx="2374.25" cy="8490.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2377.2188,8495.9406 Q2376.6406,8496.2375 2376,8496.3781 Q2375.3594,8496.5344 2374.6563,8496.5344 Q2372.1563,8496.5344 2370.8281,8494.8938 Q2369.5156,8493.2375 2369.5156,8490.1125 Q2369.5156,8486.9875 2370.8281,8485.3313 Q2372.1563,8483.675 2374.6563,8483.675 Q2375.3594,8483.675 2376,8483.8313 Q2376.6563,8483.9875 2377.2188,8484.2844 L2377.2188,8487.0031 Q2376.5938,8486.425 2376,8486.1594 Q2375.4063,8485.8781 2374.7813,8485.8781 Q2373.4375,8485.8781 2372.75,8486.9563 Q2372.0625,8488.0188 2372.0625,8490.1125 Q2372.0625,8492.2063 2372.75,8493.2844 Q2373.4375,8494.3469 2374.7813,8494.3469 Q2375.4063,8494.3469 2376,8494.0813 Q2376.5938,8493.8 2377.2188,8493.2219 L2377.2188,8495.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2394.75" y="8494.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="79" x="2662" y="8471.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="2663" y="8483.4387">unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8506.3" y2="8506.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2193" y="8512.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8514.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2207" y="8520.5104">_val : UInt32</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8527.1047" y2="8527.1047"/><ellipse cx="2198" cy="8538.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8541.3151">VarHolderImpl(UInt32 val) : void</text><ellipse cx="2198" cy="8550.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2207" y="8554.1198">~VarHolderImpl() : void</text><ellipse cx="2198" cy="8563.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2207" y="8566.9245">type() const : const std::type_info &amp;</text><ellipse cx="2198" cy="8576.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2207" y="8579.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2198" cy="8589.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8592.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2198" cy="8602.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8605.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2198" cy="8614.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8618.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2198" cy="8627.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2207" y="8630.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2198" cy="8640.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8643.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2198" cy="8653.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8656.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2198" cy="8666.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8669.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2198" cy="8678.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2207" y="8682.1667">convert(long long &amp; val) const : void</text><ellipse cx="2198" cy="8691.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2207" y="8694.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2198" cy="8704.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2207" y="8707.7761">convert(bool &amp; val) const : void</text><ellipse cx="2198" cy="8717.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8720.5808">convert(float &amp; val) const : void</text><ellipse cx="2198" cy="8730.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2207" y="8733.3854">convert(double &amp; val) const : void</text><ellipse cx="2198" cy="8742.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8746.1901">convert(char &amp; val) const : void</text><ellipse cx="2198" cy="8755.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2207" y="8758.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2198" cy="8768.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2207" y="8771.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2198" cy="8781.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2207" y="8784.6042">value() const : const UInt32 &amp;</text><ellipse cx="2198" cy="8794.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2207" y="8797.4089">isArray() const : bool</text><ellipse cx="2198" cy="8807.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8810.2136">isStruct() const : bool</text><ellipse cx="2198" cy="8819.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2207" y="8823.0183">isInteger() const : bool</text><ellipse cx="2198" cy="8832.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2207" y="8835.8229">isSigned() const : bool</text><ellipse cx="2198" cy="8845.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2207" y="8848.6276">isNumeric() const : bool</text><ellipse cx="2198" cy="8858.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2207" y="8861.4323">isBoolean() const : bool</text><ellipse cx="2198" cy="8871.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8874.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8880.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8887.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8893.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2207" y="8899.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8906.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2207" y="8912.6511">operator=(const Dynamic::VarHolderImpl&lt;UInt32&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt32&gt; &amp;</text><!--MD5=[0633cb007ce02e0b2259d7a912a0a465]
class C_0001459401574844645109--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1843" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="483.3594" id="C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="2187" y="7956.3"/><ellipse cx="2368.75" cy="7972.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2371.7188,7977.9406 Q2371.1406,7978.2375 2370.5,7978.3781 Q2369.8594,7978.5344 2369.1563,7978.5344 Q2366.6563,7978.5344 2365.3281,7976.8938 Q2364.0156,7975.2375 2364.0156,7972.1125 Q2364.0156,7968.9875 2365.3281,7967.3313 Q2366.6563,7965.675 2369.1563,7965.675 Q2369.8594,7965.675 2370.5,7965.8313 Q2371.1563,7965.9875 2371.7188,7966.2844 L2371.7188,7969.0031 Q2371.0938,7968.425 2370.5,7968.1594 Q2369.9063,7967.8781 2369.2813,7967.8781 Q2367.9375,7967.8781 2367.25,7968.9563 Q2366.5625,7970.0188 2366.5625,7972.1125 Q2366.5625,7974.2063 2367.25,7975.2844 Q2367.9375,7976.3469 2369.2813,7976.3469 Q2369.9063,7976.3469 2370.5,7976.0813 Q2371.0938,7975.8 2371.7188,7975.2219 L2371.7188,7977.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2389.25" y="7976.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="90" x="2651" y="7953.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="2652" y="7965.4387">unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="7988.3" y2="7988.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2193" y="7994.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="7996.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2207" y="8002.5104">_val : UInt64</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2188" x2="2737" y1="8009.1047" y2="8009.1047"/><ellipse cx="2198" cy="8020.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8023.3151">VarHolderImpl(UInt64 val) : void</text><ellipse cx="2198" cy="8032.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2207" y="8036.1198">~VarHolderImpl() : void</text><ellipse cx="2198" cy="8045.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2207" y="8048.9245">type() const : const std::type_info &amp;</text><ellipse cx="2198" cy="8058.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2207" y="8061.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2198" cy="8071.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8074.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2198" cy="8084.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8087.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2198" cy="8096.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2207" y="8100.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2198" cy="8109.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2207" y="8112.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2198" cy="8122.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8125.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2198" cy="8135.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8138.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2198" cy="8148.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2207" y="8151.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2198" cy="8160.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2207" y="8164.1667">convert(long long &amp; val) const : void</text><ellipse cx="2198" cy="8173.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2207" y="8176.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2198" cy="8186.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2207" y="8189.7761">convert(bool &amp; val) const : void</text><ellipse cx="2198" cy="8199.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8202.5808">convert(float &amp; val) const : void</text><ellipse cx="2198" cy="8212.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2207" y="8215.3854">convert(double &amp; val) const : void</text><ellipse cx="2198" cy="8224.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2207" y="8228.1901">convert(char &amp; val) const : void</text><ellipse cx="2198" cy="8237.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2207" y="8240.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2198" cy="8250.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2207" y="8253.7995">convert(DateTime &amp; dt) const : void</text><ellipse cx="2198" cy="8263.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2207" y="8266.6042">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2198" cy="8276.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2207" y="8279.4089">convert(Timestamp &amp; val) const : void</text><ellipse cx="2198" cy="8289.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2207" y="8292.2136">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2198" cy="8301.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2207" y="8305.0183">value() const : const UInt64 &amp;</text><ellipse cx="2198" cy="8314.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2207" y="8317.8229">isArray() const : bool</text><ellipse cx="2198" cy="8327.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8330.6276">isStruct() const : bool</text><ellipse cx="2198" cy="8340.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2207" y="8343.4323">isInteger() const : bool</text><ellipse cx="2198" cy="8353.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2207" y="8356.237">isSigned() const : bool</text><ellipse cx="2198" cy="8365.8313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2207" y="8369.0417">isNumeric() const : bool</text><ellipse cx="2198" cy="8378.6359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2207" y="8381.8464">isBoolean() const : bool</text><ellipse cx="2198" cy="8391.4406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8394.6511">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8401.2453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2207" y="8407.4558">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8414.05"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="2207" y="8420.2604">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2195" y="8426.8547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="2207" y="8433.0651">operator=(const Dynamic::VarHolderImpl&lt;UInt64&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UInt64&gt; &amp;</text><!--MD5=[ada13b8892848e1551fb92aa3c5167f5]
class C_0000599279109574326060--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2016" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="7476.3"/><ellipse cx="2399.25" cy="7492.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2402.2188,7497.9406 Q2401.6406,7498.2375 2401,7498.3781 Q2400.3594,7498.5344 2399.6563,7498.5344 Q2397.1563,7498.5344 2395.8281,7496.8938 Q2394.5156,7495.2375 2394.5156,7492.1125 Q2394.5156,7488.9875 2395.8281,7487.3313 Q2397.1563,7485.675 2399.6563,7485.675 Q2400.3594,7485.675 2401,7485.8313 Q2401.6563,7485.9875 2402.2188,7486.2844 L2402.2188,7489.0031 Q2401.5938,7488.425 2401,7488.1594 Q2400.4063,7487.8781 2399.7813,7487.8781 Q2398.4375,7487.8781 2397.75,7488.9563 Q2397.0625,7490.0188 2397.0625,7492.1125 Q2397.0625,7494.2063 2397.75,7495.2844 Q2398.4375,7496.3469 2399.7813,7496.3469 Q2400.4063,7496.3469 2401,7496.0813 Q2401.5938,7495.8 2402.2188,7495.2219 L2402.2188,7497.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.75" y="7496.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="2701.5" y="7473.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="2702.5" y="7485.4387">bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7508.3" y2="7508.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="7514.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7516.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="2217.5" y="7522.5104">_val : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7529.1047" y2="7529.1047"/><ellipse cx="2208.5" cy="7540.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2217.5" y="7543.3151">VarHolderImpl(bool val) : void</text><ellipse cx="2208.5" cy="7552.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="7556.1198">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="7565.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="7568.9245">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="7578.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="7581.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7591.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7594.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7604.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7607.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7616.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7620.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7629.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="7632.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7642.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7645.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7655.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7658.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7668.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7671.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7680.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="7684.1667">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7693.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="7696.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7706.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="7709.7761">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="7719.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7722.5808">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="7732.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="7735.3854">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="7744.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7748.1901">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="7757.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="7760.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="7770.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="7773.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="7783.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2217.5" y="7786.6042">value() const : const bool &amp;</text><ellipse cx="2208.5" cy="7796.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="7799.4089">isArray() const : bool</text><ellipse cx="2208.5" cy="7809.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7812.2136">isStruct() const : bool</text><ellipse cx="2208.5" cy="7821.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="7825.0183">isInteger() const : bool</text><ellipse cx="2208.5" cy="7834.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="7837.8229">isSigned() const : bool</text><ellipse cx="2208.5" cy="7847.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="7850.6276">isNumeric() const : bool</text><ellipse cx="2208.5" cy="7860.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="7863.4323">isBoolean() const : bool</text><ellipse cx="2208.5" cy="7873.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7876.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7882.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7889.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7895.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2217.5" y="7901.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;bool&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7908.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="2217.5" y="7914.6511">operator=(const Dynamic::VarHolderImpl&lt;bool&gt; &amp; ) : Dynamic::VarHolderImpl&lt;bool&gt; &amp;</text><!--MD5=[982864d46e735f5fc451b1a43e8b29c9]
class C_0000384619052225252533--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2166" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="6996.3"/><ellipse cx="2398.75" cy="7012.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2401.7188,7017.9406 Q2401.1406,7018.2375 2400.5,7018.3781 Q2399.8594,7018.5344 2399.1563,7018.5344 Q2396.6563,7018.5344 2395.3281,7016.8938 Q2394.0156,7015.2375 2394.0156,7012.1125 Q2394.0156,7008.9875 2395.3281,7007.3313 Q2396.6563,7005.675 2399.1563,7005.675 Q2399.8594,7005.675 2400.5,7005.8313 Q2401.1563,7005.9875 2401.7188,7006.2844 L2401.7188,7009.0031 Q2401.0938,7008.425 2400.5,7008.1594 Q2399.9063,7007.8781 2399.2813,7007.8781 Q2397.9375,7007.8781 2397.25,7008.9563 Q2396.5625,7010.0188 2396.5625,7012.1125 Q2396.5625,7014.2063 2397.25,7015.2844 Q2397.9375,7016.3469 2399.2813,7016.3469 Q2399.9063,7016.3469 2400.5,7016.0813 Q2401.0938,7015.8 2401.7188,7015.2219 L2401.7188,7017.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.25" y="7016.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2700.5" y="6993.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2701.5" y="7005.4387">float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7028.3" y2="7028.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="7034.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7036.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2217.5" y="7042.5104">_val : float</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="7049.1047" y2="7049.1047"/><ellipse cx="2208.5" cy="7060.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2217.5" y="7063.3151">VarHolderImpl(float val) : void</text><ellipse cx="2208.5" cy="7072.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="7076.1198">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="7085.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="7088.9245">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="7098.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="7101.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7111.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7114.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7124.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7127.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7136.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="7140.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7149.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="7152.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="7162.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7165.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="7175.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7178.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="7188.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="7191.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="7200.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="7204.1667">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7213.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="7216.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="7226.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="7229.7761">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="7239.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7242.5808">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="7252.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="7255.3854">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="7264.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="7268.1901">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="7277.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="7280.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="7290.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="7293.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="7303.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2217.5" y="7306.6042">value() const : const float &amp;</text><ellipse cx="2208.5" cy="7316.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="7319.4089">isArray() const : bool</text><ellipse cx="2208.5" cy="7329.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7332.2136">isStruct() const : bool</text><ellipse cx="2208.5" cy="7341.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="7345.0183">isInteger() const : bool</text><ellipse cx="2208.5" cy="7354.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="7357.8229">isSigned() const : bool</text><ellipse cx="2208.5" cy="7367.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="7370.6276">isNumeric() const : bool</text><ellipse cx="2208.5" cy="7380.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="7383.4323">isBoolean() const : bool</text><ellipse cx="2208.5" cy="7393.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7396.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7402.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="7409.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7415.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2217.5" y="7421.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;float&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="7428.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2217.5" y="7434.6511">operator=(const Dynamic::VarHolderImpl&lt;float&gt; &amp; ) : Dynamic::VarHolderImpl&lt;float&gt; &amp;</text><!--MD5=[3b61c949f1c84cb7dc26cc961df146df]
class C_0002242257052791493112--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2319" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.5;" width="555" x="2185" y="6516.3"/><ellipse cx="2391.25" cy="6532.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2394.2188,6537.9406 Q2393.6406,6538.2375 2393,6538.3781 Q2392.3594,6538.5344 2391.6563,6538.5344 Q2389.1563,6538.5344 2387.8281,6536.8938 Q2386.5156,6535.2375 2386.5156,6532.1125 Q2386.5156,6528.9875 2387.8281,6527.3313 Q2389.1563,6525.675 2391.6563,6525.675 Q2392.3594,6525.675 2393,6525.8313 Q2393.6563,6525.9875 2394.2188,6526.2844 L2394.2188,6529.0031 Q2393.5938,6528.425 2393,6528.1594 Q2392.4063,6527.8781 2391.7813,6527.8781 Q2390.4375,6527.8781 2389.75,6528.9563 Q2389.0625,6530.0188 2389.0625,6532.1125 Q2389.0625,6534.2063 2389.75,6535.2844 Q2390.4375,6536.3469 2391.7813,6536.3469 Q2392.4063,6536.3469 2393,6536.0813 Q2393.5938,6535.8 2394.2188,6535.2219 L2394.2188,6537.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2411.75" y="6536.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="45" x="2698" y="6513.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="2699" y="6525.4387">double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2186" x2="2739" y1="6548.3" y2="6548.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2191" y="6554.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6556.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2205" y="6562.5104">_val : double</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2186" x2="2739" y1="6569.1047" y2="6569.1047"/><ellipse cx="2196" cy="6580.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2205" y="6583.3151">VarHolderImpl(double val) : void</text><ellipse cx="2196" cy="6592.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2205" y="6596.1198">~VarHolderImpl() : void</text><ellipse cx="2196" cy="6605.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2205" y="6608.9245">type() const : const std::type_info &amp;</text><ellipse cx="2196" cy="6618.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2205" y="6621.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2196" cy="6631.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2205" y="6634.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2196" cy="6644.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2205" y="6647.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2196" cy="6656.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2205" y="6660.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2196" cy="6669.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2205" y="6672.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2196" cy="6682.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2205" y="6685.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2196" cy="6695.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2205" y="6698.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2196" cy="6708.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2205" y="6711.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2196" cy="6720.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2205" y="6724.1667">convert(long long &amp; val) const : void</text><ellipse cx="2196" cy="6733.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2205" y="6736.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2196" cy="6746.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2205" y="6749.7761">convert(bool &amp; val) const : void</text><ellipse cx="2196" cy="6759.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2205" y="6762.5808">convert(float &amp; val) const : void</text><ellipse cx="2196" cy="6772.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2205" y="6775.3854">convert(double &amp; val) const : void</text><ellipse cx="2196" cy="6784.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2205" y="6788.1901">convert(char &amp; val) const : void</text><ellipse cx="2196" cy="6797.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2205" y="6800.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2196" cy="6810.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2205" y="6813.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2196" cy="6823.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2205" y="6826.6042">value() const : const double &amp;</text><ellipse cx="2196" cy="6836.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2205" y="6839.4089">isArray() const : bool</text><ellipse cx="2196" cy="6849.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2205" y="6852.2136">isStruct() const : bool</text><ellipse cx="2196" cy="6861.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2205" y="6865.0183">isInteger() const : bool</text><ellipse cx="2196" cy="6874.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2205" y="6877.8229">isSigned() const : bool</text><ellipse cx="2196" cy="6887.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2205" y="6890.6276">isNumeric() const : bool</text><ellipse cx="2196" cy="6900.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2205" y="6903.4323">isBoolean() const : bool</text><ellipse cx="2196" cy="6913.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2205" y="6916.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6922.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2205" y="6929.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6935.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="2205" y="6941.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;double&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2193" y="6948.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="2205" y="6954.6511">operator=(const Dynamic::VarHolderImpl&lt;double&gt; &amp; ) : Dynamic::VarHolderImpl&lt;double&gt; &amp;</text><!--MD5=[987f6efd9f336e45ba4e394ec0708635]
class C_0001942181379759217898--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2478" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.5;" width="530" x="2197.5" y="6036.3"/><ellipse cx="2398.75" cy="6052.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2401.7188,6057.9406 Q2401.1406,6058.2375 2400.5,6058.3781 Q2399.8594,6058.5344 2399.1563,6058.5344 Q2396.6563,6058.5344 2395.3281,6056.8938 Q2394.0156,6055.2375 2394.0156,6052.1125 Q2394.0156,6048.9875 2395.3281,6047.3313 Q2396.6563,6045.675 2399.1563,6045.675 Q2399.8594,6045.675 2400.5,6045.8313 Q2401.1563,6045.9875 2401.7188,6046.2844 L2401.7188,6049.0031 Q2401.0938,6048.425 2400.5,6048.1594 Q2399.9063,6047.8781 2399.2813,6047.8781 Q2397.9375,6047.8781 2397.25,6048.9563 Q2396.5625,6050.0188 2396.5625,6052.1125 Q2396.5625,6054.2063 2397.25,6055.2844 Q2397.9375,6056.3469 2399.2813,6056.3469 Q2399.9063,6056.3469 2400.5,6056.0813 Q2401.0938,6055.8 2401.7188,6055.2219 L2401.7188,6057.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2419.25" y="6056.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="30" x="2700.5" y="6033.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="28" x="2701.5" y="6045.4387">char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="6068.3" y2="6068.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2203.5" y="6074.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6076.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2217.5" y="6082.5104">_val : char</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2198.5" x2="2726.5" y1="6089.1047" y2="6089.1047"/><ellipse cx="2208.5" cy="6100.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2217.5" y="6103.3151">VarHolderImpl(char val) : void</text><ellipse cx="2208.5" cy="6112.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2217.5" y="6116.1198">~VarHolderImpl() : void</text><ellipse cx="2208.5" cy="6125.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2217.5" y="6128.9245">type() const : const std::type_info &amp;</text><ellipse cx="2208.5" cy="6138.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2217.5" y="6141.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2208.5" cy="6151.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="6154.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2208.5" cy="6164.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="6167.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2208.5" cy="6176.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2217.5" y="6180.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2208.5" cy="6189.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2217.5" y="6192.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2208.5" cy="6202.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="6205.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2208.5" cy="6215.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="6218.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2208.5" cy="6228.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2217.5" y="6231.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2208.5" cy="6240.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2217.5" y="6244.1667">convert(long long &amp; val) const : void</text><ellipse cx="2208.5" cy="6253.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2217.5" y="6256.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2208.5" cy="6266.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2217.5" y="6269.7761">convert(bool &amp; val) const : void</text><ellipse cx="2208.5" cy="6279.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="6282.5808">convert(float &amp; val) const : void</text><ellipse cx="2208.5" cy="6292.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2217.5" y="6295.3854">convert(double &amp; val) const : void</text><ellipse cx="2208.5" cy="6304.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2217.5" y="6308.1901">convert(char &amp; val) const : void</text><ellipse cx="2208.5" cy="6317.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2217.5" y="6320.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2208.5" cy="6330.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2217.5" y="6333.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2208.5" cy="6343.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2217.5" y="6346.6042">value() const : const char &amp;</text><ellipse cx="2208.5" cy="6356.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2217.5" y="6359.4089">isArray() const : bool</text><ellipse cx="2208.5" cy="6369.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="6372.2136">isStruct() const : bool</text><ellipse cx="2208.5" cy="6381.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2217.5" y="6385.0183">isInteger() const : bool</text><ellipse cx="2208.5" cy="6394.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2217.5" y="6397.8229">isSigned() const : bool</text><ellipse cx="2208.5" cy="6407.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2217.5" y="6410.6276">isNumeric() const : bool</text><ellipse cx="2208.5" cy="6420.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2217.5" y="6423.4323">isBoolean() const : bool</text><ellipse cx="2208.5" cy="6433.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="6436.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6442.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2217.5" y="6449.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6455.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2217.5" y="6461.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;char&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2205.5" y="6468.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2217.5" y="6474.6511">operator=(const Dynamic::VarHolderImpl&lt;char&gt; &amp; ) : Dynamic::VarHolderImpl&lt;char&gt; &amp;</text><!--MD5=[8b5df5fe94a553e6538357e4a77a944c]
class C_0002291903337356664508--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2628" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="483.3594" id="C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.5;" width="597" x="2164" y="5518.3"/><ellipse cx="2381.75" cy="5534.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2384.7188,5539.9406 Q2384.1406,5540.2375 2383.5,5540.3781 Q2382.8594,5540.5344 2382.1563,5540.5344 Q2379.6563,5540.5344 2378.3281,5538.8938 Q2377.0156,5537.2375 2377.0156,5534.1125 Q2377.0156,5530.9875 2378.3281,5529.3313 Q2379.6563,5527.675 2382.1563,5527.675 Q2382.8594,5527.675 2383.5,5527.8313 Q2384.1563,5527.9875 2384.7188,5528.2844 L2384.7188,5531.0031 Q2384.0938,5530.425 2383.5,5530.1594 Q2382.9063,5529.8781 2382.2813,5529.8781 Q2380.9375,5529.8781 2380.25,5530.9563 Q2379.5625,5532.0188 2379.5625,5534.1125 Q2379.5625,5536.2063 2380.25,5537.2844 Q2380.9375,5538.3469 2382.2813,5538.3469 Q2382.9063,5538.3469 2383.5,5538.0813 Q2384.0938,5537.8 2384.7188,5537.2219 L2384.7188,5539.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2402.25" y="5538.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="64" x="2700" y="5515.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="2701" y="5527.4387">std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2165" x2="2760" y1="5550.3" y2="5550.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2170" y="5556.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5558.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2184" y="5564.5104">_val : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2165" x2="2760" y1="5571.1047" y2="5571.1047"/><ellipse cx="2175" cy="5582.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2184" y="5585.3151">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2175" cy="5594.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2184" y="5598.1198">VarHolderImpl(const std::string &amp; val) : void</text><ellipse cx="2175" cy="5607.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2184" y="5610.9245">~VarHolderImpl() : void</text><ellipse cx="2175" cy="5620.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2184" y="5623.7292">type() const : const std::type_info &amp;</text><ellipse cx="2175" cy="5633.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2184" y="5636.5339">convert(Int8 &amp; val) const : void</text><ellipse cx="2175" cy="5646.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2184" y="5649.3386">convert(Int16 &amp; val) const : void</text><ellipse cx="2175" cy="5658.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2184" y="5662.1433">convert(Int32 &amp; val) const : void</text><ellipse cx="2175" cy="5671.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2184" y="5674.9479">convert(Int64 &amp; val) const : void</text><ellipse cx="2175" cy="5684.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2184" y="5687.7526">convert(UInt8 &amp; val) const : void</text><ellipse cx="2175" cy="5697.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2184" y="5700.5573">convert(UInt16 &amp; val) const : void</text><ellipse cx="2175" cy="5710.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2184" y="5713.362">convert(UInt32 &amp; val) const : void</text><ellipse cx="2175" cy="5722.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2184" y="5726.1667">convert(UInt64 &amp; val) const : void</text><ellipse cx="2175" cy="5735.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2184" y="5738.9714">convert(long long &amp; val) const : void</text><ellipse cx="2175" cy="5748.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2184" y="5751.7761">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2175" cy="5761.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2184" y="5764.5808">convert(bool &amp; val) const : void</text><ellipse cx="2175" cy="5774.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2184" y="5777.3854">convert(float &amp; val) const : void</text><ellipse cx="2175" cy="5786.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2184" y="5790.1901">convert(double &amp; val) const : void</text><ellipse cx="2175" cy="5799.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2184" y="5802.9948">convert(char &amp; val) const : void</text><ellipse cx="2175" cy="5812.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2184" y="5815.7995">convert(std::string &amp; val) const : void</text><ellipse cx="2175" cy="5825.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2184" y="5828.6042">convert(UTF16String &amp; val) const : void</text><ellipse cx="2175" cy="5838.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2184" y="5841.4089">convert(DateTime &amp; val) const : void</text><ellipse cx="2175" cy="5851.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2184" y="5854.2136">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2175" cy="5863.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2184" y="5867.0183">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2175" cy="5876.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2184" y="5879.8229">convert(UUID &amp; uuid) const : void</text><ellipse cx="2175" cy="5889.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2184" y="5892.6276">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2175" cy="5902.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2184" y="5905.4323">value() const : const std::string &amp;</text><ellipse cx="2175" cy="5915.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2184" y="5918.237">isString() const : bool</text><ellipse cx="2175" cy="5927.8313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2184" y="5931.0417">size() const : std::size_t</text><ellipse cx="2175" cy="5940.6359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2184" y="5943.8464">operator[](std::string::size_type n) : char &amp;</text><ellipse cx="2175" cy="5953.4406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="2184" y="5956.6511">operator[](std::string::size_type n) const : const char &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5963.2453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2184" y="5969.4558">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5976.05"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="2184" y="5982.2604">VarHolderImpl(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2172" y="5988.8547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="571" x="2184" y="5995.0651">operator=(const Dynamic::VarHolderImpl&lt;std::string&gt; &amp; ) : Dynamic::VarHolderImpl&lt;std::string&gt; &amp;</text><!--MD5=[86ee270c6ca46a77592e60691a644b89]
class C_0001280441251658550342--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2825" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="483.3594" id="C_0001280441251658550342" style="stroke: #A80036; stroke-width: 1.5;" width="617" x="2154" y="5000.3"/><ellipse cx="2234.25" cy="5016.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2237.2188,5021.9406 Q2236.6406,5022.2375 2236,5022.3781 Q2235.3594,5022.5344 2234.6563,5022.5344 Q2232.1563,5022.5344 2230.8281,5020.8938 Q2229.5156,5019.2375 2229.5156,5016.1125 Q2229.5156,5012.9875 2230.8281,5011.3313 Q2232.1563,5009.675 2234.6563,5009.675 Q2235.3594,5009.675 2236,5009.8313 Q2236.6563,5009.9875 2237.2188,5010.2844 L2237.2188,5013.0031 Q2236.5938,5012.425 2236,5012.1594 Q2235.4063,5011.8781 2234.7813,5011.8781 Q2233.4375,5011.8781 2232.75,5012.9563 Q2232.0625,5014.0188 2232.0625,5016.1125 Q2232.0625,5018.2063 2232.75,5019.2844 Q2233.4375,5020.3469 2234.7813,5020.3469 Q2235.4063,5020.3469 2236,5020.0813 Q2236.5938,5019.8 2237.2188,5019.2219 L2237.2188,5021.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2254.75" y="5020.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="359" x="2415" y="4997.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="2416" y="5009.4387">std::basic_string&lt;unsigned short,Poco::UTF16CharTraits&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2155" x2="2770" y1="5032.3" y2="5032.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2160" y="5038.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5040.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2174" y="5046.5104">_val : UTF16String</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2155" x2="2770" y1="5053.1047" y2="5053.1047"/><ellipse cx="2165" cy="5064.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2174" y="5067.3151">VarHolderImpl(const char * pVal) : void</text><ellipse cx="2165" cy="5076.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="2174" y="5080.1198">VarHolderImpl(const UTF16String &amp; val) : void</text><ellipse cx="2165" cy="5089.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2174" y="5092.9245">~VarHolderImpl() : void</text><ellipse cx="2165" cy="5102.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2174" y="5105.7292">type() const : const std::type_info &amp;</text><ellipse cx="2165" cy="5115.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2174" y="5118.5339">convert(Int8 &amp; val) const : void</text><ellipse cx="2165" cy="5128.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2174" y="5131.3386">convert(Int16 &amp; val) const : void</text><ellipse cx="2165" cy="5140.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2174" y="5144.1433">convert(Int32 &amp; val) const : void</text><ellipse cx="2165" cy="5153.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2174" y="5156.9479">convert(Int64 &amp; val) const : void</text><ellipse cx="2165" cy="5166.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2174" y="5169.7526">convert(UInt8 &amp; val) const : void</text><ellipse cx="2165" cy="5179.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2174" y="5182.5573">convert(UInt16 &amp; val) const : void</text><ellipse cx="2165" cy="5192.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2174" y="5195.362">convert(UInt32 &amp; val) const : void</text><ellipse cx="2165" cy="5204.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2174" y="5208.1667">convert(UInt64 &amp; val) const : void</text><ellipse cx="2165" cy="5217.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2174" y="5220.9714">convert(long long &amp; val) const : void</text><ellipse cx="2165" cy="5230.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2174" y="5233.7761">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2165" cy="5243.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2174" y="5246.5808">convert(bool &amp; val) const : void</text><ellipse cx="2165" cy="5256.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2174" y="5259.3854">convert(float &amp; val) const : void</text><ellipse cx="2165" cy="5268.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2174" y="5272.1901">convert(double &amp; val) const : void</text><ellipse cx="2165" cy="5281.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2174" y="5284.9948">convert(char &amp; val) const : void</text><ellipse cx="2165" cy="5294.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2174" y="5297.7995">convert(UTF16String &amp; val) const : void</text><ellipse cx="2165" cy="5307.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2174" y="5310.6042">convert(std::string &amp; val) const : void</text><ellipse cx="2165" cy="5320.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2174" y="5323.4089">convert(DateTime &amp; val) const : void</text><ellipse cx="2165" cy="5333.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2174" y="5336.2136">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2165" cy="5345.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2174" y="5349.0183">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2165" cy="5358.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2174" y="5361.8229">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2165" cy="5371.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2174" y="5374.6276">value() const : const UTF16String &amp;</text><ellipse cx="2165" cy="5384.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2174" y="5387.4323">isString() const : bool</text><ellipse cx="2165" cy="5397.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2174" y="5400.237">size() const : std::size_t</text><ellipse cx="2165" cy="5409.8313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2174" y="5413.0417">operator[](UTF16String::size_type n) : UTF16Char &amp;</text><ellipse cx="2165" cy="5422.6359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="2174" y="5425.8464">operator[](UTF16String::size_type n) const : const UTF16Char &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5432.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2174" y="5438.6511">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5445.2453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="2174" y="5451.4558">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5458.05"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="2174" y="5464.2604">operator=(const Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UTF16String&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2162" y="5470.8547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2174" y="5477.0651">toStdString() const : std::string</text><!--MD5=[e547b5e99773e1bba43a948d274a41c6]
class C_0001646173285346905617--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3309" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="2171" y="4520.3"/><ellipse cx="2383.75" cy="4536.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2386.7188,4541.9406 Q2386.1406,4542.2375 2385.5,4542.3781 Q2384.8594,4542.5344 2384.1563,4542.5344 Q2381.6563,4542.5344 2380.3281,4540.8938 Q2379.0156,4539.2375 2379.0156,4536.1125 Q2379.0156,4532.9875 2380.3281,4531.3313 Q2381.6563,4529.675 2384.1563,4529.675 Q2384.8594,4529.675 2385.5,4529.8313 Q2386.1563,4529.9875 2386.7188,4530.2844 L2386.7188,4533.0031 Q2386.0938,4532.425 2385.5,4532.1594 Q2384.9063,4531.8781 2384.2813,4531.8781 Q2382.9375,4531.8781 2382.25,4532.9563 Q2381.5625,4534.0188 2381.5625,4536.1125 Q2381.5625,4538.2063 2382.25,4539.2844 Q2382.9375,4540.3469 2384.2813,4540.3469 Q2384.9063,4540.3469 2385.5,4540.0813 Q2386.0938,4539.8 2386.7188,4539.2219 L2386.7188,4541.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2404.25" y="4540.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="60" x="2697" y="4517.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="2698" y="4529.4387">long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2172" x2="2753" y1="4552.3" y2="4552.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2177" y="4558.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4560.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2191" y="4566.5104">_val : long long</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2172" x2="2753" y1="4573.1047" y2="4573.1047"/><ellipse cx="2182" cy="4584.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2191" y="4587.3151">VarHolderImpl(long long val) : void</text><ellipse cx="2182" cy="4596.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2191" y="4600.1198">~VarHolderImpl() : void</text><ellipse cx="2182" cy="4609.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2191" y="4612.9245">type() const : const std::type_info &amp;</text><ellipse cx="2182" cy="4622.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2191" y="4625.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2182" cy="4635.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2191" y="4638.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2182" cy="4648.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2191" y="4651.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2182" cy="4660.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2191" y="4664.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2182" cy="4673.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2191" y="4676.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2182" cy="4686.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2191" y="4689.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2182" cy="4699.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2191" y="4702.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2182" cy="4712.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2191" y="4715.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2182" cy="4724.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2191" y="4728.1667">convert(long long &amp; val) const : void</text><ellipse cx="2182" cy="4737.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2191" y="4740.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2182" cy="4750.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2191" y="4753.7761">convert(bool &amp; val) const : void</text><ellipse cx="2182" cy="4763.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2191" y="4766.5808">convert(float &amp; val) const : void</text><ellipse cx="2182" cy="4776.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2191" y="4779.3854">convert(double &amp; val) const : void</text><ellipse cx="2182" cy="4788.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2191" y="4792.1901">convert(char &amp; val) const : void</text><ellipse cx="2182" cy="4801.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2191" y="4804.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2182" cy="4814.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2191" y="4817.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2182" cy="4827.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2191" y="4830.6042">value() const : const long long &amp;</text><ellipse cx="2182" cy="4840.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2191" y="4843.4089">isArray() const : bool</text><ellipse cx="2182" cy="4853.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2191" y="4856.2136">isStruct() const : bool</text><ellipse cx="2182" cy="4865.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2191" y="4869.0183">isInteger() const : bool</text><ellipse cx="2182" cy="4878.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2191" y="4881.8229">isSigned() const : bool</text><ellipse cx="2182" cy="4891.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2191" y="4894.6276">isNumeric() const : bool</text><ellipse cx="2182" cy="4904.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2191" y="4907.4323">isBoolean() const : bool</text><ellipse cx="2182" cy="4917.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2191" y="4920.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4926.8313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2191" y="4933.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4939.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="2191" y="4945.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;long long&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2179" y="4952.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="2191" y="4958.6511">operator=(const Dynamic::VarHolderImpl&lt;long long&gt; &amp; ) : Dynamic::VarHolderImpl&lt;long long&gt; &amp;</text><!--MD5=[d32390979af13b4d5d37b0e60ea6c197]
class C_0001583654034047392858--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3457" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.5;" width="695" x="2115" y="4040.3"/><ellipse cx="2353.25" cy="4056.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2356.2188,4061.9406 Q2355.6406,4062.2375 2355,4062.3781 Q2354.3594,4062.5344 2353.6563,4062.5344 Q2351.1563,4062.5344 2349.8281,4060.8937 Q2348.5156,4059.2375 2348.5156,4056.1125 Q2348.5156,4052.9875 2349.8281,4051.3312 Q2351.1563,4049.675 2353.6563,4049.675 Q2354.3594,4049.675 2355,4049.8312 Q2355.6563,4049.9875 2356.2188,4050.2844 L2356.2188,4053.0031 Q2355.5938,4052.425 2355,4052.1594 Q2354.4063,4051.8781 2353.7813,4051.8781 Q2352.4375,4051.8781 2351.75,4052.9562 Q2351.0625,4054.0187 2351.0625,4056.1125 Q2351.0625,4058.2062 2351.75,4059.2844 Q2352.4375,4060.3469 2353.7813,4060.3469 Q2354.4063,4060.3469 2355,4060.0812 Q2355.5938,4059.8 2356.2188,4059.2219 L2356.2188,4061.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2373.75" y="4060.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="121" x="2692" y="4037.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="2693" y="4049.4387">unsigned long long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2116" x2="2809" y1="4072.3" y2="4072.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2121" y="4078.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4080.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2135" y="4086.5104">_val : unsigned long long</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2116" x2="2809" y1="4093.1047" y2="4093.1047"/><ellipse cx="2126" cy="4104.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2135" y="4107.3151">VarHolderImpl(unsigned long long val) : void</text><ellipse cx="2126" cy="4116.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2135" y="4120.1198">~VarHolderImpl() : void</text><ellipse cx="2126" cy="4129.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2135" y="4132.9245">type() const : const std::type_info &amp;</text><ellipse cx="2126" cy="4142.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2135" y="4145.7292">convert(Int8 &amp; val) const : void</text><ellipse cx="2126" cy="4155.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135" y="4158.5339">convert(Int16 &amp; val) const : void</text><ellipse cx="2126" cy="4168.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135" y="4171.3386">convert(Int32 &amp; val) const : void</text><ellipse cx="2126" cy="4180.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135" y="4184.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2126" cy="4193.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2135" y="4196.9479">convert(UInt8 &amp; val) const : void</text><ellipse cx="2126" cy="4206.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2135" y="4209.7526">convert(UInt16 &amp; val) const : void</text><ellipse cx="2126" cy="4219.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2135" y="4222.5573">convert(UInt32 &amp; val) const : void</text><ellipse cx="2126" cy="4232.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2135" y="4235.362">convert(UInt64 &amp; val) const : void</text><ellipse cx="2126" cy="4244.9562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2135" y="4248.1667">convert(long long &amp; val) const : void</text><ellipse cx="2126" cy="4257.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2135" y="4260.9714">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2126" cy="4270.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2135" y="4273.7761">convert(bool &amp; val) const : void</text><ellipse cx="2126" cy="4283.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2135" y="4286.5808">convert(float &amp; val) const : void</text><ellipse cx="2126" cy="4296.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2135" y="4299.3854">convert(double &amp; val) const : void</text><ellipse cx="2126" cy="4308.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2135" y="4312.1901">convert(char &amp; val) const : void</text><ellipse cx="2126" cy="4321.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2135" y="4324.9948">convert(std::string &amp; val) const : void</text><ellipse cx="2126" cy="4334.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2135" y="4337.7995">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2126" cy="4347.3937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2135" y="4350.6042">value() const : const unsigned long long &amp;</text><ellipse cx="2126" cy="4360.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2135" y="4363.4089">isArray() const : bool</text><ellipse cx="2126" cy="4373.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2135" y="4376.2136">isStruct() const : bool</text><ellipse cx="2126" cy="4385.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2135" y="4389.0183">isInteger() const : bool</text><ellipse cx="2126" cy="4398.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2135" y="4401.8229">isSigned() const : bool</text><ellipse cx="2126" cy="4411.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2135" y="4414.6276">isNumeric() const : bool</text><ellipse cx="2126" cy="4424.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2135" y="4427.4323">isBoolean() const : bool</text><ellipse cx="2126" cy="4437.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2135" y="4440.237">isString() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4446.8312"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2135" y="4453.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4459.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="2135" y="4465.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2123" y="4472.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="2135" y="4478.6511">operator=(const Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp; ) : Dynamic::VarHolderImpl&lt;unsigned long long&gt; &amp;</text><!--MD5=[8fd1ca9b81cacf5b2ec4a18419930b7a]
class C_0002133497947762084276--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3608" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="227.2656" id="C_0002133497947762084276" style="stroke: #A80036; stroke-width: 1.5;" width="1055" x="1935" y="3778.3"/><ellipse cx="2194.75" cy="3794.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2197.7188,3799.9406 Q2197.1406,3800.2375 2196.5,3800.3781 Q2195.8594,3800.5344 2195.1563,3800.5344 Q2192.6563,3800.5344 2191.3281,3798.8937 Q2190.0156,3797.2375 2190.0156,3794.1125 Q2190.0156,3790.9875 2191.3281,3789.3312 Q2192.6563,3787.675 2195.1563,3787.675 Q2195.8594,3787.675 2196.5,3787.8312 Q2197.1563,3787.9875 2197.7188,3788.2844 L2197.7188,3791.0031 Q2197.0938,3790.425 2196.5,3790.1594 Q2195.9063,3789.8781 2195.2813,3789.8781 Q2193.9375,3789.8781 2193.25,3790.9562 Q2192.5625,3792.0187 2192.5625,3794.1125 Q2192.5625,3796.2062 2193.25,3797.2844 Q2193.9375,3798.3469 2195.2813,3798.3469 Q2195.9063,3798.3469 2196.5,3798.0812 Q2197.0938,3797.8 2197.7188,3797.2219 L2197.7188,3799.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2215.25" y="3798.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="438" x="2555" y="3775.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="2556" y="3787.4387">std::vector&lt;type-parameter-0-0,std::allocator&lt;type-parameter-0-0&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3810.3" y2="3810.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1941" y="3816.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3818.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1955" y="3824.5104">_val : std::vector&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3831.1047" y2="3831.1047"/><ellipse cx="1946" cy="3842.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="1955" y="3845.3151">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::vector&lt;T&gt; &amp; val) : void</text><ellipse cx="1946" cy="3854.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="1955" y="3858.1198">~VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="1946" cy="3867.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1955" y="3870.9245">type() const : const std::type_info &amp;</text><ellipse cx="1946" cy="3880.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1955" y="3883.7292">convert(std::string &amp; val) const : void</text><ellipse cx="1946" cy="3893.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1955" y="3896.5339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1946" cy="3906.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1955" y="3909.3386">value() const : const std::vector&lt;T&gt; &amp;</text><ellipse cx="1946" cy="3918.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1955" y="3922.1433">isVector() const : bool</text><ellipse cx="1946" cy="3931.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1955" y="3934.9479">size() const : std::size_t</text><ellipse cx="1946" cy="3944.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1955" y="3947.7526">operator[](typename std::vector&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="1946" cy="3957.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="1955" y="3960.5573">operator[](typename std::vector&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3967.1516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="1955" y="3973.362">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3979.9562"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1955" y="3986.1667">VarHolderImpl&lt;vector&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3992.7609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1029" x="1955" y="3998.9714">operator=(const VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;vector&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[b7228e8e9d8bc56c1a6064169c71917c]
class C_0000249766987467623805--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3673" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="227.2656" id="C_0000249766987467623805" style="stroke: #A80036; stroke-width: 1.5;" width="1019" x="1953" y="3516.3"/><ellipse cx="2205.75" cy="3532.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2208.7188,3537.9406 Q2208.1406,3538.2375 2207.5,3538.3781 Q2206.8594,3538.5344 2206.1563,3538.5344 Q2203.6563,3538.5344 2202.3281,3536.8937 Q2201.0156,3535.2375 2201.0156,3532.1125 Q2201.0156,3528.9875 2202.3281,3527.3312 Q2203.6563,3525.675 2206.1563,3525.675 Q2206.8594,3525.675 2207.5,3525.8312 Q2208.1563,3525.9875 2208.7188,3526.2844 L2208.7188,3529.0031 Q2208.0938,3528.425 2207.5,3528.1594 Q2206.9063,3527.8781 2206.2813,3527.8781 Q2204.9375,3527.8781 2204.25,3528.9562 Q2203.5625,3530.0187 2203.5625,3532.1125 Q2203.5625,3534.2062 2204.25,3535.2844 Q2204.9375,3536.3469 2206.2813,3536.3469 Q2206.9063,3536.3469 2207.5,3536.0812 Q2208.0938,3535.8 2208.7188,3535.2219 L2208.7188,3537.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2226.25" y="3536.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="416" x="2559" y="3513.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="414" x="2560" y="3525.4387">std::list&lt;type-parameter-0-0,std::allocator&lt;type-parameter-0-0&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954" x2="2971" y1="3548.3" y2="3548.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1959" y="3554.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3556.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1973" y="3562.5104">_val : std::list&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954" x2="2971" y1="3569.1047" y2="3569.1047"/><ellipse cx="1964" cy="3580.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="616" x="1973" y="3583.3151">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::list&lt;T&gt; &amp; val) : void</text><ellipse cx="1964" cy="3592.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="1973" y="3596.1198">~VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="1964" cy="3605.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1973" y="3608.9245">type() const : const std::type_info &amp;</text><ellipse cx="1964" cy="3618.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1973" y="3621.7292">convert(std::string &amp; val) const : void</text><ellipse cx="1964" cy="3631.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1973" y="3634.5339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1964" cy="3644.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1973" y="3647.3386">value() const : const std::list&lt;T&gt; &amp;</text><ellipse cx="1964" cy="3656.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1973" y="3660.1433">isList() const : bool</text><ellipse cx="1964" cy="3669.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1973" y="3672.9479">size() const : std::size_t</text><ellipse cx="1964" cy="3682.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="1973" y="3685.7526">operator[](typename std::list&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="1964" cy="3695.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="1973" y="3698.5573">operator[](typename std::list&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3705.1516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="1973" y="3711.362">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3717.9562"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="956" x="1973" y="3724.1667">VarHolderImpl&lt;list&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961" y="3730.7609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="993" x="1973" y="3736.9714">operator=(const VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;list&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[6302338bbf789b1d80756567115132f1]
class C_0000781520838380739124--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3748" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="227.2656" id="C_0000781520838380739124" style="stroke: #A80036; stroke-width: 1.5;" width="1055" x="1935" y="3254.3"/><ellipse cx="2194.25" cy="3270.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2197.2188,3275.9406 Q2196.6406,3276.2375 2196,3276.3781 Q2195.3594,3276.5344 2194.6563,3276.5344 Q2192.1563,3276.5344 2190.8281,3274.8937 Q2189.5156,3273.2375 2189.5156,3270.1125 Q2189.5156,3266.9875 2190.8281,3265.3312 Q2192.1563,3263.675 2194.6563,3263.675 Q2195.3594,3263.675 2196,3263.8312 Q2196.6563,3263.9875 2197.2188,3264.2844 L2197.2188,3267.0031 Q2196.5938,3266.425 2196,3266.1594 Q2195.4063,3265.8781 2194.7813,3265.8781 Q2193.4375,3265.8781 2192.75,3266.9562 Q2192.0625,3268.0187 2192.0625,3270.1125 Q2192.0625,3272.2062 2192.75,3273.2844 Q2193.4375,3274.3469 2194.7813,3274.3469 Q2195.4063,3274.3469 2196,3274.0812 Q2196.5938,3273.8 2197.2188,3273.2219 L2197.2188,3275.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2214.75" y="3274.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="439" x="2554" y="3251.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="2555" y="3263.4387">std::deque&lt;type-parameter-0-0,std::allocator&lt;type-parameter-0-0&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3286.3" y2="3286.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1941" y="3292.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3294.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1955" y="3300.5104">_val : std::deque&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936" x2="2989" y1="3307.1047" y2="3307.1047"/><ellipse cx="1946" cy="3318.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="1955" y="3321.3151">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const std::deque&lt;T&gt; &amp; val) : void</text><ellipse cx="1946" cy="3330.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="1955" y="3334.1198">~VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><ellipse cx="1946" cy="3343.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1955" y="3346.9245">type() const : const std::type_info &amp;</text><ellipse cx="1946" cy="3356.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1955" y="3359.7292">convert(std::string &amp; val) const : void</text><ellipse cx="1946" cy="3369.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1955" y="3372.5339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1946" cy="3382.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1955" y="3385.3386">value() const : const std::deque&lt;T&gt; &amp;</text><ellipse cx="1946" cy="3394.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1955" y="3398.1433">isDeque() const : bool</text><ellipse cx="1946" cy="3407.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1955" y="3410.9479">size() const : std::size_t</text><ellipse cx="1946" cy="3420.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1955" y="3423.7526">operator[](typename std::deque&lt;T&gt;::size_type n) : T &amp;</text><ellipse cx="1946" cy="3433.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="1955" y="3436.5573">operator[](typename std::deque&lt;T&gt;::size_type n) const : const T &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3443.1516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="497" x="1955" y="3449.362">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3455.9562"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1955" y="3462.1667">VarHolderImpl&lt;deque&lt;type-parameter-0-0, allocator&lt;type-parameter-0-0&gt; &gt; &gt;(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1943" y="3468.7609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1029" x="1955" y="3474.9714">operator=(const VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp; ) : VarHolderImpl&lt;deque&lt;type-parameter-0-0,allocator&lt;type-parameter-0-0&gt;&gt;&gt; &amp;</text><!--MD5=[d3f4e35f4bae44fdf6c46a1300227a72]
class C_0000699000175415913074--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3813" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="444.9453" id="C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.5;" width="587" x="2169" y="2774.3"/><ellipse cx="2364.25" cy="2790.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2367.2188,2795.9406 Q2366.6406,2796.2375 2366,2796.3781 Q2365.3594,2796.5344 2364.6563,2796.5344 Q2362.1563,2796.5344 2360.8281,2794.8937 Q2359.5156,2793.2375 2359.5156,2790.1125 Q2359.5156,2786.9875 2360.8281,2785.3312 Q2362.1563,2783.675 2364.6563,2783.675 Q2365.3594,2783.675 2366,2783.8312 Q2366.6563,2783.9875 2367.2188,2784.2844 L2367.2188,2787.0031 Q2366.5938,2786.425 2366,2786.1594 Q2365.4063,2785.8781 2364.7813,2785.8781 Q2363.4375,2785.8781 2362.75,2786.9562 Q2362.0625,2788.0187 2362.0625,2790.1125 Q2362.0625,2792.2062 2362.75,2793.2844 Q2363.4375,2794.3469 2364.7813,2794.3469 Q2365.4063,2794.3469 2366,2794.0812 Q2366.5938,2793.8 2367.2188,2793.2219 L2367.2188,2795.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2384.75" y="2794.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="99" x="2660" y="2771.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="2661" y="2783.4387">Poco::DateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2170" x2="2755" y1="2806.3" y2="2806.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2175" y="2812.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="2814.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2189" y="2820.5104">_val : DateTime</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2170" x2="2755" y1="2827.1047" y2="2827.1047"/><ellipse cx="2180" cy="2838.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2189" y="2841.3151">VarHolderImpl(const DateTime &amp; val) : void</text><ellipse cx="2180" cy="2850.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2189" y="2854.1198">~VarHolderImpl() : void</text><ellipse cx="2180" cy="2863.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2189" y="2866.9245">type() const : const std::type_info &amp;</text><ellipse cx="2180" cy="2876.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2189" y="2879.7292">convert(Int8 &amp; ) const : void</text><ellipse cx="2180" cy="2889.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2189" y="2892.5339">convert(Int16 &amp; ) const : void</text><ellipse cx="2180" cy="2902.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2189" y="2905.3386">convert(Int32 &amp; ) const : void</text><ellipse cx="2180" cy="2914.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2189" y="2918.1433">convert(Int64 &amp; val) const : void</text><ellipse cx="2180" cy="2927.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2189" y="2930.9479">convert(UInt64 &amp; val) const : void</text><ellipse cx="2180" cy="2940.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2189" y="2943.7526">convert(long long &amp; val) const : void</text><ellipse cx="2180" cy="2953.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2189" y="2956.5573">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2180" cy="2966.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2189" y="2969.362">convert(std::string &amp; val) const : void</text><ellipse cx="2180" cy="2978.9562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2189" y="2982.1667">convert(DateTime &amp; val) const : void</text><ellipse cx="2180" cy="2991.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2189" y="2994.9714">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2180" cy="3004.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2189" y="3007.7761">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2180" cy="3017.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2189" y="3020.5808">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2180" cy="3030.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2189" y="3033.3854">value() const : const DateTime &amp;</text><ellipse cx="2180" cy="3042.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2189" y="3046.1901">isArray() const : bool</text><ellipse cx="2180" cy="3055.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2189" y="3058.9948">isStruct() const : bool</text><ellipse cx="2180" cy="3068.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2189" y="3071.7995">isInteger() const : bool</text><ellipse cx="2180" cy="3081.3937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2189" y="3084.6042">isSigned() const : bool</text><ellipse cx="2180" cy="3094.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2189" y="3097.4089">isNumeric() const : bool</text><ellipse cx="2180" cy="3107.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2189" y="3110.2136">isBoolean() const : bool</text><ellipse cx="2180" cy="3119.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2189" y="3123.0183">isString() const : bool</text><ellipse cx="2180" cy="3132.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2189" y="3135.8229">isDate() const : bool</text><ellipse cx="2180" cy="3145.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2189" y="3148.6276">isTime() const : bool</text><ellipse cx="2180" cy="3158.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2189" y="3161.4323">isDateTime() const : bool</text><ellipse cx="2180" cy="3171.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2189" y="3174.237">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="3180.8312"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2189" y="3187.0417">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="3193.6359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="2189" y="3199.8464">VarHolderImpl(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2177" y="3206.4406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="2189" y="3212.6511">operator=(const Dynamic::VarHolderImpl&lt;DateTime&gt; &amp; ) : Dynamic::VarHolderImpl&lt;DateTime&gt; &amp;</text><!--MD5=[535f5640b87cab7cf4763634b5dabc9e]
class C_0001850771625416044357--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3963" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="406.5313" id="C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.5;" width="645" x="2140" y="2332.3"/><ellipse cx="2347.75" cy="2348.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2350.7188,2353.9406 Q2350.1406,2354.2375 2349.5,2354.3781 Q2348.8594,2354.5344 2348.1563,2354.5344 Q2345.6563,2354.5344 2344.3281,2352.8937 Q2343.0156,2351.2375 2343.0156,2348.1125 Q2343.0156,2344.9875 2344.3281,2343.3312 Q2345.6563,2341.675 2348.1563,2341.675 Q2348.8594,2341.675 2349.5,2341.8312 Q2350.1563,2341.9875 2350.7188,2342.2844 L2350.7188,2345.0031 Q2350.0938,2344.425 2349.5,2344.1594 Q2348.9063,2343.8781 2348.2813,2343.8781 Q2346.9375,2343.8781 2346.25,2344.9562 Q2345.5625,2346.0187 2345.5625,2348.1125 Q2345.5625,2350.2062 2346.25,2351.2844 Q2346.9375,2352.3469 2348.2813,2352.3469 Q2348.9063,2352.3469 2349.5,2352.0812 Q2350.0938,2351.8 2350.7188,2351.2219 L2350.7188,2353.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2368.25" y="2352.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="132" x="2656" y="2329.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="2657" y="2341.4387">Poco::LocalDateTime</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2141" x2="2784" y1="2364.3" y2="2364.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2146" y="2370.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2372.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2160" y="2378.5104">_val : LocalDateTime</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2141" x2="2784" y1="2385.1047" y2="2385.1047"/><ellipse cx="2151" cy="2396.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="2160" y="2399.3151">VarHolderImpl(const LocalDateTime &amp; val) : void</text><ellipse cx="2151" cy="2408.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2160" y="2412.1198">~VarHolderImpl() : void</text><ellipse cx="2151" cy="2421.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2160" y="2424.9245">type() const : const std::type_info &amp;</text><ellipse cx="2151" cy="2434.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2160" y="2437.7292">convert(Int64 &amp; val) const : void</text><ellipse cx="2151" cy="2447.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2160" y="2450.5339">convert(UInt64 &amp; val) const : void</text><ellipse cx="2151" cy="2460.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2160" y="2463.3386">convert(long long &amp; val) const : void</text><ellipse cx="2151" cy="2472.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2160" y="2476.1433">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2151" cy="2485.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2160" y="2488.9479">convert(std::string &amp; val) const : void</text><ellipse cx="2151" cy="2498.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2160" y="2501.7526">convert(DateTime &amp; val) const : void</text><ellipse cx="2151" cy="2511.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2160" y="2514.5573">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2151" cy="2524.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2160" y="2527.362">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2151" cy="2536.9562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2160" y="2540.1667">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2151" cy="2549.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2160" y="2552.9714">value() const : const LocalDateTime &amp;</text><ellipse cx="2151" cy="2562.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2160" y="2565.7761">isArray() const : bool</text><ellipse cx="2151" cy="2575.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2160" y="2578.5808">isStruct() const : bool</text><ellipse cx="2151" cy="2588.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2160" y="2591.3854">isInteger() const : bool</text><ellipse cx="2151" cy="2600.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2160" y="2604.1901">isSigned() const : bool</text><ellipse cx="2151" cy="2613.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2160" y="2616.9948">isNumeric() const : bool</text><ellipse cx="2151" cy="2626.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2160" y="2629.7995">isBoolean() const : bool</text><ellipse cx="2151" cy="2639.3937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2160" y="2642.6042">isString() const : bool</text><ellipse cx="2151" cy="2652.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2160" y="2655.4089">isDate() const : bool</text><ellipse cx="2151" cy="2665.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2160" y="2668.2136">isTime() const : bool</text><ellipse cx="2151" cy="2677.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2160" y="2681.0183">isDateTime() const : bool</text><ellipse cx="2151" cy="2690.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2160" y="2693.8229">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2700.4172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2160" y="2706.6276">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2713.2219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="2160" y="2719.4323">VarHolderImpl(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2148" y="2726.0266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="619" x="2160" y="2732.237">operator=(const Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp; ) : Dynamic::VarHolderImpl&lt;LocalDateTime&gt; &amp;</text><!--MD5=[7d52b6bd4d6f4b5a6d942536c6534914]
class C_0001458511670125196521--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4098" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="406.5313" id="C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.5;" width="607" x="2159" y="1890.3"/><ellipse cx="2360.25" cy="1906.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2363.2188,1911.9406 Q2362.6406,1912.2375 2362,1912.3781 Q2361.3594,1912.5344 2360.6563,1912.5344 Q2358.1563,1912.5344 2356.8281,1910.8937 Q2355.5156,1909.2375 2355.5156,1906.1125 Q2355.5156,1902.9875 2356.8281,1901.3312 Q2358.1563,1899.675 2360.6563,1899.675 Q2361.3594,1899.675 2362,1899.8312 Q2362.6563,1899.9875 2363.2188,1900.2844 L2363.2188,1903.0031 Q2362.5938,1902.425 2362,1902.1594 Q2361.4063,1901.8781 2360.7813,1901.8781 Q2359.4375,1901.8781 2358.75,1902.9562 Q2358.0625,1904.0187 2358.0625,1906.1125 Q2358.0625,1908.2062 2358.75,1909.2844 Q2359.4375,1910.3469 2360.7813,1910.3469 Q2361.4063,1910.3469 2362,1910.0812 Q2362.5938,1909.8 2363.2188,1909.2219 L2363.2188,1911.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2380.75" y="1910.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="107" x="2662" y="1887.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="105" x="2663" y="1899.4387">Poco::Timestamp</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2160" x2="2765" y1="1922.3" y2="1922.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2165" y="1928.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="1930.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2179" y="1936.5104">_val : Timestamp</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2160" x2="2765" y1="1943.1047" y2="1943.1047"/><ellipse cx="2170" cy="1954.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2179" y="1957.3151">VarHolderImpl(const Timestamp &amp; val) : void</text><ellipse cx="2170" cy="1966.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2179" y="1970.1198">~VarHolderImpl() : void</text><ellipse cx="2170" cy="1979.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2179" y="1982.9245">type() const : const std::type_info &amp;</text><ellipse cx="2170" cy="1992.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2179" y="1995.7292">convert(Int64 &amp; val) const : void</text><ellipse cx="2170" cy="2005.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2179" y="2008.5339">convert(UInt64 &amp; val) const : void</text><ellipse cx="2170" cy="2018.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2179" y="2021.3386">convert(long long &amp; val) const : void</text><ellipse cx="2170" cy="2030.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2179" y="2034.1433">convert(unsigned long long &amp; val) const : void</text><ellipse cx="2170" cy="2043.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2179" y="2046.9479">convert(std::string &amp; val) const : void</text><ellipse cx="2170" cy="2056.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2179" y="2059.7526">convert(DateTime &amp; val) const : void</text><ellipse cx="2170" cy="2069.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2179" y="2072.5573">convert(LocalDateTime &amp; ldt) const : void</text><ellipse cx="2170" cy="2082.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2179" y="2085.362">convert(Timestamp &amp; ts) const : void</text><ellipse cx="2170" cy="2094.9562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2179" y="2098.1667">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2170" cy="2107.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2179" y="2110.9714">value() const : const Timestamp &amp;</text><ellipse cx="2170" cy="2120.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2179" y="2123.7761">isArray() const : bool</text><ellipse cx="2170" cy="2133.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2179" y="2136.5808">isStruct() const : bool</text><ellipse cx="2170" cy="2146.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2179" y="2149.3854">isInteger() const : bool</text><ellipse cx="2170" cy="2158.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2179" y="2162.1901">isSigned() const : bool</text><ellipse cx="2170" cy="2171.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2179" y="2174.9948">isNumeric() const : bool</text><ellipse cx="2170" cy="2184.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2179" y="2187.7995">isBoolean() const : bool</text><ellipse cx="2170" cy="2197.3937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2179" y="2200.6042">isString() const : bool</text><ellipse cx="2170" cy="2210.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2179" y="2213.4089">isDate() const : bool</text><ellipse cx="2170" cy="2223.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2179" y="2226.2136">isTime() const : bool</text><ellipse cx="2170" cy="2235.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2179" y="2239.0183">isDateTime() const : bool</text><ellipse cx="2170" cy="2248.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2179" y="2251.8229">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="2258.4172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2179" y="2264.6276">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="2271.2219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="2179" y="2277.4323">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2167" y="2284.0266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="581" x="2179" y="2290.237">operator=(const Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp; ) : Dynamic::VarHolderImpl&lt;Timestamp&gt; &amp;</text><!--MD5=[6aaca93ee2c23e99033b42cf172acb7a]
class C_0001286239480653274581--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4233" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="316.8984" id="C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="2196" y="1538.3"/><ellipse cx="2378.25" cy="1554.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2381.2188,1559.9406 Q2380.6406,1560.2375 2380,1560.3781 Q2379.3594,1560.5344 2378.6563,1560.5344 Q2376.1563,1560.5344 2374.8281,1558.8937 Q2373.5156,1557.2375 2373.5156,1554.1125 Q2373.5156,1550.9875 2374.8281,1549.3312 Q2376.1563,1547.675 2378.6563,1547.675 Q2379.3594,1547.675 2380,1547.8312 Q2380.6563,1547.9875 2381.2188,1548.2844 L2381.2188,1551.0031 Q2380.5938,1550.425 2380,1550.1594 Q2379.4063,1549.8781 2378.7813,1549.8781 Q2377.4375,1549.8781 2376.75,1550.9562 Q2376.0625,1552.0187 2376.0625,1554.1125 Q2376.0625,1556.2062 2376.75,1557.2844 Q2377.4375,1558.3469 2378.7813,1558.3469 Q2379.4063,1558.3469 2380,1558.0812 Q2380.5938,1557.8 2381.2188,1557.2219 L2381.2188,1559.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2398.75" y="1558.4543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="71" x="2661" y="1535.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="69" x="2662" y="1547.4387">Poco::UUID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2197" x2="2728" y1="1570.3" y2="1570.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2202" y="1576.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1578.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="2216" y="1584.5104">_val : UUID</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2197" x2="2728" y1="1591.1047" y2="1591.1047"/><ellipse cx="2207" cy="1602.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2216" y="1605.3151">VarHolderImpl(const UUID &amp; val) : void</text><ellipse cx="2207" cy="1614.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2216" y="1618.1198">~VarHolderImpl() : void</text><ellipse cx="2207" cy="1627.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2216" y="1630.9245">type() const : const std::type_info &amp;</text><ellipse cx="2207" cy="1640.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2216" y="1643.7292">convert(std::string &amp; val) const : void</text><ellipse cx="2207" cy="1653.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2216" y="1656.5339">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2207" cy="1666.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="2216" y="1669.3386">value() const : const UUID &amp;</text><ellipse cx="2207" cy="1678.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2216" y="1682.1433">isArray() const : bool</text><ellipse cx="2207" cy="1691.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2216" y="1694.9479">isStruct() const : bool</text><ellipse cx="2207" cy="1704.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2216" y="1707.7526">isInteger() const : bool</text><ellipse cx="2207" cy="1717.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2216" y="1720.5573">isSigned() const : bool</text><ellipse cx="2207" cy="1730.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2216" y="1733.362">isNumeric() const : bool</text><ellipse cx="2207" cy="1742.9562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2216" y="1746.1667">isBoolean() const : bool</text><ellipse cx="2207" cy="1755.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2216" y="1758.9714">isString() const : bool</text><ellipse cx="2207" cy="1768.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2216" y="1771.7761">isDate() const : bool</text><ellipse cx="2207" cy="1781.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2216" y="1784.5808">isTime() const : bool</text><ellipse cx="2207" cy="1794.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2216" y="1797.3854">isDateTime() const : bool</text><ellipse cx="2207" cy="1806.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2216" y="1810.1901">isUUID() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1816.7844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2216" y="1822.9948">VarHolderImpl() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1829.5891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="2216" y="1835.7995">VarHolderImpl(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp; ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1842.3937"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="2216" y="1848.6042">operator=(const Dynamic::VarHolderImpl&lt;UUID&gt; &amp; ) : Dynamic::VarHolderImpl&lt;UUID&gt; &amp;</text><!--MD5=[d0a79e34608f36a598cfde4fcdc22a46]
class C_0002237184725500898553--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L33" target="_top" title="VarIterator" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L33" xlink:show="new" xlink:title="VarIterator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="355.3125" id="C_0002237184725500898553" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="38" y="5832.3"/><ellipse cx="217.25" cy="5848.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M220.2188,5853.9406 Q219.6406,5854.2375 219,5854.3781 Q218.3594,5854.5344 217.6563,5854.5344 Q215.1563,5854.5344 213.8281,5852.8938 Q212.5156,5851.2375 212.5156,5848.1125 Q212.5156,5844.9875 213.8281,5843.3313 Q215.1563,5841.675 217.6563,5841.675 Q218.3594,5841.675 219,5841.8313 Q219.6563,5841.9875 220.2188,5842.2844 L220.2188,5845.0031 Q219.5938,5844.425 219,5844.1594 Q218.4063,5843.8781 217.7813,5843.8781 Q216.4375,5843.8781 215.75,5844.9563 Q215.0625,5846.0188 215.0625,5848.1125 Q215.0625,5850.2063 215.75,5851.2844 Q216.4375,5852.3469 217.7813,5852.3469 Q218.4063,5852.3469 219,5852.0813 Q219.5938,5851.8 220.2188,5851.2219 L220.2188,5853.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="237.75" y="5852.4543">VarIterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="472" y1="5864.3" y2="5864.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="Sets the iterator position. Throws RangeException if position is out of range." xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="Sets the iterator position. Throws RangeException if position is out of range." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="5870.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5872.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" target="_top" title="Sets the iterator position. Throws RangeException if position is out of range." xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117" xlink:show="new" xlink:title="Sets the iterator position. Throws RangeException if position is out of range." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="58" y="5878.5104">_pVar : Dynamic::Var *</text></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="5883.1047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="5885.1047"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" target="_top" title="_position" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118" xlink:show="new" xlink:title="_position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="58" y="5891.3151">_position : std::size_t</text></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="44" y="5895.9094"/><ellipse cx="49" cy="5900.9094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" target="_top" title="POSITION_END" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43" xlink:show="new" xlink:title="POSITION_END" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="58" y="5904.1198">POSITION_END : const std::size_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="472" y1="5910.7141" y2="5910.7141"/><ellipse cx="49" cy="5921.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="58" y="5924.9245">VarIterator(Dynamic::Var * pVar, bool positionEnd) : void</text><ellipse cx="49" cy="5934.5188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="58" y="5937.7292">VarIterator(const Dynamic::VarIterator &amp; other) : void</text><ellipse cx="49" cy="5947.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="58" y="5950.5339">VarIterator(Dynamic::VarIterator &amp;&amp; other) : void</text><ellipse cx="49" cy="5960.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="58" y="5963.3386">~VarIterator() : void</text><ellipse cx="49" cy="5972.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="58" y="5976.1433">operator=(const Dynamic::VarIterator &amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="5985.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="58" y="5988.9479">operator=(Dynamic::VarIterator &amp;&amp; other) : Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="5998.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="58" y="6001.7526">operator==(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="6011.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="58" y="6014.5573">operator!=(const Dynamic::VarIterator &amp; other) const : bool</text><ellipse cx="49" cy="6024.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58" y="6027.362">operator*() const : Dynamic::Var &amp;</text><ellipse cx="49" cy="6036.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="58" y="6040.1667">operator-&gt;() const : Dynamic::Var *</text><ellipse cx="49" cy="6049.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="58" y="6052.9714">operator++() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6062.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="58" y="6065.7761">operator++(int ) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6075.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="58" y="6078.5808">operator--() const : const Dynamic::VarIterator &amp;</text><ellipse cx="49" cy="6088.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="58" y="6091.3854">operator--(int ) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6100.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="58" y="6104.1901">operator+(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6113.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="58" y="6116.9948">operator-(std::size_t diff) const : Dynamic::VarIterator</text><ellipse cx="49" cy="6126.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="58" y="6129.7995">swap(Dynamic::VarIterator &amp; other) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6136.3938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="58" y="6142.6042">VarIterator() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6149.1984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="58" y="6155.4089">increment() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6162.0031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="58" y="6168.2136">decrement() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="6174.8078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="58" y="6181.0183">setPosition(std::size_t pos) const : void</text><!--MD5=[63dfd395c4dfc12b4b097b3e4deec016]
class C_0001827593751126946500--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L41" target="_top" title="Var" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L41" xlink:show="new" xlink:title="Var" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="1392.4922" id="C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="599" y="5313.8"/><ellipse cx="831.25" cy="5329.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M834.2188,5335.4406 Q833.6406,5335.7375 833,5335.8781 Q832.3594,5336.0344 831.6563,5336.0344 Q829.1563,5336.0344 827.8281,5334.3938 Q826.5156,5332.7375 826.5156,5329.6125 Q826.5156,5326.4875 827.8281,5324.8313 Q829.1563,5323.175 831.6563,5323.175 Q832.3594,5323.175 833,5323.3313 Q833.6563,5323.4875 834.2188,5323.7844 L834.2188,5326.5031 Q833.5938,5325.925 833,5325.6594 Q832.4063,5325.3781 831.7813,5325.3781 Q830.4375,5325.3781 829.75,5326.4563 Q829.0625,5327.5188 829.0625,5329.6125 Q829.0625,5331.7063 829.75,5332.7844 Q830.4375,5333.8469 831.7813,5333.8469 Q832.4063,5333.8469 833,5333.5813 Q833.5938,5333.3 834.2188,5332.7219 L834.2188,5335.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="851.75" y="5333.9543">Var</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="600" x2="1092" y1="5345.8" y2="5345.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="605" y="5351.8"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="5353.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" target="_top" title="_placeholder" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632" xlink:show="new" xlink:title="_placeholder" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="619" y="5360.0104">_placeholder : Placeholder&lt;Dynamic::VarHolder&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="600" x2="1092" y1="5366.6047" y2="5366.6047"/><ellipse cx="610" cy="5377.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="619" y="5380.8151">Var() : void</text><ellipse cx="610" cy="5390.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="619" y="5393.6198">Var(const char * pVal) : void</text><ellipse cx="610" cy="5403.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="619" y="5406.4245">Var(const Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="5416.0188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="619" y="5419.2292">~Var() : void</text><ellipse cx="610" cy="5428.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="619" y="5432.0339">swap(Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="5441.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="619" y="5444.8386">begin() const : Dynamic::Var::ConstIterator</text><ellipse cx="610" cy="5454.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="619" y="5457.6433">end() const : Dynamic::Var::ConstIterator</text><ellipse cx="610" cy="5467.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="619" y="5470.4479">begin() : Dynamic::Var::Iterator</text><ellipse cx="610" cy="5480.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="619" y="5483.2526">end() : Dynamic::Var::Iterator</text><ellipse cx="610" cy="5492.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="619" y="5496.0573">operator!() const : bool</text><ellipse cx="610" cy="5505.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="619" y="5508.862">operator=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5518.4563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="619" y="5521.6667">operator+(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5531.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="619" y="5534.4714">operator+(const char * other) const : const Dynamic::Var</text><ellipse cx="610" cy="5544.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="619" y="5547.2761">operator++() : Dynamic::Var &amp;</text><ellipse cx="610" cy="5556.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="619" y="5560.0808">operator++(int ) : const Dynamic::Var</text><ellipse cx="610" cy="5569.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="619" y="5572.8854">operator--() : Dynamic::Var &amp;</text><ellipse cx="610" cy="5582.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="619" y="5585.6901">operator--(int ) : const Dynamic::Var</text><ellipse cx="610" cy="5595.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="619" y="5598.4948">operator+=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5608.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="619" y="5611.2995">operator+=(const char * other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5620.8938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="619" y="5624.1042">operator-(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5633.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="5636.9089">operator-=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5646.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="619" y="5649.7136">operator*(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5659.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="619" y="5662.5183">operator*=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5672.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="619" y="5675.3229">operator/(const Dynamic::Var &amp; other) const : const Dynamic::Var</text><ellipse cx="610" cy="5684.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="5688.1276">operator/=(const Dynamic::Var &amp; other) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5697.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="619" y="5700.9323">operator==(const char * other) const : bool</text><ellipse cx="610" cy="5710.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="5713.737">operator==(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5723.3313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="619" y="5726.5417">operator!=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5736.1359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="619" y="5739.3464">operator!=(const char * other) const : bool</text><ellipse cx="610" cy="5748.9406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="5752.1511">operator&lt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5761.7453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="5764.9558">operator&lt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5774.55" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="5777.7604">operator&gt;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5787.3547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="619" y="5790.5651">operator&gt;=(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5800.1594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="619" y="5803.3698">operator||(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5812.9641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="619" y="5816.1745">operator&amp;&amp;(const Dynamic::Var &amp; other) const : bool</text><ellipse cx="610" cy="5825.7688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="619" y="5828.9792">isArray() const : bool</text><ellipse cx="610" cy="5838.5734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="619" y="5841.7839">isVector() const : bool</text><ellipse cx="610" cy="5851.3781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="619" y="5854.5886">isList() const : bool</text><ellipse cx="610" cy="5864.1828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="619" y="5867.3933">isDeque() const : bool</text><ellipse cx="610" cy="5876.9875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="619" y="5880.1979">isStruct() const : bool</text><ellipse cx="610" cy="5889.7922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="619" y="5893.0026">isOrdered() const : bool</text><ellipse cx="610" cy="5902.5969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="619" y="5905.8073">at(std::size_t n) : char &amp;</text><ellipse cx="610" cy="5915.4016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="619" y="5918.612">operator[](const std::string &amp; name) : Dynamic::Var &amp;</text><ellipse cx="610" cy="5928.2063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="619" y="5931.4167">operator[](const std::string &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="610" cy="5941.0109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="619" y="5944.2214">type() const : const std::type_info &amp;</text><ellipse cx="610" cy="5953.8156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="619" y="5957.0261">empty() : void</text><ellipse cx="610" cy="5966.6203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="619" y="5969.8308">clear() : void</text><ellipse cx="610" cy="5979.425" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="619" y="5982.6354">isEmpty() const : bool</text><ellipse cx="610" cy="5992.2297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="619" y="5995.4401">isInteger() const : bool</text><ellipse cx="610" cy="6005.0344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="619" y="6008.2448">isSigned() const : bool</text><ellipse cx="610" cy="6017.8391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="619" y="6021.0495">isNumeric() const : bool</text><ellipse cx="610" cy="6030.6438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="619" y="6033.8542">isBoolean() const : bool</text><ellipse cx="610" cy="6043.4484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="619" y="6046.6589">isString() const : bool</text><ellipse cx="610" cy="6056.2531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="619" y="6059.4636">isDate() const : bool</text><ellipse cx="610" cy="6069.0578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="619" y="6072.2683">isTime() const : bool</text><ellipse cx="610" cy="6081.8625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="619" y="6085.0729">isDateTime() const : bool</text><ellipse cx="610" cy="6094.6672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="619" y="6097.8776">isUUID() const : bool</text><ellipse cx="610" cy="6107.4719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="619" y="6110.6823">size() const : std::size_t</text><ellipse cx="610" cy="6120.2766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="619" y="6123.487">toString() const : std::string</text><ellipse cx="610" cy="6133.0813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="619" y="6136.2917">parse(const std::string &amp; val) : Dynamic::Var</text><ellipse cx="610" cy="6145.8859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="270" x="619" y="6149.0964">toString(const Dynamic::Var &amp; var) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6155.6906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="619" y="6161.9011">getAt(std::size_t n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6168.4953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="619" y="6174.7058">getAt(const std::string &amp; n) : Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6181.3"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="434" x="619" y="6187.5104">parse(const std::string &amp; val, std::string::size_type &amp; offset) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6194.1047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="458" x="619" y="6200.3151">parseObject(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6206.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="452" x="619" y="6213.1198">parseArray(const std::string &amp; val, std::string::size_type &amp; pos) : Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6219.7141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="440" x="619" y="6225.9245">parseString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6232.5188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="619" y="6238.7292">parseJSONString(const std::string &amp; val, std::string::size_type &amp; pos) : std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6245.3234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="425" x="619" y="6251.5339">skipWhiteSpace(const std::string &amp; val, std::string::size_type &amp; pos) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6258.1281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="619" y="6264.3386">content() const : Dynamic::VarHolder *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6270.9328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="619" y="6277.1433">destruct() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6283.7375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="619" y="6289.9479">construct(const char * value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6296.5422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="619" y="6302.7526">construct(const Dynamic::Var &amp; other) : void</text><ellipse cx="610" cy="6312.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="619" y="6315.5573">Var(const T &amp; val) : void</text><ellipse cx="610" cy="6325.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="619" y="6328.362">convert(T &amp; val) : void</text><ellipse cx="610" cy="6337.9563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="619" y="6341.1667">convert() : T</text><ellipse cx="610" cy="6350.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="619" y="6353.9714">operator type-parameter-0-0() : T</text><ellipse cx="610" cy="6363.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="619" y="6366.7761">extract() : const T &amp;</text><ellipse cx="610" cy="6376.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="619" y="6379.5808">operator=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6389.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="619" y="6392.3854">operator+(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6401.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="619" y="6405.1901">operator+=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6414.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="619" y="6417.9948">operator-(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6427.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="6430.7995">operator-=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6440.3938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="619" y="6443.6042">operator*(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6453.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="619" y="6456.4089">operator*=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6466.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="619" y="6469.2136">operator/(const T &amp; other) : const class Dynamic::Var</text><ellipse cx="610" cy="6478.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="619" y="6482.0183">operator/=(const T &amp; other) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6491.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="619" y="6494.8229">operator==(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6504.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="619" y="6507.6276">operator!=(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6517.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="619" y="6520.4323">operator&lt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6530.0266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="619" y="6533.237">operator&lt;=(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6542.8313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="619" y="6546.0417">operator&gt;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6555.6359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="619" y="6558.8464">operator&gt;=(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6568.4406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="619" y="6571.6511">operator||(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6581.2453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="619" y="6584.4558">operator&amp;&amp;(const T &amp; other) : _Bool</text><ellipse cx="610" cy="6594.05" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="619" y="6597.2604">operator[](const T &amp; n) : class Dynamic::Var &amp;</text><ellipse cx="610" cy="6606.8547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="619" y="6610.0651">operator[](const T &amp; n) : const class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6616.6594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="619" y="6622.8698">add(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6629.4641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="619" y="6635.6745">subtract(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6642.2688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="619" y="6648.4792">multiply(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6655.0734"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="619" y="6661.2839">divide(const Dynamic::Var &amp; other) : T</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6667.8781"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="619" y="6674.0886">holderImpl(const std::string errorMessage = "") : VarHolderImpl&lt;T&gt; *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6680.6828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="619" y="6686.8933">structIndexOperator(T * pStr, N n) : class Dynamic::Var &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="607" y="6693.4875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="619" y="6699.6979">construct(const ValueType &amp; value) : void</text><!--MD5=[0e1432047d47ec9a6b00dab152215e00]
class C_0000876644825045799418--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L36" target="_top" title="Struct" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L36" xlink:show="new" xlink:title="Struct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="406.5313" id="C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="5782" y="849.3"/><ellipse cx="5973.25" cy="865.3" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5976.2188,870.9406 Q5975.6406,871.2375 5975,871.3781 Q5974.3594,871.5344 5973.6563,871.5344 Q5971.1563,871.5344 5969.8281,869.8937 Q5968.5156,868.2375 5968.5156,865.1125 Q5968.5156,861.9875 5969.8281,860.3312 Q5971.1563,858.675 5973.6563,858.675 Q5974.3594,858.675 5975,858.8312 Q5975.6563,858.9875 5976.2188,859.2844 L5976.2188,862.0031 Q5975.5938,861.425 5975,861.1594 Q5974.4063,860.8781 5973.7813,860.8781 Q5972.4375,860.8781 5971.75,861.9562 Q5971.0625,863.0187 5971.0625,865.1125 Q5971.0625,867.2062 5971.75,868.2844 Q5972.4375,869.3469 5973.7813,869.3469 Q5974.4063,869.3469 5975,869.0812 Q5975.5938,868.8 5976.2188,868.2219 L5976.2188,870.9406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="5993.75" y="869.4543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="6216" y="846.3"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="6217" y="858.4387">K,M,S</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5783" x2="6248" y1="881.3" y2="881.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5788" y="887.3"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5790" y="889.3"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247" xlink:show="new" xlink:title="_data" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="5802" y="895.5104">_data : Dynamic::Struct::Data</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5783" x2="6248" y1="902.1047" y2="902.1047"/><ellipse cx="5793" cy="913.1047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="5802" y="916.3151">Struct&lt;K, M, S&gt;() : void</text><ellipse cx="5793" cy="925.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="5802" y="929.1198">Struct&lt;K, M, S&gt;(const Dynamic::Struct::Data &amp; val) : void</text><ellipse cx="5793" cy="938.7141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5802" y="941.9245">~Struct&lt;K, M, S&gt;() : void</text><ellipse cx="5793" cy="951.5187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="5802" y="954.7292">operator[](const K &amp; name) : Dynamic::Var &amp;</text><ellipse cx="5793" cy="964.3234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="5802" y="967.5339">operator[](const K &amp; name) const : const Dynamic::Var &amp;</text><ellipse cx="5793" cy="977.1281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5802" y="980.3386">contains(const K &amp; name) const : bool</text><ellipse cx="5793" cy="989.9328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5802" y="993.1433">find(const K &amp; name) : Dynamic::Struct::Iterator</text><ellipse cx="5793" cy="1002.7375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="5802" y="1005.9479">find(const K &amp; name) const : Dynamic::Struct::ConstIterator</text><ellipse cx="5793" cy="1015.5422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5802" y="1018.7526">end() : Dynamic::Struct::Iterator</text><ellipse cx="5793" cy="1028.3469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="5802" y="1031.5573">end() const : Dynamic::Struct::ConstIterator</text><ellipse cx="5793" cy="1041.1516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5802" y="1044.362">begin() : Dynamic::Struct::Iterator</text><ellipse cx="5793" cy="1053.9562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="5802" y="1057.1667">begin() const : Dynamic::Struct::ConstIterator</text><ellipse cx="5793" cy="1066.7609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="5802" y="1069.9714">insert(const Dynamic::Struct::ValueType &amp; aPair) : Dynamic::Struct::InsRetVal</text><ellipse cx="5793" cy="1079.5656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="5802" y="1082.7761">erase(const K &amp; key) : Dynamic::Struct::SizeType</text><ellipse cx="5793" cy="1092.3703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="5802" y="1095.5808">erase(Dynamic::Struct::Iterator &amp; it) : void</text><ellipse cx="5793" cy="1105.175" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5802" y="1108.3854">clear() : void</text><ellipse cx="5793" cy="1117.9797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="5802" y="1121.1901">swap(Struct&lt;K,M,S&gt; &amp; other) : void</text><ellipse cx="5793" cy="1130.7844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="5802" y="1133.9948">empty() const : bool</text><ellipse cx="5793" cy="1143.5891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5802" y="1146.7995">size() const : Dynamic::Struct::SizeType</text><ellipse cx="5793" cy="1156.3937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5802" y="1159.6042">members() const : Dynamic::Struct::NameSet</text><ellipse cx="5793" cy="1169.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="5802" y="1172.4089">getVar(const K &amp; key) const : Dynamic::Var</text><ellipse cx="5793" cy="1182.0031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5802" y="1185.2136">toString() const : std::string</text><ellipse cx="5793" cy="1194.8078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5802" y="1198.0183">Struct&lt;K, M, S&gt;(const std::map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="5793" cy="1207.6125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5802" y="1210.8229">Struct&lt;K, M, S&gt;(const ordered_map&lt;K,T&gt; &amp; val) : void</text><ellipse cx="5793" cy="1220.4172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="5802" y="1223.6276">insert(const K &amp; key, const T &amp; value) : Dynamic::Struct::InsRetVal</text><ellipse cx="5793" cy="1233.2219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="5802" y="1236.4323">getVar(const K &amp; key, const DefT &amp; defaultValue) : class Dynamic::Var</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5790" y="1243.0266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="5802" y="1249.237">assignMap(const T &amp; map) : void</text><!--MD5=[ef11c3035ad4f5c70052f8a09e74ea8b]
class C_0000527346272489458655--><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="48" id="C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.5;" width="532" x="4139" y="1172.8"/><ellipse cx="4154" cy="1188.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4156.9688,1194.4406 Q4156.3906,1194.7375 4155.75,1194.8781 Q4155.1094,1195.0344 4154.4063,1195.0344 Q4151.9063,1195.0344 4150.5781,1193.3937 Q4149.2656,1191.7375 4149.2656,1188.6125 Q4149.2656,1185.4875 4150.5781,1183.8312 Q4151.9063,1182.175 4154.4063,1182.175 Q4155.1094,1182.175 4155.75,1182.3312 Q4156.4063,1182.4875 4156.9688,1182.7844 L4156.9688,1185.5031 Q4156.3438,1184.925 4155.75,1184.6594 Q4155.1563,1184.3781 4154.5313,1184.3781 Q4153.1875,1184.3781 4152.5,1185.4562 Q4151.8125,1186.5187 4151.8125,1188.6125 Q4151.8125,1190.7062 4152.5,1191.7844 Q4153.1875,1192.8469 4154.5313,1192.8469 Q4155.1563,1192.8469 4155.75,1192.5812 Q4156.3438,1192.3 4156.9688,1191.7219 L4156.9688,1194.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="4168" y="1192.9543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="460" x="4214" y="1169.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="458" x="4215" y="1181.9387">std::string,std::map&lt;std::string,Poco::Dynamic::Var&gt;,std::set&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4140" x2="4670" y1="1204.8" y2="1204.8"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4140" x2="4670" y1="1212.8" y2="1212.8"/><!--MD5=[72598a19f4bf6190ed89a0435cb0020e]
class C_0001079370368307575613--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L252" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L252" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="457.75" id="C_0001079370368307575613" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="2101" y="1044.8"/><ellipse cx="2303.25" cy="1060.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2306.2188,1066.4406 Q2305.6406,1066.7375 2305,1066.8781 Q2304.3594,1067.0344 2303.6563,1067.0344 Q2301.1563,1067.0344 2299.8281,1065.3937 Q2298.5156,1063.7375 2298.5156,1060.6125 Q2298.5156,1057.4875 2299.8281,1055.8312 Q2301.1563,1054.175 2303.6563,1054.175 Q2304.3594,1054.175 2305,1054.3312 Q2305.6563,1054.4875 2306.2188,1054.7844 L2306.2188,1057.5031 Q2305.5938,1056.925 2305,1056.6594 Q2304.4063,1056.3781 2303.7813,1056.3781 Q2302.4375,1056.3781 2301.75,1057.4562 Q2301.0625,1058.5187 2301.0625,1060.6125 Q2301.0625,1062.7062 2301.75,1063.7844 Q2302.4375,1064.8469 2303.7813,1064.8469 Q2304.4063,1064.8469 2305,1064.5812 Q2305.5938,1064.3 2306.2188,1063.7219 L2306.2188,1066.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2323.75" y="1064.9543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="221" x="2606" y="1041.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="219" x="2607" y="1053.9387">Poco::Dynamic::Struct&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2102" x2="2823" y1="1076.8" y2="1076.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2107" y="1082.8"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2109" y="1084.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2121" y="1091.0104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2102" x2="2823" y1="1097.6047" y2="1097.6047"/><ellipse cx="2112" cy="1108.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="2121" y="1111.8151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2112" cy="1121.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2121" y="1124.6198">~VarHolderImpl() : void</text><ellipse cx="2112" cy="1134.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2121" y="1137.4245">type() const : const std::type_info &amp;</text><ellipse cx="2112" cy="1147.0187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2121" y="1150.2292">convert(Int8 &amp; ) const : void</text><ellipse cx="2112" cy="1159.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2121" y="1163.0339">convert(Int16 &amp; ) const : void</text><ellipse cx="2112" cy="1172.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2121" y="1175.8386">convert(Int32 &amp; ) const : void</text><ellipse cx="2112" cy="1185.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2121" y="1188.6433">convert(Int64 &amp; ) const : void</text><ellipse cx="2112" cy="1198.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2121" y="1201.4479">convert(UInt8 &amp; ) const : void</text><ellipse cx="2112" cy="1211.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2121" y="1214.2526">convert(UInt16 &amp; ) const : void</text><ellipse cx="2112" cy="1223.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2121" y="1227.0573">convert(UInt32 &amp; ) const : void</text><ellipse cx="2112" cy="1236.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2121" y="1239.862">convert(UInt64 &amp; ) const : void</text><ellipse cx="2112" cy="1249.4562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2121" y="1252.6667">convert(bool &amp; ) const : void</text><ellipse cx="2112" cy="1262.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2121" y="1265.4714">convert(float &amp; ) const : void</text><ellipse cx="2112" cy="1275.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2121" y="1278.2761">convert(double &amp; ) const : void</text><ellipse cx="2112" cy="1287.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2121" y="1291.0808">convert(char &amp; ) const : void</text><ellipse cx="2112" cy="1300.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2121" y="1303.8854">convert(std::string &amp; val) const : void</text><ellipse cx="2112" cy="1313.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2121" y="1316.6901">convert(DateTime &amp; ) const : void</text><ellipse cx="2112" cy="1326.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2121" y="1329.4948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2112" cy="1339.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2121" y="1342.2995">convert(Timestamp &amp; ) const : void</text><ellipse cx="2112" cy="1351.8937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2121" y="1355.1042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2112" cy="1364.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="2121" y="1367.9089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::ValueType &amp;</text><ellipse cx="2112" cy="1377.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2121" y="1380.7136">isArray() const : bool</text><ellipse cx="2112" cy="1390.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2121" y="1393.5183">isStruct() const : bool</text><ellipse cx="2112" cy="1403.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2121" y="1406.3229">isOrdered() const : bool</text><ellipse cx="2112" cy="1415.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2121" y="1419.1276">isInteger() const : bool</text><ellipse cx="2112" cy="1428.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2121" y="1431.9323">isSigned() const : bool</text><ellipse cx="2112" cy="1441.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2121" y="1444.737">isNumeric() const : bool</text><ellipse cx="2112" cy="1454.3312" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2121" y="1457.5417">isString() const : bool</text><ellipse cx="2112" cy="1467.1359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2121" y="1470.3464">size() const : std::size_t</text><ellipse cx="2112" cy="1479.9406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="2121" y="1483.1511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2112" cy="1492.7453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="697" x="2121" y="1495.9558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;std::string&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[3584b5df2d117e666a89b988d93d3878]
class C_0001212087958231445051--><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="48" id="C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.5;" width="1669" x="3570.5" y="884.8"/><ellipse cx="3585.5" cy="900.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3588.4688,906.4406 Q3587.8906,906.7375 3587.25,906.8781 Q3586.6094,907.0344 3585.9063,907.0344 Q3583.4063,907.0344 3582.0781,905.3937 Q3580.7656,903.7375 3580.7656,900.6125 Q3580.7656,897.4875 3582.0781,895.8312 Q3583.4063,894.175 3585.9063,894.175 Q3586.6094,894.175 3587.25,894.3312 Q3587.9063,894.4875 3588.4688,894.7844 L3588.4688,897.5031 Q3587.8438,896.925 3587.25,896.6594 Q3586.6563,896.3781 3586.0313,896.3781 Q3584.6875,896.3781 3584,897.4562 Q3583.3125,898.5187 3583.3125,900.6125 Q3583.3125,902.7062 3584,903.7844 Q3584.6875,904.8469 3586.0313,904.8469 Q3586.6563,904.8469 3587.25,904.5812 Q3587.8438,904.3 3588.4688,903.7219 L3588.4688,906.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3599.5" y="904.9543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="1597" x="3645.5" y="881.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1595" x="3646.5" y="893.9387">Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,std::map&lt;Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType,Poco::Dynamic::Var&gt;,std::set&lt;Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int&gt;&gt;::KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3571.5" x2="5238.5" y1="916.8" y2="916.8"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3571.5" x2="5238.5" y1="924.8" y2="924.8"/><!--MD5=[e6f1e19ef57a9dc41b27b14ecdca344e]
class C_0002033788483863182904--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L438" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L438" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="457.75" id="C_0002033788483863182904" style="stroke: #A80036; stroke-width: 1.5;" width="678" x="2123.5" y="551.8"/><ellipse cx="2326.25" cy="567.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2329.2188,573.4406 Q2328.6406,573.7375 2328,573.8781 Q2327.3594,574.0344 2326.6563,574.0344 Q2324.1563,574.0344 2322.8281,572.3937 Q2321.5156,570.7375 2321.5156,567.6125 Q2321.5156,564.4875 2322.8281,562.8312 Q2324.1563,561.175 2326.6563,561.175 Q2327.3594,561.175 2328,561.3312 Q2328.6563,561.4875 2329.2188,561.7844 L2329.2188,564.5031 Q2328.5938,563.925 2328,563.6594 Q2327.4063,563.3781 2326.7813,563.3781 Q2325.4375,563.3781 2324.75,564.4562 Q2324.0625,565.5187 2324.0625,567.6125 Q2324.0625,569.7062 2324.75,570.7844 Q2325.4375,571.8469 2326.7813,571.8469 Q2327.4063,571.8469 2328,571.5812 Q2328.5938,571.3 2329.2188,570.7219 L2329.2188,573.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2346.75" y="571.9543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="175" x="2629.5" y="548.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="173" x="2630.5" y="560.9387">Poco::Dynamic::Struct&lt;int&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2124.5" x2="2800.5" y1="583.8" y2="583.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2129.5" y="589.8"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2131.5" y="591.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2143.5" y="598.0104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2124.5" x2="2800.5" y1="604.6047" y2="604.6047"/><ellipse cx="2134.5" cy="615.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="534" x="2143.5" y="618.8151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="2134.5" cy="628.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2143.5" y="631.6198">~VarHolderImpl() : void</text><ellipse cx="2134.5" cy="641.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2143.5" y="644.4245">type() const : const std::type_info &amp;</text><ellipse cx="2134.5" cy="654.0187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2143.5" y="657.2292">convert(Int8 &amp; ) const : void</text><ellipse cx="2134.5" cy="666.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2143.5" y="670.0339">convert(Int16 &amp; ) const : void</text><ellipse cx="2134.5" cy="679.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2143.5" y="682.8386">convert(Int32 &amp; ) const : void</text><ellipse cx="2134.5" cy="692.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2143.5" y="695.6433">convert(Int64 &amp; ) const : void</text><ellipse cx="2134.5" cy="705.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2143.5" y="708.4479">convert(UInt8 &amp; ) const : void</text><ellipse cx="2134.5" cy="718.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2143.5" y="721.2526">convert(UInt16 &amp; ) const : void</text><ellipse cx="2134.5" cy="730.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2143.5" y="734.0573">convert(UInt32 &amp; ) const : void</text><ellipse cx="2134.5" cy="743.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2143.5" y="746.862">convert(UInt64 &amp; ) const : void</text><ellipse cx="2134.5" cy="756.4562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2143.5" y="759.6667">convert(bool &amp; ) const : void</text><ellipse cx="2134.5" cy="769.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2143.5" y="772.4714">convert(float &amp; ) const : void</text><ellipse cx="2134.5" cy="782.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2143.5" y="785.2761">convert(double &amp; ) const : void</text><ellipse cx="2134.5" cy="794.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2143.5" y="798.0808">convert(char &amp; ) const : void</text><ellipse cx="2134.5" cy="807.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2143.5" y="810.8854">convert(std::string &amp; val) const : void</text><ellipse cx="2134.5" cy="820.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2143.5" y="823.6901">convert(DateTime &amp; ) const : void</text><ellipse cx="2134.5" cy="833.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2143.5" y="836.4948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="2134.5" cy="846.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2143.5" y="849.2995">convert(Timestamp &amp; ) const : void</text><ellipse cx="2134.5" cy="858.8937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="2143.5" y="862.1042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="2134.5" cy="871.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="2143.5" y="874.9089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::ValueType &amp;</text><ellipse cx="2134.5" cy="884.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2143.5" y="887.7136">isArray() const : bool</text><ellipse cx="2134.5" cy="897.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2143.5" y="900.5183">isStruct() const : bool</text><ellipse cx="2134.5" cy="910.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2143.5" y="913.3229">isOrdered() const : bool</text><ellipse cx="2134.5" cy="922.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2143.5" y="926.1276">isInteger() const : bool</text><ellipse cx="2134.5" cy="935.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2143.5" y="938.9323">isSigned() const : bool</text><ellipse cx="2134.5" cy="948.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2143.5" y="951.737">isNumeric() const : bool</text><ellipse cx="2134.5" cy="961.3312" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2143.5" y="964.5417">isString() const : bool</text><ellipse cx="2134.5" cy="974.1359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2143.5" y="977.3464">size() const : std::size_t</text><ellipse cx="2134.5" cy="986.9406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="2143.5" y="990.1511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="2134.5" cy="999.7453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="652" x="2143.5" y="1002.9558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[e7e8c3742ed89c5d66f3705a30595898]
class C_0000922731127244749220--><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="48" id="C_0000922731127244749220" style="stroke: #A80036; stroke-width: 1.5;" width="2307" x="3251.5" y="5679.8"/><ellipse cx="3266.5" cy="5695.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3269.4688,5701.4406 Q3268.8906,5701.7375 3268.25,5701.8781 Q3267.6094,5702.0344 3266.9063,5702.0344 Q3264.4063,5702.0344 3263.0781,5700.3938 Q3261.7656,5698.7375 3261.7656,5695.6125 Q3261.7656,5692.4875 3263.0781,5690.8313 Q3264.4063,5689.175 3266.9063,5689.175 Q3267.6094,5689.175 3268.25,5689.3313 Q3268.9063,5689.4875 3269.4688,5689.7844 L3269.4688,5692.5031 Q3268.8438,5691.925 3268.25,5691.6594 Q3267.6563,5691.3781 3267.0313,5691.3781 Q3265.6875,5691.3781 3265,5692.4563 Q3264.3125,5693.5188 3264.3125,5695.6125 Q3264.3125,5697.7063 3265,5698.7844 Q3265.6875,5699.8469 3267.0313,5699.8469 Q3267.6563,5699.8469 3268.25,5699.5813 Q3268.8438,5699.3 3269.4688,5698.7219 L3269.4688,5701.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3280.5" y="5699.9543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="2235" x="3326.5" y="5676.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2233" x="3327.5" y="5688.9387">std::string,Poco::OrderedMap&lt;std::string,Poco::Dynamic::Var,std::hash&lt;std::string&gt;,std::equal_to&lt;std::string&gt;,std::allocator&lt;std::pair&lt;std::string,Poco::Dynamic::Var&gt;&gt;,std::deque&lt;std::pair&lt;std::string,Poco::Dynamic::Var&gt;&gt;&gt;,Poco::OrderedSet&lt;std::string,std::hash&lt;std::string&gt;,std::equal_to&lt;std::string&gt;,std::allocator&lt;std::string&gt;,std::deque&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3252.5" x2="5557.5" y1="5711.8" y2="5711.8"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3252.5" x2="5557.5" y1="5719.8" y2="5719.8"/><!--MD5=[59b47b7e2684e0ef765a3962a8c8f784]
class C_0001894636435809858910--><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="48" id="C_0001894636435809858910" style="stroke: #A80036; stroke-width: 1.5;" width="2632" x="3089" y="494.8"/><ellipse cx="3104" cy="510.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3106.9688,516.4406 Q3106.3906,516.7375 3105.75,516.8781 Q3105.1094,517.0344 3104.4063,517.0344 Q3101.9063,517.0344 3100.5781,515.3937 Q3099.2656,513.7375 3099.2656,510.6125 Q3099.2656,507.4875 3100.5781,505.8312 Q3101.9063,504.175 3104.4063,504.175 Q3105.1094,504.175 3105.75,504.3312 Q3106.4063,504.4875 3106.9688,504.7844 L3106.9688,507.5031 Q3106.3438,506.925 3105.75,506.6594 Q3105.1563,506.3781 3104.5313,506.3781 Q3103.1875,506.3781 3102.5,507.4562 Q3101.8125,508.5187 3101.8125,510.6125 Q3101.8125,512.7062 3102.5,513.7844 Q3103.1875,514.8469 3104.5313,514.8469 Q3105.1563,514.8469 3105.75,514.5812 Q3106.3438,514.3 3106.9688,513.7219 L3106.9688,516.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="3118" y="514.9543">Struct</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="2560" x="3164" y="491.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2558" x="3165" y="503.9387">Poco::Dynamic::VarHolderImpl&lt;Poco::Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Poco::Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType,Poco::OrderedMap&lt;int,Poco::Dynamic::Var,std::hash&lt;int&gt;,std::equal_to&lt;int&gt;,std::allocator&lt;std::pair&lt;int,Poco::Dynamic::Var&gt;&gt;,std::deque&lt;std::pair&lt;int,Poco::Dynamic::Var&gt;&gt;&gt;,Poco::OrderedSet&lt;int,std::hash&lt;int&gt;,std::equal_to&lt;int&gt;,std::allocator&lt;int&gt;,std::deque&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3090" x2="5720" y1="526.8" y2="526.8"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3090" x2="5720" y1="534.8" y2="534.8"/><!--MD5=[905a42f704710888f9b2f878cc669d6b]
class C_0002153171854526901050--><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L810" target="_top" title="VarHolderImpl" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L810" xlink:show="new" xlink:title="VarHolderImpl" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f5yy1byi9huvy)" height="457.75" id="C_0002153171854526901050" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="1953.5" y="58.8"/><ellipse cx="2191.75" cy="74.8" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2194.7188,80.4406 Q2194.1406,80.7375 2193.5,80.8781 Q2192.8594,81.0344 2192.1563,81.0344 Q2189.6563,81.0344 2188.3281,79.3937 Q2187.0156,77.7375 2187.0156,74.6125 Q2187.0156,71.4875 2188.3281,69.8312 Q2189.6563,68.175 2192.1563,68.175 Q2192.8594,68.175 2193.5,68.3312 Q2194.1563,68.4875 2194.7188,68.7844 L2194.7188,71.5031 Q2194.0938,70.925 2193.5,70.6594 Q2192.9063,70.3781 2192.2813,70.3781 Q2190.9375,70.3781 2190.25,71.4562 Q2189.5625,72.5187 2189.5625,74.6125 Q2189.5625,76.7062 2190.25,77.7844 Q2190.9375,78.8469 2192.2813,78.8469 Q2192.9063,78.8469 2193.5,78.5812 Q2194.0938,78.3 2194.7188,77.7219 L2194.7188,80.4406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="2212.25" y="78.9543">VarHolderImpl</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="444" x="2530.5" y="55.8"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="442" x="2531.5" y="67.9387">Poco::Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Poco::Dynamic::Var&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954.5" x2="2970.5" y1="90.8" y2="90.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1959.5" y="96.8"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1961.5" y="98.8"/></a><a href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" target="_top" title="_val" xlink:actuate="onRequest" xlink:href="https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991" xlink:show="new" xlink:title="_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="716" x="1973.5" y="105.0104">_val : Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1954.5" x2="2970.5" y1="111.6047" y2="111.6047"/><ellipse cx="1964.5" cy="122.6047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="874" x="1973.5" y="125.8151">VarHolderImpl(const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp; val) : void</text><ellipse cx="1964.5" cy="135.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1973.5" y="138.6198">~VarHolderImpl() : void</text><ellipse cx="1964.5" cy="148.2141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1973.5" y="151.4245">type() const : const std::type_info &amp;</text><ellipse cx="1964.5" cy="161.0187" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1973.5" y="164.2292">convert(Int8 &amp; ) const : void</text><ellipse cx="1964.5" cy="173.8234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1973.5" y="177.0339">convert(Int16 &amp; ) const : void</text><ellipse cx="1964.5" cy="186.6281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1973.5" y="189.8386">convert(Int32 &amp; ) const : void</text><ellipse cx="1964.5" cy="199.4328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1973.5" y="202.6433">convert(Int64 &amp; ) const : void</text><ellipse cx="1964.5" cy="212.2375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1973.5" y="215.4479">convert(UInt8 &amp; ) const : void</text><ellipse cx="1964.5" cy="225.0422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1973.5" y="228.2526">convert(UInt16 &amp; ) const : void</text><ellipse cx="1964.5" cy="237.8469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1973.5" y="241.0573">convert(UInt32 &amp; ) const : void</text><ellipse cx="1964.5" cy="250.6516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1973.5" y="253.862">convert(UInt64 &amp; ) const : void</text><ellipse cx="1964.5" cy="263.4562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1973.5" y="266.6667">convert(bool &amp; ) const : void</text><ellipse cx="1964.5" cy="276.2609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1973.5" y="279.4714">convert(float &amp; ) const : void</text><ellipse cx="1964.5" cy="289.0656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1973.5" y="292.2761">convert(double &amp; ) const : void</text><ellipse cx="1964.5" cy="301.8703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1973.5" y="305.0808">convert(char &amp; ) const : void</text><ellipse cx="1964.5" cy="314.675" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1973.5" y="317.8854">convert(std::string &amp; val) const : void</text><ellipse cx="1964.5" cy="327.4797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1973.5" y="330.6901">convert(DateTime &amp; ) const : void</text><ellipse cx="1964.5" cy="340.2844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1973.5" y="343.4948">convert(LocalDateTime &amp; ) const : void</text><ellipse cx="1964.5" cy="353.0891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1973.5" y="356.2995">convert(Timestamp &amp; ) const : void</text><ellipse cx="1964.5" cy="365.8937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="1973.5" y="369.1042">clone(Placeholder&lt;Dynamic::VarHolder&gt; * pVarHolder = 0) const : Dynamic::VarHolder *</text><ellipse cx="1964.5" cy="378.6984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="816" x="1973.5" y="381.9089">value() const : const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::ValueType &amp;</text><ellipse cx="1964.5" cy="391.5031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1973.5" y="394.7136">isArray() const : bool</text><ellipse cx="1964.5" cy="404.3078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1973.5" y="407.5183">isStruct() const : bool</text><ellipse cx="1964.5" cy="417.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1973.5" y="420.3229">isOrdered() const : bool</text><ellipse cx="1964.5" cy="429.9172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1973.5" y="433.1276">isInteger() const : bool</text><ellipse cx="1964.5" cy="442.7219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1973.5" y="445.9323">isSigned() const : bool</text><ellipse cx="1964.5" cy="455.5266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1973.5" y="458.737">isNumeric() const : bool</text><ellipse cx="1964.5" cy="468.3312" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1973.5" y="471.5417">isString() const : bool</text><ellipse cx="1964.5" cy="481.1359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1973.5" y="484.3464">size() const : std::size_t</text><ellipse cx="1964.5" cy="493.9406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="922" x="1973.5" y="497.1511">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) : Dynamic::Var &amp;</text><ellipse cx="1964.5" cy="506.7453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1973.5" y="509.9558">operator[](const Dynamic::VarHolderImpl&lt;Dynamic::Struct&lt;int,tsl::ordered_map&lt;int,Dynamic::Var&gt;,tsl::ordered_set&lt;int&gt;&gt;&gt;::KeyType &amp; name) const : const Dynamic::Var &amp;</text><!--MD5=[1813d3e55208b95598efe5b058f25358]
reverse link C_0000820091630223006238 to C_0001112867090784569162--><path d="M1569.73,6374.16 C1599.48,7693.58 1715.98,12155.26 1935,12361.8 C2020.28,12442.22 2904.39,12441.88 2990,12361.8 C3158.02,12204.63 3050.72,11558.72 3059,11328.8 C3060.42,11289.47 3062.16,5690.58 3089,5661.8 C3351.9,5379.87 3837.82,5425.97 4139.68,5490.56 " fill="none" id="C_0000820091630223006238&lt;-C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1562.73,6374.17,1569.28,6354.02,1576.73,6373.85,1562.73,6374.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[252e553a035e34010d01863d61f6a489]
reverse link C_0000820091630223006238 to C_0002220828280612533118--><path d="M1563.89,6374.12 C1573.05,7583.56 1626.39,11414.63 1935,11867.8 C1996.09,11957.51 2098.72,12015.43 2197.22,12052.45 " fill="none" id="C_0000820091630223006238&lt;-C_0002220828280612533118" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1556.88,6373.93,1563.74,6353.88,1570.88,6373.83,1556.88,6373.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b1676534adbb49052c1fb5187823a2e7]
link C_0002149165824584484566 to C_0001112867090784569162--><path d="M2727.51,11556.28 C2824.75,11518.92 2926.53,11461.6 2990,11374.8 C3128.92,11184.84 3042.95,11084.59 3059,10849.8 C3061.46,10813.86 3064.42,5688.15 3089,5661.8 C3346.31,5385.99 3817.1,5424.19 4120,5486.45 " fill="none" id="C_0002149165824584484566-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.56,5479.63,4139.7,5490.59,4118.69,5493.33,4121.56,5479.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6bdc8c9895b8e16795c15260689a53af]
reverse link C_0000820091630223006238 to C_0002149165824584484566--><path d="M1566.19,6374.35 C1582.2,7514.95 1653.62,10964.2 1935,11374.8 C1996.35,11464.33 2099.02,11522.23 2197.48,11559.27 " fill="none" id="C_0000820091630223006238&lt;-C_0002149165824584484566" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1559.19,6374.1,1565.91,6354.01,1573.19,6373.91,1559.19,6374.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce861a412352c4848640aa13ce250abf]
link C_0000198808093629002393 to C_0001112867090784569162--><path d="M2730.03,11071.78 C2826.4,11035.69 2926.91,10979.96 2990,10894.8 C3128.52,10707.83 3042.89,10607.94 3059,10375.8 C3061.27,10343.14 3066.66,5685.73 3089,5661.8 C3346.39,5386.06 3817.15,5424.24 4120.03,5486.48 " fill="none" id="C_0000198808093629002393-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.59,5479.66,4139.73,5490.61,4118.72,5493.36,4121.59,5479.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[32fffe82ef1ff3e5d4ec3ab4204d9ea8]
reverse link C_0000820091630223006238 to C_0000198808093629002393--><path d="M1568.68,6374.11 C1591.22,7444.32 1677.99,10526.81 1935,10894.8 C1996.19,10982.41 2097.43,11038.65 2194.88,11074.46 " fill="none" id="C_0000820091630223006238&lt;-C_0000198808093629002393" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1561.68,6373.99,1568.26,6353.85,1575.67,6373.69,1561.68,6373.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1c5c7610e8f865c2dc4167ff6cd581c]
link C_0000976768452323437983 to C_0001112867090784569162--><path d="M2730.15,10592.25 C2826.69,10556.2 2927.28,10500.39 2990,10414.8 C3139.27,10211.11 3042.74,10102.81 3059,9850.8 C3062.75,9792.74 3049.28,5704.32 3089,5661.8 C3346.5,5386.17 3817.23,5424.32 4120.07,5486.52 " fill="none" id="C_0000976768452323437983-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.63,5479.7,4139.77,5490.65,4118.76,5493.4,4121.63,5479.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a23ffed8306e2f84c3073ac11c9de323]
reverse link C_0000820091630223006238 to C_0000976768452323437983--><path d="M1571.95,6374.23 C1602.04,7370.58 1704.54,10087.71 1935,10414.8 C1996.47,10502.05 2097.61,10558.22 2194.9,10594.08 " fill="none" id="C_0000820091630223006238&lt;-C_0000976768452323437983" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1564.94,6374.1,1571.34,6353.9,1578.93,6373.68,1564.94,6374.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf09b5ff695bcf5acdf9fe71fab14e0c]
link C_0001804431617899042426 to C_0001112867090784569162--><path d="M2730.18,10083.21 C2826.72,10043.62 2927.3,9984.25 2990,9896.8 C3127.39,9705.18 3042.68,9606.02 3059,9370.8 C3062.57,9319.41 3053.81,5699.43 3089,5661.8 C3346.63,5386.29 3817.32,5424.4 4120.12,5486.57 " fill="none" id="C_0001804431617899042426-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.68,5479.74,4139.82,5490.69,4118.8,5493.44,4121.68,5479.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a049817c63d933cddd056e43c020ea39]
reverse link C_0000820091630223006238 to C_0001804431617899042426--><path d="M1576.87,6374.3 C1616.87,7285.6 1737.29,9610.67 1935,9896.8 C1996.53,9985.85 2097.68,10045.59 2194.96,10085.02 " fill="none" id="C_0000820091630223006238&lt;-C_0001804431617899042426" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1569.87,6374.31,1575.99,6354.03,1583.85,6373.7,1569.87,6374.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ada95bdef8ba6058ff0ffd2c4f1b6e8]
link C_0001832009513687525374 to C_0001112867090784569162--><path d="M2731.13,9593.44 C2827.19,9557.34 2927.2,9501.7 2990,9416.8 C3129.96,9227.6 3042.54,9126.57 3059,8891.8 C3062.14,8847.05 3058.34,5694.55 3089,5661.8 C3346.8,5386.44 3817.44,5424.51 4120.18,5486.63 " fill="none" id="C_0001832009513687525374-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.73,5479.8,4139.87,5490.75,4118.86,5493.5,4121.73,5479.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[484d0d91554dbc242a223067b026dfc6]
reverse link C_0000820091630223006238 to C_0001832009513687525374--><path d="M1581.64,6374.34 C1629.13,7202.71 1759.36,9173.91 1935,9416.8 C1997.1,9502.68 2097.43,9558.54 2193.94,9594.53 " fill="none" id="C_0000820091630223006238&lt;-C_0001832009513687525374" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1574.64,6374.44,1580.48,6354.08,1588.61,6373.65,1574.64,6374.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b5febac11223087f60c8ceb52a26a3b2]
link C_0000572186414558919480 to C_0001112867090784569162--><path d="M2738.26,9110.65 C2832.09,9074.49 2928.7,9019.54 2990,8936.8 C3128.52,8749.83 3042.37,8649.9 3059,8417.8 C3061.74,8379.62 3062.82,5689.72 3089,5661.8 C3347.02,5386.65 3817.6,5424.66 4120.26,5486.7 " fill="none" id="C_0000572186414558919480-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.81,5479.88,4139.95,5490.82,4118.94,5493.58,4121.81,5479.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[691a55eeeadeb89a9d3fc7ffb09e60fc]
reverse link C_0000820091630223006238 to C_0000572186414558919480--><path d="M1565.23,6374.35 C1578.22,7066.44 1640.71,8537.33 1935,8936.8 C1996.15,9019.8 2092.88,9074.83 2186.84,9110.96 " fill="none" id="C_0000820091630223006238&lt;-C_0000572186414558919480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1558.23,6374.22,1564.86,6354.1,1572.23,6373.97,1558.23,6374.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4cf50edd11d32dea601aa62a24b3e4ec]
link C_0000166253842255815357 to C_0001112867090784569162--><path d="M2738.04,8631.26 C2832.14,8595.14 2928.99,8540.06 2990,8456.8 C3139.27,8253.11 3041.94,8144.76 3059,7892.8 C3063.19,7830.96 3046.55,5706.96 3089,5661.8 C3347.27,5387.08 3817.5,5424.86 4120.06,5486.76 " fill="none" id="C_0000166253842255815357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.6,5479.93,4139.74,5490.87,4118.74,5493.64,4121.6,5479.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[519713684ef996f3f0258fe781b367b9]
reverse link C_0000820091630223006238 to C_0000166253842255815357--><path d="M1575.73,6374.13 C1605.06,6974.1 1692.3,8135.67 1935,8456.8 C1996.93,8538.75 2093.38,8593.52 2186.9,8629.75 " fill="none" id="C_0000820091630223006238&lt;-C_0000166253842255815357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1568.72,6374.22,1574.75,6353.91,1582.71,6373.55,1568.72,6374.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[572ed8953022a63b1c36627852249f51]
link C_0001459401574844645109 to C_0001112867090784569162--><path d="M2738.07,8121.93 C2832.16,8082.37 2929.01,8023.87 2990,7938.8 C3127.39,7747.18 3041.62,7647.94 3059,7412.8 C3062.59,7364.29 3055.61,5697.18 3089,5661.8 C3347.78,5387.56 3817.86,5425.2 4120.25,5486.94 " fill="none" id="C_0001459401574844645109-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.77,5480.11,4139.93,5491.04,4118.92,5493.82,4121.77,5480.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[919765d0794332eb101e551e54b6c414]
reverse link C_0000820091630223006238 to C_0001459401574844645109--><path d="M1593.79,6374.01 C1642.86,6862.96 1751.13,7698.1 1935,7938.8 C1997.92,8021.17 2094,8078.98 2186.93,8118.74 " fill="none" id="C_0000820091630223006238&lt;-C_0001459401574844645109" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1586.8,6374.48,1591.78,6353.88,1600.73,6373.09,1586.8,6374.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd6471d66cc3b88dfb3ca1f72cf6db91]
link C_0000599279109574326060 to C_0001112867090784569162--><path d="M2727.71,7636.73 C2824.82,7600.67 2926.46,7544.72 2990,7458.8 C3130.19,7269.23 3040.86,7167.88 3059,6932.8 C3061.72,6897.59 3064.68,5687.41 3089,5661.8 C3348.57,5388.5 3818.14,5425.77 4120.26,5487.2 " fill="none" id="C_0000599279109574326060-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.75,5480.36,4139.91,5491.27,4118.9,5494.06,4121.75,5480.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8bf8b0ca9d39d118bab5baddd92056a5]
reverse link C_0000820091630223006238 to C_0000599279109574326060--><path d="M1618.95,6373.86 C1683.66,6747.18 1798.23,7295.6 1935,7458.8 C2002.43,7539.26 2102.54,7594.02 2197.41,7630.66 " fill="none" id="C_0000820091630223006238&lt;-C_0000599279109574326060" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1612.03,6374.89,1615.53,6353.99,1625.82,6372.51,1612.03,6374.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a03be0583b80b52ec3c7cfbb1381204c]
link C_0000384619052225252533 to C_0001112867090784569162--><path d="M2727.71,7156.73 C2824.82,7120.67 2926.46,7064.72 2990,6978.8 C3130.19,6789.23 3039.18,6687.75 3059,6452.8 C3062.7,6408.98 3058.49,5693.47 3089,5661.8 C3350.32,5390.56 3818.84,5427.05 4120.33,5487.77 " fill="none" id="C_0000384619052225252533-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.76,5480.92,4139.94,5491.8,4118.94,5494.63,4121.76,5480.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[73026f33281fe8ca4ab78e818466913d]
reverse link C_0000820091630223006238 to C_0000384619052225252533--><path d="M1631.26,6373.46 C1685.19,6572.7 1778.19,6812.25 1935,6978.8 C2005.75,7053.95 2104.53,7107.44 2197.43,7144.55 " fill="none" id="C_0000820091630223006238&lt;-C_0000384619052225252533" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1624.47,6375.13,1626.09,6354.01,1637.99,6371.53,1624.47,6375.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ff447ae9b44164ab1163a8d58a067dd]
link C_0002242257052791493112 to C_0001112867090784569162--><path d="M2740.04,6672.03 C2833.33,6635.87 2929.13,6581.07 2990,6498.8 C3129.72,6309.97 3032.46,6208.2 3059,5974.8 C3062.95,5940.09 3064.04,5686.25 3089,5661.8 C3357,5399.22 3820.76,5432.25 4119.83,5490.03 " fill="none" id="C_0002242257052791493112-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.46,5483.22,4139.73,5493.96,4118.75,5496.95,4121.46,5483.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3f595935a0f15239c0a18509c92a77a4]
reverse link C_0000820091630223006238 to C_0002242257052791493112--><path d="M1802.58,6369.29 C1843.32,6416.33 1887.84,6461.17 1935,6498.8 C2008.91,6557.77 2099.65,6605.82 2184.84,6643.01 " fill="none" id="C_0000820091630223006238&lt;-C_0002242257052791493112" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1797.14,6373.7,1789.48,6353.94,1807.79,6364.61,1797.14,6373.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[34ccf54faad2732560850bd8665d0a82]
link C_0001942181379759217898 to C_0001112867090784569162--><path d="M2727.83,6189.6 C2822.3,6152.88 2922.07,6098.34 2990,6018.8 C3096.93,5893.59 2961.77,5766.32 3089,5661.8 C3376.18,5425.89 3827.91,5449.36 4120.03,5498.11 " fill="none" id="C_0001942181379759217898-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.37,5491.24,4139.91,5501.51,4119.01,5505.04,4121.37,5491.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a510e46abb3e3fb8d1e108ee127ac321]
reverse link C_0000820091630223006238 to C_0001942181379759217898--><path d="M1893.65,6101.61 C1993.78,6129.33 2102.31,6159.37 2197.41,6185.7 " fill="none" id="C_0000820091630223006238&lt;-C_0001942181379759217898" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1891.48,6108.27,1874.08,6096.19,1895.22,6094.78,1891.48,6108.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6340afec94b7710ba348d42f46eb27c]
link C_0002291903337356664508 to C_0001112867090784569162--><path d="M2761.12,5708.18 C2864.66,5691.55 2981.72,5674.22 3089,5661.8 C3443.13,5620.8 3852.96,5593.05 4119.72,5577.6 " fill="none" id="C_0002291903337356664508-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4119.51,5570.6,4139.88,5576.44,4120.31,5584.58,4119.51,5570.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[107b7a7327243dacf301851c70d6fb71]
reverse link C_0000820091630223006238 to C_0002291903337356664508--><path d="M1893.47,5917.67 C1982.1,5893.04 2077.31,5866.58 2163.98,5842.49 " fill="none" id="C_0000820091630223006238&lt;-C_0002291903337356664508" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1895.22,5924.45,1874.08,5923.07,1891.47,5910.96,1895.22,5924.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[09328317908e988c3e2ab8c947bc90e6]
link C_0001280441251658550342 to C_0001112867090784569162--><path d="M2771.25,5292.71 C3142.04,5354.05 3759.92,5456.26 4119.84,5515.8 " fill="none" id="C_0001280441251658550342-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4121.12,5508.91,4139.71,5519.08,4118.84,5522.72,4121.12,5508.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fda0a7e4c72c2762c389565da7fda8e3]
reverse link C_0000820091630223006238 to C_0001280441251658550342--><path d="M1791.21,5649.96 C1834.92,5596.07 1883.31,5544.14 1935,5500.8 C1999.79,5446.48 2077.91,5400.15 2153.91,5362.35 " fill="none" id="C_0000820091630223006238&lt;-C_0001280441251658550342" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1796.67,5654.34,1778.71,5665.58,1785.74,5645.59,1796.67,5654.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64e7a6eb91daa34b4f5dcbf61cbc2691]
link C_0001646173285346905617 to C_0001112867090784569162--><path d="M2754.01,4865.56 C3148.36,5032.21 3843.78,5326.07 4192.35,5473.36 " fill="none" id="C_0001646173285346905617-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4195.28,5467,4210.98,5481.24,4189.83,5479.9,4195.28,5467" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c873d28af5cee0be36435c20505a3add]
reverse link C_0000820091630223006238 to C_0001646173285346905617--><path d="M1621.09,5646.01 C1672.35,5430.89 1766.1,5165.65 1935,4982.8 C1998.56,4913.99 2085.67,4863.46 2170.75,4827.03 " fill="none" id="C_0000820091630223006238&lt;-C_0001646173285346905617" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1627.86,5647.79,1616.48,5665.67,1614.22,5644.6,1627.86,5647.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[337e370d25248223a42f6486bf3bc227]
link C_0001583654034047392858 to C_0001112867090784569162--><path d="M2810.23,4407.93 C2871.31,4437.12 2933.41,4469.23 2990,4502.8 C3508.77,4810.59 4064.72,5270.83 4294.76,5467.81 " fill="none" id="C_0001583654034047392858-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4299.47,5462.63,4310.09,5480.97,4290.36,5473.26,4299.47,5462.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[987121a660fa81e318dcd4dcec5949cd]
reverse link C_0000820091630223006238 to C_0001583654034047392858--><path d="M1614.94,5645.59 C1677.74,5257.26 1792.14,4674.89 1935,4502.8 C1982.8,4445.22 2047.37,4400.83 2114.9,4366.82 " fill="none" id="C_0000820091630223006238&lt;-C_0001583654034047392858" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1621.85,5646.74,1611.76,5665.38,1608.02,5644.52,1621.85,5646.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bcf1ddd8aadb83c5e617c20b17438243]
link C_0002133497947762084276 to C_0001112867090784569162--><path d="M2958.56,4005.41 C2969.28,4010.94 2979.78,4016.73 2990,4022.8 C3641.14,4409.54 4170.18,5188.87 4343.6,5463.93 " fill="none" id="C_0002133497947762084276-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4349.56,5460.26,4354.27,5480.92,4337.71,5467.7,4349.56,5460.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ad627db98f49ac60302c84a08616813]
reverse link C_0000820091630223006238 to C_0002133497947762084276--><path d="M1584.06,5645.52 C1622.35,5137.33 1718.75,4252.04 1935,4022.8 C1940.74,4016.72 1946.71,4010.9 1952.89,4005.34 " fill="none" id="C_0000820091630223006238&lt;-C_0002133497947762084276" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1591.03,5646.26,1582.56,5665.68,1577.07,5645.22,1591.03,5646.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0357894772686b47a6378d63c35d4f9b]
link C_0000249766987467623805 to C_0001112867090784569162--><path d="M2961.09,3743.4 C2970.96,3748.92 2980.61,3754.72 2990,3760.8 C3698.6,4219.66 4204.33,5156.66 4356.38,5463.26 " fill="none" id="C_0000249766987467623805-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4362.68,5460.22,4365.25,5481.26,4350.13,5466.42,4362.68,5460.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[00bd6c50e576448bc1d2a17334e3595e]
reverse link C_0000820091630223006238 to C_0000249766987467623805--><path d="M1575.02,5645.26 C1602.79,5080.03 1687.15,4029.19 1935,3760.8 C1940.75,3754.57 1946.75,3748.62 1952.97,3742.93 " fill="none" id="C_0000820091630223006238&lt;-C_0000249766987467623805" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1581.99,5645.93,1574.03,5665.57,1568.01,5645.26,1581.99,5645.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[903cc68fcab4b2ad680960490a636eeb]
link C_0000781520838380739124 to C_0001112867090784569162--><path d="M2962.87,3481.31 C2972.14,3486.86 2981.2,3492.69 2990,3498.8 C3757.53,4031.83 4233.64,5126.63 4366.09,5462.56 " fill="none" id="C_0000781520838380739124-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4372.63,5460.08,4373.41,5481.26,4359.6,5465.19,4372.63,5460.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f770af1606e7265378545619811d229b]
reverse link C_0000820091630223006238 to C_0000781520838380739124--><path d="M1567.8,5645.33 C1585.29,5026.37 1655.32,3806.83 1935,3498.8 C1940.46,3492.79 1946.15,3487.03 1952.05,3481.52 " fill="none" id="C_0000820091630223006238&lt;-C_0000781520838380739124" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1574.78,5645.93,1567.23,5665.73,1560.79,5645.54,1574.78,5645.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44340e84b40a20fdf98816525a96d67d]
link C_0000699000175415913074 to C_0001112867090784569162--><path d="M2756.28,3093.4 C2837.96,3129.68 2922.68,3177.02 2990,3236.8 C3755.13,3916.23 4237.51,5110.3 4368.08,5462.4 " fill="none" id="C_0000699000175415913074-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4374.67,5460.03,4375.02,5481.21,4361.53,5464.87,4374.67,5460.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[357ee025e25188b7db79cb0c516fe097]
reverse link C_0000820091630223006238 to C_0000699000175415913074--><path d="M1568.22,5645.24 C1586.35,4981.8 1657.32,3611.01 1935,3236.8 C1992.47,3159.36 2080.87,3106.25 2168.93,3070.11 " fill="none" id="C_0000820091630223006238&lt;-C_0000699000175415913074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1575.2,5645.83,1567.67,5665.63,1561.21,5645.45,1575.2,5645.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e457dc81a3cb2d1b80d6d916d7238368]
link C_0001850771625416044357 to C_0001112867090784569162--><path d="M2785.32,2628.68 C2858.62,2660.7 2931.92,2702.62 2990,2756.8 C3868.19,3576.1 4281.7,5061.58 4380.26,5461.41 " fill="none" id="C_0001850771625416044357-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4387.1,5459.91,4385.05,5481,4373.5,5463.23,4387.1,5459.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[346f4031a9ef3d19012d66959f7223cc]
reverse link C_0000820091630223006238 to C_0001850771625416044357--><path d="M1583.14,5645.28 C1632.51,4844.4 1764.28,2984.3 1935,2756.8 C1985.95,2688.91 2061.71,2641.71 2140,2608.96 " fill="none" id="C_0000820091630223006238&lt;-C_0001850771625416044357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1590.11,5645.93,1581.9,5665.46,1576.14,5645.07,1590.11,5645.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0ed859701260fc0467c79ba328d333e0]
link C_0001458511670125196521 to C_0001112867090784569162--><path d="M2766.25,2175.38 C2846.52,2208.39 2928,2253.61 2990,2314.8 C3964.9,3276.93 4313.72,5023.29 4387.95,5461.15 " fill="none" id="C_0001458511670125196521-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4394.87,5460.12,4391.28,5481,4381.06,5462.44,4394.87,5460.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7d4a4b49b4ab143b71158128b6404bf]
reverse link C_0000820091630223006238 to C_0001458511670125196521--><path d="M1577.79,5645.25 C1618.86,4765.49 1739.56,2578.95 1935,2314.8 C1989.69,2240.89 2073.86,2191.52 2158.97,2158.62 " fill="none" id="C_0000820091630223006238&lt;-C_0001458511670125196521" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1584.78,5645.81,1576.85,5665.47,1570.79,5645.16,1584.78,5645.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d6e6f5aa7b358770fcfcca193064bc8e]
link C_0001286239480653274581 to C_0001112867090784569162--><path d="M2729.11,1737.53 C2821.23,1763.16 2919.08,1804.89 2990,1872.8 C4105.31,2940.8 4352.48,4983.35 4395.91,5461.09 " fill="none" id="C_0001286239480653274581-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4402.89,5460.48,4397.69,5481.02,4388.94,5461.72,4402.89,5460.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[773c2b4e76d7127123f7363ca3d37bd1]
reverse link C_0000820091630223006238 to C_0001286239480653274581--><path d="M1572.33,5645.2 C1602.52,4689.56 1703.54,2165.53 1935,1872.8 C1998.29,1792.76 2099.28,1748.82 2195.97,1724.81 " fill="none" id="C_0000820091630223006238&lt;-C_0001286239480653274581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1579.32,5645.63,1571.69,5665.4,1565.32,5645.19,1579.32,5645.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f3a746549c88b4848ab56ea8219bc3da]
link C_0002237184725500898553 to C_0001827593751126946500--><path d="M473.11,6039.51 C483.2,6040.39 493.2,6041.17 503,6041.8 C532.25,6043.69 562.88,6043.68 593.28,6042.42 " fill="none" id="C_0002237184725500898553-&gt;C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="598.55,6042.19,589.3865,6038.5802,593.5546,6042.4047,589.7301,6046.5728,598.55,6042.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="513.5" y="6030.8664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="523.5" y="6037.8669">_pVar</text><!--MD5=[cde88d746544cdc3d561e033289d5a39]
reverse link C_0002237184725500898553 to C_0001827593751126946500--><path d="M478.41,6009.8 C517.71,6009.8 558.84,6009.8 598.77,6009.8 " fill="none" id="C_0002237184725500898553&lt;-C_0001827593751126946500" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="473.13,6009.8,482.13,6013.8,478.13,6009.8,482.13,6005.8,473.13,6009.8" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="509" cy="6001.8664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="516" y="6005.8669">«friend»</text><!--MD5=[ef2198e91bebda66d46e12ab6957cbf1]
reverse link C_0001827593751126946500 to C_0000820091630223006238--><path d="M1106.58,6009.8 C1152.49,6009.8 1200.72,6009.8 1247.9,6009.8 " fill="none" id="C_0001827593751126946500&lt;-C_0000820091630223006238" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1093.37,6009.8,1099.37,6013.8,1105.37,6009.8,1099.37,6005.8,1093.37,6009.8" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1126" y="5998.8664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1136" y="6005.8669">_placeholder</text><!--MD5=[af1b854f0fce94204789169f4190aec0]
link C_0000527346272489458655 to C_0000876644825045799418--><path d="M4671.16,1173.06 C4973.53,1145.99 5464.31,1102.06 5761.51,1075.45 " fill="none" id="C_0000527346272489458655-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5761.14,1068.46,5781.69,1073.64,5762.39,1082.4,5761.14,1068.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[328624817cff1bac4ed3e3de36e437b0]
reverse link C_0001079370368307575613 to C_0000527346272489458655--><path d="M2837.44,1258.96 C3219.26,1243.81 3802.33,1220.68 4139,1207.32 " fill="none" id="C_0001079370368307575613&lt;-C_0000527346272489458655" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2824.23,1259.49,2830.3836,1263.2494,2836.2206,1259.0151,2830.067,1255.2557,2824.23,1259.49" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3023" y="1240.8664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3033" y="1247.8669">_val</text><!--MD5=[4b8597690a8e5d4babb50488f33fd31a]
link C_0001079370368307575613 to C_0001112867090784569162--><path d="M2824.2,1395.51 C2885.5,1428.68 2944.08,1469.93 2990,1520.8 C4116.16,2768.28 4356.01,4964.43 4396.71,5461.06 " fill="none" id="C_0001079370368307575613-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4403.7,5460.57,4398.32,5481.06,4389.74,5461.69,4403.7,5460.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5823e55ef52830fef1fc6cf62393d317]
reverse link C_0000820091630223006238 to C_0001079370368307575613--><path d="M1571.52,5645.27 C1600.75,4635.83 1701.76,1856.29 1935,1520.8 C1976.5,1461.11 2036.3,1415.46 2100.83,1380.67 " fill="none" id="C_0000820091630223006238&lt;-C_0001079370368307575613" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1578.51,5645.7,1570.93,5665.49,1564.51,5645.3,1578.51,5645.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0d70e6edca4c1a3cda9b972f00878c51]
link C_0001212087958231445051 to C_0000876644825045799418--><path d="M4674.32,932.82 C4976.97,959.92 5465.44,1003.65 5761.6,1030.16 " fill="none" id="C_0001212087958231445051-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5762.41,1023.2,5781.7,1031.96,5761.16,1037.15,5762.41,1023.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[242a819c3a0f4fa63aba588b96ae2bea]
reverse link C_0002033788483863182904 to C_0001212087958231445051--><path d="M2814.53,803.96 C3161.1,826.82 3688.73,861.62 4039.8,884.78 " fill="none" id="C_0002033788483863182904&lt;-C_0001212087958231445051" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2801.51,803.1,2807.2332,807.4869,2813.4839,803.8912,2807.7607,799.5043,2801.51,803.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3023" y="807.8664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3033" y="814.8669">_val</text><!--MD5=[6f744eb985ef8ee659f2408032a47be8]
link C_0002033788483863182904 to C_0001112867090784569162--><path d="M2801.74,878 C2873.99,913.77 2942.69,962.03 2990,1026.8 C3020.79,1068.96 3008.63,1208.85 3020,1259.8 C3404.05,2980.31 4179.8,4994.7 4364.08,5462.37 " fill="none" id="C_0002033788483863182904-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4370.69,5460.07,4371.52,5481.25,4357.67,5465.21,4370.69,5460.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[680c02ba0bdea153ae48b5740a1b4e37]
reverse link C_0000820091630223006238 to C_0002033788483863182904--><path d="M1568.26,5645.43 C1589.77,4560.72 1674.34,1404.38 1935,1026.8 C1981.14,959.96 2050.32,910.84 2123.5,874.89 " fill="none" id="C_0000820091630223006238&lt;-C_0002033788483863182904" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1575.25,5645.71,1567.86,5665.57,1561.25,5645.44,1575.25,5645.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7951f37496beee7369c4bb5a4a60257b]
link C_0000922731127244749220 to C_0000876644825045799418--><path d="M4471.1,5727.86 C4684.5,5802.05 5369.32,6002.52 5721,5661.8 C5880.22,5507.55 5983.41,2179.12 6008.53,1276.75 " fill="none" id="C_0000922731127244749220-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="6001.54,1276.33,6009.09,1256.53,6015.53,1276.72,6001.54,1276.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ddec3b5436ba1989f0a7c21a3d5f90e2]
link C_0001894636435809858910 to C_0000876644825045799418--><path d="M4554.89,542.84 C4803.93,586.39 5317.38,690.52 5721,866.8 C5735.19,873 5749.48,879.82 5763.71,887.08 " fill="none" id="C_0001894636435809858910-&gt;C_0000876644825045799418" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5767.23,881.02,5781.7,896.5,5760.74,893.43,5767.23,881.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cda81f951e2e67f32e39af73003c6835]
reverse link C_0002153171854526901050 to C_0001894636435809858910--><path d="M2984.76,349.85 C3385.35,397.54 3916.93,460.82 4202.33,494.79 " fill="none" id="C_0002153171854526901050&lt;-C_0001894636435809858910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2971.76,348.31,2977.2431,352.9935,2983.6753,349.7335,2978.1921,345.05,2971.76,348.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3023" y="345.8664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="3033" y="352.8669">_val</text><!--MD5=[0db60458f039b5c71cadbb8ed2a329e9]
link C_0002153171854526901050 to C_0001112867090784569162--><path d="M2971.56,513.18 C2977.94,519.87 2984.09,526.74 2990,533.8 C3066.7,625.51 3039.55,675.84 3059,793.8 C3091.18,988.95 3053.34,1043.26 3089,1237.8 C3406.91,2971.91 4179.46,4992.97 4363.95,5462.08 " fill="none" id="C_0002153171854526901050-&gt;C_0001112867090784569162" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4370.59,5459.83,4371.41,5481.01,4357.57,5464.96,4370.59,5459.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fd7ae46a78d05cff731d28fa2173826f]
reverse link C_0000820091630223006238 to C_0002153171854526901050--><path d="M1565.61,5645.23 C1579.96,4488.74 1647.18,953.74 1935,533.8 C1940.78,525.38 1946.92,517.23 1953.39,509.36 " fill="none" id="C_0000820091630223006238&lt;-C_0002153171854526901050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1572.61,5645.52,1565.36,5665.43,1558.61,5645.34,1572.61,5645.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80a4d866bc91529fbdbb08e2ed0bd035]
@startuml
left to right direction
package [Dynamic] as C_0002281307121949168090 {
abstract "VarHolder" as C_0000820091630223006238
abstract C_0000820091630223006238 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L104{VarHolder}]] {
+~VarHolder() : void
{abstract} +clone(Placeholder<Dynamic::VarHolder> * pHolder = 0) const = 0 : Dynamic::VarHolder *
{abstract} +type() const = 0 : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & val) const : void
+convert(Timestamp & val) const : void
+convert(UUID & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
#VarHolder() : void
#cloneHolder(Placeholder<Dynamic::VarHolder> * pVarHolder, const T & val) : class Dynamic::VarHolder *
#convertToSmaller(const F & from, T & to) : void
#convertToSmallerUnsigned(const F & from, T & to) : void
#convertSignedToUnsigned(const F & from, T & to) : void
#convertSignedFloatToUnsigned(const F & from, T & to) : void
#convertUnsignedToSigned(const F & from, T & to) : void
-checkUpperLimit(const F & from) : void
-checkLowerLimit(const F & from) : void
-checkUpperLimitFloat(const F & from) : void
-checkLowerLimitFloat(const F & from) : void
}
class "VarHolderImpl<T>" as C_0001112867090784569162
class C_0001112867090784569162 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L705{VarHolderImpl}]] {
+VarHolderImpl<T>(const T & val) : void
+~VarHolderImpl<T>() : void
+type() const : const std::type_info &
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const T &
-VarHolderImpl<T>() : void
-VarHolderImpl<T>(const VarHolderImpl<T> & ) : void
-operator=(const VarHolderImpl<T> & ) : VarHolderImpl<T> &
-_val : T [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L754{_val}]]]
}
class "VarHolderImpl" as C_0002220828280612533118
class C_0002220828280612533118 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
+VarHolderImpl(Int8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int8> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int8> & ) : Dynamic::VarHolderImpl<Int8> &
-_val : Int8 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910{_val}]]]
}
class "VarHolderImpl<signed char>" as C_0002149165824584484566
class C_0002149165824584484566 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
+VarHolderImpl(Int8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int8> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int8> & ) : Dynamic::VarHolderImpl<Int8> &
-_val : Int8 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L910{_val}]]]
}
class "VarHolderImpl<short>" as C_0000198808093629002393
class C_0000198808093629002393 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L915{VarHolderImpl}]] {
+VarHolderImpl(Int16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int16> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int16> & ) : Dynamic::VarHolderImpl<Int16> &
-_val : Int16 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1063{_val}]]]
}
class "VarHolderImpl<int>" as C_0000976768452323437983
class C_0000976768452323437983 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1068{VarHolderImpl}]] {
+VarHolderImpl(Int32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int32> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int32> & ) : Dynamic::VarHolderImpl<Int32> &
-_val : Int32 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1215{_val}]]]
}
class "VarHolderImpl<long>" as C_0001804431617899042426
class C_0001804431617899042426 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1220{VarHolderImpl}]] {
+VarHolderImpl(Int64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int64> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int64> & ) : Dynamic::VarHolderImpl<Int64> &
-_val : Int64 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1382{_val}]]]
}
class "VarHolderImpl<unsigned char>" as C_0001832009513687525374
class C_0001832009513687525374 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1387{VarHolderImpl}]] {
+VarHolderImpl(UInt8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt8> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt8> & ) : Dynamic::VarHolderImpl<UInt8> &
-_val : UInt8 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1534{_val}]]]
}
class "VarHolderImpl<unsigned short>" as C_0000572186414558919480
class C_0000572186414558919480 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1539{VarHolderImpl}]] {
+VarHolderImpl(UInt16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt16> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt16> & ) : Dynamic::VarHolderImpl<UInt16> &
-_val : UInt16 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1686{_val}]]]
}
class "VarHolderImpl<unsigned int>" as C_0000166253842255815357
class C_0000166253842255815357 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1691{VarHolderImpl}]] {
+VarHolderImpl(UInt32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt32> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt32> & ) : Dynamic::VarHolderImpl<UInt32> &
-_val : UInt32 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1838{_val}]]]
}
class "VarHolderImpl<unsigned long>" as C_0001459401574844645109
class C_0001459401574844645109 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L1843{VarHolderImpl}]] {
+VarHolderImpl(UInt64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt64> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt64> & ) : Dynamic::VarHolderImpl<UInt64> &
-_val : UInt64 [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2011{_val}]]]
}
class "VarHolderImpl<bool>" as C_0000599279109574326060
class C_0000599279109574326060 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2016{VarHolderImpl}]] {
+VarHolderImpl(bool val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const bool &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<bool> & ) : void
-operator=(const Dynamic::VarHolderImpl<bool> & ) : Dynamic::VarHolderImpl<bool> &
-_val : bool [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2161{_val}]]]
}
class "VarHolderImpl<float>" as C_0000384619052225252533
class C_0000384619052225252533 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2166{VarHolderImpl}]] {
+VarHolderImpl(float val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const float &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<float> & ) : void
-operator=(const Dynamic::VarHolderImpl<float> & ) : Dynamic::VarHolderImpl<float> &
-_val : float [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2314{_val}]]]
}
class "VarHolderImpl<double>" as C_0002242257052791493112
class C_0002242257052791493112 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2319{VarHolderImpl}]] {
+VarHolderImpl(double val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const double &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<double> & ) : void
-operator=(const Dynamic::VarHolderImpl<double> & ) : Dynamic::VarHolderImpl<double> &
-_val : double [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2473{_val}]]]
}
class "VarHolderImpl<char>" as C_0001942181379759217898
class C_0001942181379759217898 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2478{VarHolderImpl}]] {
+VarHolderImpl(char val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const char &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<char> & ) : void
-operator=(const Dynamic::VarHolderImpl<char> & ) : Dynamic::VarHolderImpl<char> &
-_val : char [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2623{_val}]]]
}
class "VarHolderImpl<std::string>" as C_0002291903337356664508
class C_0002291903337356664508 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2628{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const std::string & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+convert(UUID & uuid) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::string &
+isString() const : bool
+size() const : std::size_t
+operator[](std::string::size_type n) : char &
+operator[](std::string::size_type n) const : const char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<std::string> & ) : void
-operator=(const Dynamic::VarHolderImpl<std::string> & ) : Dynamic::VarHolderImpl<std::string> &
-_val : std::string [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2820{_val}]]]
}
class "VarHolderImpl<std::basic_string<unsigned short,Poco::UTF16CharTraits>>" as C_0001280441251658550342
class C_0001280441251658550342 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L2825{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const UTF16String & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UTF16String &
+isString() const : bool
+size() const : std::size_t
+operator[](UTF16String::size_type n) : UTF16Char &
+operator[](UTF16String::size_type n) const : const UTF16Char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UTF16String> & ) : void
-operator=(const Dynamic::VarHolderImpl<UTF16String> & ) : Dynamic::VarHolderImpl<UTF16String> &
-toStdString() const : std::string
-_val : UTF16String [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3022{_val}]]]
}
class "VarHolderImpl<long long>" as C_0001646173285346905617
class C_0001646173285346905617 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3309{VarHolderImpl}]] {
+VarHolderImpl(long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<long long> & ) : Dynamic::VarHolderImpl<long long> &
-_val : long long [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3452{_val}]]]
}
class "VarHolderImpl<unsigned long long>" as C_0001583654034047392858
class C_0001583654034047392858 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3457{VarHolderImpl}]] {
+VarHolderImpl(unsigned long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const unsigned long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<unsigned long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<unsigned long long> & ) : Dynamic::VarHolderImpl<unsigned long long> &
-_val : unsigned long long [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3600{_val}]]]
}
class "VarHolderImpl<std::vector<type-parameter-0-0,std::allocator<type-parameter-0-0>>>" as C_0002133497947762084276
class C_0002133497947762084276 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3608{VarHolderImpl}]] {
+VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::vector<T> & val) : void
+~VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::vector<T> &
+isVector() const : bool
+size() const : std::size_t
+operator[](typename std::vector<T>::size_type n) : T &
+operator[](typename std::vector<T>::size_type n) const : const T &
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::vector<T> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3668{_val}]]]
}
class "VarHolderImpl<std::list<type-parameter-0-0,std::allocator<type-parameter-0-0>>>" as C_0000249766987467623805
class C_0000249766987467623805 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3673{VarHolderImpl}]] {
+VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::list<T> & val) : void
+~VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::list<T> &
+isList() const : bool
+size() const : std::size_t
+operator[](typename std::list<T>::size_type n) : T &
+operator[](typename std::list<T>::size_type n) const : const T &
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::list<T> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3743{_val}]]]
}
class "VarHolderImpl<std::deque<type-parameter-0-0,std::allocator<type-parameter-0-0>>>" as C_0000781520838380739124
class C_0000781520838380739124 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3748{VarHolderImpl}]] {
+VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::deque<T> & val) : void
+~VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::deque<T> &
+isDeque() const : bool
+size() const : std::size_t
+operator[](typename std::deque<T>::size_type n) : T &
+operator[](typename std::deque<T>::size_type n) const : const T &
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::deque<T> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3808{_val}]]]
}
class "VarHolderImpl<Poco::DateTime>" as C_0000699000175415913074
class C_0000699000175415913074 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3813{VarHolderImpl}]] {
+VarHolderImpl(const DateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const DateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<DateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<DateTime> & ) : Dynamic::VarHolderImpl<DateTime> &
-_val : DateTime [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3958{_val}]]]
}
class "VarHolderImpl<Poco::LocalDateTime>" as C_0001850771625416044357
class C_0001850771625416044357 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L3963{VarHolderImpl}]] {
+VarHolderImpl(const LocalDateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const LocalDateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<LocalDateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<LocalDateTime> & ) : Dynamic::VarHolderImpl<LocalDateTime> &
-_val : LocalDateTime [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4093{_val}]]]
}
class "VarHolderImpl<Poco::Timestamp>" as C_0001458511670125196521
class C_0001458511670125196521 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4098{VarHolderImpl}]] {
+VarHolderImpl(const Timestamp & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Timestamp &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Timestamp> & ) : void
-operator=(const Dynamic::VarHolderImpl<Timestamp> & ) : Dynamic::VarHolderImpl<Timestamp> &
-_val : Timestamp [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4228{_val}]]]
}
class "VarHolderImpl<Poco::UUID>" as C_0001286239480653274581
class C_0001286239480653274581 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4233{VarHolderImpl}]] {
+VarHolderImpl(const UUID & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UUID &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UUID> & ) : void
-operator=(const Dynamic::VarHolderImpl<UUID> & ) : Dynamic::VarHolderImpl<UUID> &
-_val : UUID [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarHolder.h#L4324{_val}]]]
}
class "VarIterator" as C_0002237184725500898553
class C_0002237184725500898553 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L33{VarIterator}]] {
+VarIterator(Dynamic::Var * pVar, bool positionEnd) : void
+VarIterator(const Dynamic::VarIterator & other) : void
+VarIterator(Dynamic::VarIterator && other) : void
+~VarIterator() : void
+operator=(const Dynamic::VarIterator & other) : Dynamic::VarIterator &
+operator=(Dynamic::VarIterator && other) : Dynamic::VarIterator &
+operator==(const Dynamic::VarIterator & other) const : bool
+operator!=(const Dynamic::VarIterator & other) const : bool
+operator*() const : Dynamic::Var &
+operator->() const : Dynamic::Var *
+operator++() const : const Dynamic::VarIterator &
+operator++(int ) const : Dynamic::VarIterator
+operator- -() const : const Dynamic::VarIterator &
+operator- -(int ) const : Dynamic::VarIterator
+operator+(std::size_t diff) const : Dynamic::VarIterator
+operator-(std::size_t diff) const : Dynamic::VarIterator
+swap(Dynamic::VarIterator & other) : void
-VarIterator() : void
-increment() const : void
-decrement() const : void
-setPosition(std::size_t pos) const : void
-_pVar : Dynamic::Var * [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L117{Sets the iterator position. Throws RangeException if position is out of range.}]]]
-_position : std::size_t [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L118{_position}]]]
{static} +POSITION_END : const std::size_t [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/VarIterator.h#L43{POSITION_END}]]]
}
class "Var" as C_0001827593751126946500
class C_0001827593751126946500 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L41{Var}]] {
+Var() : void
+Var(const char * pVal) : void
+Var(const Dynamic::Var & other) : void
+~Var() : void
+swap(Dynamic::Var & other) : void
+begin() const : Dynamic::Var::ConstIterator
+end() const : Dynamic::Var::ConstIterator
+begin() : Dynamic::Var::Iterator
+end() : Dynamic::Var::Iterator
+operator!() const : bool
+operator=(const Dynamic::Var & other) : Dynamic::Var &
+operator+(const Dynamic::Var & other) const : const Dynamic::Var
+operator+(const char * other) const : const Dynamic::Var
+operator++() : Dynamic::Var &
+operator++(int ) : const Dynamic::Var
+operator- -() : Dynamic::Var &
+operator- -(int ) : const Dynamic::Var
+operator+=(const Dynamic::Var & other) : Dynamic::Var &
+operator+=(const char * other) : Dynamic::Var &
+operator-(const Dynamic::Var & other) const : const Dynamic::Var
+operator-=(const Dynamic::Var & other) : Dynamic::Var &
+operator*(const Dynamic::Var & other) const : const Dynamic::Var
+operator*=(const Dynamic::Var & other) : Dynamic::Var &
+operator/(const Dynamic::Var & other) const : const Dynamic::Var
+operator/=(const Dynamic::Var & other) : Dynamic::Var &
+operator==(const char * other) const : bool
+operator==(const Dynamic::Var & other) const : bool
+operator!=(const Dynamic::Var & other) const : bool
+operator!=(const char * other) const : bool
+operator<(const Dynamic::Var & other) const : bool
+operator<=(const Dynamic::Var & other) const : bool
+operator>(const Dynamic::Var & other) const : bool
+operator>=(const Dynamic::Var & other) const : bool
+operator||(const Dynamic::Var & other) const : bool
+operator&&(const Dynamic::Var & other) const : bool
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+at(std::size_t n) : char &
+operator[](const std::string & name) : Dynamic::Var &
+operator[](const std::string & name) const : const Dynamic::Var &
+type() const : const std::type_info &
+empty() : void
+clear() : void
+isEmpty() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
+toString() const : std::string
{static} +parse(const std::string & val) : Dynamic::Var
{static} +toString(const Dynamic::Var & var) : std::string
-getAt(std::size_t n) : Dynamic::Var &
-getAt(const std::string & n) : Dynamic::Var &
{static} -parse(const std::string & val, std::string::size_type & offset) : Dynamic::Var
{static} -parseObject(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseArray(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseString(const std::string & val, std::string::size_type & pos) : std::string
{static} -parseJSONString(const std::string & val, std::string::size_type & pos) : std::string
{static} -skipWhiteSpace(const std::string & val, std::string::size_type & pos) : void
-content() const : Dynamic::VarHolder *
-destruct() : void
-construct(const char * value) : void
-construct(const Dynamic::Var & other) : void
+Var(const T & val) : void
+convert(T & val) : void
+convert() : T
+operator type-parameter-0-0() : T
+extract() : const T &
+operator=(const T & other) : class Dynamic::Var &
+operator+(const T & other) : const class Dynamic::Var
+operator+=(const T & other) : class Dynamic::Var &
+operator-(const T & other) : const class Dynamic::Var
+operator-=(const T & other) : class Dynamic::Var &
+operator*(const T & other) : const class Dynamic::Var
+operator*=(const T & other) : class Dynamic::Var &
+operator/(const T & other) : const class Dynamic::Var
+operator/=(const T & other) : class Dynamic::Var &
+operator==(const T & other) : _Bool
+operator!=(const T & other) : _Bool
+operator<(const T & other) : _Bool
+operator<=(const T & other) : _Bool
+operator>(const T & other) : _Bool
+operator>=(const T & other) : _Bool
+operator||(const T & other) : _Bool
+operator&&(const T & other) : _Bool
+operator[](const T & n) : class Dynamic::Var &
+operator[](const T & n) : const class Dynamic::Var &
-add(const Dynamic::Var & other) : T
-subtract(const Dynamic::Var & other) : T
-multiply(const Dynamic::Var & other) : T
-divide(const Dynamic::Var & other) : T
-holderImpl(const std::string errorMessage = "") : VarHolderImpl<T> *
-structIndexOperator(T * pStr, N n) : class Dynamic::Var &
-construct(const ValueType & value) : void
-_placeholder : Placeholder<Dynamic::VarHolder> [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Var.h#L632{_placeholder}]]]
}
class "Struct<K,M,S>" as C_0000876644825045799418
class C_0000876644825045799418 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
+Struct<K, M, S>() : void
+Struct<K, M, S>(const Dynamic::Struct::Data & val) : void
+~Struct<K, M, S>() : void
+operator[](const K & name) : Dynamic::Var &
+operator[](const K & name) const : const Dynamic::Var &
+contains(const K & name) const : bool
+find(const K & name) : Dynamic::Struct::Iterator
+find(const K & name) const : Dynamic::Struct::ConstIterator
+end() : Dynamic::Struct::Iterator
+end() const : Dynamic::Struct::ConstIterator
+begin() : Dynamic::Struct::Iterator
+begin() const : Dynamic::Struct::ConstIterator
+insert(const Dynamic::Struct::ValueType & aPair) : Dynamic::Struct::InsRetVal
+erase(const K & key) : Dynamic::Struct::SizeType
+erase(Dynamic::Struct::Iterator & it) : void
+clear() : void
+swap(Struct<K,M,S> & other) : void
+empty() const : bool
+size() const : Dynamic::Struct::SizeType
+members() const : Dynamic::Struct::NameSet
+getVar(const K & key) const : Dynamic::Var
+toString() const : std::string
+Struct<K, M, S>(const std::map<K,T> & val) : void
+Struct<K, M, S>(const ordered_map<K,T> & val) : void
+insert(const K & key, const T & value) : Dynamic::Struct::InsRetVal
+getVar(const K & key, const DefT & defaultValue) : class Dynamic::Var
-assignMap(const T & map) : void
-_data : Dynamic::Struct::Data [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L247{_data}]]]
}
class "Struct<std::string,std::map<std::string,Poco::Dynamic::Var>,std::set<std::string>>" as C_0000527346272489458655
class C_0000527346272489458655 {
}
class "VarHolderImpl<Poco::Dynamic::Struct<std::string>>" as C_0001079370368307575613
class C_0001079370368307575613 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L252{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L433{_val}]]]
}
class "Struct<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,std::map<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType,Poco::Dynamic::Var>,std::set<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int>>::KeyType>>" as C_0001212087958231445051
class C_0001212087958231445051 {
}
class "VarHolderImpl<Poco::Dynamic::Struct<int>>" as C_0002033788483863182904
class C_0002033788483863182904 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L438{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L619{_val}]]]
}
class "Struct<std::string,Poco::OrderedMap<std::string,Poco::Dynamic::Var,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<std::string,Poco::Dynamic::Var>>,std::deque<std::pair<std::string,Poco::Dynamic::Var>>>,Poco::OrderedSet<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>,std::deque<std::string>>>" as C_0000922731127244749220
class C_0000922731127244749220 {
}
class "Struct<Poco::Dynamic::VarHolderImpl<Poco::Dynamic::Struct<int,tsl::ordered_map<int,Poco::Dynamic::Var>,tsl::ordered_set<int>>>::KeyType,Poco::OrderedMap<int,Poco::Dynamic::Var,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int,Poco::Dynamic::Var>>,std::deque<std::pair<int,Poco::Dynamic::Var>>>,Poco::OrderedSet<int,std::hash<int>,std::equal_to<int>,std::allocator<int>,std::deque<int>>>" as C_0001894636435809858910
class C_0001894636435809858910 {
}
class "VarHolderImpl<Poco::Dynamic::Struct<int,tsl::ordered_map<int,Poco::Dynamic::Var>>>" as C_0002153171854526901050
class C_0002153171854526901050 [[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L810{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType [[[https://github.com/pocoproject/poco/blob/c7f7b8a298bcbf92d686ddbb0a3f691e449cf95e/Foundation/include/Poco/Dynamic/Struct.h#L991{_val}]]]
}
}
C_0000820091630223006238 <|- - C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002220828280612533118
C_0002149165824584484566 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002149165824584484566
C_0000198808093629002393 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000198808093629002393
C_0000976768452323437983 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000976768452323437983
C_0001804431617899042426 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001804431617899042426
C_0001832009513687525374 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001832009513687525374
C_0000572186414558919480 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000572186414558919480
C_0000166253842255815357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000166253842255815357
C_0001459401574844645109 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001459401574844645109
C_0000599279109574326060 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000599279109574326060
C_0000384619052225252533 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000384619052225252533
C_0002242257052791493112 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002242257052791493112
C_0001942181379759217898 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001942181379759217898
C_0002291903337356664508 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002291903337356664508
C_0001280441251658550342 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001280441251658550342
C_0001646173285346905617 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001646173285346905617
C_0001583654034047392858 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001583654034047392858
C_0002133497947762084276 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002133497947762084276
C_0000249766987467623805 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000249766987467623805
C_0000781520838380739124 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000781520838380739124
C_0000699000175415913074 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0000699000175415913074
C_0001850771625416044357 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001850771625416044357
C_0001458511670125196521 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001458511670125196521
C_0001286239480653274581 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001286239480653274581
C_0002237184725500898553 - -> C_0001827593751126946500 : -_pVar
C_0002237184725500898553 <.. C_0001827593751126946500 : +<<friend>>
C_0001827593751126946500 o- - C_0000820091630223006238 : -_placeholder
C_0000527346272489458655 ..|> C_0000876644825045799418
C_0001079370368307575613 o- - C_0000527346272489458655 : -_val
C_0001079370368307575613 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0001079370368307575613
C_0001212087958231445051 ..|> C_0000876644825045799418
C_0002033788483863182904 o- - C_0001212087958231445051 : -_val
C_0002033788483863182904 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002033788483863182904
C_0000922731127244749220 ..|> C_0000876644825045799418
C_0001894636435809858910 ..|> C_0000876644825045799418
C_0002153171854526901050 o- - C_0001894636435809858910 : -_val
C_0002153171854526901050 ..|> C_0001112867090784569162
C_0000820091630223006238 <|- - C_0002153171854526901050
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>