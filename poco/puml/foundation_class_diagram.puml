@startuml
class "Bugcheck" as C_0000236767892842538546
class C_0000236767892842538546 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Bugcheck.h#L32{Bugcheck}]] {
{static} +assertion(const char * cond, const char * file, int line, const char * text = 0) : void
{static} +nullPointer(const char * ptr, const char * file, int line) : void
{static} +bugcheck(const char * file, int line) : void
{static} +bugcheck(const char * msg, const char * file, int line) : void
{static} +unexpected(const char * file, int line) : void
{static} +debugger(const char * file, int line) : void
{static} +debugger(const char * msg, const char * file, int line) : void
{static} #what(const char * msg, const char * file, int line, const char * text = 0) : std::string
}
class "Exception" as C_0001070281089206260370
class C_0001070281089206260370 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Exception.h#L28{Exception}]] {
+Exception(const std::string & msg, int code = 0) : void
+Exception(const std::string & msg, const std::string & arg, int code = 0) : void
+Exception(const std::string & msg, const Exception & nested, int code = 0) : void
+Exception(const Exception & exc) : void
+~Exception() : void
+operator=(const Exception & exc) : Exception &
+name() const : const char *
+className() const : const char *
+what() const : const char *
+nested() const : const Exception *
+message() const : const std::string &
+code() const : int
+displayText() const : std::string
+clone() const : Exception *
+rethrow() const : void
#Exception(int code = 0) : void
#message(const std::string & msg) : void
#extendedMessage(const std::string & arg) : void
-_msg : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Exception.h#L101{_msg}]]]
-_pNested : Exception * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Exception.h#L102{_pNested}]]]
-_code : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Exception.h#L103{_code}]]]
}
class "LogicException" as C_0002253112329321174604
class C_0002253112329321174604 {
+LogicException(int code = 0) : void
+LogicException(const std::string & msg, int code = 0) : void
+LogicException(const std::string & msg, const std::string & arg, int code = 0) : void
+LogicException(const std::string & msg, const Exception & exc, int code = 0) : void
+LogicException(const LogicException & exc) : void
+~LogicException() : void
+operator=(const LogicException & exc) : LogicException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "AssertionViolationException" as C_0000369634619393000163
class C_0000369634619393000163 {
+AssertionViolationException(int code = 0) : void
+AssertionViolationException(const std::string & msg, int code = 0) : void
+AssertionViolationException(const std::string & msg, const std::string & arg, int code = 0) : void
+AssertionViolationException(const std::string & msg, const Exception & exc, int code = 0) : void
+AssertionViolationException(const AssertionViolationException & exc) : void
+~AssertionViolationException() : void
+operator=(const AssertionViolationException & exc) : AssertionViolationException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "NullPointerException" as C_0000603436052006048309
class C_0000603436052006048309 {
+NullPointerException(int code = 0) : void
+NullPointerException(const std::string & msg, int code = 0) : void
+NullPointerException(const std::string & msg, const std::string & arg, int code = 0) : void
+NullPointerException(const std::string & msg, const Exception & exc, int code = 0) : void
+NullPointerException(const NullPointerException & exc) : void
+~NullPointerException() : void
+operator=(const NullPointerException & exc) : NullPointerException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "NullValueException" as C_0000259348806633027081
class C_0000259348806633027081 {
+NullValueException(int code = 0) : void
+NullValueException(const std::string & msg, int code = 0) : void
+NullValueException(const std::string & msg, const std::string & arg, int code = 0) : void
+NullValueException(const std::string & msg, const Exception & exc, int code = 0) : void
+NullValueException(const NullValueException & exc) : void
+~NullValueException() : void
+operator=(const NullValueException & exc) : NullValueException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "BugcheckException" as C_0002196787985473942307
class C_0002196787985473942307 {
+BugcheckException(int code = 0) : void
+BugcheckException(const std::string & msg, int code = 0) : void
+BugcheckException(const std::string & msg, const std::string & arg, int code = 0) : void
+BugcheckException(const std::string & msg, const Exception & exc, int code = 0) : void
+BugcheckException(const BugcheckException & exc) : void
+~BugcheckException() : void
+operator=(const BugcheckException & exc) : BugcheckException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "InvalidArgumentException" as C_0000804372414630097293
class C_0000804372414630097293 {
+InvalidArgumentException(int code = 0) : void
+InvalidArgumentException(const std::string & msg, int code = 0) : void
+InvalidArgumentException(const std::string & msg, const std::string & arg, int code = 0) : void
+InvalidArgumentException(const std::string & msg, const Exception & exc, int code = 0) : void
+InvalidArgumentException(const InvalidArgumentException & exc) : void
+~InvalidArgumentException() : void
+operator=(const InvalidArgumentException & exc) : InvalidArgumentException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "NotImplementedException" as C_0001077375683830921859
class C_0001077375683830921859 {
+NotImplementedException(int code = 0) : void
+NotImplementedException(const std::string & msg, int code = 0) : void
+NotImplementedException(const std::string & msg, const std::string & arg, int code = 0) : void
+NotImplementedException(const std::string & msg, const Exception & exc, int code = 0) : void
+NotImplementedException(const NotImplementedException & exc) : void
+~NotImplementedException() : void
+operator=(const NotImplementedException & exc) : NotImplementedException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "RangeException" as C_0000312200462047135904
class C_0000312200462047135904 {
+RangeException(int code = 0) : void
+RangeException(const std::string & msg, int code = 0) : void
+RangeException(const std::string & msg, const std::string & arg, int code = 0) : void
+RangeException(const std::string & msg, const Exception & exc, int code = 0) : void
+RangeException(const RangeException & exc) : void
+~RangeException() : void
+operator=(const RangeException & exc) : RangeException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "IllegalStateException" as C_0001149866676415928365
class C_0001149866676415928365 {
+IllegalStateException(int code = 0) : void
+IllegalStateException(const std::string & msg, int code = 0) : void
+IllegalStateException(const std::string & msg, const std::string & arg, int code = 0) : void
+IllegalStateException(const std::string & msg, const Exception & exc, int code = 0) : void
+IllegalStateException(const IllegalStateException & exc) : void
+~IllegalStateException() : void
+operator=(const IllegalStateException & exc) : IllegalStateException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "InvalidAccessException" as C_0001317874868527159358
class C_0001317874868527159358 {
+InvalidAccessException(int code = 0) : void
+InvalidAccessException(const std::string & msg, int code = 0) : void
+InvalidAccessException(const std::string & msg, const std::string & arg, int code = 0) : void
+InvalidAccessException(const std::string & msg, const Exception & exc, int code = 0) : void
+InvalidAccessException(const InvalidAccessException & exc) : void
+~InvalidAccessException() : void
+operator=(const InvalidAccessException & exc) : InvalidAccessException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "SignalException" as C_0002166664061518458340
class C_0002166664061518458340 {
+SignalException(int code = 0) : void
+SignalException(const std::string & msg, int code = 0) : void
+SignalException(const std::string & msg, const std::string & arg, int code = 0) : void
+SignalException(const std::string & msg, const Exception & exc, int code = 0) : void
+SignalException(const SignalException & exc) : void
+~SignalException() : void
+operator=(const SignalException & exc) : SignalException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "UnhandledException" as C_0000706618193686751111
class C_0000706618193686751111 {
+UnhandledException(int code = 0) : void
+UnhandledException(const std::string & msg, int code = 0) : void
+UnhandledException(const std::string & msg, const std::string & arg, int code = 0) : void
+UnhandledException(const std::string & msg, const Exception & exc, int code = 0) : void
+UnhandledException(const UnhandledException & exc) : void
+~UnhandledException() : void
+operator=(const UnhandledException & exc) : UnhandledException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "RuntimeException" as C_0001301737730590463641
class C_0001301737730590463641 {
+RuntimeException(int code = 0) : void
+RuntimeException(const std::string & msg, int code = 0) : void
+RuntimeException(const std::string & msg, const std::string & arg, int code = 0) : void
+RuntimeException(const std::string & msg, const Exception & exc, int code = 0) : void
+RuntimeException(const RuntimeException & exc) : void
+~RuntimeException() : void
+operator=(const RuntimeException & exc) : RuntimeException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "NotFoundException" as C_0001982521536317583068
class C_0001982521536317583068 {
+NotFoundException(int code = 0) : void
+NotFoundException(const std::string & msg, int code = 0) : void
+NotFoundException(const std::string & msg, const std::string & arg, int code = 0) : void
+NotFoundException(const std::string & msg, const Exception & exc, int code = 0) : void
+NotFoundException(const NotFoundException & exc) : void
+~NotFoundException() : void
+operator=(const NotFoundException & exc) : NotFoundException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "ExistsException" as C_0001995191218173067844
class C_0001995191218173067844 {
+ExistsException(int code = 0) : void
+ExistsException(const std::string & msg, int code = 0) : void
+ExistsException(const std::string & msg, const std::string & arg, int code = 0) : void
+ExistsException(const std::string & msg, const Exception & exc, int code = 0) : void
+ExistsException(const ExistsException & exc) : void
+~ExistsException() : void
+operator=(const ExistsException & exc) : ExistsException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "TimeoutException" as C_0000114987681251469531
class C_0000114987681251469531 {
+TimeoutException(int code = 0) : void
+TimeoutException(const std::string & msg, int code = 0) : void
+TimeoutException(const std::string & msg, const std::string & arg, int code = 0) : void
+TimeoutException(const std::string & msg, const Exception & exc, int code = 0) : void
+TimeoutException(const TimeoutException & exc) : void
+~TimeoutException() : void
+operator=(const TimeoutException & exc) : TimeoutException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "SystemException" as C_0001353307009015576545
class C_0001353307009015576545 {
+SystemException(int code = 0) : void
+SystemException(const std::string & msg, int code = 0) : void
+SystemException(const std::string & msg, const std::string & arg, int code = 0) : void
+SystemException(const std::string & msg, const Exception & exc, int code = 0) : void
+SystemException(const SystemException & exc) : void
+~SystemException() : void
+operator=(const SystemException & exc) : SystemException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "RegularExpressionException" as C_0001382831319965010174
class C_0001382831319965010174 {
+RegularExpressionException(int code = 0) : void
+RegularExpressionException(const std::string & msg, int code = 0) : void
+RegularExpressionException(const std::string & msg, const std::string & arg, int code = 0) : void
+RegularExpressionException(const std::string & msg, const Exception & exc, int code = 0) : void
+RegularExpressionException(const RegularExpressionException & exc) : void
+~RegularExpressionException() : void
+operator=(const RegularExpressionException & exc) : RegularExpressionException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "LibraryLoadException" as C_0000938015591308671509
class C_0000938015591308671509 {
+LibraryLoadException(int code = 0) : void
+LibraryLoadException(const std::string & msg, int code = 0) : void
+LibraryLoadException(const std::string & msg, const std::string & arg, int code = 0) : void
+LibraryLoadException(const std::string & msg, const Exception & exc, int code = 0) : void
+LibraryLoadException(const LibraryLoadException & exc) : void
+~LibraryLoadException() : void
+operator=(const LibraryLoadException & exc) : LibraryLoadException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "LibraryAlreadyLoadedException" as C_0000336898398178758676
class C_0000336898398178758676 {
+LibraryAlreadyLoadedException(int code = 0) : void
+LibraryAlreadyLoadedException(const std::string & msg, int code = 0) : void
+LibraryAlreadyLoadedException(const std::string & msg, const std::string & arg, int code = 0) : void
+LibraryAlreadyLoadedException(const std::string & msg, const Exception & exc, int code = 0) : void
+LibraryAlreadyLoadedException(const LibraryAlreadyLoadedException & exc) : void
+~LibraryAlreadyLoadedException() : void
+operator=(const LibraryAlreadyLoadedException & exc) : LibraryAlreadyLoadedException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "NoThreadAvailableException" as C_0001281410252839205590
class C_0001281410252839205590 {
+NoThreadAvailableException(int code = 0) : void
+NoThreadAvailableException(const std::string & msg, int code = 0) : void
+NoThreadAvailableException(const std::string & msg, const std::string & arg, int code = 0) : void
+NoThreadAvailableException(const std::string & msg, const Exception & exc, int code = 0) : void
+NoThreadAvailableException(const NoThreadAvailableException & exc) : void
+~NoThreadAvailableException() : void
+operator=(const NoThreadAvailableException & exc) : NoThreadAvailableException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "PropertyNotSupportedException" as C_0000633974864404558861
class C_0000633974864404558861 {
+PropertyNotSupportedException(int code = 0) : void
+PropertyNotSupportedException(const std::string & msg, int code = 0) : void
+PropertyNotSupportedException(const std::string & msg, const std::string & arg, int code = 0) : void
+PropertyNotSupportedException(const std::string & msg, const Exception & exc, int code = 0) : void
+PropertyNotSupportedException(const PropertyNotSupportedException & exc) : void
+~PropertyNotSupportedException() : void
+operator=(const PropertyNotSupportedException & exc) : PropertyNotSupportedException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "PoolOverflowException" as C_0001034853746252959865
class C_0001034853746252959865 {
+PoolOverflowException(int code = 0) : void
+PoolOverflowException(const std::string & msg, int code = 0) : void
+PoolOverflowException(const std::string & msg, const std::string & arg, int code = 0) : void
+PoolOverflowException(const std::string & msg, const Exception & exc, int code = 0) : void
+PoolOverflowException(const PoolOverflowException & exc) : void
+~PoolOverflowException() : void
+operator=(const PoolOverflowException & exc) : PoolOverflowException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "NoPermissionException" as C_0000341228134218214254
class C_0000341228134218214254 {
+NoPermissionException(int code = 0) : void
+NoPermissionException(const std::string & msg, int code = 0) : void
+NoPermissionException(const std::string & msg, const std::string & arg, int code = 0) : void
+NoPermissionException(const std::string & msg, const Exception & exc, int code = 0) : void
+NoPermissionException(const NoPermissionException & exc) : void
+~NoPermissionException() : void
+operator=(const NoPermissionException & exc) : NoPermissionException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "OutOfMemoryException" as C_0001133032318917766061
class C_0001133032318917766061 {
+OutOfMemoryException(int code = 0) : void
+OutOfMemoryException(const std::string & msg, int code = 0) : void
+OutOfMemoryException(const std::string & msg, const std::string & arg, int code = 0) : void
+OutOfMemoryException(const std::string & msg, const Exception & exc, int code = 0) : void
+OutOfMemoryException(const OutOfMemoryException & exc) : void
+~OutOfMemoryException() : void
+operator=(const OutOfMemoryException & exc) : OutOfMemoryException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "DataException" as C_0001527419901104954014
class C_0001527419901104954014 {
+DataException(int code = 0) : void
+DataException(const std::string & msg, int code = 0) : void
+DataException(const std::string & msg, const std::string & arg, int code = 0) : void
+DataException(const std::string & msg, const Exception & exc, int code = 0) : void
+DataException(const DataException & exc) : void
+~DataException() : void
+operator=(const DataException & exc) : DataException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "DataFormatException" as C_0000995213146074472368
class C_0000995213146074472368 {
+DataFormatException(int code = 0) : void
+DataFormatException(const std::string & msg, int code = 0) : void
+DataFormatException(const std::string & msg, const std::string & arg, int code = 0) : void
+DataFormatException(const std::string & msg, const Exception & exc, int code = 0) : void
+DataFormatException(const DataFormatException & exc) : void
+~DataFormatException() : void
+operator=(const DataFormatException & exc) : DataFormatException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "SyntaxException" as C_0000256423543056697251
class C_0000256423543056697251 {
+SyntaxException(int code = 0) : void
+SyntaxException(const std::string & msg, int code = 0) : void
+SyntaxException(const std::string & msg, const std::string & arg, int code = 0) : void
+SyntaxException(const std::string & msg, const Exception & exc, int code = 0) : void
+SyntaxException(const SyntaxException & exc) : void
+~SyntaxException() : void
+operator=(const SyntaxException & exc) : SyntaxException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "CircularReferenceException" as C_0001433182852057747259
class C_0001433182852057747259 {
+CircularReferenceException(int code = 0) : void
+CircularReferenceException(const std::string & msg, int code = 0) : void
+CircularReferenceException(const std::string & msg, const std::string & arg, int code = 0) : void
+CircularReferenceException(const std::string & msg, const Exception & exc, int code = 0) : void
+CircularReferenceException(const CircularReferenceException & exc) : void
+~CircularReferenceException() : void
+operator=(const CircularReferenceException & exc) : CircularReferenceException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "PathSyntaxException" as C_0000275335632689246562
class C_0000275335632689246562 {
+PathSyntaxException(int code = 0) : void
+PathSyntaxException(const std::string & msg, int code = 0) : void
+PathSyntaxException(const std::string & msg, const std::string & arg, int code = 0) : void
+PathSyntaxException(const std::string & msg, const Exception & exc, int code = 0) : void
+PathSyntaxException(const PathSyntaxException & exc) : void
+~PathSyntaxException() : void
+operator=(const PathSyntaxException & exc) : PathSyntaxException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "IOException" as C_0001662724143746653776
class C_0001662724143746653776 {
+IOException(int code = 0) : void
+IOException(const std::string & msg, int code = 0) : void
+IOException(const std::string & msg, const std::string & arg, int code = 0) : void
+IOException(const std::string & msg, const Exception & exc, int code = 0) : void
+IOException(const IOException & exc) : void
+~IOException() : void
+operator=(const IOException & exc) : IOException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "ProtocolException" as C_0002140076054618695059
class C_0002140076054618695059 {
+ProtocolException(int code = 0) : void
+ProtocolException(const std::string & msg, int code = 0) : void
+ProtocolException(const std::string & msg, const std::string & arg, int code = 0) : void
+ProtocolException(const std::string & msg, const Exception & exc, int code = 0) : void
+ProtocolException(const ProtocolException & exc) : void
+~ProtocolException() : void
+operator=(const ProtocolException & exc) : ProtocolException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "FileException" as C_0001548248602662425253
class C_0001548248602662425253 {
+FileException(int code = 0) : void
+FileException(const std::string & msg, int code = 0) : void
+FileException(const std::string & msg, const std::string & arg, int code = 0) : void
+FileException(const std::string & msg, const Exception & exc, int code = 0) : void
+FileException(const FileException & exc) : void
+~FileException() : void
+operator=(const FileException & exc) : FileException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "FileExistsException" as C_0000493308447352789343
class C_0000493308447352789343 {
+FileExistsException(int code = 0) : void
+FileExistsException(const std::string & msg, int code = 0) : void
+FileExistsException(const std::string & msg, const std::string & arg, int code = 0) : void
+FileExistsException(const std::string & msg, const Exception & exc, int code = 0) : void
+FileExistsException(const FileExistsException & exc) : void
+~FileExistsException() : void
+operator=(const FileExistsException & exc) : FileExistsException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "FileNotFoundException" as C_0001103010587203413666
class C_0001103010587203413666 {
+FileNotFoundException(int code = 0) : void
+FileNotFoundException(const std::string & msg, int code = 0) : void
+FileNotFoundException(const std::string & msg, const std::string & arg, int code = 0) : void
+FileNotFoundException(const std::string & msg, const Exception & exc, int code = 0) : void
+FileNotFoundException(const FileNotFoundException & exc) : void
+~FileNotFoundException() : void
+operator=(const FileNotFoundException & exc) : FileNotFoundException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "PathNotFoundException" as C_0000702557745299095895
class C_0000702557745299095895 {
+PathNotFoundException(int code = 0) : void
+PathNotFoundException(const std::string & msg, int code = 0) : void
+PathNotFoundException(const std::string & msg, const std::string & arg, int code = 0) : void
+PathNotFoundException(const std::string & msg, const Exception & exc, int code = 0) : void
+PathNotFoundException(const PathNotFoundException & exc) : void
+~PathNotFoundException() : void
+operator=(const PathNotFoundException & exc) : PathNotFoundException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "FileReadOnlyException" as C_0000769837579431954161
class C_0000769837579431954161 {
+FileReadOnlyException(int code = 0) : void
+FileReadOnlyException(const std::string & msg, int code = 0) : void
+FileReadOnlyException(const std::string & msg, const std::string & arg, int code = 0) : void
+FileReadOnlyException(const std::string & msg, const Exception & exc, int code = 0) : void
+FileReadOnlyException(const FileReadOnlyException & exc) : void
+~FileReadOnlyException() : void
+operator=(const FileReadOnlyException & exc) : FileReadOnlyException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "FileAccessDeniedException" as C_0002153092292534409707
class C_0002153092292534409707 {
+FileAccessDeniedException(int code = 0) : void
+FileAccessDeniedException(const std::string & msg, int code = 0) : void
+FileAccessDeniedException(const std::string & msg, const std::string & arg, int code = 0) : void
+FileAccessDeniedException(const std::string & msg, const Exception & exc, int code = 0) : void
+FileAccessDeniedException(const FileAccessDeniedException & exc) : void
+~FileAccessDeniedException() : void
+operator=(const FileAccessDeniedException & exc) : FileAccessDeniedException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "CreateFileException" as C_0001946023510605325600
class C_0001946023510605325600 {
+CreateFileException(int code = 0) : void
+CreateFileException(const std::string & msg, int code = 0) : void
+CreateFileException(const std::string & msg, const std::string & arg, int code = 0) : void
+CreateFileException(const std::string & msg, const Exception & exc, int code = 0) : void
+CreateFileException(const CreateFileException & exc) : void
+~CreateFileException() : void
+operator=(const CreateFileException & exc) : CreateFileException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "OpenFileException" as C_0000330510123098801279
class C_0000330510123098801279 {
+OpenFileException(int code = 0) : void
+OpenFileException(const std::string & msg, int code = 0) : void
+OpenFileException(const std::string & msg, const std::string & arg, int code = 0) : void
+OpenFileException(const std::string & msg, const Exception & exc, int code = 0) : void
+OpenFileException(const OpenFileException & exc) : void
+~OpenFileException() : void
+operator=(const OpenFileException & exc) : OpenFileException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "WriteFileException" as C_0000808441741908920803
class C_0000808441741908920803 {
+WriteFileException(int code = 0) : void
+WriteFileException(const std::string & msg, int code = 0) : void
+WriteFileException(const std::string & msg, const std::string & arg, int code = 0) : void
+WriteFileException(const std::string & msg, const Exception & exc, int code = 0) : void
+WriteFileException(const WriteFileException & exc) : void
+~WriteFileException() : void
+operator=(const WriteFileException & exc) : WriteFileException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "ReadFileException" as C_0001769596158265295803
class C_0001769596158265295803 {
+ReadFileException(int code = 0) : void
+ReadFileException(const std::string & msg, int code = 0) : void
+ReadFileException(const std::string & msg, const std::string & arg, int code = 0) : void
+ReadFileException(const std::string & msg, const Exception & exc, int code = 0) : void
+ReadFileException(const ReadFileException & exc) : void
+~ReadFileException() : void
+operator=(const ReadFileException & exc) : ReadFileException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "DirectoryNotEmptyException" as C_0001822784252292133827
class C_0001822784252292133827 {
+DirectoryNotEmptyException(int code = 0) : void
+DirectoryNotEmptyException(const std::string & msg, int code = 0) : void
+DirectoryNotEmptyException(const std::string & msg, const std::string & arg, int code = 0) : void
+DirectoryNotEmptyException(const std::string & msg, const Exception & exc, int code = 0) : void
+DirectoryNotEmptyException(const DirectoryNotEmptyException & exc) : void
+~DirectoryNotEmptyException() : void
+operator=(const DirectoryNotEmptyException & exc) : DirectoryNotEmptyException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "UnknownURISchemeException" as C_0001684801065288788447
class C_0001684801065288788447 {
+UnknownURISchemeException(int code = 0) : void
+UnknownURISchemeException(const std::string & msg, int code = 0) : void
+UnknownURISchemeException(const std::string & msg, const std::string & arg, int code = 0) : void
+UnknownURISchemeException(const std::string & msg, const Exception & exc, int code = 0) : void
+UnknownURISchemeException(const UnknownURISchemeException & exc) : void
+~UnknownURISchemeException() : void
+operator=(const UnknownURISchemeException & exc) : UnknownURISchemeException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "TooManyURIRedirectsException" as C_0000568173543111799698
class C_0000568173543111799698 {
+TooManyURIRedirectsException(int code = 0) : void
+TooManyURIRedirectsException(const std::string & msg, int code = 0) : void
+TooManyURIRedirectsException(const std::string & msg, const std::string & arg, int code = 0) : void
+TooManyURIRedirectsException(const std::string & msg, const Exception & exc, int code = 0) : void
+TooManyURIRedirectsException(const TooManyURIRedirectsException & exc) : void
+~TooManyURIRedirectsException() : void
+operator=(const TooManyURIRedirectsException & exc) : TooManyURIRedirectsException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "URISyntaxException" as C_0002070464368740303928
class C_0002070464368740303928 {
+URISyntaxException(int code = 0) : void
+URISyntaxException(const std::string & msg, int code = 0) : void
+URISyntaxException(const std::string & msg, const std::string & arg, int code = 0) : void
+URISyntaxException(const std::string & msg, const Exception & exc, int code = 0) : void
+URISyntaxException(const URISyntaxException & exc) : void
+~URISyntaxException() : void
+operator=(const URISyntaxException & exc) : URISyntaxException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "ApplicationException" as C_0001716107766659869464
class C_0001716107766659869464 {
+ApplicationException(int code = 0) : void
+ApplicationException(const std::string & msg, int code = 0) : void
+ApplicationException(const std::string & msg, const std::string & arg, int code = 0) : void
+ApplicationException(const std::string & msg, const Exception & exc, int code = 0) : void
+ApplicationException(const ApplicationException & exc) : void
+~ApplicationException() : void
+operator=(const ApplicationException & exc) : ApplicationException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "BadCastException" as C_0001848154526537846383
class C_0001848154526537846383 {
+BadCastException(int code = 0) : void
+BadCastException(const std::string & msg, int code = 0) : void
+BadCastException(const std::string & msg, const std::string & arg, int code = 0) : void
+BadCastException(const std::string & msg, const Exception & exc, int code = 0) : void
+BadCastException(const BadCastException & exc) : void
+~BadCastException() : void
+operator=(const BadCastException & exc) : BadCastException &
+name() const : const char *
+className() const : const char *
+clone() const : Exception *
+rethrow() const : void
}
class "AtomicCounter" as C_0001621935907318778812
class C_0001621935907318778812 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AtomicCounter.h#L28{AtomicCounter}]] {
+AtomicCounter() : void
+AtomicCounter(AtomicCounter::ValueType initialValue) : void
+AtomicCounter(const AtomicCounter & counter) : void
+~AtomicCounter() : void
+operator=(const AtomicCounter & counter) : AtomicCounter &
+operator=(AtomicCounter::ValueType value) : AtomicCounter &
+operator int() const : AtomicCounter::ValueType
+value() const : AtomicCounter::ValueType
+operator++() : AtomicCounter::ValueType
+operator++(int ) : AtomicCounter::ValueType
+operator--() : AtomicCounter::ValueType
+operator--(int ) : AtomicCounter::ValueType
+operator!() const : bool
-_counter : std::atomic<int> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AtomicCounter.h#L80{_counter}]]]
}
class "ReferenceCounter" as C_0000845507381287174824
class C_0000845507381287174824 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L31{ReferenceCounter}]] {
+ReferenceCounter() : void
+duplicate() : void
+release() : int
+referenceCount() const : int
-_cnt : AtomicCounter [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L55{_cnt}]]]
}
class "ReleasePolicy<C>" as C_0002200666203878084029
class C_0002200666203878084029 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L60{ReleasePolicy}]] {
{static} +release(C * pObj) : void
}
class "ReleaseArrayPolicy<C>" as C_0001890548029620128208
class C_0001890548029620128208 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L75{ReleaseArrayPolicy}]] {
{static} +release(C * pObj) : void
}
class "SharedPtr<C,RC=class ReferenceCounter,RP=ReleasePolicy<C>>" as C_0000501983570143558478
class C_0000501983570143558478 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L89{SharedPtr}]] {
+SharedPtr<C, RC, RP>() : void
+SharedPtr<C, RC, RP>(C * ptr) : void
+SharedPtr<C, RC, RP>(const SharedPtr<C,RC,RP> & ptr) : void
+SharedPtr<C, RC, RP>(SharedPtr<C,RC,RP> && ptr) : void
+~SharedPtr<C, RC, RP>() : void
+assign(C * ptr) : SharedPtr<C,RC,RP> &
+assign(const SharedPtr<C,RC,RP> & ptr) : SharedPtr<C,RC,RP> &
+reset() : void
+reset(C * ptr) : void
+reset(const SharedPtr<C,RC,RP> & ptr) : void
+operator=(C * ptr) : SharedPtr<C,RC,RP> &
+operator=(const SharedPtr<C,RC,RP> & ptr) : SharedPtr<C,RC,RP> &
+operator=(SharedPtr<C,RC,RP> && ptr) : SharedPtr<C,RC,RP> &
+swap(SharedPtr<C,RC,RP> & ptr) : void
+operator->() : C *
+operator->() const : const C *
+operator*() : C &
+operator*() const : const C &
+get() : C *
+get() const : const C *
+operator type-parameter-0-0 *() : C *
+operator const type-parameter-0-0 *() const : const C *
+operator!() const : bool
+isNull() const : bool
+operator==(const SharedPtr<C,RC,RP> & ptr) const : bool
+operator==(const C * ptr) const : bool
+operator==(C * ptr) const : bool
+operator==(std::nullptr_t ptr) const : bool
+operator!=(const SharedPtr<C,RC,RP> & ptr) const : bool
+operator!=(const C * ptr) const : bool
+operator!=(C * ptr) const : bool
+operator!=(std::nullptr_t ptr) const : bool
+operator<(const SharedPtr<C,RC,RP> & ptr) const : bool
+operator<(const C * ptr) const : bool
+operator<(C * ptr) const : bool
+operator<=(const SharedPtr<C,RC,RP> & ptr) const : bool
+operator<=(const C * ptr) const : bool
+operator<=(C * ptr) const : bool
+operator>(const SharedPtr<C,RC,RP> & ptr) const : bool
+operator>(const C * ptr) const : bool
+operator>(C * ptr) const : bool
+operator>=(const SharedPtr<C,RC,RP> & ptr) const : bool
+operator>=(const C * ptr) const : bool
+operator>=(C * ptr) const : bool
+referenceCount() const : int
-deref() const : C *
-release() : void
-SharedPtr<C, RC, RP>(RC * pCounter, C * ptr) : void
+SharedPtr<C, RC, RP><Other,OtherRP>(const SharedPtr<Other,RC,OtherRP> & ptr) : void
+assign<Other,OtherRP>(const SharedPtr<Other,RC,OtherRP> & ptr) : SharedPtr<C, RC, RP> &
+reset<Other,OtherRP>(const SharedPtr<Other,RC,OtherRP> & ptr) : void
+operator=<Other,OtherRP>(const SharedPtr<Other,RC,OtherRP> & ptr) : SharedPtr<C, RC, RP> &
+cast<Other>() : SharedPtr<Other, RC, RP>
+unsafeCast<Other>() : SharedPtr<Other, RC, RP>
-_pCounter : RC * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L459{_pCounter}]]]
-_ptr : C * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L460{_ptr}]]]
}
class "SharedPtr<TextEncoding>" as C_0000569464036247977069
class C_0000569464036247977069 {
}
abstract "TextEncoding" as C_0001388030794032533071
abstract C_0001388030794032533071 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextEncoding.h#L31{TextEncoding}]] {
+~TextEncoding() : void
{abstract} +canonicalName() const = 0 : const char *
{abstract} +isA(const std::string & encodingName) const = 0 : bool
{abstract} +characterMap() const = 0 : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
{static} +byName(const std::string & encodingName) : TextEncoding &
{static} +find(const std::string & encodingName) : TextEncoding::Ptr
{static} +add(TextEncoding::Ptr encoding) : void
{static} +add(TextEncoding::Ptr encoding, const std::string & name) : void
{static} +remove(const std::string & encodingName) : void
{static} +global(TextEncoding::Ptr encoding) : TextEncoding::Ptr
{static} +global() : TextEncoding &
{static} #manager() : TextEncodingManager &
+MAX_SEQUENCE_LENGTH : enum
{static} +GLOBAL : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextEncoding.h#L173{GLOBAL}]]]
}
class "Ascii" as C_0001453117489077161826
class C_0001453117489077161826 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Ascii.h#L27{Ascii}]] {
{static} +properties(int ch) : int
{static} +hasSomeProperties(int ch, int properties) : bool
{static} +hasProperties(int ch, int properties) : bool
{static} +isAscii(int ch) : bool
{static} +isSpace(int ch) : bool
{static} +isDigit(int ch) : bool
{static} +isHexDigit(int ch) : bool
{static} +isPunct(int ch) : bool
{static} +isAlpha(int ch) : bool
{static} +isAlphaNumeric(int ch) : bool
{static} +isLower(int ch) : bool
{static} +isUpper(int ch) : bool
{static} +isPrintable(int ch) : bool
{static} +toLower(int ch) : int
{static} +toUpper(int ch) : int
{static} -CHARACTER_PROPERTIES : const int[128] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Ascii.h#L120{CHARACTER_PROPERTIES}]]]
}
enum "Ascii::CharacterProperties" as C_0000263478315192730004
enum C_0000263478315192730004 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Ascii.h#L44{Ascii##CharacterProperties}]] {
ACP_CONTROL
ACP_SPACE
ACP_PUNCT
ACP_DIGIT
ACP_HEXDIGIT
ACP_ALPHA
ACP_LOWER
ACP_UPPER
ACP_GRAPH
ACP_PRINT
}
class "i_char_traits<charT>" as C_0001259943795062733544
class C_0001259943795062733544 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/String.h#L654{i_char_traits}]] {
{static} +eq(charT c1, charT c2) : bool
{static} +ne(charT c1, charT c2) : bool
{static} +lt(charT c1, charT c2) : bool
{static} +compare(const charT * s1, const charT * s2, std::size_t n) : int
{static} +find(const charT * s, int n, charT a) : const charT *
}
class "CILess" as C_0002273600135696262500
class C_0002273600135696262500 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/String.h#L709{CILess}]] {
+operator()(const std::string & s1, const std::string & s2) const : bool
}
class "ASCIIEncoding" as C_0000556610306589726120
class C_0000556610306589726120 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ASCIIEncoding.h#L28{ASCIIEncoding}]] {
+ASCIIEncoding() : void
+~ASCIIEncoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ASCIIEncoding.h#L43{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ASCIIEncoding.h#L44{_charMap}]]]
}
class "Latin1Encoding" as C_0000812281503290278213
class C_0000812281503290278213 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin1Encoding.h#L28{Latin1Encoding}]] {
+Latin1Encoding() : void
+~Latin1Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin1Encoding.h#L43{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin1Encoding.h#L44{_charMap}]]]
}
class "Latin2Encoding" as C_0001182021136873428883
class C_0001182021136873428883 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin2Encoding.h#L28{Latin2Encoding}]] {
+Latin2Encoding() : void
+~Latin2Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin2Encoding.h#L46{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin2Encoding.h#L47{_charMap}]]]
}
class "Latin9Encoding" as C_0000290074446143794595
class C_0000290074446143794595 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin9Encoding.h#L28{Latin9Encoding}]] {
+Latin9Encoding() : void
+~Latin9Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin9Encoding.h#L46{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Latin9Encoding.h#L47{_charMap}]]]
}
class "UTF32Encoding" as C_0001895604938853731380
class C_0001895604938853731380 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF32Encoding.h#L28{UTF32Encoding}]] {
+UTF32Encoding(UTF32Encoding::ByteOrderType byteOrder = NATIVE_BYTE_ORDER) : void
+UTF32Encoding(int byteOrderMark) : void
+~UTF32Encoding() : void
+getByteOrder() const : UTF32Encoding::ByteOrderType
+setByteOrder(UTF32Encoding::ByteOrderType byteOrder) : void
+setByteOrder(int byteOrderMark) : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
-_flipBytes : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF32Encoding.h#L73{_flipBytes}]]]
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF32Encoding.h#L74{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF32Encoding.h#L75{_charMap}]]]
}
enum "UTF32Encoding::ByteOrderType" as C_0000266371265002709855
enum C_0000266371265002709855 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF32Encoding.h#L36{UTF32Encoding##ByteOrderType}]] {
BIG_ENDIAN_BYTE_ORDER
LITTLE_ENDIAN_BYTE_ORDER
NATIVE_BYTE_ORDER
}
class "UTF16Encoding" as C_0000400324972179862509
class C_0000400324972179862509 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF16Encoding.h#L28{UTF16Encoding}]] {
+UTF16Encoding(UTF16Encoding::ByteOrderType byteOrder = NATIVE_BYTE_ORDER) : void
+UTF16Encoding(int byteOrderMark) : void
+~UTF16Encoding() : void
+getByteOrder() const : UTF16Encoding::ByteOrderType
+setByteOrder(UTF16Encoding::ByteOrderType byteOrder) : void
+setByteOrder(int byteOrderMark) : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
-_flipBytes : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF16Encoding.h#L76{_flipBytes}]]]
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF16Encoding.h#L77{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF16Encoding.h#L78{_charMap}]]]
}
enum "UTF16Encoding::ByteOrderType" as C_0000832415664923184117
enum C_0000832415664923184117 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF16Encoding.h#L39{UTF16Encoding##ByteOrderType}]] {
BIG_ENDIAN_BYTE_ORDER
LITTLE_ENDIAN_BYTE_ORDER
NATIVE_BYTE_ORDER
}
class "UTF8Encoding" as C_0000762129351852459476
class C_0000762129351852459476 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF8Encoding.h#L28{UTF8Encoding}]] {
+UTF8Encoding() : void
+~UTF8Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} +isLegal(const unsigned char * bytes, int length) : bool
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF8Encoding.h#L53{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF8Encoding.h#L54{_charMap}]]]
}
class "Windows1250Encoding" as C_0000426249467656158832
class C_0000426249467656158832 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1250Encoding.h#L28{Windows1250Encoding}]] {
+Windows1250Encoding() : void
+~Windows1250Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1250Encoding.h#L44{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1250Encoding.h#L45{_charMap}]]]
}
class "Windows1251Encoding" as C_0000804403418642621726
class C_0000804403418642621726 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1251Encoding.h#L28{Windows1251Encoding}]] {
+Windows1251Encoding() : void
+~Windows1251Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1251Encoding.h#L44{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1251Encoding.h#L45{_charMap}]]]
}
class "Windows1252Encoding" as C_0002157842411017736270
class C_0002157842411017736270 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1252Encoding.h#L28{Windows1252Encoding}]] {
+Windows1252Encoding() : void
+~Windows1252Encoding() : void
+canonicalName() const : const char *
+isA(const std::string & encodingName) const : bool
+characterMap() const : const TextEncoding::CharacterMap &
+convert(const unsigned char * bytes) const : int
+convert(int ch, unsigned char * bytes, int length) const : int
+queryConvert(const unsigned char * bytes, int length) const : int
+sequenceLength(const unsigned char * bytes, int length) const : int
{static} -_names : const char *[] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1252Encoding.h#L43{_names}]]]
{static} -_charMap : const TextEncoding::CharacterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Windows1252Encoding.h#L44{_charMap}]]]
}
class "RWLockImpl" as C_0000665822436344816637
class C_0000665822436344816637 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock_POSIX.h#L30{RWLockImpl}]] {
#RWLockImpl() : void
#~RWLockImpl() : void
#readLockImpl() : void
#tryReadLockImpl() : bool
#writeLockImpl() : void
#tryWriteLockImpl() : bool
#unlockImpl() : void
-_rwl : pthread_rwlock_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock_POSIX.h#L42{_rwl}]]]
}
class "RWLock" as C_0000839264177954968318
class C_0000839264177954968318 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock.h#L48{RWLock}]] {
+RWLock() : void
+~RWLock() : void
+readLock() : void
+tryReadLock() : bool
+writeLock() : void
+tryWriteLock() : bool
+unlock() : void
-RWLock(const RWLock & ) : void
-operator=(const RWLock & ) : RWLock &
}
class "ScopedRWLock" as C_0000811555575228215811
class C_0000811555575228215811 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock.h#L91{ScopedRWLock}]] {
+ScopedRWLock(RWLock & rwl, bool write = false) : void
+~ScopedRWLock() : void
-ScopedRWLock() : void
-ScopedRWLock(const ScopedRWLock & ) : void
-operator=(const ScopedRWLock & ) : ScopedRWLock &
-_rwl : RWLock & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock.h#L99{_rwl}]]]
}
class "ScopedReadRWLock" as C_0000061927783510467004
class C_0000061927783510467004 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock.h#L107{ScopedReadRWLock}]] {
+ScopedReadRWLock(RWLock & rwl) : void
+~ScopedReadRWLock() : void
}
class "ScopedWriteRWLock" as C_0001977200165855809713
class C_0001977200165855809713 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RWLock.h#L116{ScopedWriteRWLock}]] {
+ScopedWriteRWLock(RWLock & rwl) : void
+~ScopedWriteRWLock() : void
}
class "ScopedLock<M>" as C_0001882361482709998219
class C_0001882361482709998219 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ScopedLock.h#L28{ScopedLock}]] {
+ScopedLock<M>(M & mutex) : void
+ScopedLock<M>(M & mutex, long milliseconds) : void
+~ScopedLock<M>() : void
-ScopedLock<M>() : void
-ScopedLock<M>(const ScopedLock<M> & ) : void
-operator=(const ScopedLock<M> & ) : ScopedLock<M> &
-_mutex : M & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ScopedLock.h#L59{_mutex}]]]
}
class "ScopedLockWithUnlock<M>" as C_0001444290927792811421
class C_0001444290927792811421 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ScopedLock.h#L68{ScopedLockWithUnlock}]] {
+ScopedLockWithUnlock<M>(M & mutex) : void
+ScopedLockWithUnlock<M>(M & mutex, long milliseconds) : void
+~ScopedLockWithUnlock<M>() : void
+unlock() : void
-ScopedLockWithUnlock<M>() : void
-ScopedLockWithUnlock<M>(const ScopedLockWithUnlock<M> & ) : void
-operator=(const ScopedLockWithUnlock<M> & ) : ScopedLockWithUnlock<M> &
-_pMutex : M * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ScopedLock.h#L110{_pMutex}]]]
}
class "Timestamp" as C_0001753661655610731928
class C_0001753661655610731928 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timestamp.h#L31{Timestamp}]] {
+Timestamp() : void
+Timestamp(Timestamp::TimeVal tv) : void
+Timestamp(const Timestamp & other) : void
+~Timestamp() : void
+operator=(const Timestamp & other) : Timestamp &
+operator=(Timestamp::TimeVal tv) : Timestamp &
+swap(Timestamp & timestamp) : void
+update() : void
+operator==(const Timestamp & ts) const : bool
+operator!=(const Timestamp & ts) const : bool
+operator>(const Timestamp & ts) const : bool
+operator>=(const Timestamp & ts) const : bool
+operator<(const Timestamp & ts) const : bool
+operator<=(const Timestamp & ts) const : bool
+operator+(Timestamp::TimeDiff d) const : Timestamp
+operator+(const Timespan & span) const : Timestamp
+operator-(Timestamp::TimeDiff d) const : Timestamp
+operator-(const Timespan & span) const : Timestamp
+operator-(const Timestamp & ts) const : Timestamp::TimeDiff
+operator+=(Timestamp::TimeDiff d) : Timestamp &
+operator+=(const Timespan & span) : Timestamp &
+operator-=(Timestamp::TimeDiff d) : Timestamp &
+operator-=(const Timespan & span) : Timestamp &
+epochTime() const : std::time_t
+utcTime() const : Timestamp::UtcTimeVal
+epochMicroseconds() const : Timestamp::TimeVal
+elapsed() const : Timestamp::TimeDiff
+isElapsed(Timestamp::TimeDiff interval) const : bool
+raw() const : Timestamp::TimeVal
{static} +fromEpochTime(std::time_t t) : Timestamp
{static} +fromUtcTime(Timestamp::UtcTimeVal val) : Timestamp
{static} +resolution() : Timestamp::TimeDiff
-_ts : Timestamp::TimeVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timestamp.h#L149{_ts}]]]
{static} +TIMEVAL_MIN : const Timestamp::TimeVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timestamp.h#L61{TIMEVAL_MIN}]]]
{static} +TIMEVAL_MAX : const Timestamp::TimeVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timestamp.h#L62{TIMEVAL_MAX}]]]
}
class "MutexImpl" as C_0000615089044328898624
class C_0000615089044328898624 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex_POSIX.h#L30{MutexImpl}]] {
#MutexImpl() : void
#MutexImpl(bool fast) : void
#~MutexImpl() : void
#lockImpl() : void
#tryLockImpl() : bool
#tryLockImpl(long milliseconds) : bool
#unlockImpl() : void
-_mutex : pthread_mutex_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex_POSIX.h#L42{_mutex}]]]
}
class "FastMutexImpl" as C_0001912575929021062492
class C_0001912575929021062492 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex_POSIX.h#L46{FastMutexImpl}]] {
#FastMutexImpl() : void
#~FastMutexImpl() : void
}
class "Mutex" as C_0000317758303947094820
class C_0000317758303947094820 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex.h#L44{Mutex}]] {
+Mutex() : void
+~Mutex() : void
+lock() : void
+lock(long milliseconds) : void
+tryLock() : bool
+tryLock(long milliseconds) : bool
+unlock() : void
-Mutex(const Mutex & ) : void
-operator=(const Mutex & ) : Mutex &
}
class "FastMutex" as C_0001208849321300700705
class C_0001208849321300700705 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex.h#L100{FastMutex}]] {
+FastMutex() : void
+~FastMutex() : void
+lock() : void
+lock(long milliseconds) : void
+tryLock() : bool
+tryLock(long milliseconds) : bool
+unlock() : void
-FastMutex(const FastMutex & ) : void
-operator=(const FastMutex & ) : FastMutex &
}
class "SpinlockMutex" as C_0001538240985329720514
class C_0001538240985329720514 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex.h#L155{SpinlockMutex}]] {
+SpinlockMutex() : void
+~SpinlockMutex() : void
+lock() : void
+lock(long milliseconds) : void
+tryLock() : bool
+tryLock(long milliseconds) : bool
+unlock() : void
-_flag : std::atomic_flag [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex.h#L199{_flag}]]]
}
class "NullMutex" as C_0001616820933836398603
class C_0001616820933836398603 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Mutex.h#L203{NullMutex}]] {
+NullMutex() : void
+~NullMutex() : void
+lock() : void
+lock(long ) : void
+tryLock() : bool
+tryLock(long ) : bool
+unlock() : void
}
class "SingletonHolder<S>" as C_0000715608830579158836
class C_0000715608830579158836 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SingletonHolder.h#L29{SingletonHolder}]] {
+SingletonHolder<S>() : void
+~SingletonHolder<S>() : void
+get() : S *
+reset() : void
-_pS : S * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SingletonHolder.h#L69{_pS}]]]
-_m : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SingletonHolder.h#L70{_m}]]]
}
class "TextEncodingManager" as C_0000857558409748687473
class C_0000857558409748687473 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/TextEncoding.cpp#L41{TextEncodingManager}]] {
+TextEncodingManager() : void
+~TextEncodingManager() : void
+add(TextEncoding::Ptr pEncoding) : void
+add(TextEncoding::Ptr pEncoding, const std::string & name) : void
+remove(const std::string & name) : void
+find(const std::string & name) const : TextEncoding::Ptr
-TextEncodingManager(const TextEncodingManager & ) : void
-operator=(const TextEncodingManager & ) : TextEncodingManager &
-_encodings : TextEncodingManager::EncodingMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/TextEncoding.cpp#L106{_encodings}]]]
-_lock : RWLock [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/TextEncoding.cpp#L107{_lock}]]]
}
class "SharedPtr<OtherC,OtherRC,OtherRP>" as C_0001224149844436182791
class C_0001224149844436182791 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedPtr.h#L462{SharedPtr}]] {
}
class "Timespan" as C_0001507935607211469129
class C_0001507935607211469129 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timestamp.h#L28{Timespan}]] {
+Timespan() : void
+Timespan(Timespan::TimeDiff microseconds) : void
+Timespan(long seconds, long microseconds) : void
+Timespan(int days, int hours, int minutes, int seconds, int microSeconds) : void
+Timespan(const Timespan & timespan) : void
+~Timespan() : void
+operator=(const Timespan & timespan) : Timespan &
+operator=(Timespan::TimeDiff microseconds) : Timespan &
+assign(int days, int hours, int minutes, int seconds, int microSeconds) : Timespan &
+assign(long seconds, long microseconds) : Timespan &
+swap(Timespan & timespan) : void
+operator==(const Timespan & ts) const : bool
+operator!=(const Timespan & ts) const : bool
+operator>(const Timespan & ts) const : bool
+operator>=(const Timespan & ts) const : bool
+operator<(const Timespan & ts) const : bool
+operator<=(const Timespan & ts) const : bool
+operator==(Timespan::TimeDiff microSeconds) const : bool
+operator!=(Timespan::TimeDiff microSeconds) const : bool
+operator>(Timespan::TimeDiff microSeconds) const : bool
+operator>=(Timespan::TimeDiff microSeconds) const : bool
+operator<(Timespan::TimeDiff microSeconds) const : bool
+operator<=(Timespan::TimeDiff microSeconds) const : bool
+operator+(const Timespan & d) const : Timespan
+operator-(const Timespan & d) const : Timespan
+operator+=(const Timespan & d) : Timespan &
+operator-=(const Timespan & d) : Timespan &
+operator+(Timespan::TimeDiff microSeconds) const : Timespan
+operator-(Timespan::TimeDiff microSeconds) const : Timespan
+operator+=(Timespan::TimeDiff microSeconds) : Timespan &
+operator-=(Timespan::TimeDiff microSeconds) : Timespan &
+days() const : int
+hours() const : int
+totalHours() const : int
+minutes() const : int
+totalMinutes() const : int
+seconds() const : int
+totalSeconds() const : int
+milliseconds() const : int
+totalMilliseconds() const : Timespan::TimeDiff
+microseconds() const : int
+useconds() const : int
+totalMicroseconds() const : Timespan::TimeDiff
+Timespan<T,Period>(const std::chrono::duration<T,Period> & dtime) : void
+assign<T,Period>(const std::chrono::duration<T,Period> & dtime) : class Timespan &
-_span : Timespan::TimeDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timespan.h#L152{_span}]]]
{static} +MILLISECONDS : const Timespan::TimeDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timespan.h#L145{MILLISECONDS}]]]
{static} +SECONDS : const Timespan::TimeDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timespan.h#L146{SECONDS}]]]
{static} +MINUTES : const Timespan::TimeDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timespan.h#L147{MINUTES}]]]
{static} +HOURS : const Timespan::TimeDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timespan.h#L148{HOURS}]]]
{static} +DAYS : const Timespan::TimeDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timespan.h#L149{DAYS}]]]
}
enum "JSONOptions" as C_0000442888877581340502
enum C_0000442888877581340502 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/JSONString.h#L27{JSONOptions}]] {
JSON_PRESERVE_KEY_ORDER
JSON_ESCAPE_UNICODE
JSON_WRAP_STRINGS
}
class "UTF8" as C_0002119495307516719030
class C_0002119495307516719030 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTF8String.h#L27{UTF8}]] {
{static} +icompare(const std::string & str, std::string::size_type pos, std::string::size_type n, std::string::const_iterator it2, std::string::const_iterator end2) : int
{static} +icompare(const std::string & str1, const std::string & str2) : int
{static} +icompare(const std::string & str1, std::string::size_type n1, const std::string & str2, std::string::size_type n2) : int
{static} +icompare(const std::string & str1, std::string::size_type n, const std::string & str2) : int
{static} +icompare(const std::string & str1, std::string::size_type pos, std::string::size_type n, const std::string & str2) : int
{static} +icompare(const std::string & str1, std::string::size_type pos1, std::string::size_type n1, const std::string & str2, std::string::size_type pos2, std::string::size_type n2) : int
{static} +icompare(const std::string & str1, std::string::size_type pos1, std::string::size_type n, const std::string & str2, std::string::size_type pos2) : int
{static} +icompare(const std::string & str, std::string::size_type pos, std::string::size_type n, const std::string::value_type * ptr) : int
{static} +icompare(const std::string & str, std::string::size_type pos, const std::string::value_type * ptr) : int
{static} +icompare(const std::string & str, const std::string::value_type * ptr) : int
{static} +toUpper(const std::string & str) : std::string
{static} +toUpperInPlace(std::string & str) : std::string &
{static} +toLower(const std::string & str) : std::string
{static} +toLowerInPlace(std::string & str) : std::string &
{static} +removeBOM(std::string & str) : void
{static} +escape(const std::string & s, bool strictJSON = false) : std::string
{static} +escape(const std::string::const_iterator & begin, const std::string::const_iterator & end, bool strictJSON = false) : std::string
{static} +unescape(const std::string & s) : std::string
{static} +unescape(const std::string::const_iterator & begin, const std::string::const_iterator & end) : std::string
}
class "HashStatistic" as C_0000686760816421452608
class C_0000686760816421452608 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HashStatistic.h#L29{HashStatistic}]] {
+HashStatistic(UInt32 tableSize, UInt32 numEntries, UInt32 numZeroEntries, UInt32 maxEntry, std::vector<UInt32> details = = std::vector<UInt32>()) : void
+~HashStatistic() : void
+maxPositionsOfTable() const : UInt32
+numberOfEntries() const : UInt32
+numberOfZeroPositions() const : UInt32
+avgEntriesPerHash() const : double
+avgEntriesPerHashExclZeroEntries() const : double
+maxEntriesPerHash() const : UInt32
+detailedEntriesPerHash() const : const std::vector<UInt32>
+toString() const : std::string
-_sizeOfTable : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HashStatistic.h#L73{_sizeOfTable}]]]
-_numberOfEntries : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HashStatistic.h#L74{_numberOfEntries}]]]
-_numZeroEntries : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HashStatistic.h#L75{_numZeroEntries}]]]
-_maxEntriesPerHash : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HashStatistic.h#L76{_maxEntriesPerHash}]]]
-_detailedEntriesPerHash : std::vector<UInt32> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HashStatistic.h#L77{_detailedEntriesPerHash}]]]
}
class "Unicode" as C_0000103259944175666045
class C_0000103259944175666045 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L27{Unicode}]] {
{static} +properties(int ch, Unicode::CharacterProperties & props) : void
{static} +isSpace(int ch) : bool
{static} +isDigit(int ch) : bool
{static} +isPunct(int ch) : bool
{static} +isAlpha(int ch) : bool
{static} +isLower(int ch) : bool
{static} +isUpper(int ch) : bool
{static} +toLower(int ch) : int
{static} +toUpper(int ch) : int
+UCP_MAX_CODEPOINT : enum
}
enum "Unicode::CharacterCategory" as C_0000129418764681780607
enum C_0000129418764681780607 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L40{Unicode##CharacterCategory}]] {
UCP_OTHER
UCP_LETTER
UCP_MARK
UCP_NUMBER
UCP_PUNCTUATION
UCP_SYMBOL
UCP_SEPARATOR
}
enum "Unicode::CharacterType" as C_0002094379987949117379
enum C_0002094379987949117379 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L52{Unicode##CharacterType}]] {
UCP_CONTROL
UCP_FORMAT
UCP_UNASSIGNED
UCP_PRIVATE_USE
UCP_SURROGATE
UCP_LOWER_CASE_LETTER
UCP_MODIFIER_LETTER
UCP_OTHER_LETTER
UCP_TITLE_CASE_LETTER
UCP_UPPER_CASE_LETTER
UCP_SPACING_MARK
UCP_ENCLOSING_MARK
UCP_NON_SPACING_MARK
UCP_DECIMAL_NUMBER
UCP_LETTER_NUMBER
UCP_OTHER_NUMBER
UCP_CONNECTOR_PUNCTUATION
UCP_DASH_PUNCTUATION
UCP_CLOSE_PUNCTUATION
UCP_FINAL_PUNCTUATION
UCP_INITIAL_PUNCTUATION
UCP_OTHER_PUNCTUATION
UCP_OPEN_PUNCTUATION
UCP_CURRENCY_SYMBOL
UCP_MODIFIER_SYMBOL
UCP_MATHEMATICAL_SYMBOL
UCP_OTHER_SYMBOL
UCP_LINE_SEPARATOR
UCP_PARAGRAPH_SEPARATOR
UCP_SPACE_SEPARATOR
}
enum "Unicode::Script" as C_0001998673595727325479
enum C_0001998673595727325479 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L87{Unicode##Script}]] {
UCP_ARABIC
UCP_ARMENIAN
UCP_BENGALI
UCP_BOPOMOFO
UCP_BRAILLE
UCP_BUGINESE
UCP_BUHID
UCP_CANADIAN_ABORIGINAL
UCP_CHEROKEE
UCP_COMMON
UCP_COPTIC
UCP_CYPRIOT
UCP_CYRILLIC
UCP_DESERET
UCP_DEVANAGARI
UCP_ETHIOPIC
UCP_GEORGIAN
UCP_GLAGOLITIC
UCP_GOTHIC
UCP_GREEK
UCP_GUJARATI
UCP_GURMUKHI
UCP_HAN
UCP_HANGUL
UCP_HANUNOO
UCP_HEBREW
UCP_HIRAGANA
UCP_INHERITED
UCP_KANNADA
UCP_KATAKANA
UCP_KHAROSHTHI
UCP_KHMER
UCP_LAO
UCP_LATIN
UCP_LIMBU
UCP_LINEAR_B
UCP_MALAYALAM
UCP_MONGOLIAN
UCP_MYANMAR
UCP_NEW_TAI_LUE
UCP_OGHAM
UCP_OLD_ITALIC
UCP_OLD_PERSIAN
UCP_ORIYA
UCP_OSMANYA
UCP_RUNIC
UCP_SHAVIAN
UCP_SINHALA
UCP_SYLOTI_NAGRI
UCP_SYRIAC
UCP_TAGALOG
UCP_TAGBANWA
UCP_TAI_LE
UCP_TAMIL
UCP_TELUGU
UCP_THAANA
UCP_THAI
UCP_TIBETAN
UCP_TIFINAGH
UCP_UGARITIC
UCP_YI
UCP_BALINESE
UCP_CUNEIFORM
UCP_NKO
UCP_PHAGS_PA
UCP_PHOENICIAN
UCP_CARIAN
UCP_CHAM
UCP_KAYAH_LI
UCP_LEPCHA
UCP_LYCIAN
UCP_LYDIAN
UCP_OL_CHIKI
UCP_REJANG
UCP_SAURASHTRA
UCP_SUNDANESE
UCP_VAI
UCP_AVESTAN
UCP_BAMUM
UCP_EGYPTIAN_HIEROGLYPHS
UCP_IMPERIAL_ARAMAIC
UCP_INSCRIPTIONAL_PAHLAVI
UCP_INSCRIPTIONAL_PARTHIAN
UCP_JAVANESE
UCP_KAITHI
UCP_LISU
UCP_MEETEI_MAYEK
UCP_OLD_SOUTH_ARABIAN
UCP_OLD_TURKIC
UCP_SAMARITAN
UCP_TAI_THAM
UCP_TAI_VIET
UCP_BATAK
UCP_BRAHMI
UCP_MANDAIC
UCP_CHAKMA
UCP_MEROITIC_CURSIVE
UCP_MEROITIC_HIEROGLYPHS
UCP_MIAO
UCP_SHARADA
UCP_SORA_SOMPENG
UCP_TAKRI
UCP_BASSA_VAH
UCP_CAUCASIAN_ALBANIAN
UCP_DUPLOYAN
UCP_ELBASAN
UCP_GRANTHA
UCP_KHOJKI
UCP_KHUDAWADI
UCP_LINEAR_A
UCP_MAHAJANI
UCP_MANICHAEAN
UCP_MENDE_KIKAKUI
UCP_MODI
UCP_MRO
UCP_NABATAEAN
UCP_OLD_NORTH_ARABIAN
UCP_OLD_PERMIC
UCP_PAHAWH_HMONG
UCP_PALMYRENE
UCP_PSALTER_PAHLAVI
UCP_PAU_CIN_HAU
UCP_SIDDHAM
UCP_TIRHUTA
UCP_WARANG_CITI
}
class "Unicode::CharacterProperties" as C_0001714191664412273273
class C_0001714191664412273273 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L228{Unicode##CharacterProperties}]] {
+category : Unicode::CharacterCategory [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L232{category}]]]
+type : Unicode::CharacterType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L233{type}]]]
+script : Unicode::Script [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Unicode.h#L234{script}]]]
}
abstract "Configurable" as C_0001200126201296015565
abstract C_0001200126201296015565 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Configurable.h#L27{Configurable}]] {
+Configurable() : void
+~Configurable() : void
{abstract} +setProperty(const std::string & name, const std::string & value) = 0 : void
{abstract} +getProperty(const std::string & name) const = 0 : std::string
}
class "RefCountedObject" as C_0001113743326023075132
class C_0001113743326023075132 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RefCountedObject.h#L28{RefCountedObject}]] {
+RefCountedObject() : void
+duplicate() const : void
+release() const : void
+referenceCount() const : int
#~RefCountedObject() : void
-RefCountedObject(const RefCountedObject & ) : void
-operator=(const RefCountedObject & ) : RefCountedObject &
-_counter : AtomicCounter [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RefCountedObject.h#L59{_counter}]]]
}
class "AutoPtr<C>" as C_0001565453218644542614
class C_0001565453218644542614 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AutoPtr.h#L31{AutoPtr}]] {
+AutoPtr<C>() : void
+AutoPtr<C>(C * ptr) : void
+AutoPtr<C>(C * ptr, bool shared) : void
+AutoPtr<C>(const AutoPtr<C> & ptr) : void
+AutoPtr<C>(AutoPtr<C> && ptr) : void
+~AutoPtr<C>() : void
+assign(C * ptr) : AutoPtr<C> &
+assign(C * ptr, bool shared) : AutoPtr<C> &
+assign(const AutoPtr<C> & ptr) : AutoPtr<C> &
+reset() : void
+reset(C * ptr) : void
+reset(C * ptr, bool shared) : void
+reset(const AutoPtr<C> & ptr) : void
+operator=(C * ptr) : AutoPtr<C> &
+operator=(const AutoPtr<C> & ptr) : AutoPtr<C> &
+operator=(AutoPtr<C> && ptr) : AutoPtr<C> &
+swap(AutoPtr<C> & ptr) : void
+operator->() : C *
+operator->() const : const C *
+operator*() : C &
+operator*() const : const C &
+get() : C *
+get() const : const C *
+operator type-parameter-0-0 *() : C *
+operator const type-parameter-0-0 *() const : const C *
+operator!() const : bool
+isNull() const : bool
+duplicate() : C *
+operator==(const AutoPtr<C> & ptr) const : bool
+operator==(const C * ptr) const : bool
+operator==(C * ptr) const : bool
+operator==(std::nullptr_t ptr) const : bool
+operator!=(const AutoPtr<C> & ptr) const : bool
+operator!=(const C * ptr) const : bool
+operator!=(C * ptr) const : bool
+operator!=(std::nullptr_t ptr) const : bool
+operator<(const AutoPtr<C> & ptr) const : bool
+operator<(const C * ptr) const : bool
+operator<(C * ptr) const : bool
+operator<=(const AutoPtr<C> & ptr) const : bool
+operator<=(const C * ptr) const : bool
+operator<=(C * ptr) const : bool
+operator>(const AutoPtr<C> & ptr) const : bool
+operator>(const C * ptr) const : bool
+operator>(C * ptr) const : bool
+operator>=(const AutoPtr<C> & ptr) const : bool
+operator>=(const C * ptr) const : bool
+operator>=(C * ptr) const : bool
+AutoPtr<C><Other>(const AutoPtr<Other> & ptr) : void
+assign<Other>(const AutoPtr<Other> & ptr) : AutoPtr<C> &
+reset<Other>(const AutoPtr<Other> & ptr) : void
+operator=<Other>(const AutoPtr<Other> & ptr) : AutoPtr<C> &
+cast<Other>() : AutoPtr<Other>
+unsafeCast<Other>() : AutoPtr<Other>
-_ptr : C * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AutoPtr.h#L396{_ptr}]]]
}
abstract "Channel" as C_0001139956284459832268
abstract C_0001139956284459832268 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Channel.h#L34{Channel}]] {
+Channel() : void
+open() : void
+close() : void
{abstract} +log(const Message & msg) = 0 : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
#~Channel() : void
-Channel(const Channel & ) : void
-operator=(const Channel & ) : Channel &
}
class "ConsoleChannel" as C_0000482295528646993725
class C_0000482295528646993725 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L30{ConsoleChannel}]] {
+ConsoleChannel() : void
+ConsoleChannel(std::ostream & str) : void
+log(const Message & msg) : void
#~ConsoleChannel() : void
-_str : std::ostream & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L61{_str}]]]
{static} -_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L62{_mutex}]]]
}
class "ColorConsoleChannel" as C_0001962666083335112002
class C_0001962666083335112002 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L66{ColorConsoleChannel}]] {
+ColorConsoleChannel() : void
+ColorConsoleChannel(std::ostream & str) : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
#~ColorConsoleChannel() : void
#parseColor(const std::string & color) const : ColorConsoleChannel::Color
#formatColor(ColorConsoleChannel::Color color) const : std::string
#initColors() : void
-_str : std::ostream & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L178{_str}]]]
-_enableColors : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L179{_enableColors}]]]
-_colors : ColorConsoleChannel::Color[9] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L180{_colors}]]]
{static} -_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L181{_mutex}]]]
{static} -CSI : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L182{CSI}]]]
}
enum "ColorConsoleChannel::Color" as C_0001449093476097162097
enum C_0001449093476097162097 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ConsoleChannel.h#L151{ColorConsoleChannel##Color}]] {
CC_DEFAULT
CC_BLACK
CC_RED
CC_GREEN
CC_BROWN
CC_BLUE
CC_MAGENTA
CC_CYAN
CC_GRAY
CC_DARKGRAY
CC_LIGHTRED
CC_LIGHTGREEN
CC_YELLOW
CC_LIGHTBLUE
CC_LIGHTMAGENTA
CC_LIGHTCYAN
CC_WHITE
}
class "Message" as C_0002204584463250199617
class C_0002204584463250199617 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L29{Message}]] {
+Message() : void
+Message(const std::string & source, const std::string & text, Message::Priority prio) : void
+Message(const std::string & source, const std::string & text, Message::Priority prio, const char * file, int line) : void
+Message(const Message & msg) : void
+Message(Message && msg) : void
+Message(const Message & msg, const std::string & text) : void
+~Message() : void
+operator=(const Message & msg) : Message &
+operator=(Message && msg) : Message &
+swap(Message & msg) : void
+setSource(const std::string & src) : void
+getSource() const : const std::string &
+setText(const std::string & text) : void
+getText() const : const std::string &
+setPriority(Message::Priority prio) : void
+getPriority() const : Message::Priority
+setTime(const Timestamp & time) : void
+getTime() const : const Timestamp &
+setThread(const std::string & thread) : void
+getThread() const : const std::string &
+setTid(long pid) : void
+getTid() const : long
+getOsTid() const : long
+setPid(long pid) : void
+getPid() const : long
+setSourceFile(const char * file) : void
+getSourceFile() const : const char *
+setSourceLine(int line) : void
+getSourceLine() const : int
+has(const std::string & param) const : bool
+get(const std::string & param) const : const std::string &
+get(const std::string & param, const std::string & defaultValue) const : const std::string &
+getAll() const : const Message::StringMap &
+set(const std::string & param, const std::string & value) : void
+operator[](const std::string & param) const : const std::string &
+operator[](const std::string & param) : std::string &
#init() : void
-_source : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L205{_source}]]]
-_text : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L206{_text}]]]
-_prio : Message::Priority [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L207{_prio}]]]
-_time : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L208{_time}]]]
-_tid : long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L209{_tid}]]]
-_ostid : long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L210{_ostid}]]]
-_thread : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L211{_thread}]]]
-_pid : long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L212{_pid}]]]
-_file : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L213{_file}]]]
-_line : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L214{_line}]]]
-_pMap : Message::StringMap * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L215{_pMap}]]]
}
enum "Message::Priority" as C_0002092346162041059597
enum C_0002092346162041059597 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Message.h#L48{Message##Priority}]] {
PRIO_FATAL
PRIO_CRITICAL
PRIO_ERROR
PRIO_WARNING
PRIO_NOTICE
PRIO_INFORMATION
PRIO_DEBUG
PRIO_TRACE
}
abstract "Runnable" as C_0001965421471606022753
abstract C_0001965421471606022753 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Runnable.h#L27{Runnable}]] {
+Runnable() : void
+~Runnable() : void
{abstract} +run() = 0 : void
}
class "EventImpl" as C_0001377878747410067940
class C_0001377878747410067940 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event_POSIX.h#L31{EventImpl}]] {
#EventImpl(bool autoReset) : void
#~EventImpl() : void
#setImpl() : void
#waitImpl() : void
#waitImpl(long milliseconds) : bool
#resetImpl() : void
-_auto : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event_POSIX.h#L42{_auto}]]]
-_state : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event_POSIX.h#L43{_state}]]]
-_mutex : pthread_mutex_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event_POSIX.h#L44{_mutex}]]]
-_cond : pthread_cond_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event_POSIX.h#L45{_cond}]]]
}
class "Event" as C_0001151966828164333711
class C_0001151966828164333711 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event.h#L37{Event}]] {
+Event(Event::EventType type = EVENT_AUTORESET) : void
+Event(bool autoReset) : void
+~Event() : void
+set() : void
+wait() : void
+wait(long milliseconds) : void
+tryWait(long milliseconds) : bool
+reset() : void
-Event(const Event & ) : void
-operator=(const Event & ) : Event &
}
enum "Event::EventType" as C_0000088281926639797410
enum C_0000088281926639797410 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Event.h#L47{Event##EventType}]] {
EVENT_MANUALRESET
EVENT_AUTORESET
}
abstract "Task" as C_0001335620280343073859
abstract C_0001335620280343073859 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L36{Task}]] {
+Task(const std::string & name) : void
+name() const : const std::string &
+progress() const : float
+cancel() : void
+isCancelled() const : bool
+state() const : Task::TaskState
+reset() : void
{abstract} +runTask() = 0 : void
+run() : void
#sleep(long milliseconds) : bool
#yield() : bool
#setProgress(float progress) : void
#postNotification(Notification * pNf) : void
#setOwner(TaskManager * pOwner) : void
#getOwner() const : TaskManager *
#setState(Task::TaskState state) : void
#~Task() : void
-Task() : void
-Task(const Task & ) : void
-operator=(const Task & ) : Task &
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L148{_name}]]]
-_pOwner : TaskManager * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L149{_pOwner}]]]
-_progress : float [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L150{_progress}]]]
-_state : std::atomic<TaskState> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L151{_state}]]]
-_cancelEvent : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L152{_cancelEvent}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L153{_mutex}]]]
}
enum "Task::TaskState" as C_0000830455689999420114
enum C_0000830455689999420114 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Task.h#L44{Task##TaskState}]] {
TASK_IDLE
TASK_STARTING
TASK_RUNNING
TASK_CANCELLING
TASK_FINISHED
}
class "Notification" as C_0000778337630937443992
class C_0000778337630937443992 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Notification.h#L30{Notification}]] {
+Notification() : void
+name() const : std::string
#~Notification() : void
}
class "AutoPtr<Notification>" as C_0001854365760272980797
class C_0001854365760272980797 {
}
class "SharedPtr<AbstractObserver>" as C_0000786021341029181962
class C_0000786021341029181962 {
}
class "NotificationCenter" as C_0001984243994396754009
class C_0001984243994396754009 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationCenter.h#L35{NotificationCenter}]] {
+NotificationCenter() : void
+~NotificationCenter() : void
+addObserver(const AbstractObserver & observer) : void
+removeObserver(const AbstractObserver & observer) : void
+hasObserver(const AbstractObserver & observer) const : bool
+postNotification(Notification::Ptr pNotification) : void
+hasObservers() const : bool
+countObservers() const : std::size_t
{static} +defaultCenter() : NotificationCenter &
-_observers : NotificationCenter::ObserverList [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationCenter.h#L131{_observers}]]]
-_mutex : Mutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationCenter.h#L132{_mutex}]]]
}
class "AutoPtr<Task>" as C_0000712991995608400945
class C_0000712991995608400945 {
}
class "TaskManager" as C_0000744659040841141778
class C_0000744659040841141778 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L38{TaskManager}]] {
+TaskManager() : void
+TaskManager(ThreadPool & pool) : void
+~TaskManager() : void
+start(Task * pTask) : void
+cancelAll() : void
+joinAll() : void
+taskList() const : TaskManager::TaskList
+count() const : int
+addObserver(const AbstractObserver & observer) : void
+removeObserver(const AbstractObserver & observer) : void
#postNotification(const Notification::Ptr & pNf) : void
#taskStarted(Task * pTask) : void
#taskProgress(Task * pTask, float progress) : void
#taskCancelled(Task * pTask) : void
#taskFinished(Task * pTask) : void
#taskFailed(Task * pTask, const Exception & exc) : void
-_threadPool : ThreadPool & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L113{_threadPool}]]]
-_taskList : TaskManager::TaskList [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L114{_taskList}]]]
-_lastProgressNotification : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L115{_lastProgressNotification}]]]
-_nc : NotificationCenter [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L116{_nc}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L117{_mutex}]]]
{static} +MIN_PROGRESS_NOTIFICATION_INTERVAL : const int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskManager.h#L99{MIN_PROGRESS_NOTIFICATION_INTERVAL}]]]
}
class "TaskNotification" as C_0001400049298759004605
class C_0001400049298759004605 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L29{TaskNotification}]] {
+TaskNotification(Task * pTask) : void
+task() const : Task *
#~TaskNotification() : void
-_pTask : Task * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L44{_pTask}]]]
}
class "TaskStartedNotification" as C_0001483563052275498022
class C_0001483563052275498022 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L48{TaskStartedNotification}]] {
+TaskStartedNotification(Task * pTask) : void
#~TaskStartedNotification() : void
}
class "TaskCancelledNotification" as C_0001594642119528241436
class C_0001594642119528241436 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L60{TaskCancelledNotification}]] {
+TaskCancelledNotification(Task * pTask) : void
#~TaskCancelledNotification() : void
}
class "TaskFinishedNotification" as C_0001432284764107968376
class C_0001432284764107968376 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L72{TaskFinishedNotification}]] {
+TaskFinishedNotification(Task * pTask) : void
#~TaskFinishedNotification() : void
}
class "TaskFailedNotification" as C_0000063880861976262016
class C_0000063880861976262016 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L84{TaskFailedNotification}]] {
+TaskFailedNotification(Task * pTask, const Exception & exc) : void
+reason() const : const Exception &
#~TaskFailedNotification() : void
-_pException : Exception * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L97{_pException}]]]
}
class "TaskProgressNotification" as C_0001242072285346898450
class C_0001242072285346898450 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L101{TaskProgressNotification}]] {
+TaskProgressNotification(Task * pTask, float progress) : void
+progress() const : float
#~TaskProgressNotification() : void
-_progress : float [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L114{_progress}]]]
}
class "TaskCustomNotification<C>" as C_0000779007367107805186
class C_0000779007367107805186 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L119{TaskCustomNotification}]] {
+TaskCustomNotification<C>(Task * pTask, const C & custom) : void
+custom() const : const C &
#~TaskCustomNotification<C>() : void
-_custom : C [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TaskNotification.h#L142{_custom}]]]
}
class "SignalHandler" as C_0000001537846473447322
class C_0000001537846473447322 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SignalHandler.h#L34{SignalHandler}]] {
+SignalHandler() : void
+~SignalHandler() : void
+jumpBuffer() : sigjmp_buf &
{static} +throwSignalException(int sig) : void
{static} +install() : void
{static} #handleSignal(int sig) : void
{static} #jumpBufferVec() : SignalHandler::JumpBufferVec &
{static} -_jumpBufferVec : SignalHandler::JumpBufferVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SignalHandler.h#L107{_jumpBufferVec}]]]
}
class "SignalHandler::JumpBuffer" as C_0002012636548536719285
class C_0002012636548536719285 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SignalHandler.h#L95{SignalHandler##JumpBuffer}]] {
+buf : sigjmp_buf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SignalHandler.h#L99{buf}]]]
}
class "SharedPtr<Runnable>" as C_0000538007128095799409
class C_0000538007128095799409 {
}
class "AutoPtr<ThreadImpl::ThreadData>" as C_0000128368451169465650
class C_0000128368451169465650 {
}
class "ThreadImpl" as C_0001127777098533119090
class C_0001127777098533119090 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L43{ThreadImpl}]] {
+ThreadImpl() : void
+~ThreadImpl() : void
+tidImpl() const : ThreadImpl::TIDImpl
+setPriorityImpl(int prio) : void
+getPriorityImpl() const : int
+setOSPriorityImpl(int prio, int policy = 0) : void
+getOSPriorityImpl() const : int
{static} +getMinOSPriorityImpl(int policy) : int
{static} +getMaxOSPriorityImpl(int policy) : int
+setStackSizeImpl(int size) : void
+getStackSizeImpl() const : int
+startImpl(SharedPtr<Runnable> pTarget) : void
+joinImpl() : void
+joinImpl(long milliseconds) : bool
+isRunningImpl() const : bool
{static} +sleepImpl(long milliseconds) : void
{static} +yieldImpl() : void
{static} +currentImpl() : ThreadImpl *
{static} +currentTidImpl() : ThreadImpl::TIDImpl
{static} +currentOsTidImpl() : long
{static} #runnableEntry(void * pThread) : void *
{static} #mapPrio(int prio, int policy = 0) : int
{static} #reverseMapPrio(int osPrio, int policy = 0) : int
-_pData : AutoPtr<ThreadImpl::ThreadData> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L147{_pData}]]]
-_jumpBufferVec : SignalHandler::JumpBufferVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L151{_jumpBufferVec}]]]
{static} -_currentThreadHolder : ThreadImpl::CurrentThreadHolder [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L148{_currentThreadHolder}]]]
}
enum "ThreadImpl::Priority" as C_0001935176925135100095
enum C_0001935176925135100095 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L49{ThreadImpl##Priority}]] {
PRIO_LOWEST_IMPL
PRIO_LOW_IMPL
PRIO_NORMAL_IMPL
PRIO_HIGH_IMPL
PRIO_HIGHEST_IMPL
}
enum "ThreadImpl::Policy" as C_0000860745802377526704
enum C_0000860745802377526704 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L58{ThreadImpl##Policy}]] {
POLICY_DEFAULT_IMPL
}
class "ThreadImpl::CurrentThreadHolder" as C_0000551965432486681823
class C_0000551965432486681823 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L91{ThreadImpl##CurrentThreadHolder}]] {
+CurrentThreadHolder() : void
+~CurrentThreadHolder() : void
+get() const : ThreadImpl *
+set(ThreadImpl * pThread) : void
-_key : pthread_key_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L113{_key}]]]
}
class "ThreadImpl::ThreadData" as C_0001237314582236222701
class C_0001237314582236222701 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L116{ThreadImpl##ThreadData}]] {
+ThreadData() : void
+pRunnableTarget : SharedPtr<Runnable> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L135{pRunnableTarget}]]]
+thread : pthread_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L136{thread}]]]
+prio : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L137{prio}]]]
+osPrio : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L138{osPrio}]]]
+policy : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L139{policy}]]]
+done : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L140{done}]]]
+stackSize : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L141{stackSize}]]]
+started : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L142{started}]]]
+joined : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L143{joined}]]]
+mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread_POSIX.h#L144{mutex}]]]
}
class "Thread" as C_0001168023544756617055
class C_0001168023544756617055 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L46{Thread}]] {
+Thread() : void
+Thread(const std::string & name) : void
+~Thread() : void
+id() const : int
+tid() const : Thread::TID
+name() const : std::string
+getName() const : std::string
+setName(const std::string & name) : void
+setPriority(Thread::Priority prio) : void
+getPriority() const : Thread::Priority
+setOSPriority(int prio, int policy = POLICY_DEFAULT) : void
+getOSPriority() const : int
{static} +getMinOSPriority(int policy = POLICY_DEFAULT) : int
{static} +getMaxOSPriority(int policy = POLICY_DEFAULT) : int
+setStackSize(int size) : void
+getStackSize() const : int
+start(Runnable & target) : void
+start(SharedPtr<Runnable> pTarget) : void
+start(ThreadImpl::Callable target, void * pData = 0) : void
+join() : void
+join(long milliseconds) : void
+tryJoin(long milliseconds) : bool
+isRunning() const : bool
{static} +trySleep(long milliseconds) : bool
+wakeUp() : void
{static} +sleep(long milliseconds) : void
{static} +yield() : void
{static} +current() : Thread *
{static} +currentTid() : Thread::TID
{static} +currentOsTid() : long
#tls() : ThreadLocalStorage &
#clearTLS() : void
#makeName() : std::string
{static} #uniqueId() : int
-Thread(const Thread & ) : void
-operator=(const Thread & ) : Thread &
+startFunc<Functor>(const Functor & fn) : void
+startFunc<Functor>(Functor && fn) : void
-_id : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L277{_id}]]]
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L278{_name}]]]
-_pTLS : ThreadLocalStorage * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L279{_pTLS}]]]
-_event : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L280{_event}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L281{_mutex}]]]
}
enum "Thread::Priority" as C_0001873375271791245391
enum C_0001873375271791245391 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L60{Thread##Priority}]] {
PRIO_LOWEST
PRIO_LOW
PRIO_NORMAL
PRIO_HIGH
PRIO_HIGHEST
}
enum "Thread::Policy" as C_0000125553801282412124
enum C_0000125553801282412124 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L70{Thread##Policy}]] {
POLICY_DEFAULT
}
class "Thread::FunctorRunnable<Functor>" as C_0000850823773088829116
class C_0000850823773088829116 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L247{Thread##FunctorRunnable}]] {
+FunctorRunnable<Functor>(const Functor & functor) : void
+FunctorRunnable<Functor>(Functor && functor) : void
+~FunctorRunnable<Functor>() : void
+run() : void
-_functor : Functor [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L270{_functor}]]]
}
class "ThreadPool" as C_0000578799755200939663
class C_0000578799755200939663 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L34{ThreadPool}]] {
+ThreadPool(int minCapacity = 2, int maxCapacity = 16, int idleTime = 60, int stackSize = 0) : void
+ThreadPool(const std::string & name, int minCapacity = 2, int maxCapacity = 16, int idleTime = 60, int stackSize = 0) : void
+~ThreadPool() : void
+addCapacity(int n) : void
+capacity() const : int
+setStackSize(int stackSize) : void
+getStackSize() const : int
+used() const : int
+allocated() const : int
+available() const : int
+start(Runnable & target) : void
+start(Runnable & target, const std::string & name) : void
+startWithPriority(Thread::Priority priority, Runnable & target) : void
+startWithPriority(Thread::Priority priority, Runnable & target, const std::string & name) : void
+stopAll() : void
+joinAll() : void
+collect() : void
+name() const : const std::string &
{static} +defaultPool() : ThreadPool &
#getThread() : PooledThread *
#createThread() : PooledThread *
#housekeep() : void
-ThreadPool(const ThreadPool & pool) : void
-operator=(const ThreadPool & pool) : ThreadPool &
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L172{_name}]]]
-_minCapacity : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L173{_minCapacity}]]]
-_maxCapacity : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L174{_maxCapacity}]]]
-_idleTime : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L175{_idleTime}]]]
-_serial : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L176{_serial}]]]
-_age : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L177{_age}]]]
-_stackSize : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L178{_stackSize}]]]
-_threads : ThreadPool::ThreadVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L179{_threads}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L180{_mutex}]]]
}
abstract "AbstractObserver" as C_0000190609818484253828
abstract C_0000190609818484253828 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationCenter.h#L32{AbstractObserver}]] {
+AbstractObserver() : void
+AbstractObserver(const AbstractObserver & observer) : void
+~AbstractObserver() : void
+operator=(const AbstractObserver & observer) : AbstractObserver &
{abstract} +notify(Notification * pNf) const = 0 : void
{abstract} +equals(const AbstractObserver & observer) const = 0 : bool
{abstract} +accepts(Notification * pNf, const char * pName = 0) const = 0 : bool
{abstract} +clone() const = 0 : AbstractObserver *
{abstract} +disable() = 0 : void
}
class "PooledThread" as C_0001145923852811877192
class C_0001145923852811877192 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadPool.h#L31{PooledThread}]] {
+PooledThread(const std::string & name, int stackSize = 0) : void
+~PooledThread() : void
+start() : void
+start(Thread::Priority priority, Runnable & target) : void
+start(Thread::Priority priority, Runnable & target, const std::string & name) : void
+idle() : bool
+idleTime() : int
+join() : void
+activate() : void
+release() : void
+run() : void
-_idle : volatile bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L48{_idle}]]]
-_idleTime : volatile std::time_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L49{_idleTime}]]]
-_pTarget : Runnable * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L50{_pTarget}]]]
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L51{_name}]]]
-_thread : Thread [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L52{_thread}]]]
-_targetReady : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L53{_targetReady}]]]
-_targetCompleted : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L54{_targetCompleted}]]]
-_started : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L55{_started}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L56{_mutex}]]]
}
class "ThreadLocalStorage" as C_0002149906927391810644
class C_0002149906927391810644 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Thread.h#L43{ThreadLocalStorage}]] {
+ThreadLocalStorage() : void
+~ThreadLocalStorage() : void
+get(const void * key) : TLSAbstractSlot *&
{static} +current() : ThreadLocalStorage &
{static} +clear() : void
-_map : ThreadLocalStorage::TLSMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadLocal.h#L94{_map}]]]
}
class "StringTokenizer" as C_0000689703710541275447
class C_0000689703710541275447 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StringTokenizer.h#L30{StringTokenizer}]] {
+StringTokenizer(const std::string & str, const std::string & separators, int options = 0) : void
+~StringTokenizer() : void
+begin() const : StringTokenizer::Iterator
+end() const : StringTokenizer::Iterator
+operator[](std::size_t index) const : const std::string &
+operator[](std::size_t index) : std::string &
+has(const std::string & token) const : bool
+find(const std::string & token, std::string::size_type pos = 0) const : std::string::size_type
+replace(const std::string & oldToken, const std::string & newToken, std::string::size_type pos = 0) : std::size_t
+count() const : std::size_t
+count(const std::string & token) const : std::size_t
-trim(std::string & token) : void
-_tokens : StringTokenizer::TokenVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StringTokenizer.h#L88{_tokens}]]]
}
enum "StringTokenizer::Options" as C_0000642651005064669200
enum C_0000642651005064669200 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StringTokenizer.h#L36{StringTokenizer##Options}]] {
TOK_IGNORE_EMPTY
TOK_TRIM
}
class "BasicMemoryStreamBuf<ch,tr>" as C_0001176615863512394763
class C_0001176615863512394763 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L35{BasicMemoryStreamBuf}]] {
+BasicMemoryStreamBuf<ch, tr>(BasicMemoryStreamBuf::char_type * pBuffer, std::streamsize bufferSize) : void
+~BasicMemoryStreamBuf<ch, tr>() : void
+overflow(BasicMemoryStreamBuf::int_type ) : BasicMemoryStreamBuf::int_type
+underflow() : BasicMemoryStreamBuf::int_type
+seekoff(BasicMemoryStreamBuf::off_type off, std::ios_base::seekdir way, std::ios_base::openmode which = std::ios_base::in | std::ios_base::out) : BasicMemoryStreamBuf::pos_type
+sync() : int
+charsWritten() const : std::streamsize
+reset() : void
-BasicMemoryStreamBuf<ch, tr>() : void
-BasicMemoryStreamBuf<ch, tr>(const BasicMemoryStreamBuf<ch,tr> & ) : void
-operator=(const BasicMemoryStreamBuf<ch,tr> & ) : BasicMemoryStreamBuf<ch,tr> &
-_pBuffer : BasicMemoryStreamBuf::char_type * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L163{_pBuffer}]]]
-_bufferSize : std::streamsize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L164{_bufferSize}]]]
}
class "BasicMemoryStreamBuf<char,std::char_traits<char>>" as C_0001856495841924249909
class C_0001856495841924249909 {
}
class "MemoryIOS" as C_0000479344489870899478
class C_0000479344489870899478 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L178{MemoryIOS}]] {
+MemoryIOS(char * pBuffer, std::streamsize bufferSize) : void
+~MemoryIOS() : void
+rdbuf() : MemoryStreamBuf *
#_buf : MemoryStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L195{_buf}]]]
}
class "MemoryInputStream" as C_0000964920602530551508
class C_0000964920602530551508 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L199{MemoryInputStream}]] {
+MemoryInputStream(const char * pBuffer, std::streamsize bufferSize) : void
+~MemoryInputStream() : void
}
class "MemoryOutputStream" as C_0000532327502470897545
class C_0000532327502470897545 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryStream.h#L212{MemoryOutputStream}]] {
+MemoryOutputStream(char * pBuffer, std::streamsize bufferSize) : void
+~MemoryOutputStream() : void
+charsWritten() const : std::streamsize
}
class "IsReference<T>" as C_0001300577133371038212
class C_0001300577133371038212 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L28{IsReference}]] {
+VALUE : enum
}
class "IsReference<T &>" as C_0000756348071772279130
class C_0000756348071772279130 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L39{IsReference}]] {
+VALUE : enum
}
class "IsReference<T const&>" as C_0001802836422927741554
class C_0001802836422927741554 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L49{IsReference}]] {
+VALUE : enum
}
class "IsConst<T>" as C_0000209357500568669947
class C_0000209357500568669947 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L59{IsConst}]] {
+VALUE : enum
}
class "IsConst<T const&>" as C_0001733588137038710370
class C_0001733588137038710370 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L70{IsConst}]] {
+VALUE : enum
}
class "IsConst<const type-parameter-0-0>" as C_0001848875410676016993
class C_0001848875410676016993 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L80{IsConst}]] {
+VALUE : enum
}
class "IsConst<T[i]>" as C_0001081431353318555504
class C_0001081431353318555504 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L90{IsConst}]] {
+VALUE : enum
}
class "TypeWrapper<T>" as C_0002101157559588427005
class C_0002101157559588427005 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L101{TypeWrapper}]] {
}
class "TypeWrapper<const type-parameter-0-0>" as C_0001234983749361663515
class C_0001234983749361663515 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L112{TypeWrapper}]] {
}
class "TypeWrapper<T const&>" as C_0001149575210938021352
class C_0001149575210938021352 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L122{TypeWrapper}]] {
}
class "TypeWrapper<T &>" as C_0000093390567346172390
class C_0000093390567346172390 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaProgramming.h#L132{TypeWrapper}]] {
}
abstract "Dynamic::VarHolder" as C_0000820091630223006238
abstract C_0000820091630223006238 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L104{VarHolder}]] {
+~VarHolder() : void
{abstract} +clone(Placeholder<Dynamic::VarHolder> * pHolder = 0) const = 0 : Dynamic::VarHolder *
{abstract} +type() const = 0 : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & val) const : void
+convert(Timestamp & val) const : void
+convert(UUID & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
#VarHolder() : void
#cloneHolder<T>(Placeholder<Dynamic::VarHolder> * pVarHolder, const T & val) : class Dynamic::VarHolder *
#convertToSmaller<F,T>(const F & from, T & to) : void
#convertToSmallerUnsigned<F,T>(const F & from, T & to) : void
#convertSignedToUnsigned<F,T>(const F & from, T & to) : void
#convertSignedFloatToUnsigned<F,T>(const F & from, T & to) : void
#convertUnsignedToSigned<F,T>(const F & from, T & to) : void
-checkUpperLimit<F,T>(const F & from) : void
-checkLowerLimit<F,T>(const F & from) : void
-checkUpperLimitFloat<F,T>(const F & from) : void
-checkLowerLimitFloat<F,T>(const F & from) : void
}
class "Dynamic::VarHolderImpl<T>" as C_0001112867090784569162
class C_0001112867090784569162 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L705{VarHolderImpl}]] {
+VarHolderImpl<T>(const T & val) : void
+~VarHolderImpl<T>() : void
+type() const : const std::type_info &
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const T &
-VarHolderImpl<T>() : void
-VarHolderImpl<T>(const VarHolderImpl<T> & ) : void
-operator=(const VarHolderImpl<T> & ) : VarHolderImpl<T> &
-_val : T [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L754{_val}]]]
}
class "Dynamic::VarHolderImpl<signed char>" as C_0002149165824584484566
class C_0002149165824584484566 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L759{VarHolderImpl}]] {
+VarHolderImpl(Int8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int8> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int8> & ) : Dynamic::VarHolderImpl<Int8> &
-_val : Int8 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L910{_val}]]]
}
class "Dynamic::VarHolderImpl<short>" as C_0000198808093629002393
class C_0000198808093629002393 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L915{VarHolderImpl}]] {
+VarHolderImpl(Int16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int16> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int16> & ) : Dynamic::VarHolderImpl<Int16> &
-_val : Int16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1063{_val}]]]
}
class "Dynamic::VarHolderImpl<int>" as C_0000976768452323437983
class C_0000976768452323437983 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1068{VarHolderImpl}]] {
+VarHolderImpl(Int32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int32> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int32> & ) : Dynamic::VarHolderImpl<Int32> &
-_val : Int32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1215{_val}]]]
}
class "Dynamic::VarHolderImpl<long>" as C_0001804431617899042426
class C_0001804431617899042426 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1220{VarHolderImpl}]] {
+VarHolderImpl(Int64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Int64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Int64> & ) : void
-operator=(const Dynamic::VarHolderImpl<Int64> & ) : Dynamic::VarHolderImpl<Int64> &
-_val : Int64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1382{_val}]]]
}
class "Dynamic::VarHolderImpl<unsigned char>" as C_0001832009513687525374
class C_0001832009513687525374 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1387{VarHolderImpl}]] {
+VarHolderImpl(UInt8 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt8 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt8> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt8> & ) : Dynamic::VarHolderImpl<UInt8> &
-_val : UInt8 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1534{_val}]]]
}
class "Dynamic::VarHolderImpl<unsigned short>" as C_0000572186414558919480
class C_0000572186414558919480 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1539{VarHolderImpl}]] {
+VarHolderImpl(UInt16 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt16 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt16> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt16> & ) : Dynamic::VarHolderImpl<UInt16> &
-_val : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1686{_val}]]]
}
class "Dynamic::VarHolderImpl<unsigned int>" as C_0000166253842255815357
class C_0000166253842255815357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1691{VarHolderImpl}]] {
+VarHolderImpl(UInt32 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt32 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt32> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt32> & ) : Dynamic::VarHolderImpl<UInt32> &
-_val : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1838{_val}]]]
}
class "Dynamic::VarHolderImpl<unsigned long>" as C_0001459401574844645109
class C_0001459401574844645109 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L1843{VarHolderImpl}]] {
+VarHolderImpl(UInt64 val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & dt) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UInt64 &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UInt64> & ) : void
-operator=(const Dynamic::VarHolderImpl<UInt64> & ) : Dynamic::VarHolderImpl<UInt64> &
-_val : UInt64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2011{_val}]]]
}
class "Dynamic::VarHolderImpl<bool>" as C_0000599279109574326060
class C_0000599279109574326060 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2016{VarHolderImpl}]] {
+VarHolderImpl(bool val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const bool &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<bool> & ) : void
-operator=(const Dynamic::VarHolderImpl<bool> & ) : Dynamic::VarHolderImpl<bool> &
-_val : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2161{_val}]]]
}
class "Dynamic::VarHolderImpl<float>" as C_0000384619052225252533
class C_0000384619052225252533 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2166{VarHolderImpl}]] {
+VarHolderImpl(float val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const float &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<float> & ) : void
-operator=(const Dynamic::VarHolderImpl<float> & ) : Dynamic::VarHolderImpl<float> &
-_val : float [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2314{_val}]]]
}
class "Dynamic::VarHolderImpl<double>" as C_0002242257052791493112
class C_0002242257052791493112 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2319{VarHolderImpl}]] {
+VarHolderImpl(double val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const double &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<double> & ) : void
-operator=(const Dynamic::VarHolderImpl<double> & ) : Dynamic::VarHolderImpl<double> &
-_val : double [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2473{_val}]]]
}
class "Dynamic::VarHolderImpl<char>" as C_0001942181379759217898
class C_0001942181379759217898 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2478{VarHolderImpl}]] {
+VarHolderImpl(char val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const char &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<char> & ) : void
-operator=(const Dynamic::VarHolderImpl<char> & ) : Dynamic::VarHolderImpl<char> &
-_val : char [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2623{_val}]]]
}
class "Dynamic::VarHolderImpl<std::string>" as C_0002291903337356664508
class C_0002291903337356664508 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2628{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const std::string & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+convert(UTF16String & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+convert(UUID & uuid) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::string &
+isString() const : bool
+size() const : std::size_t
+operator[](std::string::size_type n) : char &
+operator[](std::string::size_type n) const : const char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<std::string> & ) : void
-operator=(const Dynamic::VarHolderImpl<std::string> & ) : Dynamic::VarHolderImpl<std::string> &
-_val : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2820{_val}]]]
}
class "Dynamic::VarHolderImpl<std::basic_string<unsigned short>>" as C_0001370368867041199969
class C_0001370368867041199969 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L2825{VarHolderImpl}]] {
+VarHolderImpl(const char * pVal) : void
+VarHolderImpl(const UTF16String & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(UTF16String & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UTF16String &
+isString() const : bool
+size() const : std::size_t
+operator[](UTF16String::size_type n) : UTF16Char &
+operator[](UTF16String::size_type n) const : const UTF16Char &
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UTF16String> & ) : void
-operator=(const Dynamic::VarHolderImpl<UTF16String> & ) : Dynamic::VarHolderImpl<UTF16String> &
-toStdString() const : std::string
-_val : UTF16String [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3022{_val}]]]
}
class "Dynamic::VarHolderImpl<long long>" as C_0001646173285346905617
class C_0001646173285346905617 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3309{VarHolderImpl}]] {
+VarHolderImpl(long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<long long> & ) : Dynamic::VarHolderImpl<long long> &
-_val : long long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3452{_val}]]]
}
class "Dynamic::VarHolderImpl<unsigned long long>" as C_0001583654034047392858
class C_0001583654034047392858 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3457{VarHolderImpl}]] {
+VarHolderImpl(unsigned long long val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & val) const : void
+convert(Int16 & val) const : void
+convert(Int32 & val) const : void
+convert(Int64 & val) const : void
+convert(UInt8 & val) const : void
+convert(UInt16 & val) const : void
+convert(UInt32 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(bool & val) const : void
+convert(float & val) const : void
+convert(double & val) const : void
+convert(char & val) const : void
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const unsigned long long &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<unsigned long long> & ) : void
-operator=(const Dynamic::VarHolderImpl<unsigned long long> & ) : Dynamic::VarHolderImpl<unsigned long long> &
-_val : unsigned long long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3600{_val}]]]
}
class "Dynamic::VarHolderImpl<std::vector<T>>" as C_0000910307965681926894
class C_0000910307965681926894 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3608{VarHolderImpl}]] {
+VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::vector<T> & val) : void
+~VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::vector<T> &
+isVector() const : bool
+size() const : std::size_t
+operator[](typename std::vector<T>::size_type n) : T &
+operator[](typename std::vector<T>::size_type n) const : const T &
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<vector<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<vector<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::vector<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3668{_val}]]]
}
class "Dynamic::VarHolderImpl<std::list<T>>" as C_0000355772964752054032
class C_0000355772964752054032 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3673{VarHolderImpl}]] {
+VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::list<T> & val) : void
+~VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::list<T> &
+isList() const : bool
+size() const : std::size_t
+operator[](typename std::list<T>::size_type n) : T &
+operator[](typename std::list<T>::size_type n) const : const T &
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<list<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<list<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::list<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3743{_val}]]]
}
class "Dynamic::VarHolderImpl<std::deque<T>>" as C_0001350084679139174053
class C_0001350084679139174053 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3748{VarHolderImpl}]] {
+VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const std::deque<T> & val) : void
+~VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const std::deque<T> &
+isDeque() const : bool
+size() const : std::size_t
+operator[](typename std::deque<T>::size_type n) : T &
+operator[](typename std::deque<T>::size_type n) const : const T &
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >() : void
-VarHolderImpl<deque<type-parameter-0-0, allocator<type-parameter-0-0> > >(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : void
-operator=(const VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> & ) : VarHolderImpl<deque<type-parameter-0-0,allocator<type-parameter-0-0>>> &
-_val : std::deque<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3808{_val}]]]
}
class "Dynamic::VarHolderImpl<DateTime>" as C_0000699000175415913074
class C_0000699000175415913074 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3813{VarHolderImpl}]] {
+VarHolderImpl(const DateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const DateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<DateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<DateTime> & ) : Dynamic::VarHolderImpl<DateTime> &
-_val : DateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3958{_val}]]]
}
class "Dynamic::VarHolderImpl<LocalDateTime>" as C_0001850771625416044357
class C_0001850771625416044357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L3963{VarHolderImpl}]] {
+VarHolderImpl(const LocalDateTime & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const LocalDateTime &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<LocalDateTime> & ) : void
-operator=(const Dynamic::VarHolderImpl<LocalDateTime> & ) : Dynamic::VarHolderImpl<LocalDateTime> &
-_val : LocalDateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4093{_val}]]]
}
class "Dynamic::VarHolderImpl<Timestamp>" as C_0001458511670125196521
class C_0001458511670125196521 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4098{VarHolderImpl}]] {
+VarHolderImpl(const Timestamp & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int64 & val) const : void
+convert(UInt64 & val) const : void
+convert(long long & val) const : void
+convert(unsigned long long & val) const : void
+convert(std::string & val) const : void
+convert(DateTime & val) const : void
+convert(LocalDateTime & ldt) const : void
+convert(Timestamp & ts) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Timestamp &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<Timestamp> & ) : void
-operator=(const Dynamic::VarHolderImpl<Timestamp> & ) : Dynamic::VarHolderImpl<Timestamp> &
-_val : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4228{_val}]]]
}
class "Dynamic::VarHolderImpl<UUID>" as C_0001286239480653274581
class C_0001286239480653274581 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4233{VarHolderImpl}]] {
+VarHolderImpl(const UUID & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(std::string & val) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const UUID &
+isArray() const : bool
+isStruct() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
-VarHolderImpl() : void
-VarHolderImpl(const Dynamic::VarHolderImpl<UUID> & ) : void
-operator=(const Dynamic::VarHolderImpl<UUID> & ) : Dynamic::VarHolderImpl<UUID> &
-_val : UUID [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarHolder.h#L4324{_val}]]]
}
class "Dynamic::VarIterator" as C_0002237184725500898553
class C_0002237184725500898553 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L33{VarIterator}]] {
+VarIterator(Dynamic::Var * pVar, bool positionEnd) : void
+VarIterator(const Dynamic::VarIterator & other) : void
+VarIterator(Dynamic::VarIterator && other) : void
+~VarIterator() : void
+operator=(const Dynamic::VarIterator & other) : Dynamic::VarIterator &
+operator=(Dynamic::VarIterator && other) : Dynamic::VarIterator &
+operator==(const Dynamic::VarIterator & other) const : bool
+operator!=(const Dynamic::VarIterator & other) const : bool
+operator*() const : Dynamic::Var &
+operator->() const : Dynamic::Var *
+operator++() const : const Dynamic::VarIterator &
+operator++(int ) const : Dynamic::VarIterator
+operator--() const : const Dynamic::VarIterator &
+operator--(int ) const : Dynamic::VarIterator
+operator+(std::size_t diff) const : Dynamic::VarIterator
+operator-(std::size_t diff) const : Dynamic::VarIterator
+swap(Dynamic::VarIterator & other) : void
-VarIterator() : void
-increment() const : void
-decrement() const : void
-setPosition(std::size_t pos) const : void
-_pVar : Dynamic::Var * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L117{_pVar}]]]
-_position : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L118{_position}]]]
{static} +POSITION_END : const std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/VarIterator.h#L43{POSITION_END}]]]
}
class "Dynamic::Var" as C_0001827593751126946500
class C_0001827593751126946500 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L41{Var}]] {
+Var() : void
+Var(const char * pVal) : void
+Var(const Dynamic::Var & other) : void
+~Var() : void
+swap(Dynamic::Var & other) : void
+begin() const : Dynamic::Var::ConstIterator
+end() const : Dynamic::Var::ConstIterator
+begin() : Dynamic::Var::Iterator
+end() : Dynamic::Var::Iterator
+operator!() const : bool
+operator=(const Dynamic::Var & other) : Dynamic::Var &
+operator+(const Dynamic::Var & other) const : const Dynamic::Var
+operator+(const char * other) const : const Dynamic::Var
+operator++() : Dynamic::Var &
+operator++(int ) : const Dynamic::Var
+operator--() : Dynamic::Var &
+operator--(int ) : const Dynamic::Var
+operator+=(const Dynamic::Var & other) : Dynamic::Var &
+operator+=(const char * other) : Dynamic::Var &
+operator-(const Dynamic::Var & other) const : const Dynamic::Var
+operator-=(const Dynamic::Var & other) : Dynamic::Var &
+operator*(const Dynamic::Var & other) const : const Dynamic::Var
+operator*=(const Dynamic::Var & other) : Dynamic::Var &
+operator/(const Dynamic::Var & other) const : const Dynamic::Var
+operator/=(const Dynamic::Var & other) : Dynamic::Var &
+operator==(const char * other) const : bool
+operator==(const Dynamic::Var & other) const : bool
+operator!=(const Dynamic::Var & other) const : bool
+operator!=(const char * other) const : bool
+operator<(const Dynamic::Var & other) const : bool
+operator<=(const Dynamic::Var & other) const : bool
+operator>(const Dynamic::Var & other) const : bool
+operator>=(const Dynamic::Var & other) const : bool
+operator||(const Dynamic::Var & other) const : bool
+operator&&(const Dynamic::Var & other) const : bool
+isArray() const : bool
+isVector() const : bool
+isList() const : bool
+isDeque() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+at(std::size_t n) : char &
+operator[](const std::string & name) : Dynamic::Var &
+operator[](const std::string & name) const : const Dynamic::Var &
+type() const : const std::type_info &
+empty() : void
+clear() : void
+isEmpty() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isBoolean() const : bool
+isString() const : bool
+isDate() const : bool
+isTime() const : bool
+isDateTime() const : bool
+isUUID() const : bool
+size() const : std::size_t
+toString() const : std::string
{static} +parse(const std::string & val) : Dynamic::Var
{static} +toString(const Dynamic::Var & var) : std::string
-getAt(std::size_t n) : Dynamic::Var &
-getAt(const std::string & n) : Dynamic::Var &
{static} -parse(const std::string & val, std::string::size_type & offset) : Dynamic::Var
{static} -parseObject(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseArray(const std::string & val, std::string::size_type & pos) : Dynamic::Var
{static} -parseString(const std::string & val, std::string::size_type & pos) : std::string
{static} -parseJSONString(const std::string & val, std::string::size_type & pos) : std::string
{static} -skipWhiteSpace(const std::string & val, std::string::size_type & pos) : void
-content() const : Dynamic::VarHolder *
-destruct() : void
-construct(const char * value) : void
-construct(const Dynamic::Var & other) : void
+Var<T>(const T & val) : void
+convert<T>(T & val) : void
+convert<T>() : T
+operator type-parameter-0-0<T>() : T
+extract<T>() : const T &
+operator=<T>(const T & other) : class Dynamic::Var &
+operator+<T>(const T & other) : const class Dynamic::Var
+operator+=<T>(const T & other) : class Dynamic::Var &
+operator-<T>(const T & other) : const class Dynamic::Var
+operator-=<T>(const T & other) : class Dynamic::Var &
+operator*<T>(const T & other) : const class Dynamic::Var
+operator*=<T>(const T & other) : class Dynamic::Var &
+operator/<T>(const T & other) : const class Dynamic::Var
+operator/=<T>(const T & other) : class Dynamic::Var &
+operator==<T>(const T & other) : _Bool
+operator!=<T>(const T & other) : _Bool
+operator<<T>(const T & other) : _Bool
+operator<=<T>(const T & other) : _Bool
+operator><T>(const T & other) : _Bool
+operator>=<T>(const T & other) : _Bool
+operator||<T>(const T & other) : _Bool
+operator&&<T>(const T & other) : _Bool
+operator[]<T>(const T & n) : class Dynamic::Var &
+operator[]<T>(const T & n) : const class Dynamic::Var &
-add<T>(const Dynamic::Var & other) : T
-subtract<T>(const Dynamic::Var & other) : T
-multiply<T>(const Dynamic::Var & other) : T
-divide<T>(const Dynamic::Var & other) : T
-holderImpl<T,E>(const std::string errorMessage = "") : VarHolderImpl<T> *
-structIndexOperator<T,N>(T * pStr, N n) : class Dynamic::Var &
-construct<ValueType>(const ValueType & value) : void
-_placeholder : Placeholder<Dynamic::VarHolder> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L632{_placeholder}]]]
}
class "Dynamic::Struct<K,M=std::map<K, Var>,S=std::set<K>>" as C_0000562679976742134348
class C_0000562679976742134348 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L36{Struct}]] {
+Struct<K, M, S>() : void
+Struct<K, M, S>(const Dynamic::Struct::Data & val) : void
+~Struct<K, M, S>() : void
+operator[](const K & name) : Dynamic::Var &
+operator[](const K & name) const : const Dynamic::Var &
+contains(const K & name) const : bool
+find(const K & name) : Dynamic::Struct::Iterator
+find(const K & name) const : Dynamic::Struct::ConstIterator
+end() : Dynamic::Struct::Iterator
+end() const : Dynamic::Struct::ConstIterator
+begin() : Dynamic::Struct::Iterator
+begin() const : Dynamic::Struct::ConstIterator
+insert(const Dynamic::Struct::ValueType & aPair) : Dynamic::Struct::InsRetVal
+erase(const K & key) : Dynamic::Struct::SizeType
+erase(Dynamic::Struct::Iterator & it) : void
+clear() : void
+swap(Struct<K,M,S> & other) : void
+empty() const : bool
+size() const : Dynamic::Struct::SizeType
+members() const : Dynamic::Struct::NameSet
+getVar(const K & key) const : Dynamic::Var
+toString() const : std::string
+Struct<K, M, S><T>(const std::map<K,T> & val) : void
+Struct<K, M, S><T>(const ordered_map<K,T> & val) : void
+insert<T>(const K & key, const T & value) : Dynamic::Struct::InsRetVal
+getVar<DefT=class Poco::Dynamic::Var>(const K & key, const DefT & defaultValue) : class Dynamic::Var
-assignMap<T>(const T & map) : void
-_data : Dynamic::Struct::Data [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L247{_data}]]]
}
class "Dynamic::Struct<std::string,std::map<std::string,Dynamic::Var>,std::set<std::string>>" as C_0000527346272489458655
class C_0000527346272489458655 {
}
class "Dynamic::VarHolderImpl<Dynamic::Struct<std::string,std::map<std::string,Dynamic::Var>,std::set<std::string>>>" as C_0000005959213735263804
class C_0000005959213735263804 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L252{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L433{_val}]]]
}
class "Dynamic::Struct<int,std::map<int,Dynamic::Var>,std::set<int>>" as C_0000234522456695339728
class C_0000234522456695339728 {
}
class "Dynamic::Struct<Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType,std::map<Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType,Dynamic::Var>,std::set<Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType>>" as C_0001212087958231445051
class C_0001212087958231445051 {
}
class "Dynamic::VarHolderImpl<Dynamic::Struct<int,std::map<int,Dynamic::Var>,std::set<int>>>" as C_0000337724165693095141
class C_0000337724165693095141 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L438{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L619{_val}]]]
}
class "Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>" as C_0001994773360593884629
class C_0001994773360593884629 {
}
class "Dynamic::Struct<std::string,OrderedMap<std::string,Dynamic::Var>,OrderedSet<std::string>>" as C_0000285075638289121010
class C_0000285075638289121010 {
}
class "Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>" as C_0000919753061206343041
class C_0000919753061206343041 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L624{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<std::string,tsl::ordered_map<std::string,Dynamic::Var>,tsl::ordered_set<std::string>>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L805{_val}]]]
}
class "Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>" as C_0000976793773745790650
class C_0000976793773745790650 {
}
class "Dynamic::Struct<Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType,OrderedMap<int,Dynamic::Var>,OrderedSet<int>>" as C_0001731737538524969332
class C_0001731737538524969332 {
}
class "Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>" as C_0000988703063712340439
class C_0000988703063712340439 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L810{VarHolderImpl}]] {
+VarHolderImpl(const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType & val) : void
+~VarHolderImpl() : void
+type() const : const std::type_info &
+convert(Int8 & ) const : void
+convert(Int16 & ) const : void
+convert(Int32 & ) const : void
+convert(Int64 & ) const : void
+convert(UInt8 & ) const : void
+convert(UInt16 & ) const : void
+convert(UInt32 & ) const : void
+convert(UInt64 & ) const : void
+convert(bool & ) const : void
+convert(float & ) const : void
+convert(double & ) const : void
+convert(char & ) const : void
+convert(std::string & val) const : void
+convert(DateTime & ) const : void
+convert(LocalDateTime & ) const : void
+convert(Timestamp & ) const : void
+clone(Placeholder<Dynamic::VarHolder> * pVarHolder = 0) const : Dynamic::VarHolder *
+value() const : const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType &
+isArray() const : bool
+isStruct() const : bool
+isOrdered() const : bool
+isInteger() const : bool
+isSigned() const : bool
+isNumeric() const : bool
+isString() const : bool
+size() const : std::size_t
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) : Dynamic::Var &
+operator[](const Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::KeyType & name) const : const Dynamic::Var &
-_val : Dynamic::VarHolderImpl<Dynamic::Struct<int,tsl::ordered_map<int,Dynamic::Var>,tsl::ordered_set<int>>>::ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Struct.h#L991{_val}]]]
}
class "Dynamic::Struct<K,M,S>" as C_0000876644825045799418
class C_0000876644825045799418 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Dynamic/Var.h#L38{Struct}]] {
}
class "TypeSizeLE<T,std::size_t S>" as C_0000378128881064689099
class C_0000378128881064689099 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L43{TypeSizeLE}]] {
}
class "TypeSizeGT<T,std::size_t S>" as C_0000513741406079642942
class C_0000513741406079642942 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L48{TypeSizeGT}]] {
}
class "Placeholder<PlaceholderT,unsigned int SizeV=64>" as C_0001958374334460218080
class C_0001958374334460218080 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L53{Placeholder}]] {
+Placeholder<PlaceholderT, SizeV>(const Placeholder<PlaceholderT,SizeV> & ) : void
+Placeholder<PlaceholderT, SizeV>(Placeholder<PlaceholderT,SizeV> && ) : void
+operator=(const Placeholder<PlaceholderT,SizeV> & ) : Placeholder<PlaceholderT,SizeV> &
+operator=(Placeholder<PlaceholderT,SizeV> && ) : Placeholder<PlaceholderT,SizeV> &
+Placeholder<PlaceholderT, SizeV>() : void
+~Placeholder<PlaceholderT, SizeV>() : void
+swap(Placeholder<PlaceholderT,SizeV> & other) : void
+erase() : void
+isEmpty() const : bool
+isLocal() const : bool
+content() const : PlaceholderT *
-setLocal(bool local) const : void
-destruct(bool clear) : void
+assign<T,V,typename std::enable_if<TypeSizeLE<T, Placeholder<PlaceholderT, SizeV>::struct Size::value>::value>::type *=nullptr>(const V & value) : PlaceholderT *
+assign<T,V,typename std::enable_if<TypeSizeGT<T, Placeholder<PlaceholderT, SizeV>::struct Size::value>::value>::type *=nullptr>(const V & value) : PlaceholderT *
-holder : unsigned char[SizeV + 1] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L160{holder}]]]
-aligner : Placeholder::AlignerType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L161{aligner}]]]
-pHolder : PlaceholderT * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L209{pHolder}]]]
}
class "Placeholder::Size" as C_0000440051082624874314
class C_0000440051082624874314 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L67{Placeholder##Size}]] {
+value : enum
}
class "Placeholder<Any::ValueHolder>" as C_0001447256287115683404
class C_0001447256287115683404 {
}
class "Any" as C_0001404196069959735746
class C_0001404196069959735746 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L213{Any}]] {
+Any() : void
+Any(const Any & other) : void
+~Any() : void
+swap(Any & other) : Any &
+operator=(const Any & rhs) : Any &
+empty() const : bool
+type() const : const std::type_info &
+local() const : bool
-content() const : Any::ValueHolder *
-construct(const Any & other) : void
+Any<ValueType>(const ValueType & value) : void
+operator=<ValueType>(const ValueType & rhs) : class Any &
-construct<ValueType>(const ValueType & value) : void
-_valueHolder : Placeholder<Any::ValueHolder> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L383{_valueHolder}]]]
}
abstract "Any::ValueHolder" as C_0000985168791340319082
abstract C_0000985168791340319082 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L330{Any##ValueHolder}]] {
+~ValueHolder() = default : void
{abstract} +type() const = 0 : const std::type_info &
{abstract} +clone(Placeholder<Any::ValueHolder> * ) const = 0 : void
}
class "Any::Holder<ValueType>" as C_0001266613636105806081
class C_0001266613636105806081 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L340{Any##Holder}]] {
+Holder<ValueType>(const ValueType & value) : void
+type() const : const std::type_info &
+clone(Placeholder<Any::ValueHolder> * pPlaceholder) const : void
-operator=(const Holder<ValueType> & ) : Holder<ValueType> &
+_held : ValueType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Any.h#L357{_held}]]]
}
class "Buffer<T>" as C_0001365619523926057599
class C_0001365619523926057599 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Buffer.h#L31{Buffer}]] {
+Buffer<T>(std::size_t length) : void
+Buffer<T>(T * pMem, std::size_t length) : void
+Buffer<T>(const T * pMem, std::size_t length) : void
+Buffer<T>(const Buffer<T> & other) : void
+Buffer<T>(Buffer<T> && other) : void
+operator=(const Buffer<T> & other) : Buffer<T> &
+operator=(Buffer<T> && other) : Buffer<T> &
+~Buffer<T>() : void
+resize(std::size_t newCapacity, bool preserveContent = true) : void
+setCapacity(std::size_t newCapacity, bool preserveContent = true) : void
+assign(const T * buf, std::size_t sz) : void
+append(const T * buf, std::size_t sz) : void
+append(T val) : void
+append(const Buffer<T> & buf) : void
+capacity() const : std::size_t
+capacityBytes() const : std::size_t
+swap(Buffer<T> & other) : void
+operator==(const Buffer<T> & other) const : bool
+operator!=(const Buffer<T> & other) const : bool
+clear() : void
+size() const : std::size_t
+sizeBytes() const : std::size_t
+begin() : T *
+begin() const : const T *
+end() : T *
+end() const : const T *
+empty() const : bool
+operator[](std::size_t index) : T &
+operator[](std::size_t index) const : const T &
-Buffer<T>() : void
-_capacity : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Buffer.h#L367{_capacity}]]]
-_used : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Buffer.h#L368{_used}]]]
-_ptr : T * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Buffer.h#L369{_ptr}]]]
-_ownMem : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Buffer.h#L370{_ownMem}]]]
}
class "FPEnvironmentImpl" as C_0000509908291985632513
class C_0000509908291985632513 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment_C99.h#L29{FPEnvironmentImpl}]] {
#FPEnvironmentImpl() : void
#FPEnvironmentImpl(const FPEnvironmentImpl & env) : void
#~FPEnvironmentImpl() : void
#operator=(const FPEnvironmentImpl & env) : FPEnvironmentImpl &
#keepCurrentImpl() : void
{static} #clearFlagsImpl() : void
{static} #isFlagImpl(FPEnvironmentImpl::FlagImpl flag) : bool
{static} #setRoundingModeImpl(FPEnvironmentImpl::RoundingModeImpl mode) : void
{static} #getRoundingModeImpl() : FPEnvironmentImpl::RoundingModeImpl
{static} #isInfiniteImpl(float value) : bool
{static} #isInfiniteImpl(double value) : bool
{static} #isInfiniteImpl(long double value) : bool
{static} #isNaNImpl(float value) : bool
{static} #isNaNImpl(double value) : bool
{static} #isNaNImpl(long double value) : bool
{static} #copySignImpl(float target, float source) : float
{static} #copySignImpl(double target, double source) : double
{static} #copySignImpl(long double target, long double source) : long double
-_env : fenv_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment_C99.h#L103{_env}]]]
}
enum "FPEnvironmentImpl::RoundingModeImpl" as C_0001755150906829178418
enum C_0001755150906829178418 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment_C99.h#L32{FPEnvironmentImpl##RoundingModeImpl}]] {
FP_ROUND_DOWNWARD_IMPL
FP_ROUND_UPWARD_IMPL
FP_ROUND_TONEAREST_IMPL
FP_ROUND_TOWARDZERO_IMPL
}
enum "FPEnvironmentImpl::FlagImpl" as C_0001071291111989080379
enum C_0001071291111989080379 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment_C99.h#L55{FPEnvironmentImpl##FlagImpl}]] {
FP_DIVIDE_BY_ZERO_IMPL
FP_INEXACT_IMPL
FP_OVERFLOW_IMPL
FP_UNDERFLOW_IMPL
FP_INVALID_IMPL
}
class "FPEnvironment" as C_0000817876163529179707
class C_0000817876163529179707 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment.h#L44{FPEnvironment}]] {
+FPEnvironment() : void
+FPEnvironment(FPEnvironment::RoundingMode mode) : void
+FPEnvironment(const FPEnvironment & env) : void
+~FPEnvironment() : void
+operator=(const FPEnvironment & env) : FPEnvironment &
+keepCurrent() : void
{static} +clearFlags() : void
{static} +isFlag(FPEnvironment::Flag flag) : bool
{static} +setRoundingMode(FPEnvironment::RoundingMode mode) : void
{static} +getRoundingMode() : FPEnvironment::RoundingMode
{static} +isInfinite(float value) : bool
{static} +isInfinite(double value) : bool
{static} +isInfinite(long double value) : bool
{static} +isNaN(float value) : bool
{static} +isNaN(double value) : bool
{static} +isNaN(long double value) : bool
{static} +copySign(float target, float source) : float
{static} +copySign(double target, double source) : double
{static} +copySign(long double target, long double source) : long double
}
enum "FPEnvironment::RoundingMode" as C_0002246087043295788392
enum C_0002246087043295788392 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment.h#L54{FPEnvironment##RoundingMode}]] {
FP_ROUND_DOWNWARD
FP_ROUND_UPWARD
FP_ROUND_TONEAREST
FP_ROUND_TOWARDZERO
}
enum "FPEnvironment::Flag" as C_0000716816264121091887
enum C_0000716816264121091887 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FPEnvironment.h#L62{FPEnvironment##Flag}]] {
FP_DIVIDE_BY_ZERO
FP_INEXACT
FP_OVERFLOW
FP_UNDERFLOW
FP_INVALID
}
class "Impl::IsNegativeImpl<true,T>" as C_0000397186824031498890
class C_0000397186824031498890 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L67{IsNegativeImpl}]] {
+operator()(T x) : bool
}
class "Impl::IsNegativeImpl<false,T>" as C_0001710134571940765707
class C_0001710134571940765707 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L74{IsNegativeImpl}]] {
+operator()(T ) : bool
}
class "Impl::Ptr" as C_0001583847392042768453
class C_0001583847392042768453 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L298{Ptr}]] {
+Ptr(char * ptr, std::size_t offset) : void
+operator++() : char *&
+operator++(int ) : char *
+operator--() : char *&
+operator--(int ) : char *
+operator+=(int incr) : char *&
+operator-=(int decr) : char *&
+operator char *() const : char *
+span() const : std::size_t
-checkBounds(char * ptr) : void
-_beg : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L361{_beg}]]]
-_cur : char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L362{_cur}]]]
-_end : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L363{_end}]]]
}
class "Impl::IsNegativeImpl<_Bool SIGNED,T>" as C_0001524954285563249481
class C_0001524954285563249481 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumericString.h#L64{IsNegativeImpl}]] {
}
class "NumberFormatter" as C_0001256897499216409096
class C_0001256897499216409096 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberFormatter.h#L28{NumberFormatter}]] {
{static} +format(int value) : std::string
{static} +format(int value, int width) : std::string
{static} +format0(int value, int width) : std::string
{static} +formatHex(int value, bool prefix = false) : std::string
{static} +formatHex(int value, int width, bool prefix = false) : std::string
{static} +format(unsigned int value) : std::string
{static} +format(unsigned int value, int width) : std::string
{static} +format0(unsigned int value, int width) : std::string
{static} +formatHex(unsigned int value, bool prefix = false) : std::string
{static} +formatHex(unsigned int value, int width, bool prefix = false) : std::string
{static} +format(long value) : std::string
{static} +format(long value, int width) : std::string
{static} +format0(long value, int width) : std::string
{static} +formatHex(long value, bool prefix = false) : std::string
{static} +formatHex(long value, int width, bool prefix = false) : std::string
{static} +format(unsigned long value) : std::string
{static} +format(unsigned long value, int width) : std::string
{static} +format0(unsigned long value, int width) : std::string
{static} +formatHex(unsigned long value, bool prefix = false) : std::string
{static} +formatHex(unsigned long value, int width, bool prefix = false) : std::string
{static} +format(long long value) : std::string
{static} +format(long long value, int width) : std::string
{static} +format0(long long value, int width) : std::string
{static} +formatHex(long long value, bool prefix = false) : std::string
{static} +formatHex(long long value, int width, bool prefix = false) : std::string
{static} +format(unsigned long long value) : std::string
{static} +format(unsigned long long value, int width) : std::string
{static} +format0(unsigned long long value, int width) : std::string
{static} +formatHex(unsigned long long value, bool prefix = false) : std::string
{static} +formatHex(unsigned long long value, int width, bool prefix = false) : std::string
{static} +format(float value) : std::string
{static} +format(float value, int precision) : std::string
{static} +format(float value, int width, int precision) : std::string
{static} +format(double value) : std::string
{static} +format(double value, int precision) : std::string
{static} +format(double value, int width, int precision) : std::string
{static} +format(const void * ptr) : std::string
{static} +format(bool value, NumberFormatter::BoolFormat format = FMT_TRUE_FALSE) : std::string
{static} +append(std::string & str, int value) : void
{static} +append(std::string & str, int value, int width) : void
{static} +append0(std::string & str, int value, int width) : void
{static} +appendHex(std::string & str, int value) : void
{static} +appendHex(std::string & str, int value, int width) : void
{static} +append(std::string & str, unsigned int value) : void
{static} +append(std::string & str, unsigned int value, int width) : void
{static} +append0(std::string & str, unsigned int value, int width) : void
{static} +appendHex(std::string & str, unsigned int value) : void
{static} +appendHex(std::string & str, unsigned int value, int width) : void
{static} +append(std::string & str, long value) : void
{static} +append(std::string & str, long value, int width) : void
{static} +append0(std::string & str, long value, int width) : void
{static} +appendHex(std::string & str, long value) : void
{static} +appendHex(std::string & str, long value, int width) : void
{static} +append(std::string & str, unsigned long value) : void
{static} +append(std::string & str, unsigned long value, int width) : void
{static} +append0(std::string & str, unsigned long value, int width) : void
{static} +appendHex(std::string & str, unsigned long value) : void
{static} +appendHex(std::string & str, unsigned long value, int width) : void
{static} +append(std::string & str, long long value) : void
{static} +append(std::string & str, long long value, int width) : void
{static} +append0(std::string & str, long long value, int width) : void
{static} +appendHex(std::string & str, long long value) : void
{static} +appendHex(std::string & str, long long value, int width) : void
{static} +append(std::string & str, unsigned long long value) : void
{static} +append(std::string & str, unsigned long long value, int width) : void
{static} +append0(std::string & str, unsigned long long value, int width) : void
{static} +appendHex(std::string & str, unsigned long long value) : void
{static} +appendHex(std::string & str, unsigned long long value, int width) : void
{static} +append(std::string & str, float value) : void
{static} +append(std::string & str, float value, int precision) : void
{static} +append(std::string & str, float value, int width, int precision) : void
{static} +append(std::string & str, double value) : void
{static} +append(std::string & str, double value, int precision) : void
{static} +append(std::string & str, double value, int width, int precision) : void
{static} +append(std::string & str, const void * ptr) : void
{static} +NF_MAX_INT_STRING_LEN : const unsigned int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberFormatter.h#L46{NF_MAX_INT_STRING_LEN}]]]
{static} +NF_MAX_FLT_STRING_LEN : const unsigned int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberFormatter.h#L47{NF_MAX_FLT_STRING_LEN}]]]
}
enum "NumberFormatter::BoolFormat" as C_0000101750212171724742
enum C_0000101750212171724742 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberFormatter.h#L39{NumberFormatter##BoolFormat}]] {
FMT_TRUE_FALSE
FMT_YES_NO
FMT_ON_OFF
}
class "NumberParser" as C_0002298979451961498468
class C_0002298979451961498468 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberParser.h#L31{NumberParser}]] {
{static} +parse(const std::string & s, char thousandSeparator = ',') : int
{static} +tryParse(const std::string & s, int & value, char thousandSeparator = ',') : bool
{static} +parseUnsigned(const std::string & s, char thousandSeparator = ',') : unsigned int
{static} +tryParseUnsigned(const std::string & s, unsigned int & value, char thousandSeparator = ',') : bool
{static} +parseHex(const std::string & s) : unsigned int
{static} +tryParseHex(const std::string & s, unsigned int & value) : bool
{static} +parseOct(const std::string & s) : unsigned int
{static} +tryParseOct(const std::string & s, unsigned int & value) : bool
{static} +parse64(const std::string & s, char thousandSeparator = ',') : Int64
{static} +tryParse64(const std::string & s, Int64 & value, char thousandSeparator = ',') : bool
{static} +parseUnsigned64(const std::string & s, char thousandSeparator = ',') : UInt64
{static} +tryParseUnsigned64(const std::string & s, UInt64 & value, char thousandSeparator = ',') : bool
{static} +parseHex64(const std::string & s) : UInt64
{static} +tryParseHex64(const std::string & s, UInt64 & value) : bool
{static} +parseOct64(const std::string & s) : UInt64
{static} +tryParseOct64(const std::string & s, UInt64 & value) : bool
{static} +parseFloat(const std::string & s, char decimalSeparator = '.', char thousandSeparator = ',') : double
{static} +tryParseFloat(const std::string & s, double & value, char decimalSeparator = '.', char thousandSeparator = ',') : bool
{static} +parseBool(const std::string & s) : bool
{static} +tryParseBool(const std::string & s, bool & value) : bool
{static} +NUM_BASE_OCT : const unsigned short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberParser.h#L40{NUM_BASE_OCT}]]]
{static} +NUM_BASE_DEC : const unsigned short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberParser.h#L41{NUM_BASE_DEC}]]]
{static} +NUM_BASE_HEX : const unsigned short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NumberParser.h#L42{NUM_BASE_HEX}]]]
}
class "DateTime" as C_0001994141232353623230
class C_0001994141232353623230 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L32{DateTime}]] {
+DateTime() : void
+DateTime(const tm & tmStruct) : void
+DateTime(const Timestamp & timestamp) : void
+DateTime(int year, int month, int day, int hour = 0, int minute = 0, int second = 0, int millisecond = 0, int microsecond = 0) : void
+DateTime(double julianDay) : void
+DateTime(Timestamp::UtcTimeVal utcTime, Timestamp::TimeDiff diff) : void
+DateTime(const DateTime & dateTime) : void
+~DateTime() : void
+operator=(const DateTime & dateTime) : DateTime &
+operator=(const Timestamp & timestamp) : DateTime &
+operator=(double julianDay) : DateTime &
+assign(int year, int month, int day, int hour = 0, int minute = 0, int second = 0, int millisecond = 0, int microseconds = 0) : DateTime &
+swap(DateTime & dateTime) : void
+year() const : int
+month() const : int
+week(int firstDayOfWeek = MONDAY) const : int
+day() const : int
+dayOfWeek() const : int
+dayOfYear() const : int
+hour() const : int
+hourAMPM() const : int
+isAM() const : bool
+isPM() const : bool
+minute() const : int
+second() const : int
+millisecond() const : int
+microsecond() const : int
+julianDay() const : double
+timestamp() const : Timestamp
+utcTime() const : Timestamp::UtcTimeVal
+operator==(const DateTime & dateTime) const : bool
+operator!=(const DateTime & dateTime) const : bool
+operator<(const DateTime & dateTime) const : bool
+operator<=(const DateTime & dateTime) const : bool
+operator>(const DateTime & dateTime) const : bool
+operator>=(const DateTime & dateTime) const : bool
+operator+(const Timespan & span) const : DateTime
+operator-(const Timespan & span) const : DateTime
+operator-(const DateTime & dateTime) const : Timespan
+operator+=(const Timespan & span) : DateTime &
+operator-=(const Timespan & span) : DateTime &
+makeTM() const : tm
+makeUTC(int tzd) : void
+makeLocal(int tzd) : void
{static} +isLeapYear(int year) : bool
{static} +daysOfMonth(int year, int month) : int
{static} +isValid(int year, int month, int day, int hour = 0, int minute = 0, int second = 0, int millisecond = 0, int microsecond = 0) : bool
{static} #toJulianDay(Timestamp::UtcTimeVal utcTime) : double
{static} #toJulianDay(int year, int month, int day, int hour = 0, int minute = 0, int second = 0, int millisecond = 0, int microsecond = 0) : double
{static} #toUtcTime(double julianDay) : Timestamp::UtcTimeVal
#computeGregorian(double julianDay) : void
#computeDaytime() : void
-checkLimit(short & lower, short & higher, short limit) : void
-normalize() : void
-_utcTime : Timestamp::UtcTimeVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L279{_utcTime}]]]
-_year : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L280{_year}]]]
-_month : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L281{_month}]]]
-_day : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L282{_day}]]]
-_hour : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L283{_hour}]]]
-_minute : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L284{_minute}]]]
-_second : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L285{_second}]]]
-_millisecond : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L286{_millisecond}]]]
-_microsecond : short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L287{_microsecond}]]]
}
enum "DateTime::Months" as C_0001770012028735697047
enum C_0001770012028735697047 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L64{DateTime##Months}]] {
JANUARY
FEBRUARY
MARCH
APRIL
MAY
JUNE
JULY
AUGUST
SEPTEMBER
OCTOBER
NOVEMBER
DECEMBER
}
enum "DateTime::DaysOfWeek" as C_0000098845606893434356
enum C_0000098845606893434356 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTime.h#L81{DateTime##DaysOfWeek}]] {
SUNDAY
MONDAY
TUESDAY
WEDNESDAY
THURSDAY
FRIDAY
SATURDAY
}
class "LocalDateTime" as C_0002272281318037047828
class C_0002272281318037047828 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LocalDateTime.h#L28{LocalDateTime}]] {
+LocalDateTime() : void
+LocalDateTime(int year, int month, int day, int hour = 0, int minute = 0, int second = 0, int millisecond = 0, int microsecond = 0) : void
+LocalDateTime(int tzd, int year, int month, int day, int hour, int minute, int second, int millisecond, int microsecond) : void
+LocalDateTime(const DateTime & dateTime) : void
+LocalDateTime(int tzd, const DateTime & dateTime) : void
+LocalDateTime(int tzd, const DateTime & dateTime, bool adjust) : void
+LocalDateTime(double julianDay) : void
+LocalDateTime(int tzd, double julianDay) : void
+LocalDateTime(const LocalDateTime & dateTime) : void
+~LocalDateTime() : void
+operator=(const LocalDateTime & dateTime) : LocalDateTime &
+operator=(const Timestamp & timestamp) : LocalDateTime &
+operator=(double julianDay) : LocalDateTime &
+assign(int year, int month, int day, int hour = 0, int minute = 0, int second = 0, int millisecond = 0, int microseconds = 0) : LocalDateTime &
+assign(int tzd, int year, int month, int day, int hour, int minute, int second, int millisecond, int microseconds) : LocalDateTime &
+assign(int tzd, double julianDay) : LocalDateTime &
+swap(LocalDateTime & dateTime) : void
+year() const : int
+month() const : int
+week(int firstDayOfWeek = DateTime::MONDAY) const : int
+day() const : int
+dayOfWeek() const : int
+dayOfYear() const : int
+hour() const : int
+hourAMPM() const : int
+isAM() const : bool
+isPM() const : bool
+minute() const : int
+second() const : int
+millisecond() const : int
+microsecond() const : int
+julianDay() const : double
+tzd() const : int
+utc() const : DateTime
+timestamp() const : Timestamp
+utcTime() const : Timestamp::UtcTimeVal
+operator==(const LocalDateTime & dateTime) const : bool
+operator!=(const LocalDateTime & dateTime) const : bool
+operator<(const LocalDateTime & dateTime) const : bool
+operator<=(const LocalDateTime & dateTime) const : bool
+operator>(const LocalDateTime & dateTime) const : bool
+operator>=(const LocalDateTime & dateTime) const : bool
+operator+(const Timespan & span) const : LocalDateTime
+operator-(const Timespan & span) const : LocalDateTime
+operator-(const LocalDateTime & dateTime) const : Timespan
+operator+=(const Timespan & span) : LocalDateTime &
+operator-=(const Timespan & span) : LocalDateTime &
#LocalDateTime(Timestamp::UtcTimeVal utcTime, Timestamp::TimeDiff diff, int tzd) : void
#determineTzd(bool adjust = false) : void
#adjustForTzd() : void
#dstOffset(int & dstOffset) const : std::time_t
-_dateTime : DateTime [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LocalDateTime.h#L254{_dateTime}]]]
-_tzd : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LocalDateTime.h#L255{_tzd}]]]
}
class "DateTimeFormat" as C_0001908433350917529577
class C_0001908433350917529577 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L27{DateTimeFormat}]] {
{static} +ISO8601_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L33{ISO8601_FORMAT}]]]
{static} +ISO8601_FRAC_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L40{ISO8601_FRAC_FORMAT}]]]
{static} +RFC822_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L48{RFC822_FORMAT}]]]
{static} +RFC1123_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L55{RFC1123_FORMAT}]]]
{static} +HTTP_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L62{HTTP_FORMAT}]]]
{static} +RFC850_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L70{RFC850_FORMAT}]]]
{static} +RFC1036_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L77{RFC1036_FORMAT}]]]
{static} +ASCTIME_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L84{ASCTIME_FORMAT}]]]
{static} +SORTABLE_FORMAT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L90{SORTABLE_FORMAT}]]]
{static} +WEEKDAY_NAMES : const std::string[7] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L98{WEEKDAY_NAMES}]]]
{static} +MONTH_NAMES : const std::string[12] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormat.h#L101{MONTH_NAMES}]]]
}
class "DateTimeFormatter" as C_0000950060688741605253
class C_0000950060688741605253 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeFormatter.h#L33{DateTimeFormatter}]] {
{static} +format(const Timestamp & timestamp, const std::string & fmt, int timeZoneDifferential = UTC) : std::string
{static} +format(const DateTime & dateTime, const std::string & fmt, int timeZoneDifferential = UTC) : std::string
{static} +format(const LocalDateTime & dateTime, const std::string & fmt) : std::string
{static} +format(const Timespan & timespan, const std::string & fmt = "%dd %H:%M:%S.%i") : std::string
{static} +append(std::string & str, const Timestamp & timestamp, const std::string & fmt, int timeZoneDifferential = UTC) : void
{static} +append(std::string & str, const DateTime & dateTime, const std::string & fmt, int timeZoneDifferential = UTC) : void
{static} +append(std::string & str, const LocalDateTime & dateTime, const std::string & fmt) : void
{static} +append(std::string & str, const Timespan & timespan, const std::string & fmt = "%dd %H:%M:%S.%i") : void
{static} +tzdISO(int timeZoneDifferential) : std::string
{static} +tzdRFC(int timeZoneDifferential) : std::string
{static} +tzdISO(std::string & str, int timeZoneDifferential) : void
{static} +tzdRFC(std::string & str, int timeZoneDifferential) : void
+UTC : enum
}
class "DateTimeParser" as C_0002221123434653717605
class C_0002221123434653717605 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DateTimeParser.h#L28{DateTimeParser}]] {
{static} +parse(const std::string & fmt, const std::string & str, DateTime & dateTime, int & timeZoneDifferential) : void
{static} +parse(const std::string & fmt, const std::string & str, int & timeZoneDifferential) : DateTime
{static} +tryParse(const std::string & fmt, const std::string & str, DateTime & dateTime, int & timeZoneDifferential) : bool
{static} +parse(const std::string & str, DateTime & dateTime, int & timeZoneDifferential) : void
{static} +parse(const std::string & str, int & timeZoneDifferential) : DateTime
{static} +tryParse(const std::string & str, DateTime & dateTime, int & timeZoneDifferential) : bool
{static} +parseMonth(std::string::const_iterator & it, const std::string::const_iterator & end) : int
{static} +parseDayOfWeek(std::string::const_iterator & it, const std::string::const_iterator & end) : int
{static} #parseTZD(std::string::const_iterator & it, const std::string::const_iterator & end) : int
{static} #parseAMPM(std::string::const_iterator & it, const std::string::const_iterator & end, int hour) : int
}
class "UTF16CharTraits" as C_0001986079331790138471
class C_0001986079331790138471 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTFString.h#L29{UTF16CharTraits}]] {
{static} +assign(UTF16CharTraits::char_type & c1, const UTF16CharTraits::char_type & c2) : void
{static} +eq(UTF16CharTraits::char_type c1, UTF16CharTraits::char_type c2) : bool
{static} +lt(UTF16CharTraits::char_type c1, UTF16CharTraits::char_type c2) : bool
{static} +compare(const UTF16CharTraits::char_type * s1, const UTF16CharTraits::char_type * s2, std::size_t n) : int
{static} +length(const UTF16CharTraits::char_type * s) : std::size_t
{static} +find(const UTF16CharTraits::char_type * s, std::size_t n, const UTF16CharTraits::char_type & a) : const UTF16CharTraits::char_type *
{static} +move(UTF16CharTraits::char_type * s1, const UTF16CharTraits::char_type * s2, std::size_t n) : UTF16CharTraits::char_type *
{static} +copy(UTF16CharTraits::char_type * s1, const UTF16CharTraits::char_type * s2, std::size_t n) : UTF16CharTraits::char_type *
{static} +assign(UTF16CharTraits::char_type * s, std::size_t n, UTF16CharTraits::char_type a) : UTF16CharTraits::char_type *
{static} +not_eof(UTF16CharTraits::int_type c) : UTF16CharTraits::int_type
{static} +to_char_type(UTF16CharTraits::int_type c) : UTF16CharTraits::char_type
{static} +to_int_type(UTF16CharTraits::char_type c) : UTF16CharTraits::int_type
{static} +eq_int_type(UTF16CharTraits::int_type c1, UTF16CharTraits::int_type c2) : bool
{static} +eof() : UTF16CharTraits::int_type
}
class "UTF32CharTraits" as C_0001078443672123885713
class C_0001078443672123885713 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UTFString.h#L146{UTF32CharTraits}]] {
{static} +assign(UTF32CharTraits::char_type & c1, const UTF32CharTraits::char_type & c2) : void
{static} +eq(UTF32CharTraits::char_type c1, UTF32CharTraits::char_type c2) : bool
{static} +lt(UTF32CharTraits::char_type c1, UTF32CharTraits::char_type c2) : bool
{static} +compare(const UTF32CharTraits::char_type * s1, const UTF32CharTraits::char_type * s2, std::size_t n) : int
{static} +length(const UTF32CharTraits::char_type * s) : std::size_t
{static} +find(const UTF32CharTraits::char_type * s, std::size_t n, const UTF32CharTraits::char_type & a) : const UTF32CharTraits::char_type *
{static} +move(UTF32CharTraits::char_type * s1, const UTF32CharTraits::char_type * s2, std::size_t n) : UTF32CharTraits::char_type *
{static} +copy(UTF32CharTraits::char_type * s1, const UTF32CharTraits::char_type * s2, std::size_t n) : UTF32CharTraits::char_type *
{static} +assign(UTF32CharTraits::char_type * s, std::size_t n, UTF32CharTraits::char_type a) : UTF32CharTraits::char_type *
{static} +not_eof(UTF32CharTraits::int_type c) : UTF32CharTraits::int_type
{static} +to_char_type(UTF32CharTraits::int_type c) : UTF32CharTraits::char_type
{static} +to_int_type(UTF32CharTraits::char_type c) : UTF32CharTraits::int_type
{static} +eq_int_type(UTF32CharTraits::int_type c1, UTF32CharTraits::int_type c2) : bool
{static} +eof() : UTF32CharTraits::int_type
}
class "UnicodeConverter" as C_0001547808404795034894
class C_0001547808404795034894 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UnicodeConverter.h#L28{UnicodeConverter}]] {
{static} +convert(const std::string & utf8String, UTF32String & utf32String) : void
{static} +convert(const char * utf8String, std::size_t length, UTF32String & utf32String) : void
{static} +convert(const char * utf8String, UTF32String & utf32String) : void
{static} +convert(const std::string & utf8String, UTF16String & utf16String) : void
{static} +convert(const char * utf8String, std::size_t length, UTF16String & utf16String) : void
{static} +convert(const char * utf8String, UTF16String & utf16String) : void
{static} +convert(const UTF16String & utf16String, std::string & utf8String) : void
{static} +convert(const UTF32String & utf32String, std::string & utf8String) : void
{static} +convert(const UTF16Char * utf16String, std::size_t length, std::string & utf8String) : void
{static} +convert(const UTF32Char * utf16String, std::size_t length, std::string & utf8String) : void
{static} +convert(const UTF16Char * utf16String, std::string & utf8String) : void
{static} +convert(const UTF32Char * utf32String, std::string & utf8String) : void
{static} +toUTF32<F,T>(const F & f, T & t) : void
{static} +toUTF32<F,T>(const F & f, std::size_t l, T & t) : void
{static} +toUTF16<F,T>(const F & f, T & t) : void
{static} +toUTF16<F,T>(const F & f, std::size_t l, T & t) : void
{static} +toUTF8<F,T>(const F & f, T & t) : void
{static} +toUTF8<F,T>(const F & f, std::size_t l, T & t) : void
{static} +to<T>(const char * pChar) : T
{static} +to<T>(const std::string & str) : T
{static} +UTFStrlen<T>(const T * ptr) : std::size_t
}
class "UUID" as C_0000182374977928068670
class C_0000182374977928068670 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L27{UUID}]] {
+UUID() : void
+UUID(const UUID & uuid) : void
+UUID(const std::string & uuid) : void
+UUID(const char * uuid) : void
+~UUID() : void
+operator=(const UUID & uuid) : UUID &
+swap(UUID & uuid) : void
+parse(const std::string & uuid) : void
+tryParse(const std::string & uuid) : bool
+toString() const : std::string
+copyFrom(const char * buffer) : void
+copyTo(char * buffer) const : void
+version() const : UUID::Version
+variant() const : int
+operator==(const UUID & uuid) const : bool
+operator!=(const UUID & uuid) const : bool
+operator<(const UUID & uuid) const : bool
+operator<=(const UUID & uuid) const : bool
+operator>(const UUID & uuid) const : bool
+operator>=(const UUID & uuid) const : bool
+isNull() const : bool
{static} +null() : const UUID &
{static} +dns() : const UUID &
{static} +uri() : const UUID &
{static} +oid() : const UUID &
{static} +x500() : const UUID &
#UUID(UInt32 timeLow, UInt32 timeMid, UInt32 timeHiAndVersion, UInt16 clockSeq, UInt8 * node) : void
#UUID(const char * bytes, UUID::Version version) : void
#compare(const UUID & uuid) const : int
{static} #appendHex(std::string & str, UInt8 n) : void
{static} #appendHex(std::string & str, UInt16 n) : void
{static} #appendHex(std::string & str, UInt32 n) : void
{static} #nibble(char hex) : Int16
#fromNetwork() : void
#toNetwork() : void
-_timeLow : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L149{_timeLow}]]]
-_timeMid : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L150{_timeMid}]]]
-_timeHiAndVersion : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L151{_timeHiAndVersion}]]]
-_clockSeq : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L152{_clockSeq}]]]
-_node : UInt8[6] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L153{_node}]]]
}
enum "UUID::Version" as C_0002008043450462758320
enum C_0002008043450462758320 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUID.h#L45{UUID##Version}]] {
UUID_TIME_BASED
UUID_DCE_UID
UUID_NAME_BASED
UUID_RANDOM
UUID_NAME_BASED_SHA1
}
class "Placeholder<Dynamic::VarHolder>" as C_0000500012695506990838
class C_0000500012695506990838 {
}
class "Clock" as C_0001216257285233984362
class C_0001216257285233984362 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Clock.h#L27{Clock}]] {
+Clock() : void
+Clock(Clock::ClockVal tv) : void
+Clock(const Clock & other) : void
+~Clock() : void
+operator=(const Clock & other) : Clock &
+operator=(Clock::ClockVal tv) : Clock &
+swap(Clock & clock) : void
+update() : void
+operator==(const Clock & ts) const : bool
+operator!=(const Clock & ts) const : bool
+operator>(const Clock & ts) const : bool
+operator>=(const Clock & ts) const : bool
+operator<(const Clock & ts) const : bool
+operator<=(const Clock & ts) const : bool
+operator+(Clock::ClockDiff d) const : Clock
+operator-(Clock::ClockDiff d) const : Clock
+operator-(const Clock & ts) const : Clock::ClockDiff
+operator+=(Clock::ClockDiff d) : Clock &
+operator-=(Clock::ClockDiff d) : Clock &
+microseconds() const : Clock::ClockVal
+raw() const : Clock::ClockVal
+elapsed() const : Clock::ClockDiff
+isElapsed(Clock::ClockDiff interval) const : bool
{static} +resolution() : Clock::ClockDiff
{static} +accuracy() : Clock::ClockDiff
{static} +monotonic() : bool
-_clock : Clock::ClockVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Clock.h#L121{_clock}]]]
{static} +CLOCKVAL_MIN : const Clock::ClockVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Clock.h#L52{CLOCKVAL_MIN}]]]
{static} +CLOCKVAL_MAX : const Clock::ClockVal [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Clock.h#L53{CLOCKVAL_MAX}]]]
}
class "EventArgs" as C_0000013266008235287808
class C_0000013266008235287808 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/EventArgs.h#L27{EventArgs}]] {
+EventArgs() : void
+~EventArgs() : void
}
abstract "DigestEngine" as C_0000777257243320279470
abstract C_0000777257243320279470 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestEngine.h#L28{DigestEngine}]] {
+DigestEngine() : void
+~DigestEngine() : void
+update(const void * data, std::size_t length) : void
+update(char data) : void
+update(const std::string & data) : void
{abstract} +digestLength() const = 0 : std::size_t
{abstract} +reset() = 0 : void
{abstract} +digest() = 0 : const DigestEngine::Digest &
{static} +digestToHex(const DigestEngine::Digest & bytes, std::size_t length = 0) : std::string
{static} +digestFromHex(const std::string & digest) : DigestEngine::Digest
{static} +constantTimeEquals(const DigestEngine::Digest & d1, const DigestEngine::Digest & d2) : bool
{abstract} #updateImpl(const void * data, std::size_t length) = 0 : void
-DigestEngine(const DigestEngine & ) : void
-operator=(const DigestEngine & ) : DigestEngine &
}
class "BinaryReader" as C_0001922854122078707353
class C_0001922854122078707353 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L35{BinaryReader}]] {
+BinaryReader(std::istream & istr, BinaryReader::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+BinaryReader(std::istream & istr, TextEncoding & encoding, BinaryReader::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+~BinaryReader() : void
+operator>>(bool & value) : BinaryReader &
+operator>>(char & value) : BinaryReader &
+operator>>(unsigned char & value) : BinaryReader &
+operator>>(signed char & value) : BinaryReader &
+operator>>(short & value) : BinaryReader &
+operator>>(unsigned short & value) : BinaryReader &
+operator>>(int & value) : BinaryReader &
+operator>>(unsigned int & value) : BinaryReader &
+operator>>(long & value) : BinaryReader &
+operator>>(unsigned long & value) : BinaryReader &
+operator>>(float & value) : BinaryReader &
+operator>>(double & value) : BinaryReader &
+operator>>(long long & value) : BinaryReader &
+operator>>(unsigned long long & value) : BinaryReader &
+operator>>(std::string & value) : BinaryReader &
+read7BitEncoded(UInt32 & value) : void
+read7BitEncoded(UInt64 & value) : void
+readRaw(std::streamsize length, std::string & value) : void
+readRaw(char * buffer, std::streamsize length) : void
+readBOM() : void
+good() : bool
+fail() : bool
+bad() : bool
+eof() : bool
+stream() const : std::istream &
+byteOrder() const : BinaryReader::StreamByteOrder
+setExceptions(std::ios_base::iostate st = (std::istream::failbit | std::istream::badbit)) : void
+available() const : std::streamsize
+operator>><T>(std::vector<T> & value) : class BinaryReader &
-_istr : std::istream & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L152{_istr}]]]
-_flipBytes : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L153{_flipBytes}]]]
-_pTextConverter : TextConverter * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L154{_pTextConverter}]]]
}
enum "BinaryReader::StreamByteOrder" as C_0000835717827102234781
enum C_0000835717827102234781 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L44{BinaryReader##StreamByteOrder}]] {
NATIVE_BYTE_ORDER
BIG_ENDIAN_BYTE_ORDER
NETWORK_BYTE_ORDER
LITTLE_ENDIAN_BYTE_ORDER
UNSPECIFIED_BYTE_ORDER
}
class "BasicMemoryBinaryReader<T>" as C_0000116394379955371835
class C_0000116394379955371835 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L159{BasicMemoryBinaryReader}]] {
+BasicMemoryBinaryReader<T>(const Buffer<T> & data, BinaryReader::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+BasicMemoryBinaryReader<T>(const Buffer<T> & data, TextEncoding & encoding, BinaryReader::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+~BasicMemoryBinaryReader<T>() : void
+data() const : const Buffer<T> &
+stream() const : const MemoryInputStream &
+stream() : MemoryInputStream &
-_data : const Buffer<T> & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L197{_data}]]]
-_istr : MemoryInputStream [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryReader.h#L198{_istr}]]]
}
class "ByteOrder" as C_0000791612875496251779
class C_0000791612875496251779 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ByteOrder.h#L29{ByteOrder}]] {
{static} +flipBytes(Int16 value) : Int16
{static} +flipBytes(UInt16 value) : UInt16
{static} +flipBytes(Int32 value) : Int32
{static} +flipBytes(UInt32 value) : UInt32
{static} +flipBytes(float value) : float
{static} +flipBytes(double value) : double
{static} +flipBytes(Int64 value) : Int64
{static} +flipBytes(UInt64 value) : UInt64
{static} +toBigEndian(Int16 value) : Int16
{static} +toBigEndian(UInt16 value) : UInt16
{static} +toBigEndian(Int32 value) : Int32
{static} +toBigEndian(UInt32 value) : UInt32
{static} +toBigEndian(Int64 value) : Int64
{static} +toBigEndian(UInt64 value) : UInt64
{static} +fromBigEndian(Int16 value) : Int16
{static} +fromBigEndian(UInt16 value) : UInt16
{static} +fromBigEndian(Int32 value) : Int32
{static} +fromBigEndian(UInt32 value) : UInt32
{static} +fromBigEndian(Int64 value) : Int64
{static} +fromBigEndian(UInt64 value) : UInt64
{static} +toLittleEndian(Int16 value) : Int16
{static} +toLittleEndian(UInt16 value) : UInt16
{static} +toLittleEndian(Int32 value) : Int32
{static} +toLittleEndian(UInt32 value) : UInt32
{static} +toLittleEndian(Int64 value) : Int64
{static} +toLittleEndian(UInt64 value) : UInt64
{static} +fromLittleEndian(Int16 value) : Int16
{static} +fromLittleEndian(UInt16 value) : UInt16
{static} +fromLittleEndian(Int32 value) : Int32
{static} +fromLittleEndian(UInt32 value) : UInt32
{static} +fromLittleEndian(Int64 value) : Int64
{static} +fromLittleEndian(UInt64 value) : UInt64
{static} +toNetwork(Int16 value) : Int16
{static} +toNetwork(UInt16 value) : UInt16
{static} +toNetwork(Int32 value) : Int32
{static} +toNetwork(UInt32 value) : UInt32
{static} +toNetwork(Int64 value) : Int64
{static} +toNetwork(UInt64 value) : UInt64
{static} +fromNetwork(Int16 value) : Int16
{static} +fromNetwork(UInt16 value) : UInt16
{static} +fromNetwork(Int32 value) : Int32
{static} +fromNetwork(UInt32 value) : UInt32
{static} +fromNetwork(Int64 value) : Int64
{static} +fromNetwork(UInt64 value) : UInt64
{static} -flip<T>(T value) : T
}
class "TextConverter" as C_0000907772260287610600
class C_0000907772260287610600 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextConverter.h#L30{TextConverter}]] {
+TextConverter(const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+~TextConverter() : void
+convert(const std::string & source, std::string & destination, TextConverter::Transform trans) : int
+convert(const void * source, int length, std::string & destination, TextConverter::Transform trans) : int
+convert(const std::string & source, std::string & destination) : int
+convert(const void * source, int length, std::string & destination) : int
-TextConverter() : void
-TextConverter(const TextConverter & ) : void
-operator=(const TextConverter & ) : TextConverter &
-_inEncoding : const TextEncoding & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextConverter.h#L84{_inEncoding}]]]
-_outEncoding : const TextEncoding & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextConverter.h#L85{_outEncoding}]]]
-_defaultChar : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextConverter.h#L86{_defaultChar}]]]
}
class "BufferAllocator<ch>" as C_0001401623322841507597
class C_0001401623322841507597 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferAllocator.h#L30{BufferAllocator}]] {
{static} +allocate(std::streamsize size) : BufferAllocator::char_type *
{static} +deallocate(BufferAllocator::char_type * ptr, std::streamsize ) : void
}
class "BasicBufferedStreamBuf<ch,tr,ba=BufferAllocator<ch>>" as C_0000350310737702783113
class C_0000350310737702783113 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedStreamBuf.h#L33{BasicBufferedStreamBuf}]] {
+BasicBufferedStreamBuf<ch, tr, ba>(std::streamsize bufferSize, BasicBufferedStreamBuf::openmode mode) : void
+~BasicBufferedStreamBuf<ch, tr, ba>() : void
+overflow(BasicBufferedStreamBuf::int_type c) : BasicBufferedStreamBuf::int_type
+underflow() : BasicBufferedStreamBuf::int_type
+sync() : int
#setMode(BasicBufferedStreamBuf::openmode mode) : void
#getMode() const : BasicBufferedStreamBuf::openmode
-readFromDevice(BasicBufferedStreamBuf::char_type * , std::streamsize ) : int
-writeToDevice(const BasicBufferedStreamBuf::char_type * , std::streamsize ) : int
-flushBuffer() : int
-BasicBufferedStreamBuf<ch, tr, ba>(const BasicBufferedStreamBuf<ch,tr,ba> & ) : void
-operator=(const BasicBufferedStreamBuf<ch,tr,ba> & ) : BasicBufferedStreamBuf<ch,tr,ba> &
-_bufsize : std::streamsize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedStreamBuf.h#L155{_bufsize}]]]
-_pBuffer : BasicBufferedStreamBuf::char_type * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedStreamBuf.h#L156{_pBuffer}]]]
-_mode : BasicBufferedStreamBuf::openmode [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedStreamBuf.h#L157{_mode}]]]
}
class "DeflatingStreamBuf" as C_0000783418973520198838
class C_0000783418973520198838 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L35{DeflatingStreamBuf}]] {
+DeflatingStreamBuf(std::istream & istr, DeflatingStreamBuf::StreamType type, int level) : void
+DeflatingStreamBuf(std::istream & istr, int windowBits, int level) : void
+DeflatingStreamBuf(std::ostream & ostr, DeflatingStreamBuf::StreamType type, int level) : void
+DeflatingStreamBuf(std::ostream & ostr, int windowBits, int level) : void
+~DeflatingStreamBuf() : void
+close() : int
#readFromDevice(char * buffer, std::streamsize length) : int
#writeToDevice(const char * buffer, std::streamsize length) : int
#sync() : int
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L92{_pIstr}]]]
-_pOstr : std::ostream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L93{_pOstr}]]]
-_buffer : char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L94{_buffer}]]]
-_zstr : z_stream [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L95{_zstr}]]]
-_eof : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L96{_eof}]]]
-STREAM_BUFFER_SIZE : enum
-DEFLATE_BUFFER_SIZE : enum
}
enum "DeflatingStreamBuf::StreamType" as C_0000634730083395501742
enum C_0000634730083395501742 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L44{DeflatingStreamBuf##StreamType}]] {
STREAM_ZLIB
STREAM_GZIP
}
class "DeflatingIOS" as C_0000061206875441959656
class C_0000061206875441959656 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L100{DeflatingIOS}]] {
+DeflatingIOS(std::ostream & ostr, DeflatingStreamBuf::StreamType type = DeflatingStreamBuf::STREAM_ZLIB, int level = (-1)) : void
+DeflatingIOS(std::ostream & ostr, int windowBits, int level) : void
+DeflatingIOS(std::istream & istr, DeflatingStreamBuf::StreamType type = DeflatingStreamBuf::STREAM_ZLIB, int level = (-1)) : void
+DeflatingIOS(std::istream & istr, int windowBits, int level) : void
+~DeflatingIOS() : void
+rdbuf() : DeflatingStreamBuf *
#_buf : DeflatingStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L136{_buf}]]]
}
class "DeflatingOutputStream" as C_0001818937444083940422
class C_0001818937444083940422 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L140{DeflatingOutputStream}]] {
+DeflatingOutputStream(std::ostream & ostr, DeflatingStreamBuf::StreamType type = DeflatingStreamBuf::STREAM_ZLIB, int level = (-1)) : void
+DeflatingOutputStream(std::ostream & ostr, int windowBits, int level) : void
+~DeflatingOutputStream() : void
+close() : int
#sync() : int
}
class "DeflatingInputStream" as C_0001570938228759617789
class C_0001570938228759617789 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DeflatingStream.h#L177{DeflatingInputStream}]] {
+DeflatingInputStream(std::istream & istr, DeflatingStreamBuf::StreamType type = DeflatingStreamBuf::STREAM_ZLIB, int level = (-1)) : void
+DeflatingInputStream(std::istream & istr, int windowBits, int level) : void
+~DeflatingInputStream() : void
}
class "RegularExpression" as C_0000556232260676736866
class C_0000556232260676736866 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L32{RegularExpression}]] {
+RegularExpression(const std::string & pattern, int options = 0, bool study = true) : void
+~RegularExpression() : void
+match(const std::string & subject, RegularExpression::Match & mtch, int options = 0) const : int
+match(const std::string & subject, std::string::size_type offset, RegularExpression::Match & mtch, int options = 0) const : int
+match(const std::string & subject, std::string::size_type offset, RegularExpression::MatchVec & matches, int options = 0) const : int
+match(const std::string & subject, std::string::size_type offset = 0) const : bool
+match(const std::string & subject, std::string::size_type offset, int options) const : bool
+operator==(const std::string & subject) const : bool
+operator!=(const std::string & subject) const : bool
+extract(const std::string & subject, std::string & str, int options = 0) const : int
+extract(const std::string & subject, std::string::size_type offset, std::string & str, int options = 0) const : int
+split(const std::string & subject, std::vector<std::string> & strings, int options = 0) const : int
+split(const std::string & subject, std::string::size_type offset, std::vector<std::string> & strings, int options = 0) const : int
+subst(std::string & subject, const std::string & replacement, int options = 0) const : int
+subst(std::string & subject, std::string::size_type offset, const std::string & replacement, int options = 0) const : int
{static} +match(const std::string & subject, const std::string & pattern, int options = 0) : bool
#substOne(std::string & subject, std::string::size_type offset, const std::string & replacement, int options) const : std::string::size_type
{static} #compileOptions(int options) : int
{static} #matchOptions(int options) : int
-RegularExpression() : void
-RegularExpression(const RegularExpression & ) : void
-operator=(const RegularExpression & ) : RegularExpression &
-_pcre : void * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L205{_pcre}]]]
-_groups : RegularExpression::GroupMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L207{_groups}]]]
}
enum "RegularExpression::Options" as C_0001213116382374608563
enum C_0001213116382374608563 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L39{RegularExpression##Options}]] {
RE_CASELESS
RE_MULTILINE
RE_DOTALL
RE_EXTENDED
RE_ANCHORED
RE_DOLLAR_ENDONLY
RE_EXTRA
RE_NOTBOL
RE_NOTEOL
RE_UNGREEDY
RE_NOTEMPTY
RE_UTF8
RE_NO_AUTO_CAPTURE
RE_NO_UTF8_CHECK
RE_FIRSTLINE
RE_DUPNAMES
RE_NEWLINE_CR
RE_NEWLINE_LF
RE_NEWLINE_CRLF
RE_NEWLINE_ANY
RE_NEWLINE_ANYCRLF
RE_GLOBAL
RE_NO_VARS
}
class "RegularExpression::Match" as C_0001711829908199642357
class C_0001711829908199642357 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L77{RegularExpression##Match}]] {
+offset : std::string::size_type [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L79{offset}]]]
+length : std::string::size_type [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L80{length}]]]
+name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RegularExpression.h#L81{name}]]]
}
class "PipeImpl" as C_0001360537409230479781
class C_0001360537409230479781 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeImpl_POSIX.h#L28{PipeImpl}]] {
+PipeImpl() : void
+~PipeImpl() : void
+writeBytes(const void * buffer, int length) : int
+readBytes(void * buffer, int length) : int
+readHandle() const : PipeImpl::Handle
+writeHandle() const : PipeImpl::Handle
+closeRead() : void
+closeWrite() : void
-_readfd : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeImpl_POSIX.h#L45{_readfd}]]]
-_writefd : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeImpl_POSIX.h#L46{_writefd}]]]
}
class "Pipe" as C_0001112567962152961463
class C_0001112567962152961463 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Pipe.h#L28{Pipe}]] {
+Pipe() : void
+Pipe(const Pipe & pipe) : void
+~Pipe() : void
+operator=(const Pipe & pipe) : Pipe &
+writeBytes(const void * buffer, int length) : int
+readBytes(void * buffer, int length) : int
+readHandle() const : Pipe::Handle
+writeHandle() const : Pipe::Handle
+close(Pipe::CloseMode mode = CLOSE_BOTH) : void
-_pImpl : PipeImpl * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Pipe.h#L108{_pImpl}]]]
}
enum "Pipe::CloseMode" as C_0001151071929839061337
enum C_0001151071929839061337 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Pipe.h#L53{Pipe##CloseMode}]] {
CLOSE_READ
CLOSE_WRITE
CLOSE_BOTH
}
class "SynchronizedObject" as C_0000150490232910076306
class C_0000150490232910076306 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SynchronizedObject.h#L29{SynchronizedObject}]] {
+SynchronizedObject() : void
+~SynchronizedObject() : void
+lock() const : void
+tryLock() const : bool
+unlock() const : void
+notify() const : void
+wait() const : void
+wait(long milliseconds) const : void
+tryWait(long milliseconds) const : bool
-_mutex : Mutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SynchronizedObject.h#L78{_mutex}]]]
-_event : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SynchronizedObject.h#L79{_event}]]]
}
class "Random" as C_0002151864068859779218
class C_0002151864068859779218 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L57{Random}]] {
+Random(int stateSize = 256) : void
+~Random() : void
+seed(UInt32 seed) : void
+seed() : void
+next() : UInt32
+next(UInt32 n) : UInt32
+nextChar() : char
+nextBool() : bool
+nextFloat() : float
+nextDouble() : double
#initState(UInt32 seed, char * arg_state, Int32 n) : void
{static} #goodRand(Int32 x) : UInt32
-_fptr : UInt32 * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L118{_fptr}]]]
-_rptr : UInt32 * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L119{_rptr}]]]
-_state : UInt32 * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L120{_state}]]]
-_randType : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L121{_randType}]]]
-_randDeg : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L122{_randDeg}]]]
-_randSep : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L123{_randSep}]]]
-_endPtr : UInt32 * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L124{_endPtr}]]]
-_pBuffer : char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L125{_pBuffer}]]]
-MAX_TYPES : enum
-NSHUFF : enum
}
enum "Random::Type" as C_0000808432221961788140
enum C_0000808432221961788140 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Random.h#L65{Random##Type}]] {
RND_STATE_0
RND_STATE_32
RND_STATE_64
RND_STATE_128
RND_STATE_256
}
class "Environment" as C_0000678887296957594802
class C_0000678887296957594802 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Environment.h#L27{Environment}]] {
{static} +get(const std::string & name) : std::string
{static} +get(const std::string & name, const std::string & defaultValue) : std::string
{static} +has(const std::string & name) : bool
{static} +set(const std::string & name, const std::string & value) : void
{static} +osName() : std::string
{static} +osDisplayName() : std::string
{static} +osVersion() : std::string
{static} +osArchitecture() : std::string
{static} +nodeName() : std::string
{static} +nodeId(Environment::NodeId & id) : void
{static} +nodeId() : std::string
{static} +processorCount() : unsigned int
{static} +libraryVersion() : UInt32
{static} +os() : Int32
{static} +arch() : Int32
{static} +isUnix() : bool
{static} +isWindows() : bool
}
class "UUIDGenerator" as C_0001812645041580479861
class C_0001812645041580479861 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L35{UUIDGenerator}]] {
+UUIDGenerator() : void
+~UUIDGenerator() : void
+create() : UUID
+createFromName(const UUID & nsid, const std::string & name) : UUID
+createFromName(const UUID & nsid, const std::string & name, DigestEngine & de) : UUID
+createFromName(const UUID & nsid, const std::string & name, DigestEngine & de, UUID::Version version) : UUID
+createRandom() : UUID
+createOne() : UUID
+seed(UInt32 n) : void
+seed() : void
{static} +defaultGenerator() : UUIDGenerator &
#timeStamp() : Timestamp::UtcTimeVal
#getNode() : void
-UUIDGenerator(const UUIDGenerator & ) : void
-operator=(const UUIDGenerator & ) : UUIDGenerator &
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L96{_mutex}]]]
-_random : Random [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L97{_random}]]]
-_lastTime : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L98{_lastTime}]]]
-_ticks : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L99{_ticks}]]]
-_node : Environment::NodeId [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L100{_node}]]]
-_haveNode : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UUIDGenerator.h#L101{_haveNode}]]]
}
class "RandomBuf" as C_0001327785839452962833
class C_0001327785839452962833 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RandomStream.h#L29{RandomBuf}]] {
+RandomBuf() : void
+~RandomBuf() : void
+readFromDevice(char * buffer, std::streamsize length) : int
}
class "RandomIOS" as C_0001141577091994508979
class C_0001141577091994508979 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RandomStream.h#L44{RandomIOS}]] {
+RandomIOS() : void
+~RandomIOS() : void
+rdbuf() : RandomBuf *
#_buf : RandomBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RandomStream.h#L56{_buf}]]]
}
class "RandomInputStream" as C_0001743785934283401657
class C_0001743785934283401657 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RandomStream.h#L60{RandomInputStream}]] {
+RandomInputStream() : void
+~RandomInputStream() : void
}
class "MD5Engine" as C_0000945756009210152056
class C_0000945756009210152056 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L51{MD5Engine}]] {
+MD5Engine() : void
+~MD5Engine() : void
+digestLength() const : std::size_t
+reset() : void
+digest() : const DigestEngine::Digest &
#updateImpl(const void * data, std::size_t length) : void
{static} -transform(UInt32 * state, const unsigned char * block) : void
{static} -encode(unsigned char * output, const UInt32 * input, std::size_t len) : void
{static} -decode(UInt32 * output, const unsigned char * input, std::size_t len) : void
-MD5Engine(const MD5Engine & ) : void
-operator=(const MD5Engine & ) : MD5Engine &
-_context : MD5Engine::Context [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L84{_context}]]]
-_digest : DigestEngine::Digest [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L85{_digest}]]]
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "MD5Engine::Context" as C_0000225431789614415548
class C_0000225431789614415548 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L77{MD5Engine##Context}]] {
+state : UInt32[4] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L79{state}]]]
+count : UInt32[2] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L80{count}]]]
+buffer : unsigned char[64] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD5Engine.h#L81{buffer}]]]
}
class "SHA1Engine" as C_0001324611786786381120
class C_0001324611786786381120 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L34{SHA1Engine}]] {
+SHA1Engine() : void
+~SHA1Engine() : void
+digestLength() const : std::size_t
+reset() : void
+digest() : const DigestEngine::Digest &
#updateImpl(const void * data, std::size_t length) : void
-transform() : void
{static} -byteReverse(UInt32 * buffer, int byteCount) : void
-SHA1Engine(const SHA1Engine & ) : void
-operator=(const SHA1Engine & ) : SHA1Engine &
-_context : SHA1Engine::Context [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L70{_context}]]]
-_digest : DigestEngine::Digest [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L71{_digest}]]]
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "SHA1Engine::Context" as C_0002121311177957628765
class C_0002121311177957628765 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L61{SHA1Engine##Context}]] {
+digest : UInt32[5] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L63{digest}]]]
+countLo : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L64{countLo}]]]
+countHi : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L65{countHi}]]]
+data : UInt32[16] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L66{data}]]]
+slop : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA1Engine.h#L67{slop}]]]
}
class "StreamChannel" as C_0000326619542703828852
class C_0000326619542703828852 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamChannel.h#L30{StreamChannel}]] {
+StreamChannel(std::ostream & str) : void
+log(const Message & msg) : void
#~StreamChannel() : void
-_str : std::ostream & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamChannel.h#L53{_str}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamChannel.h#L54{_mutex}]]]
}
class "PriorityNotificationQueue" as C_0001259282692407170269
class C_0001259282692407170269 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L35{PriorityNotificationQueue}]] {
+PriorityNotificationQueue() : void
+~PriorityNotificationQueue() : void
+enqueueNotification(Notification::Ptr pNotification, int priority) : void
+dequeueNotification() : Notification *
+waitDequeueNotification() : Notification *
+waitDequeueNotification(long milliseconds) : Notification *
+dispatch(NotificationCenter & notificationCenter) : void
+wakeUpAll() : void
+empty() const : bool
+size() const : int
+clear() : void
+hasIdleThreads() const : bool
{static} +defaultQueue() : PriorityNotificationQueue &
#dequeueOne() : Notification::Ptr
-_nfQueue : PriorityNotificationQueue::NfQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L149{_nfQueue}]]]
-_waitQueue : PriorityNotificationQueue::WaitQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L150{_waitQueue}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L151{_mutex}]]]
}
class "PriorityNotificationQueue::WaitInfo" as C_0000252891770375403110
class C_0000252891770375403110 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L142{PriorityNotificationQueue##WaitInfo}]] {
+pNf : Notification::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L144{pNf}]]]
+nfAvailable : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PriorityNotificationQueue.h#L145{nfAvailable}]]]
}
class "MemoryPool" as C_0001876684107292441776
class C_0001876684107292441776 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L31{MemoryPool}]] {
+MemoryPool(std::size_t blockSize, int preAlloc = 0, int maxAlloc = 0) : void
+~MemoryPool() : void
+get() : void *
+release(void * ptr) : void
+blockSize() const : std::size_t
+allocated() const : int
+available() const : int
-MemoryPool() : void
-MemoryPool(const MemoryPool & ) : void
-operator=(const MemoryPool & ) : MemoryPool &
-clear() : void
-_blockSize : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L84{_blockSize}]]]
-_maxAlloc : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L85{_maxAlloc}]]]
-_allocated : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L86{_allocated}]]]
-_blocks : MemoryPool::BlockVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L87{_blocks}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L88{_mutex}]]]
-BLOCK_RESERVE : enum
}
class "FastMemoryPool<T,M=class FastMutex>" as C_0001194006018242772921
class C_0001194006018242772921 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L103{FastMemoryPool}]] {
+FastMemoryPool<T, M>(std::size_t blocksPerBucket = 1000, std::size_t bucketPreAlloc = 10, std::size_t maxAlloc = 0) : void
+~FastMemoryPool<T, M>() : void
+get() : void *
+blockSize() const : std::size_t
+allocated() const : std::size_t
+available() const : std::size_t
-FastMemoryPool<T, M>(const FastMemoryPool<T,M> & ) : void
-operator=(const FastMemoryPool<T,M> & ) : FastMemoryPool<T,M> &
-resize() : void
-clear() : void
+release<P>(P * ptr) : void
-_blocksPerBucket : const std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L375{_blocksPerBucket}]]]
-_buckets : FastMemoryPool::BucketVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L376{_buckets}]]]
-_firstBlock : FastMemoryPool::Block * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L377{_firstBlock}]]]
-_maxAlloc : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L378{_maxAlloc}]]]
-_available : FastMemoryPool::Counter [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L379{_available}]]]
-_mutex : M [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L380{_mutex}]]]
}
class "FastMemoryPool::Block" as C_0001776643790081609039
class C_0001776643790081609039 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L188{FastMemoryPool##Block}]] {
+Block() : void
+Block(FastMemoryPool::Block * next) : void
-Block(const FastMemoryPool::Block & ) : void
-operator=(const FastMemoryPool::Block & ) : FastMemoryPool::Block &
+_memory : FastMemoryPool::Block::(anonymous_945481) [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L244{_memory}]]]
}
class "FastMemoryPool::Block::(_memory)" as C_0000668245676503162556
class C_0000668245676503162556 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L232{FastMemoryPool##Block##(_memory)}]] {
+buffer : char[sizeof(T)] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L242{buffer}]]]
+next : FastMemoryPool::Block * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MemoryPool.h#L243{next}]]]
}
class "TextIterator" as C_0000737503289654376783
class C_0000737503289654376783 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextIterator.h#L30{TextIterator}]] {
+TextIterator() : void
+TextIterator(const std::string & str, const TextEncoding & encoding) : void
+TextIterator(const std::string::const_iterator & begin, const std::string::const_iterator & end, const TextEncoding & encoding) : void
+TextIterator(const std::string & str) : void
+TextIterator(const std::string::const_iterator & end) : void
+~TextIterator() : void
+TextIterator(const TextIterator & it) : void
+operator=(const TextIterator & it) : TextIterator &
+swap(TextIterator & it) : void
+operator*() const : int
+operator++() : TextIterator &
+operator++(int ) : TextIterator
+operator==(const TextIterator & it) const : bool
+operator!=(const TextIterator & it) const : bool
+end() const : TextIterator
-_pEncoding : const TextEncoding * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextIterator.h#L105{_pEncoding}]]]
-_it : std::string::const_iterator [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextIterator.h#L106{_it}]]]
-_end : std::string::const_iterator [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextIterator.h#L107{_end}]]]
}
class "Glob" as C_0001065209587280834302
class C_0001065209587280834302 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Glob.h#L32{Glob}]] {
+Glob(const std::string & pattern, int options = 0) : void
+~Glob() : void
+match(const std::string & subject) : bool
{static} +glob(const std::string & pathPattern, std::set<std::string> & files, int options = 0) : void
{static} +glob(const char * pathPattern, std::set<std::string> & files, int options = 0) : void
{static} +glob(const Path & pathPattern, std::set<std::string> & files, int options = 0) : void
{static} +glob(const Path & pathPattern, const Path & basePath, std::set<std::string> & files, int options = 0) : void
#match(TextIterator & itp, const TextIterator & endp, TextIterator & its, const TextIterator & ends) : bool
#matchAfterAsterisk(TextIterator itp, const TextIterator & endp, TextIterator its, const TextIterator & ends) : bool
#matchSet(TextIterator & itp, const TextIterator & endp, int c) : bool
{static} #collect(const Path & pathPattern, const Path & base, const Path & current, const std::string & pattern, std::set<std::string> & files, int options) : void
{static} #isDirectory(const Path & path, bool followSymlink) : bool
-Glob() : void
-Glob(const Glob & ) : void
-operator=(const Glob & ) : Glob &
-_pattern : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Glob.h#L140{_pattern}]]]
-_options : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Glob.h#L141{_options}]]]
}
enum "Glob::Options" as C_0001174425138909410790
enum C_0001174425138909410790 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Glob.h#L52{Glob##Options}]] {
GLOB_DEFAULT
GLOB_DOT_SPECIAL
GLOB_FOLLOW_SYMLINKS
GLOB_CASELESS
GLOB_DIRS_ONLY
}
class "Path" as C_0001885826889660665099
class C_0001885826889660665099 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L28{Path}]] {
+Path() : void
+Path(bool absolute) : void
+Path(const char * path) : void
+Path(const char * path, Path::Style style) : void
+Path(const std::string & path) : void
+Path(const std::string & path, Path::Style style) : void
+Path(const Path & path) : void
+Path(Path && path) : void
+Path(const Path & parent, const std::string & fileName) : void
+Path(const Path & parent, const char * fileName) : void
+Path(const Path & parent, const Path & relative) : void
+~Path() : void
+operator=(const Path & path) : Path &
+operator=(Path && path) : Path &
+operator=(const std::string & path) : Path &
+operator=(const char * path) : Path &
+swap(Path & path) : void
+assign(const std::string & path) : Path &
+assign(const std::string & path, Path::Style style) : Path &
+assign(const Path & path) : Path &
+assign(const char * path) : Path &
+toString() const : std::string
+toString(Path::Style style) const : std::string
+parse(const std::string & path) : Path &
+parse(const std::string & path, Path::Style style) : Path &
+tryParse(const std::string & path) : bool
+tryParse(const std::string & path, Path::Style style) : bool
+parseDirectory(const std::string & path) : Path &
+parseDirectory(const std::string & path, Path::Style style) : Path &
+makeDirectory() : Path &
+makeFile() : Path &
+makeParent() : Path &
+makeAbsolute() : Path &
+makeAbsolute(const Path & base) : Path &
+append(const Path & path) : Path &
+resolve(const Path & path) : Path &
+isAbsolute() const : bool
+isRelative() const : bool
+isDirectory() const : bool
+isFile() const : bool
+setNode(const std::string & node) : Path &
+getNode() const : const std::string &
+setDevice(const std::string & device) : Path &
+getDevice() const : const std::string &
+depth() const : int
+directory(int n) const : const std::string &
+operator[](int n) const : const std::string &
+pushDirectory(const std::string & dir) : Path &
+popDirectory() : Path &
+popFrontDirectory() : Path &
+setFileName(const std::string & name) : Path &
+getFileName() const : const std::string &
+setBaseName(const std::string & name) : Path &
+getBaseName() const : std::string
+setExtension(const std::string & extension) : Path &
+getExtension() const : std::string
+version() const : const std::string &
+clear() : Path &
+parent() const : Path
+absolute() const : Path
+absolute(const Path & base) const : Path
{static} +forDirectory(const std::string & path) : Path
{static} +forDirectory(const std::string & path, Path::Style style) : Path
{static} +separator() : char
{static} +pathSeparator() : char
{static} +current() : std::string
{static} +home() : std::string
{static} +configHome() : std::string
{static} +dataHome() : std::string
{static} +tempHome() : std::string
{static} +cacheHome() : std::string
{static} +temp() : std::string
{static} +config() : std::string
{static} +null() : std::string
{static} +expand(const std::string & path) : std::string
{static} +listRoots(std::vector<std::string> & roots) : void
{static} +find(StringVec::const_iterator it, StringVec::const_iterator end, const std::string & name, Path & path) : bool
{static} +find(const std::string & pathList, const std::string & name, Path & path) : bool
{static} +transcode(const std::string & path) : std::string
#parseUnix(const std::string & path) : void
#parseWindows(const std::string & path) : void
#parseVMS(const std::string & path) : void
#parseGuess(const std::string & path) : void
#buildUnix() const : std::string
#buildWindows() const : std::string
#buildVMS() const : std::string
-_node : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L382{_node}]]]
-_device : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L383{_device}]]]
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L384{_name}]]]
-_version : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L385{_version}]]]
-_dirs : Path::StringVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L386{_dirs}]]]
-_absolute : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L387{_absolute}]]]
}
enum "Path::Style" as C_0000597753878102788228
enum C_0000597753878102788228 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path.h#L41{Path##Style}]] {
PATH_UNIX
PATH_URI
PATH_WINDOWS
PATH_VMS
PATH_NATIVE
PATH_GUESS
}
class "FileImpl" as C_0001500606249666932665
class C_0001500606249666932665 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/File_UNIX.h#L27{FileImpl}]] {
#FileImpl() : void
#FileImpl(const std::string & path) : void
#~FileImpl() : void
#swapImpl(FileImpl & file) : void
#setPathImpl(const std::string & path) : void
#getPathImpl() const : const std::string &
#existsImpl() const : bool
#canReadImpl() const : bool
#canWriteImpl() const : bool
#canExecuteImpl() const : bool
#isFileImpl() const : bool
#isDirectoryImpl() const : bool
#isLinkImpl() const : bool
#isDeviceImpl() const : bool
#isHiddenImpl() const : bool
#createdImpl() const : Timestamp
#getLastModifiedImpl() const : Timestamp
#setLastModifiedImpl(const Timestamp & ts) : void
#getSizeImpl() const : FileImpl::FileSizeImpl
#setSizeImpl(FileImpl::FileSizeImpl size) : void
#setWriteableImpl(bool flag = true) : void
#setExecutableImpl(bool flag = true) : void
#copyToImpl(const std::string & path, int options = 0) const : void
#renameToImpl(const std::string & path, int options = 0) : void
#linkToImpl(const std::string & path, int type) const : void
#removeImpl() : void
#createFileImpl() : bool
#createDirectoryImpl() : bool
#totalSpaceImpl() const : FileImpl::FileSizeImpl
#usableSpaceImpl() const : FileImpl::FileSizeImpl
#freeSpaceImpl() const : FileImpl::FileSizeImpl
{static} #handleLastErrorImpl(int err, const std::string & path) : void
{static} #handleLastErrorImpl(const std::string & path) : void
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/File_UNIX.h#L72{_path}]]]
}
enum "FileImpl::Options" as C_0001403448667312781339
enum C_0001403448667312781339 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/File_UNIX.h#L30{FileImpl##Options}]] {
OPT_FAIL_ON_OVERWRITE_IMPL
}
class "File" as C_0001644128268345288171
class C_0001644128268345288171 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/File.h#L45{File}]] {
+File() : void
+File(const std::string & path) : void
+File(const char * path) : void
+File(const Path & path) : void
+File(const File & file) : void
+~File() : void
+operator=(const File & file) : File &
+operator=(const std::string & path) : File &
+operator=(const char * path) : File &
+operator=(const Path & path) : File &
+swap(File & file) : void
+path() const : const std::string &
+exists() const : bool
+canRead() const : bool
+canWrite() const : bool
+canExecute() const : bool
+isFile() const : bool
+isLink() const : bool
+isDirectory() const : bool
+isDevice() const : bool
+isHidden() const : bool
+created() const : Timestamp
+getLastModified() const : Timestamp
+setLastModified(const Timestamp & ts) : File &
+getSize() const : File::FileSize
+setSize(File::FileSize size) : File &
+setWriteable(bool flag = true) : File &
+setReadOnly(bool flag = true) : File &
+setExecutable(bool flag = true) : File &
+copyTo(const std::string & path, int options = 0) const : void
+moveTo(const std::string & path, int options = 0) : void
+renameTo(const std::string & path, int options = 0) : void
+linkTo(const std::string & path, File::LinkType type = LINK_SYMBOLIC) const : void
+remove(bool recursive = false) : void
+createFile() : bool
+createDirectory() : bool
+createDirectories() : void
+list(std::vector<std::string> & files) const : void
+list(std::vector<File> & files) const : void
+totalSpace() const : File::FileSize
+usableSpace() const : File::FileSize
+freeSpace() const : File::FileSize
+operator==(const File & file) const : bool
+operator!=(const File & file) const : bool
+operator<(const File & file) const : bool
+operator<=(const File & file) const : bool
+operator>(const File & file) const : bool
+operator>=(const File & file) const : bool
{static} +handleLastError(const std::string & path) : void
#copyDirectory(const std::string & path, int options = 0) const : void
}
enum "File::LinkType" as C_0000622574549466368290
enum C_0000622574549466368290 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/File.h#L63{File##LinkType}]] {
LINK_HARD
LINK_SYMBOLIC
}
enum "File::Options" as C_0000005633886429669516
enum C_0000005633886429669516 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/File.h#L70{File##Options}]] {
OPT_FAIL_ON_OVERWRITE
}
class "DirectoryIterator" as C_0000185259415814473539
class C_0000185259415814473539 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator.h#L32{DirectoryIterator}]] {
+DirectoryIterator() : void
+DirectoryIterator(const std::string & path) : void
+DirectoryIterator(const DirectoryIterator & iterator) : void
+DirectoryIterator(const File & file) : void
+DirectoryIterator(const Path & path) : void
+~DirectoryIterator() : void
+name() const : const std::string &
+path() const : const Path &
+operator=(const DirectoryIterator & it) : DirectoryIterator &
+operator=(const File & file) : DirectoryIterator &
+operator=(const Path & path) : DirectoryIterator &
+operator=(const std::string & path) : DirectoryIterator &
+operator++() : DirectoryIterator &
+operator++(int ) : DirectoryIterator
+operator*() const : const File &
+operator*() : File &
+operator->() const : const File *
+operator->() : File *
+operator==(const DirectoryIterator & iterator) const : bool
+operator!=(const DirectoryIterator & iterator) const : bool
#_path : Path [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator.h#L91{_path}]]]
#_file : File [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator.h#L92{_file}]]]
-_pImpl : DirectoryIteratorImpl * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator.h#L95{_pImpl}]]]
}
class "DirectoryIteratorImpl" as C_0001909476426244774967
class C_0001909476426244774967 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator.h#L29{DirectoryIteratorImpl}]] {
+DirectoryIteratorImpl(const std::string & path) : void
+~DirectoryIteratorImpl() : void
+duplicate() : void
+release() : void
+get() const : const std::string &
+next() : const std::string &
-_pDir : DIR * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator_UNIX.h#L41{_pDir}]]]
-_current : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator_UNIX.h#L42{_current}]]]
-_rc : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIterator_UNIX.h#L43{_rc}]]]
}
class "DigestBuf" as C_0000497396246447007446
class C_0000497396246447007446 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L31{DigestBuf}]] {
+DigestBuf(DigestEngine & eng) : void
+DigestBuf(DigestEngine & eng, std::istream & istr) : void
+DigestBuf(DigestEngine & eng, std::ostream & ostr) : void
+~DigestBuf() : void
+readFromDevice(char * buffer, std::streamsize length) : int
+writeToDevice(const char * buffer, std::streamsize length) : int
+close() : void
-_eng : DigestEngine & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L45{_eng}]]]
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L46{_pIstr}]]]
-_pOstr : std::ostream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L47{_pOstr}]]]
{static} -BUFFER_SIZE : const int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L48{BUFFER_SIZE}]]]
}
class "DigestIOS" as C_0000696237004169527369
class C_0000696237004169527369 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L52{DigestIOS}]] {
+DigestIOS(DigestEngine & eng) : void
+DigestIOS(DigestEngine & eng, std::istream & istr) : void
+DigestIOS(DigestEngine & eng, std::ostream & ostr) : void
+~DigestIOS() : void
+rdbuf() : DigestBuf *
#_buf : DigestBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L66{_buf}]]]
}
class "DigestInputStream" as C_0001416704170948969742
class C_0001416704170948969742 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L70{DigestInputStream}]] {
+DigestInputStream(DigestEngine & eng, std::istream & istr) : void
+~DigestInputStream() : void
}
class "DigestOutputStream" as C_0000035401107685360201
class C_0000035401107685360201 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DigestStream.h#L81{DigestOutputStream}]] {
+DigestOutputStream(DigestEngine & eng) : void
+DigestOutputStream(DigestEngine & eng, std::ostream & ostr) : void
+~DigestOutputStream() : void
+close() : void
}
abstract "URIStreamFactory" as C_0000612840240710428706
abstract C_0000612840240710428706 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URIStreamFactory.h#L31{URIStreamFactory}]] {
+URIStreamFactory() : void
{abstract} +open(const URI & uri) = 0 : std::istream *
#~URIStreamFactory() : void
-URIStreamFactory(const URIStreamFactory & ) : void
-operator=(const URIStreamFactory & ) : URIStreamFactory &
}
class "URIRedirection" as C_0001688112067195493275
class C_0001688112067195493275 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URIStreamFactory.h#L63{URIRedirection}]] {
+URIRedirection(const std::string & uri) : void
+URIRedirection(const URIRedirection & redir) : void
+operator=(const URIRedirection & redir) : URIRedirection &
+swap(URIRedirection & redir) : void
+uri() const : const std::string &
-URIRedirection() : void
-_uri : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URIStreamFactory.h#L81{_uri}]]]
}
class "DataURIStreamFactory" as C_0002250159164550911674
class C_0002250159164550911674 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStreamFactory.h#L28{DataURIStreamFactory}]] {
+DataURIStreamFactory() : void
+~DataURIStreamFactory() : void
+open(const URI & uri) : std::istream *
{static} +registerFactory() : void
{static} +unregisterFactory() : void
}
class "DataURIStreamIOS" as C_0000565945937925477761
class C_0000565945937925477761 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L34{DataURIStreamIOS}]] {
+DataURIStreamIOS(const URI & uri) : void
+~DataURIStreamIOS() : void
+rdbuf() : std::streambuf *
-DataURIStreamIOS(const DataURIStreamIOS & ) : void
-operator=(const DataURIStreamIOS & ) : DataURIStreamIOS &
#_buf : std::streambuf * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L46{_buf}]]]
-_data : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L51{_data}]]]
-_memoryStream : std::unique_ptr<MemoryInputStream> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L52{_memoryStream}]]]
-_base64Decoder : std::unique_ptr<Base64Decoder> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L53{_base64Decoder}]]]
}
class "DataURIStream" as C_0000366366592142931484
class C_0000366366592142931484 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L57{DataURIStream}]] {
+DataURIStream(const URI & uri) : void
+~DataURIStream() : void
-DataURIStream(const DataURIStream & ) : void
-operator=(const DataURIStream & ) : DataURIStream &
}
class "URI" as C_0000526725579819244397
class C_0000526725579819244397 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L32{URI}]] {
+URI() : void
+URI(const std::string & uri) : void
+URI(const char * uri) : void
+URI(const std::string & scheme, const std::string & pathEtc) : void
+URI(const std::string & scheme, const std::string & authority, const std::string & pathEtc) : void
+URI(const std::string & scheme, const std::string & authority, const std::string & path, const std::string & query) : void
+URI(const std::string & scheme, const std::string & authority, const std::string & path, const std::string & query, const std::string & fragment) : void
+URI(const URI & uri) : void
+URI(URI && uri) : void
+URI(const URI & baseURI, const std::string & relativeURI) : void
+URI(const Path & path) : void
+~URI() : void
+operator=(const URI & uri) : URI &
+operator=(URI && uri) : URI &
+operator=(const std::string & uri) : URI &
+operator=(const char * uri) : URI &
+swap(URI & uri) : void
+clear() : void
+toString() const : std::string
+getScheme() const : const std::string &
+setScheme(const std::string & scheme) : void
+getUserInfo() const : const std::string &
+setUserInfo(const std::string & userInfo) : void
+getHost() const : const std::string &
+setHost(const std::string & host) : void
+getPort() const : unsigned short
+setPort(unsigned short port) : void
+getSpecifiedPort() const : unsigned short
+getAuthority() const : std::string
+setAuthority(const std::string & authority) : void
+getPath() const : const std::string &
+setPath(const std::string & path) : void
+getQuery() const : std::string
+setQuery(const std::string & query) : void
+addQueryParameter(const std::string & param, const std::string & val = "") : void
+getRawQuery() const : const std::string &
+setRawQuery(const std::string & query) : void
+getQueryParameters(bool plusIsSpace = true) const : URI::QueryParameters
+setQueryParameters(const URI::QueryParameters & params) : void
+getFragment() const : std::string
+setFragment(const std::string & fragment) : void
+getRawFragment() const : std::string
+setRawFragment(const std::string & fragment) : void
+setPathEtc(const std::string & pathEtc) : void
+getPathEtc() const : std::string
+getPathAndQuery() const : std::string
+resolve(const std::string & relativeURI) : void
+resolve(const URI & relativeURI) : void
+isRelative() const : bool
+empty() const : bool
+operator==(const URI & uri) const : bool
+operator==(const std::string & uri) const : bool
+operator!=(const URI & uri) const : bool
+operator!=(const std::string & uri) const : bool
+normalize() : void
+getPathSegments(std::vector<std::string> & segments) const : void
{static} +encode(const std::string & str, const std::string & reserved, std::string & encodedStr) : void
{static} +decode(const std::string & str, std::string & decodedStr, bool plusAsSpace = false) : void
#equals(const URI & uri) const : bool
#isWellKnownPort() const : bool
#getWellKnownPort() const : unsigned short
#parse(const std::string & uri) : void
#parseAuthority(std::string::const_iterator & it, const std::string::const_iterator & end) : void
#parseHostAndPort(std::string::const_iterator & it, const std::string::const_iterator & end) : void
#parsePath(std::string::const_iterator & it, const std::string::const_iterator & end) : void
#parsePathEtc(std::string::const_iterator & it, const std::string::const_iterator & end) : void
#parseQuery(std::string::const_iterator & it, const std::string::const_iterator & end) : void
#parseFragment(std::string::const_iterator & it, const std::string::const_iterator & end) : void
#mergePath(const std::string & path) : void
#removeDotSegments(bool removeLeading = true) : void
{static} #getPathSegments(const std::string & path, std::vector<std::string> & segments) : void
#buildPath(const std::vector<std::string> & segments, bool leadingSlash, bool trailingSlash) : void
-_scheme : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L371{_scheme}]]]
-_userInfo : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L372{_userInfo}]]]
-_host : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L373{_host}]]]
-_port : unsigned short [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L374{_port}]]]
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L375{_path}]]]
-_query : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L376{_query}]]]
-_fragment : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L377{_fragment}]]]
{static} #RESERVED_PATH : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L364{RESERVED_PATH}]]]
{static} #RESERVED_QUERY : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L365{RESERVED_QUERY}]]]
{static} #RESERVED_QUERY_PARAM : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L366{RESERVED_QUERY_PARAM}]]]
{static} #RESERVED_FRAGMENT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L367{RESERVED_FRAGMENT}]]]
{static} #ILLEGAL : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URI.h#L368{ILLEGAL}]]]
}
class "URIStreamOpener" as C_0000398919761811267483
class C_0000398919761811267483 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URIStreamOpener.h#L35{URIStreamOpener}]] {
+URIStreamOpener() : void
+~URIStreamOpener() : void
+open(const URI & uri) const : std::istream *
+open(const std::string & pathOrURI) const : std::istream *
+open(const std::string & basePathOrURI, const std::string & pathOrURI) const : std::istream *
+registerStreamFactory(const std::string & scheme, URIStreamFactory * pFactory) : void
+unregisterStreamFactory(const std::string & scheme) : void
+supportsScheme(const std::string & scheme) : bool
{static} +defaultOpener() : URIStreamOpener &
#openFile(const Path & path) const : std::istream *
#openURI(const std::string & scheme, const URI & uri) const : std::istream *
-URIStreamOpener(const URIStreamOpener & ) : void
-operator=(const URIStreamOpener & ) : URIStreamOpener &
-_map : URIStreamOpener::FactoryMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URIStreamOpener.h#L127{_map}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/URIStreamOpener.h#L128{_mutex}]]]
+MAX_REDIRECTS : enum
}
class "Base64Decoder" as C_0001741284645776061154
class C_0001741284645776061154 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DataURIStream.h#L29{Base64Decoder}]] {
+Base64Decoder(std::istream & istr, int options = 0) : void
+~Base64Decoder() : void
-Base64Decoder(const Base64Decoder & ) : void
-operator=(const Base64Decoder & ) : Base64Decoder &
}
abstract "Formatter" as C_0001015873827464076217
abstract C_0001015873827464076217 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Formatter.h#L33{Formatter}]] {
+Formatter() : void
+~Formatter() : void
{abstract} +format(const Message & msg, std::string & text) = 0 : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
}
class "AutoPtr<Formatter>" as C_0002051874582746861281
class C_0002051874582746861281 {
}
class "AutoPtr<Channel>" as C_0001671326604635499943
class C_0001671326604635499943 {
}
class "FormattingChannel" as C_0001554531559579674962
class C_0001554531559579674962 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FormattingChannel.h#L33{FormattingChannel}]] {
+FormattingChannel() : void
+FormattingChannel(Formatter::Ptr pFormatter) : void
+FormattingChannel(Formatter::Ptr pFormatter, Channel::Ptr pChannel) : void
+setFormatter(Formatter::Ptr pFormatter) : void
+getFormatter() const : Formatter::Ptr
+setChannel(Channel::Ptr pChannel) : void
+getChannel() const : Channel::Ptr
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
+open() : void
+close() : void
#~FormattingChannel() : void
-_pFormatter : Formatter::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FormattingChannel.h#L92{_pFormatter}]]]
-_pChannel : Channel::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FormattingChannel.h#L93{_pChannel}]]]
}
class "LoggingRegistry" as C_0000189730875747902328
class C_0000189730875747902328 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingRegistry.h#L32{LoggingRegistry}]] {
+LoggingRegistry() : void
+~LoggingRegistry() : void
+channelForName(const std::string & name) const : Channel::Ptr
+formatterForName(const std::string & name) const : Formatter::Ptr
+registerChannel(const std::string & name, Channel::Ptr pChannel) : void
+registerFormatter(const std::string & name, Formatter::Ptr pFormatter) : void
+unregisterChannel(const std::string & name) : void
+unregisterFormatter(const std::string & name) : void
+clear() : void
{static} +defaultRegistry() : LoggingRegistry &
-_channelMap : LoggingRegistry::ChannelMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingRegistry.h#L90{_channelMap}]]]
-_formatterMap : LoggingRegistry::FormatterMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingRegistry.h#L91{_formatterMap}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingRegistry.h#L92{_mutex}]]]
}
class "SharedLibraryImpl" as C_0002123193390234965891
class C_0002123193390234965891 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary_UNIX.h#L28{SharedLibraryImpl}]] {
#SharedLibraryImpl() : void
#~SharedLibraryImpl() : void
#loadImpl(const std::string & path, int flags) : void
#unloadImpl() : void
#isLoadedImpl() const : bool
#findSymbolImpl(const std::string & name) : void *
#getPathImpl() const : const std::string &
{static} #suffixImpl() : std::string
{static} #setSearchPathImpl(const std::string & path) : bool
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary_UNIX.h#L48{_path}]]]
-_handle : void * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary_UNIX.h#L49{_handle}]]]
{static} -_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary_UNIX.h#L50{_mutex}]]]
}
enum "SharedLibraryImpl::Flags" as C_0000610653108170722755
enum C_0000610653108170722755 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary_UNIX.h#L31{SharedLibraryImpl##Flags}]] {
SHLIB_GLOBAL_IMPL
SHLIB_LOCAL_IMPL
}
class "SharedLibrary" as C_0000861861755535409361
class C_0000861861755535409361 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary.h#L38{SharedLibrary}]] {
+SharedLibrary() : void
+SharedLibrary(const std::string & path) : void
+SharedLibrary(const std::string & path, int flags) : void
+~SharedLibrary() : void
+load(const std::string & path) : void
+load(const std::string & path, int flags) : void
+unload() : void
+isLoaded() const : bool
+hasSymbol(const std::string & name) : bool
+getSymbol(const std::string & name) : void *
+getPath() const : const std::string &
{static} +suffix() : std::string
{static} +setSearchPath(const std::string & path) : bool
-SharedLibrary(const SharedLibrary & ) : void
-operator=(const SharedLibrary & ) : SharedLibrary &
}
enum "SharedLibrary::Flags" as C_0000196955025784926895
enum C_0000196955025784926895 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedLibrary.h#L43{SharedLibrary##Flags}]] {
SHLIB_GLOBAL
SHLIB_LOCAL
}
class "TraverseBase" as C_0000839286562037154527
class C_0000839286562037154527 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L31{TraverseBase}]] {
+TraverseBase(TraverseBase::DepthFun depthDeterminer, UInt16 maxDepth = D_INFINITE) : void
#isFiniteDepth() : bool
#isDirectory(File & file) : bool
-TraverseBase() : void
-TraverseBase(const TraverseBase & ) : void
-operator=(const TraverseBase & ) : TraverseBase &
#_depthDeterminer : TraverseBase::DepthFun [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L48{_depthDeterminer}]]]
#_maxDepth : UInt16 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L49{_maxDepth}]]]
#_itEnd : DirectoryIterator [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L50{_itEnd}]]]
+D_INFINITE : enum
}
class "ChildrenFirstTraverse" as C_0000479886939872848446
class C_0000479886939872848446 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L59{ChildrenFirstTraverse}]] {
+ChildrenFirstTraverse(TraverseBase::DepthFun depthDeterminer, UInt16 maxDepth = D_INFINITE) : void
+next(TraverseBase::Stack * itStack, bool * isFinished) : const std::string
-ChildrenFirstTraverse() : void
-ChildrenFirstTraverse(const ChildrenFirstTraverse & ) : void
-operator=(const ChildrenFirstTraverse & ) : ChildrenFirstTraverse &
}
class "SiblingsFirstTraverse" as C_0000617361744079545514
class C_0000617361744079545514 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L73{SiblingsFirstTraverse}]] {
+SiblingsFirstTraverse(TraverseBase::DepthFun depthDeterminer, UInt16 maxDepth = D_INFINITE) : void
+next(TraverseBase::Stack * itStack, bool * isFinished) : const std::string
-SiblingsFirstTraverse() : void
-SiblingsFirstTraverse(const SiblingsFirstTraverse & ) : void
-operator=(const SiblingsFirstTraverse & ) : SiblingsFirstTraverse &
-_dirsStack : std::stack<std::queue<std::string>> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryIteratorStrategy.h#L85{_dirsStack}]]]
}
abstract "PurgeStrategy" as C_0001046348233015948797
abstract C_0001046348233015948797 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PurgeStrategy.h#L30{PurgeStrategy}]] {
+PurgeStrategy() : void
+~PurgeStrategy() : void
{abstract} +purge(const std::string & path) = 0 : void
#list(const std::string & path, std::vector<File> & files) : void
-PurgeStrategy(const PurgeStrategy & ) : void
-operator=(const PurgeStrategy & ) : PurgeStrategy &
}
class "PurgeByAgeStrategy" as C_0002224094242999086751
class C_0002224094242999086751 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PurgeStrategy.h#L63{PurgeByAgeStrategy}]] {
+PurgeByAgeStrategy(const Timespan & age) : void
+~PurgeByAgeStrategy() : void
+purge(const std::string & path) : void
-_age : Timespan [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PurgeStrategy.h#L74{_age}]]]
}
class "PurgeByCountStrategy" as C_0000196988138559427636
class C_0000196988138559427636 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PurgeStrategy.h#L78{PurgeByCountStrategy}]] {
+PurgeByCountStrategy(int count) : void
+~PurgeByCountStrategy() : void
+purge(const std::string & path) : void
-_count : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PurgeStrategy.h#L90{_count}]]]
}
class "BasicUnbufferedStreamBuf<ch,tr>" as C_0001894488588780223029
class C_0001894488588780223029 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UnbufferedStreamBuf.h#L32{BasicUnbufferedStreamBuf}]] {
+BasicUnbufferedStreamBuf<ch, tr>() : void
+~BasicUnbufferedStreamBuf<ch, tr>() : void
+overflow(BasicUnbufferedStreamBuf::int_type c) : BasicUnbufferedStreamBuf::int_type
+underflow() : BasicUnbufferedStreamBuf::int_type
+uflow() : BasicUnbufferedStreamBuf::int_type
+pbackfail(BasicUnbufferedStreamBuf::int_type c) : BasicUnbufferedStreamBuf::int_type
+xsgetn(BasicUnbufferedStreamBuf::char_type * p, std::streamsize count) : std::streamsize
{static} #charToInt(BasicUnbufferedStreamBuf::char_type c) : BasicUnbufferedStreamBuf::int_type
-readFromDevice() : BasicUnbufferedStreamBuf::int_type
-writeToDevice(BasicUnbufferedStreamBuf::char_type ) : BasicUnbufferedStreamBuf::int_type
-BasicUnbufferedStreamBuf<ch, tr>(const BasicUnbufferedStreamBuf<ch,tr> & ) : void
-operator=(const BasicUnbufferedStreamBuf<ch,tr> & ) : BasicUnbufferedStreamBuf<ch,tr> &
-_pb : BasicUnbufferedStreamBuf::int_type [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UnbufferedStreamBuf.h#L155{_pb}]]]
-_ispb : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/UnbufferedStreamBuf.h#L156{_ispb}]]]
}
enum "Base64EncodingOptions" as C_0001735790971016073444
enum C_0001735790971016073444 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L29{Base64EncodingOptions}]] {
BASE64_URL_ENCODING
BASE64_NO_PADDING
}
class "Base64EncoderBuf" as C_0001136122020205634799
class C_0001136122020205634799 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L42{Base64EncoderBuf}]] {
+Base64EncoderBuf(std::ostream & ostr, int options = 0) : void
+~Base64EncoderBuf() : void
+close() : int
+setLineLength(int lineLength) : void
+getLineLength() const : int
-writeToDevice(char c) : int
-Base64EncoderBuf(const Base64EncoderBuf & ) : void
-operator=(const Base64EncoderBuf & ) : Base64EncoderBuf &
-_options : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L73{_options}]]]
-_group : unsigned char[3] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L74{_group}]]]
-_groupLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L75{_groupLength}]]]
-_pos : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L76{_pos}]]]
-_lineLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L77{_lineLength}]]]
-_buf : std::streambuf & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L78{_buf}]]]
-_pOutEncoding : const unsigned char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L79{_pOutEncoding}]]]
{static} -OUT_ENCODING : const unsigned char[64] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L81{OUT_ENCODING}]]]
{static} -OUT_ENCODING_URL : const unsigned char[64] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L82{OUT_ENCODING_URL}]]]
}
class "Base64EncoderIOS" as C_0000212326993776200317
class C_0000212326993776200317 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L91{Base64EncoderIOS}]] {
+Base64EncoderIOS(std::ostream & ostr, int options = 0) : void
+~Base64EncoderIOS() : void
+close() : int
+rdbuf() : Base64EncoderBuf *
-Base64EncoderIOS(const Base64EncoderIOS & ) : void
-operator=(const Base64EncoderIOS & ) : Base64EncoderIOS &
#_buf : Base64EncoderBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L104{_buf}]]]
}
class "Base64Encoder" as C_0001486595647080915917
class C_0001486595647080915917 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Encoder.h#L112{Base64Encoder}]] {
+Base64Encoder(std::ostream & ostr, int options = 0) : void
+~Base64Encoder() : void
-Base64Encoder(const Base64Encoder & ) : void
-operator=(const Base64Encoder & ) : Base64Encoder &
}
class "NamedEventImpl" as C_0000665530764299745441
class C_0000665530764299745441 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedEvent_UNIX.h#L30{NamedEventImpl}]] {
#NamedEventImpl(const std::string & name) : void
#~NamedEventImpl() : void
#setImpl() : void
#waitImpl() : void
-getFileName() : std::string
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedEvent_UNIX.h#L41{_name}]]]
-_semid : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedEvent_UNIX.h#L45{_semid}]]]
}
class "NamedEvent" as C_0002036098277668455996
class C_0002036098277668455996 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedEvent.h#L36{NamedEvent}]] {
+NamedEvent(const std::string & name) : void
+~NamedEvent() : void
+set() : void
+wait() : void
-NamedEvent() : void
-NamedEvent(const NamedEvent & ) : void
-operator=(const NamedEvent & ) : NamedEvent &
}
class "semun" as C_0001892521137500037419
class C_0001892521137500037419 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/NamedEvent_UNIX.cpp#L35{semun}]] {
+val : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/NamedEvent_UNIX.cpp#L37{val}]]]
+buf : struct semid_ds * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/NamedEvent_UNIX.cpp#L38{buf}]]]
+array : unsigned short * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/NamedEvent_UNIX.cpp#L39{array}]]]
+__buf : struct seminfo * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/NamedEvent_UNIX.cpp#L40{__buf}]]]
}
class "Error" as C_0001764187261825208726
class C_0001764187261825208726 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Error.h#L27{Error}]] {
{static} +last() : int
{static} +getMessage(int errorCode) : std::string
}
class "StrErrorHelper" as C_0001766576285838644719
class C_0001766576285838644719 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Error.cpp#L56{StrErrorHelper}]] {
+StrErrorHelper(int err) : void
+~StrErrorHelper() : void
+message() const : const std::string &
#setMessage(int rc) : void
#setMessage(const char * msg) : void
-_buffer : char[256] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Error.cpp#L97{_buffer}]]]
-_message : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Error.cpp#L98{_message}]]]
}
class "ActiveResultHolder<ResultType>" as C_0000378530514203976140
class C_0000378530514203976140 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L33{ActiveResultHolder}]] {
+ActiveResultHolder<ResultType>() : void
+data() : ResultType &
+data(ResultType * pData) : void
+wait() : void
+tryWait(long milliseconds) : bool
+wait(long milliseconds) : void
+notify() : void
+failed() const : bool
+error() const : std::string
+exception() const : Exception *
+error(const Exception & exc) : void
+error(const std::string & msg) : void
#~ActiveResultHolder<ResultType>() : void
-_pData : ResultType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L137{_pData}]]]
-_pExc : Exception * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L138{_pExc}]]]
-_event : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L139{_event}]]]
}
class "ActiveResultHolder<void>" as C_0001871683377739177940
class C_0001871683377739177940 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L145{ActiveResultHolder}]] {
+ActiveResultHolder() : void
+wait() : void
+tryWait(long milliseconds) : bool
+wait(long milliseconds) : void
+notify() : void
+failed() const : bool
+error() const : std::string
+exception() const : Exception *
+error(const Exception & exc) : void
+error(const std::string & msg) : void
#~ActiveResultHolder() : void
-_pExc : Exception * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L229{_pExc}]]]
-_event : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L230{_event}]]]
}
class "ActiveResultHolder<ActiveResult::ResultType>" as C_0000044006175775453717
class C_0000044006175775453717 {
}
class "ActiveResult<RT>" as C_0001507141403596166823
class C_0001507141403596166823 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L235{ActiveResult}]] {
+ActiveResult<RT>(ActiveResult::ActiveResultHolderType * pHolder) : void
+ActiveResult<RT>(const ActiveResult<RT> & result) : void
+~ActiveResult<RT>() : void
+operator=(const ActiveResult<RT> & result) : ActiveResult<RT> &
+swap(ActiveResult<RT> & result) : void
+data() const : ActiveResult::ResultType &
+data(ActiveResult::ResultType * pValue) : void
+wait() : void
+tryWait(long milliseconds) : bool
+wait(long milliseconds) : void
+available() const : bool
+failed() const : bool
+error() const : std::string
+exception() const : Exception *
+notify() : void
+data() : ActiveResult::ResultType &
+error(const std::string & msg) : void
+error(const Exception & exc) : void
-ActiveResult<RT>() : void
-_pHolder : ActiveResult::ActiveResultHolderType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L368{_pHolder}]]]
}
class "ActiveResult<void>" as C_0001857067167002292292
class C_0001857067167002292292 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L374{ActiveResult}]] {
+ActiveResult(ActiveResultHolder<void>::ActiveResultHolderType * pHolder) : void
+ActiveResult(const ActiveResult<void> & result) : void
+~ActiveResult() : void
+operator=(const ActiveResult<void> & result) : ActiveResult<void> &
+swap(ActiveResult<void> & result) : void
+wait() : void
+tryWait(long milliseconds) : bool
+wait(long milliseconds) : void
+available() const : bool
+failed() const : bool
+error() const : std::string
+exception() const : Exception *
+notify() : void
+error(const std::string & msg) : void
+error(const Exception & exc) : void
-ActiveResult() : void
-_pHolder : ActiveResult<void>::ActiveResultHolderType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveResult.h#L488{_pHolder}]]]
}
class "ActiveRunnableBase" as C_0002181718886331998671
class C_0002181718886331998671 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L32{ActiveRunnableBase}]] {
}
class "ActiveResult<ResultType>" as C_0000712137464050396427
class C_0000712137464050396427 {
}
class "ActiveRunnable<ResultType,ArgType,OwnerType>" as C_0000851690644016889858
class C_0000851690644016889858 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L41{ActiveRunnable}]] {
+ActiveRunnable<ResultType, ArgType, OwnerType>(OwnerType * pOwner, ActiveRunnable::Callback method, const ArgType & arg, const ActiveRunnable::ActiveResultType & result) : void
+run() : void
-_pOwner : OwnerType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L81{_pOwner}]]]
-_method : ActiveRunnable::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L82{_method}]]]
-_arg : ArgType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L83{_arg}]]]
-_result : ActiveRunnable::ActiveResultType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L84{_result}]]]
}
class "ActiveRunnable<void,ArgType,OwnerType>" as C_0001106241217518248318
class C_0001106241217518248318 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L89{ActiveRunnable}]] {
+ActiveRunnable<void, type-parameter-0-0, type-parameter-0-1>(OwnerType * pOwner, void (type-parameter-0-1::*)(const type-parameter-0-0 &)<void,type-parameter-0-0,type-parameter-0-1>::Callback method, const ArgType & arg, const ActiveRunnable<void,type-parameter-0-0,type-parameter-0-1>::ActiveResultType & result) : void
+run() : void
-_pOwner : OwnerType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L129{_pOwner}]]]
-_method : ActiveRunnable<void,type-parameter-0-0,type-parameter-0-1>::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L130{_method}]]]
-_arg : ArgType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L131{_arg}]]]
-_result : ActiveRunnable<void,type-parameter-0-0,type-parameter-0-1>::ActiveResultType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L132{_result}]]]
}
class "ActiveRunnable<ResultType,void,OwnerType>" as C_0000154589214191497229
class C_0000154589214191497229 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L137{ActiveRunnable}]] {
+ActiveRunnable<type-parameter-0-0, void, type-parameter-0-1>(OwnerType * pOwner, type-parameter-0-0 (type-parameter-0-1::*)()<type-parameter-0-0,void,type-parameter-0-1>::Callback method, const ActiveRunnable<type-parameter-0-0,void,type-parameter-0-1>::ActiveResultType & result) : void
+run() : void
-_pOwner : OwnerType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L176{_pOwner}]]]
-_method : ActiveRunnable<type-parameter-0-0,void,type-parameter-0-1>::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L177{_method}]]]
-_result : ActiveRunnable<type-parameter-0-0,void,type-parameter-0-1>::ActiveResultType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L178{_result}]]]
}
class "ActiveRunnable<void,void,OwnerType>" as C_0000018007672082295494
class C_0000018007672082295494 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L183{ActiveRunnable}]] {
+ActiveRunnable<void, void, type-parameter-0-0>(OwnerType * pOwner, void (type-parameter-0-0::*)()<void,void,type-parameter-0-0>::Callback method, const ActiveRunnable<void,void,type-parameter-0-0>::ActiveResultType & result) : void
+run() : void
-_pOwner : OwnerType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L222{_pOwner}]]]
-_method : ActiveRunnable<void,void,type-parameter-0-0>::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L223{_method}]]]
-_result : ActiveRunnable<void,void,type-parameter-0-0>::ActiveResultType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveRunnable.h#L224{_result}]]]
}
class "AutoPtr<ActiveRunnableBase>" as C_0000973724980682451772
class C_0000973724980682451772 {
}
class "ActiveStarter<OwnerType>" as C_0000471694716979945123
class C_0000471694716979945123 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveStarter.h#L30{ActiveStarter}]] {
{static} +start(OwnerType * , ActiveRunnableBase::Ptr pRunnable) : void
}
class "ActiveMethod<ResultType,ArgType,OwnerType,StarterType=ActiveStarter<OwnerType>>" as C_0000098694403815870274
class C_0000098694403815870274 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveMethod.h#L32{ActiveMethod}]] {
+ActiveMethod<ResultType, ArgType, OwnerType, StarterType>(OwnerType * pOwner, ActiveMethod::Callback method) : void
+operator()(const ArgType & arg) : ActiveMethod::ActiveResultType
+ActiveMethod<ResultType, ArgType, OwnerType, StarterType>(const ActiveMethod<ResultType,ArgType,OwnerType,StarterType> & other) : void
+operator=(const ActiveMethod<ResultType,ArgType,OwnerType,StarterType> & other) : ActiveMethod<ResultType,ArgType,OwnerType,StarterType> &
+swap(ActiveMethod<ResultType,ArgType,OwnerType,StarterType> & other) : void
-ActiveMethod<ResultType, ArgType, OwnerType, StarterType>() : void
-_pOwner : OwnerType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveMethod.h#L118{_pOwner}]]]
-_method : ActiveMethod::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveMethod.h#L119{_method}]]]
}
class "ActiveMethod<ResultType,void,OwnerType,StarterType>" as C_0000578994008077748773
class C_0000578994008077748773 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveMethod.h#L125{ActiveMethod}]] {
+ActiveMethod<type-parameter-0-0, void, type-parameter-0-1, type-parameter-0-2>(OwnerType * pOwner, type-parameter-0-0 (type-parameter-0-1::*)()<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2>::Callback method) : void
+operator()() : ActiveMethod<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2>::ActiveResultType
+ActiveMethod<type-parameter-0-0, void, type-parameter-0-1, type-parameter-0-2>(const ActiveMethod<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2> & other) : void
+operator=(const ActiveMethod<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2> & other) : ActiveMethod<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2> &
+swap(ActiveMethod<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2> & other) : void
-ActiveMethod<type-parameter-0-0, void, type-parameter-0-1, type-parameter-0-2>() : void
-_pOwner : OwnerType * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveMethod.h#L210{_pOwner}]]]
-_method : ActiveMethod<type-parameter-0-0,void,type-parameter-0-1,type-parameter-0-2>::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveMethod.h#L211{_method}]]]
}
class "ActiveMethod<TArgs,AbstractEvent::NotifyAsyncParams,AbstractEvent<TArgs,TStrategy,TDelegate,TMutex>>" as C_0001230300871019127651
class C_0001230300871019127651 {
}
class "AbstractEvent<TArgs,TStrategy,TDelegate,TMutex=class FastMutex>" as C_0001925527173274535616
class C_0001925527173274535616 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L33{AbstractEvent}]] {
+AbstractEvent<TArgs, TStrategy, TDelegate, TMutex>() : void
+AbstractEvent<TArgs, TStrategy, TDelegate, TMutex>(const TStrategy & strat) : void
+~AbstractEvent<TArgs, TStrategy, TDelegate, TMutex>() : void
+operator+=(const TDelegate & aDelegate) : void
+operator-=(const TDelegate & aDelegate) : void
+add(const TDelegate & aDelegate) : AbstractEvent::DelegateHandle
+remove(AbstractEvent::DelegateHandle delegateHandle) : void
+operator()(const void * pSender, TArgs & args) : void
+operator()(TArgs & args) : void
+notify(const void * pSender, TArgs & args) : void
+hasDelegates() const : bool
+notifyAsync(const void * pSender, const TArgs & args) : ActiveResult<TArgs>
+enable() : void
+disable() : void
+isEnabled() const : bool
+clear() : void
+empty() const : bool
#executeAsyncImpl(const AbstractEvent::NotifyAsyncParams & par) : TArgs
-AbstractEvent<TArgs, TStrategy, TDelegate, TMutex>(const AbstractEvent<TArgs,TStrategy,TDelegate,TMutex> & other) : void
-operator=(const AbstractEvent<TArgs,TStrategy,TDelegate,TMutex> & other) : AbstractEvent<TArgs,TStrategy,TDelegate,TMutex> &
#_executeAsync : ActiveMethod<TArgs,AbstractEvent::NotifyAsyncParams,AbstractEvent<TArgs,TStrategy,TDelegate,TMutex>> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L332{_executeAsync}]]]
#_strategy : TStrategy [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L347{_strategy}]]]
#_enabled : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L348{_enabled}]]]
#_mutex : TMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L350{_mutex}]]]
}
class "SharedPtr<TStrategy>" as C_0002039822852522290319
class C_0002039822852522290319 {
}
class "AbstractEvent::NotifyAsyncParams" as C_0001966971112249220114
class C_0001966971112249220114 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L319{AbstractEvent##NotifyAsyncParams}]] {
+NotifyAsyncParams(const void * pSend, const TArgs & a) : void
+ptrStrat : SharedPtr<TStrategy> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L321{ptrStrat}]]]
+pSender : const void * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L322{pSender}]]]
+args : TArgs [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L323{args}]]]
+enabled : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L324{enabled}]]]
}
class "ActiveMethod<void,AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>::NotifyAsyncParams,AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>>" as C_0002090321502436867335
class C_0002090321502436867335 {
}
class "AbstractEvent<void,TStrategy,TDelegate,TMutex>" as C_0000704478212082820090
class C_0000704478212082820090 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L359{AbstractEvent}]] {
+AbstractEvent<void, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2>() : void
+AbstractEvent<void, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2>(const TStrategy & strat) : void
+~AbstractEvent<void, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2>() : void
+operator+=(const TDelegate & aDelegate) : void
+operator-=(const TDelegate & aDelegate) : void
+add(const TDelegate & aDelegate) : type-parameter-0-1 *<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>::DelegateHandle
+remove(type-parameter-0-1 *<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>::DelegateHandle delegateHandle) : void
+operator()(const void * pSender) : void
+operator()() : void
+notify(const void * pSender) : void
+notifyAsync(const void * pSender) : ActiveResult<void>
+enable() : void
+disable() : void
+isEnabled() const : bool
+clear() : void
+empty() const : bool
#executeAsyncImpl(const AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>::NotifyAsyncParams & par) : void
-AbstractEvent<void, type-parameter-0-0, type-parameter-0-1, type-parameter-0-2>(const AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2> & other) : void
-operator=(const AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2> & other) : AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2> &
#_executeAsync : ActiveMethod<void,AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>::NotifyAsyncParams,AbstractEvent<void,type-parameter-0-0,type-parameter-0-1,type-parameter-0-2>> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L533{_executeAsync}]]]
#_strategy : TStrategy [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L547{_strategy}]]]
#_enabled : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L548{_enabled}]]]
#_mutex : TMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractEvent.h#L550{_mutex}]]]
}
abstract "NotificationStrategy<TArgs,TDelegate>" as C_0001647206290041007719
abstract C_0001647206290041007719 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationStrategy.h#L28{NotificationStrategy}]] {
+NotificationStrategy<TArgs, TDelegate>() : void
+~NotificationStrategy<TArgs, TDelegate>() : void
{abstract} +notify(const void * sender, TArgs & arguments) = 0 : void
{abstract} +add(const TDelegate & delegate) = 0 : NotificationStrategy::DelegateHandle
{abstract} +remove(const TDelegate & delegate) = 0 : void
{abstract} +remove(NotificationStrategy::DelegateHandle delegateHandle) = 0 : void
{abstract} +clear() = 0 : void
{abstract} +empty() const = 0 : bool
}
abstract "NotificationStrategy<void,TDelegate>" as C_0000087839959231010442
abstract C_0000087839959231010442 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationStrategy.h#L69{NotificationStrategy}]] {
+NotificationStrategy<void, type-parameter-0-0>() : void
+~NotificationStrategy<void, type-parameter-0-0>() : void
{abstract} +notify(const void * sender) = 0 : void
{abstract} +add(const TDelegate & delegate) = 0 : NotificationStrategy<void,type-parameter-0-0>::DelegateHandle
{abstract} +remove(const TDelegate & delegate) = 0 : void
{abstract} +remove(NotificationStrategy<void,type-parameter-0-0>::DelegateHandle delegateHandle) = 0 : void
{abstract} +clear() = 0 : void
{abstract} +empty() const = 0 : bool
}
class "SharedPtr<TDelegate>" as C_0001846374180228514861
class C_0001846374180228514861 {
}
class "DefaultStrategy<TArgs,TDelegate>" as C_0001179420655287153927
class C_0001179420655287153927 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DefaultStrategy.h#L30{DefaultStrategy}]] {
+DefaultStrategy<TArgs, TDelegate>() : void
+DefaultStrategy<TArgs, TDelegate>(const DefaultStrategy<TArgs,TDelegate> & s) : void
+~DefaultStrategy<TArgs, TDelegate>() : void
+notify(const void * sender, TArgs & arguments) : void
+add(const TDelegate & delegate) : DefaultStrategy::DelegateHandle
+remove(const TDelegate & delegate) : void
+remove(DefaultStrategy::DelegateHandle delegateHandle) : void
+operator=(const DefaultStrategy<TArgs,TDelegate> & s) : DefaultStrategy<TArgs,TDelegate> &
+clear() : void
+empty() const : bool
#_delegates : DefaultStrategy::Delegates [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DefaultStrategy.h#L122{_delegates}]]]
}
class "DefaultStrategy<void,TDelegate>" as C_0001910864314618818803
class C_0001910864314618818803 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DefaultStrategy.h#L127{DefaultStrategy}]] {
+DefaultStrategy<void, type-parameter-0-0>() : void
+DefaultStrategy<void, type-parameter-0-0>(const DefaultStrategy<void,type-parameter-0-0> & s) : void
+~DefaultStrategy<void, type-parameter-0-0>() : void
+notify(const void * sender) : void
+add(const TDelegate & delegate) : DefaultStrategy<void,type-parameter-0-0>::DelegateHandle
+remove(const TDelegate & delegate) : void
+remove(DefaultStrategy<void,type-parameter-0-0>::DelegateHandle delegateHandle) : void
+operator=(const DefaultStrategy<void,type-parameter-0-0> & s) : DefaultStrategy<void,type-parameter-0-0> &
+clear() : void
+empty() const : bool
#_delegates : DefaultStrategy<void,type-parameter-0-0>::Delegates [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DefaultStrategy.h#L219{_delegates}]]]
}
abstract "AbstractDelegate<TArgs>" as C_0002030572947849207060
abstract C_0002030572947849207060 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractDelegate.h#L28{AbstractDelegate}]] {
+AbstractDelegate<TArgs>() : void
+AbstractDelegate<TArgs>(const AbstractDelegate<TArgs> & ) : void
+~AbstractDelegate<TArgs>() : void
{abstract} +notify(const void * sender, TArgs & arguments) = 0 : bool
{abstract} +equals(const AbstractDelegate<TArgs> & other) const = 0 : bool
{abstract} +clone() const = 0 : AbstractDelegate<TArgs> *
{abstract} +disable() = 0 : void
+unwrap() const : const AbstractDelegate<TArgs> *
}
abstract "AbstractDelegate<void>" as C_0000366501905599821116
abstract C_0000366501905599821116 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AbstractDelegate.h#L68{AbstractDelegate}]] {
+AbstractDelegate() : void
+AbstractDelegate(const AbstractDelegate<void> & ) : void
+~AbstractDelegate() : void
{abstract} +notify(const void * sender) = 0 : bool
{abstract} +equals(const AbstractDelegate<void> & other) const = 0 : bool
{abstract} +clone() const = 0 : AbstractDelegate<void> *
{abstract} +disable() = 0 : void
+unwrap() const : const AbstractDelegate<void> *
}
class "DefaultStrategy<TArgs,AbstractDelegate<TArgs>>" as C_0000774921858729379396
class C_0000774921858729379396 {
}
class "BasicEvent<TArgs,TMutex=class FastMutex>" as C_0001986253815649114801
class C_0001986253815649114801 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BasicEvent.h#L31{BasicEvent}]] {
+BasicEvent<TArgs, TMutex>() : void
+~BasicEvent<TArgs, TMutex>() : void
-BasicEvent<TArgs, TMutex>(const BasicEvent<TArgs,TMutex> & e) : void
-operator=(const BasicEvent<TArgs,TMutex> & e) : BasicEvent<TArgs,TMutex> &
}
class "BasicEvent<bool>" as C_0000916576726322856292
class C_0000916576726322856292 {
}
class "BasicFIFOBuffer<T>" as C_0001288338400588871207
class C_0001288338400588871207 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L33{BasicFIFOBuffer}]] {
+BasicFIFOBuffer<T>(std::size_t size, bool notify = false) : void
+BasicFIFOBuffer<T>(T * pBuffer, std::size_t size, bool notify = false) : void
+BasicFIFOBuffer<T>(const T * pBuffer, std::size_t size, bool notify = false) : void
+~BasicFIFOBuffer<T>() : void
+resize(std::size_t newSize, bool preserveContent = true) : void
+peek(T * pBuffer, std::size_t length) const : std::size_t
+peek(Buffer<T> & buffer, std::size_t length = 0) const : std::size_t
+read(T * pBuffer, std::size_t length) : std::size_t
+read(Buffer<T> & buffer, std::size_t length = 0) : std::size_t
+write(const T * pBuffer, std::size_t length) : std::size_t
+write(const Buffer<T> & buffer, std::size_t length = 0) : std::size_t
+size() const : std::size_t
+used() const : std::size_t
+available() const : std::size_t
+drain(std::size_t length = 0) : void
+copy(const T * ptr, std::size_t length) : void
+advance(std::size_t length) : void
+begin() : T *
+next() : T *
+operator[](std::size_t index) : T &
+operator[](std::size_t index) const : const T &
+buffer() const : const Buffer<T> &
+setError(bool error = true) : void
+isValid() const : bool
+setEOF(bool eof = true) : void
+hasEOF() const : bool
+isEOF() const : bool
+isEmpty() const : bool
+isFull() const : bool
+isReadable() const : bool
+isWritable() const : bool
+setNotify(bool notify = true) : void
+getNotify() const : bool
+mutex() : Mutex &
-notify(std::size_t usedBefore) : void
-BasicFIFOBuffer<T>() : void
-BasicFIFOBuffer<T>(const BasicFIFOBuffer<T> & ) : void
-operator=(const BasicFIFOBuffer<T> & ) : BasicFIFOBuffer<T> &
+writable : BasicEvent<bool> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L54{writable}]]]
+readable : BasicEvent<bool> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L66{readable}]]]
-_buffer : Buffer<T> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L538{_buffer}]]]
-_begin : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L539{_begin}]]]
-_used : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L540{_used}]]]
-_notify : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L541{_notify}]]]
-_mutex : Mutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L542{_mutex}]]]
-_eof : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L543{_eof}]]]
-_error : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBuffer.h#L544{_error}]]]
}
class "BasicBufferedBidirectionalStreamBuf<ch,tr,ba=BufferAllocator<ch>>" as C_0000344960536285803912
class C_0000344960536285803912 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedBidirectionalStreamBuf.h#L33{BasicBufferedBidirectionalStreamBuf}]] {
+BasicBufferedBidirectionalStreamBuf<ch, tr, ba>(std::streamsize bufferSize, BasicBufferedBidirectionalStreamBuf::openmode mode) : void
+~BasicBufferedBidirectionalStreamBuf<ch, tr, ba>() : void
+overflow(BasicBufferedBidirectionalStreamBuf::int_type c) : BasicBufferedBidirectionalStreamBuf::int_type
+underflow() : BasicBufferedBidirectionalStreamBuf::int_type
+sync() : int
#setMode(BasicBufferedBidirectionalStreamBuf::openmode mode) : void
#getMode() const : BasicBufferedBidirectionalStreamBuf::openmode
#resetBuffers() : void
-readFromDevice(BasicBufferedBidirectionalStreamBuf::char_type * , std::streamsize ) : int
-writeToDevice(const BasicBufferedBidirectionalStreamBuf::char_type * , std::streamsize ) : int
-flushBuffer() : int
-BasicBufferedBidirectionalStreamBuf<ch, tr, ba>(const BasicBufferedBidirectionalStreamBuf<ch,tr,ba> & ) : void
-operator=(const BasicBufferedBidirectionalStreamBuf<ch,tr,ba> & ) : BasicBufferedBidirectionalStreamBuf<ch,tr,ba> &
-_bufsize : std::streamsize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedBidirectionalStreamBuf.h#L155{_bufsize}]]]
-_pReadBuffer : BasicBufferedBidirectionalStreamBuf::char_type * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedBidirectionalStreamBuf.h#L156{_pReadBuffer}]]]
-_pWriteBuffer : BasicBufferedBidirectionalStreamBuf::char_type * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedBidirectionalStreamBuf.h#L157{_pWriteBuffer}]]]
-_mode : BasicBufferedBidirectionalStreamBuf::openmode [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BufferedBidirectionalStreamBuf.h#L158{_mode}]]]
}
class "BasicFIFOBuffer<char>" as C_0001926002426095720145
class C_0001926002426095720145 {
}
class "FIFOBufferStreamBuf" as C_0000161046799810162995
class C_0000161046799810162995 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L31{FIFOBufferStreamBuf}]] {
+FIFOBufferStreamBuf() : void
+FIFOBufferStreamBuf(FIFOBuffer & fifoBuffer) : void
+FIFOBufferStreamBuf(char * pBuffer, std::size_t length) : void
+FIFOBufferStreamBuf(const char * pBuffer, std::size_t length) : void
+FIFOBufferStreamBuf(std::size_t length) : void
+~FIFOBufferStreamBuf() : void
+fifoBuffer() : FIFOBuffer &
#readFromDevice(char * buffer, std::streamsize length) : int
#writeToDevice(const char * buffer, std::streamsize length) : int
-_pFIFOBuffer : FIFOBuffer * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L68{_pFIFOBuffer}]]]
-_fifoBuffer : FIFOBuffer & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L69{_fifoBuffer}]]]
-STREAM_BUFFER_SIZE : enum
}
class "FIFOIOS" as C_0001272327730937850004
class C_0001272327730937850004 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L73{FIFOIOS}]] {
+FIFOIOS(FIFOBuffer & buffer) : void
+FIFOIOS(char * pBuffer, std::size_t length) : void
+FIFOIOS(const char * pBuffer, std::size_t length) : void
+FIFOIOS(std::size_t length) : void
+~FIFOIOS() : void
+rdbuf() : FIFOBufferStreamBuf *
+close() : void
#_buf : FIFOBufferStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L105{_buf}]]]
}
class "FIFOBufferStream" as C_0000141504150266646037
class C_0000141504150266646037 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L109{FIFOBufferStream}]] {
+FIFOBufferStream(FIFOBuffer & buffer) : void
+FIFOBufferStream(char * pBuffer, std::size_t length) : void
+FIFOBufferStream(const char * pBuffer, std::size_t length) : void
+FIFOBufferStream(std::size_t length) : void
+~FIFOBufferStream() : void
-FIFOBufferStream() : void
-FIFOBufferStream(const FIFOBufferStream & other) : void
-operator=(const FIFOBufferStream & other) : FIFOBufferStream &
+readable : BasicEvent<bool> & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L113{readable}]]]
+writable : BasicEvent<bool> & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FIFOBufferStream.h#L114{writable}]]]
}
class "NullChannel" as C_0001889974659313219405
class C_0001889974659313219405 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NullChannel.h#L28{NullChannel}]] {
+NullChannel() : void
+~NullChannel() : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
}
class "PipeStreamBuf" as C_0000858234687263766787
class C_0000858234687263766787 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeStream.h#L31{PipeStreamBuf}]] {
+PipeStreamBuf(const Pipe & pipe, PipeStreamBuf::openmode mode) : void
+~PipeStreamBuf() : void
+close() : void
#readFromDevice(char * buffer, std::streamsize length) : int
#writeToDevice(const char * buffer, std::streamsize length) : int
-_pipe : Pipe [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeStream.h#L56{_pipe}]]]
-STREAM_BUFFER_SIZE : enum
}
class "PipeIOS" as C_0000436009583498103198
class C_0000436009583498103198 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeStream.h#L60{PipeIOS}]] {
+PipeIOS(const Pipe & pipe, std::ios_base::openmode mode) : void
+~PipeIOS() : void
+rdbuf() : PipeStreamBuf *
+close() : void
#_buf : PipeStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeStream.h#L83{_buf}]]]
}
class "PipeOutputStream" as C_0001377302917114829558
class C_0001377302917114829558 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeStream.h#L87{PipeOutputStream}]] {
+PipeOutputStream(const Pipe & pipe) : void
+~PipeOutputStream() : void
}
class "PipeInputStream" as C_0000923605218290966144
class C_0000923605218290966144 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PipeStream.h#L101{PipeInputStream}]] {
+PipeInputStream(const Pipe & pipe) : void
+~PipeInputStream() : void
}
class "FileStreamFactory" as C_0001348864432568412117
class C_0001348864432568412117 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStreamFactory.h#L31{FileStreamFactory}]] {
+FileStreamFactory() : void
+~FileStreamFactory() : void
+open(const URI & uri) : std::istream *
+open(const Path & path) : std::istream *
}
class "FileStreamBuf" as C_0001125006218235829978
class C_0001125006218235829978 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream_POSIX.h#L30{FileStreamBuf}]] {
+FileStreamBuf() : void
+~FileStreamBuf() : void
+open(const std::string & path, std::ios::openmode mode) : void
+close() : bool
+seekoff(std::streamoff off, std::ios::seekdir dir, std::ios::openmode mode = std::ios::in | std::ios::out) : std::streampos
+seekpos(std::streampos pos, std::ios::openmode mode = std::ios::in | std::ios::out) : std::streampos
#readFromDevice(char * buffer, std::streamsize length) : int
#writeToDevice(const char * buffer, std::streamsize length) : int
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream_POSIX.h#L63{_path}]]]
-_fd : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream_POSIX.h#L64{_fd}]]]
-_pos : std::streamoff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream_POSIX.h#L65{_pos}]]]
#BUFFER_SIZE : enum
}
class "FileIOS" as C_0001110883338738476829
class C_0001110883338738476829 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream.h#L34{FileIOS}]] {
+FileIOS(std::ios::openmode defaultMode) : void
+~FileIOS() : void
+open(const std::string & path, std::ios::openmode mode) : void
+close() : void
+rdbuf() : FileStreamBuf *
#_buf : FileStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream.h#L74{_buf}]]]
#_defaultMode : std::ios::openmode [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream.h#L75{_defaultMode}]]]
}
class "FileInputStream" as C_0002005186884878428630
class C_0002005186884878428630 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream.h#L79{FileInputStream}]] {
+FileInputStream() : void
+FileInputStream(const std::string & path, std::ios::openmode mode = std::ios::in) : void
+~FileInputStream() : void
}
class "FileOutputStream" as C_0001719227248397825267
class C_0001719227248397825267 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream.h#L109{FileOutputStream}]] {
+FileOutputStream() : void
+FileOutputStream(const std::string & path, std::ios::openmode mode = std::ios::out | std::ios::trunc) : void
+~FileOutputStream() : void
}
class "FileStream" as C_0000436605573710598398
class C_0000436605573710598398 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileStream.h#L140{FileStream}]] {
+FileStream() : void
+FileStream(const std::string & path, std::ios::openmode mode = std::ios::out | std::ios::in) : void
+~FileStream() : void
}
class "SemaphoreImpl" as C_0000616227205505665745
class C_0000616227205505665745 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Semaphore_POSIX.h#L31{SemaphoreImpl}]] {
#SemaphoreImpl(int n, int max) : void
#~SemaphoreImpl() : void
#setImpl() : void
#waitImpl() : void
#waitImpl(long milliseconds) : bool
-_n : std::atomic<int> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Semaphore_POSIX.h#L41{_n}]]]
-_max : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Semaphore_POSIX.h#L42{_max}]]]
-_mutex : pthread_mutex_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Semaphore_POSIX.h#L43{_mutex}]]]
-_cond : pthread_cond_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Semaphore_POSIX.h#L44{_cond}]]]
}
class "Semaphore" as C_0000010642104903790629
class C_0000010642104903790629 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Semaphore.h#L37{Semaphore}]] {
+Semaphore(int n) : void
+Semaphore(int n, int max) : void
+~Semaphore() : void
+set() : void
+wait() : void
+wait(long milliseconds) : void
+tryWait(long milliseconds) : bool
-Semaphore() : void
-Semaphore(const Semaphore & ) : void
-operator=(const Semaphore & ) : Semaphore &
}
class "ScopedUnlock<M>" as C_0000856262487127620535
class C_0000856262487127620535 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ScopedUnlock.h#L28{ScopedUnlock}]] {
+ScopedUnlock<M>(M & mutex, bool unlockNow = true) : void
+~ScopedUnlock<M>() : void
-ScopedUnlock<M>() : void
-ScopedUnlock<M>(const ScopedUnlock<M> & ) : void
-operator=(const ScopedUnlock<M> & ) : ScopedUnlock<M> &
-_mutex : M & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ScopedUnlock.h#L53{_mutex}]]]
}
class "Condition" as C_0001763890485961714712
class C_0001763890485961714712 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Condition.h#L32{Condition}]] {
+Condition() : void
+~Condition() : void
+signal() : void
+broadcast() : void
#enqueue(Event & event) : void
#dequeue() : void
#dequeue(Event & event) : void
-Condition(const Condition & ) : void
-operator=(const Condition & ) : Condition &
+wait<Mtx>(Mtx & mutex) : void
+wait<Mtx>(Mtx & mutex, long milliseconds) : void
+tryWait<Mtx>(Mtx & mutex, long milliseconds) : _Bool
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Condition.h#L129{_mutex}]]]
-_waitQueue : Condition::WaitQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Condition.h#L130{_waitQueue}]]]
}
class "Debugger" as C_0000785843478536084673
class C_0000785843478536084673 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Debugger.h#L27{Debugger}]] {
{static} +isAvailable() : bool
{static} +message(const std::string & msg) : void
{static} +message(const std::string & msg, const char * file, int line) : void
{static} +enter() : void
{static} +enter(const std::string & msg) : void
{static} +enter(const std::string & msg, const char * file, int line) : void
{static} +enter(const char * file, int line) : void
}
class "AutoPtr<Logger>" as C_0001771527744203616137
class C_0001771527744203616137 {
}
class "Logger" as C_0000559903826089819710
class C_0000559903826089819710 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L38{Logger}]] {
+name() const : const std::string &
+setChannel(Channel::Ptr pChannel) : void
+getChannel() const : Channel::Ptr
+setLevel(int level) : void
+getLevel() const : int
+setLevel(const std::string & level) : void
+setProperty(const std::string & name, const std::string & value) : void
+log(const Message & msg) : void
+log(const Exception & exc) : void
+log(const Exception & exc, const char * file, int line) : void
+fatal(const std::string & msg) : void
+fatal(const std::string & msg, const char * file, int line) : void
+critical(const std::string & msg) : void
+critical(const std::string & msg, const char * file, int line) : void
+error(const std::string & msg) : void
+error(const std::string & msg, const char * file, int line) : void
+warning(const std::string & msg) : void
+warning(const std::string & msg, const char * file, int line) : void
+notice(const std::string & msg) : void
+notice(const std::string & msg, const char * file, int line) : void
+information(const std::string & msg) : void
+information(const std::string & msg, const char * file, int line) : void
+debug(const std::string & msg) : void
+debug(const std::string & msg, const char * file, int line) : void
+trace(const std::string & msg) : void
+trace(const std::string & msg, const char * file, int line) : void
+dump(const std::string & msg, const void * buffer, std::size_t length, Message::Priority prio = Message::PRIO_DEBUG) : void
+is(int level) const : bool
+fatal() const : bool
+critical() const : bool
+error() const : bool
+warning() const : bool
+notice() const : bool
+information() const : bool
+debug() const : bool
+trace() const : bool
{static} +format(const std::string & fmt, const std::string & arg) : std::string
{static} +format(const std::string & fmt, const std::string & arg0, const std::string & arg1) : std::string
{static} +format(const std::string & fmt, const std::string & arg0, const std::string & arg1, const std::string & arg2) : std::string
{static} +format(const std::string & fmt, const std::string & arg0, const std::string & arg1, const std::string & arg2, const std::string & arg3) : std::string
{static} +formatDump(std::string & message, const void * buffer, std::size_t length) : void
{static} +setLevel(const std::string & name, int level) : void
{static} +setChannel(const std::string & name, Channel::Ptr pChannel) : void
{static} +setProperty(const std::string & loggerName, const std::string & propertyName, const std::string & value) : void
{static} +get(const std::string & name) : Logger &
{static} +unsafeGet(const std::string & name) : Logger &
{static} +create(const std::string & name, Channel::Ptr pChannel, int level = Message::PRIO_INFORMATION) : Logger &
{static} +root() : Logger &
{static} +has(const std::string & name) : Logger::Ptr
{static} +destroy(const std::string & name) : void
{static} +shutdown() : void
{static} +names(std::vector<std::string> & names) : void
{static} +parseLevel(const std::string & level) : int
#Logger(const std::string & name, Channel::Ptr pChannel, int level) : void
#~Logger() : void
#log(const std::string & text, Message::Priority prio) : void
#log(const std::string & text, Message::Priority prio, const char * file, int line) : void
{static} #format(const std::string & fmt, int argc, std::string * argv) : std::string
{static} #parent(const std::string & name) : Logger &
{static} #add(Logger::Ptr pLogger) : void
{static} #find(const std::string & name) : Logger::Ptr
-Logger() : void
-Logger(const Logger & ) : void
-operator=(const Logger & ) : Logger &
+fatal<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+critical<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+error<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+warning<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+notice<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+information<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+debug<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
+trace<T,Args...>(const std::string & fmt, T arg1, Args &&... args) : void
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L471{_name}]]]
-_pChannel : Channel::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L472{_pChannel}]]]
-_level : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L473{_level}]]]
{static} +ROOT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L448{ROOT}]]]
{static} -_pLoggerMap : Logger::LoggerMapPtr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L476{_pLoggerMap}]]]
{static} -_mapMtx : Mutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Logger.h#L477{_mapMtx}]]]
}
class "Void" as C_0000498429120972886332
class C_0000498429120972886332 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Void.h#L27{Void}]] {
+Void() : void
+Void(const Void & v) : void
+~Void() : void
+operator=(const Void & v) : Void &
+operator==(const Void & v) const : bool
+operator!=(const Void & v) const : bool
}
class "ProcessHandleImpl" as C_0000048713468887828847
class C_0000048713468887828847 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Process_UNIX.h#L34{ProcessHandleImpl}]] {
+ProcessHandleImpl(pid_t pid) : void
+~ProcessHandleImpl() : void
+id() const : pid_t
+wait() const : int
+tryWait() const : int
-_pid : pid_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Process_UNIX.h#L45{_pid}]]]
}
class "ProcessImpl" as C_0001059364385747160761
class C_0001059364385747160761 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Process_UNIX.h#L49{ProcessImpl}]] {
{static} +idImpl() : ProcessImpl::PIDImpl
{static} +timesImpl(long & userTime, long & kernelTime) : void
{static} +launchImpl(const std::string & command, const ProcessImpl::ArgsImpl & args, const std::string & initialDirectory, Pipe * inPipe, Pipe * outPipe, Pipe * errPipe, const ProcessImpl::EnvImpl & env) : ProcessHandleImpl *
{static} +killImpl(ProcessHandleImpl & handle) : void
{static} +killImpl(ProcessImpl::PIDImpl pid) : void
{static} +isRunningImpl(const ProcessHandleImpl & handle) : bool
{static} +isRunningImpl(ProcessImpl::PIDImpl pid) : bool
{static} +requestTerminationImpl(ProcessImpl::PIDImpl pid) : void
{static} -launchByForkExecImpl(const std::string & command, const ProcessImpl::ArgsImpl & args, const std::string & initialDirectory, Pipe * inPipe, Pipe * outPipe, Pipe * errPipe, const ProcessImpl::EnvImpl & env) : ProcessHandleImpl *
}
class "ProcessHandle" as C_0001719260909436674674
class C_0001719260909436674674 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Process.h#L43{ProcessHandle}]] {
+ProcessHandle(const ProcessHandle & handle) : void
+~ProcessHandle() : void
+operator=(const ProcessHandle & handle) : ProcessHandle &
+id() const : ProcessHandle::PID
+wait() const : int
+tryWait() const : int
#ProcessHandle(ProcessHandleImpl * pImpl) : void
-ProcessHandle() : void
-_pImpl : ProcessHandleImpl * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Process.h#L80{_pImpl}]]]
}
class "Process" as C_0001510175659377877048
class C_0001510175659377877048 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Process.h#L86{Process}]] {
{static} +id() : Process::PID
{static} +times(long & userTime, long & kernelTime) : void
{static} +launch(const std::string & command, const Process::Args & args) : ProcessHandle
{static} +launch(const std::string & command, const Process::Args & args, const std::string & initialDirectory) : ProcessHandle
{static} +launch(const std::string & command, const Process::Args & args, Pipe * inPipe, Pipe * outPipe, Pipe * errPipe) : ProcessHandle
{static} +launch(const std::string & command, const Process::Args & args, const std::string & initialDirectory, Pipe * inPipe, Pipe * outPipe, Pipe * errPipe) : ProcessHandle
{static} +launch(const std::string & command, const Process::Args & args, Pipe * inPipe, Pipe * outPipe, Pipe * errPipe, const Process::Env & env) : ProcessHandle
{static} +launch(const std::string & command, const Process::Args & args, const std::string & initialDirectory, Pipe * inPipe, Pipe * outPipe, Pipe * errPipe, const Process::Env & env) : ProcessHandle
{static} +wait(const ProcessHandle & handle) : int
{static} +tryWait(const ProcessHandle & handle) : int
{static} +isRunning(const ProcessHandle & handle) : bool
{static} +isRunning(Process::PID pid) : bool
{static} +kill(ProcessHandle & handle) : void
{static} +kill(Process::PID pid) : void
{static} +requestTermination(Process::PID pid) : void
}
class "Base64DecoderBuf" as C_0000439410633562489390
class C_0000439410633562489390 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L29{Base64DecoderBuf}]] {
+Base64DecoderBuf(std::istream & istr, int options = 0) : void
+~Base64DecoderBuf() : void
-readFromDevice() : int
-readOne() : int
-Base64DecoderBuf(const Base64DecoderBuf & ) : void
-operator=(const Base64DecoderBuf & ) : Base64DecoderBuf &
-_options : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L47{_options}]]]
-_group : unsigned char[3] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L48{_group}]]]
-_groupLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L49{_groupLength}]]]
-_groupIndex : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L50{_groupIndex}]]]
-_buf : std::streambuf & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L51{_buf}]]]
-_pInEncoding : const unsigned char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L52{_pInEncoding}]]]
{static} -IN_ENCODING : unsigned char[256] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L54{IN_ENCODING}]]]
{static} -IN_ENCODING_INIT : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L55{IN_ENCODING_INIT}]]]
{static} -IN_ENCODING_URL : unsigned char[256] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L56{IN_ENCODING_URL}]]]
{static} -IN_ENCODING_URL_INIT : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L57{IN_ENCODING_URL_INIT}]]]
}
class "Base64DecoderIOS" as C_0001931915366392308965
class C_0001931915366392308965 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L65{Base64DecoderIOS}]] {
+Base64DecoderIOS(std::istream & istr, int options = 0) : void
+~Base64DecoderIOS() : void
+rdbuf() : Base64DecoderBuf *
-Base64DecoderIOS(const Base64DecoderIOS & ) : void
-operator=(const Base64DecoderIOS & ) : Base64DecoderIOS &
#_buf : Base64DecoderBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base64Decoder.h#L77{_buf}]]]
}
class "BasicEvent<const Message>" as C_0002131554693291880326
class C_0002131554693291880326 {
}
class "EventChannel" as C_0000189904351278641819
class C_0000189904351278641819 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/EventChannel.h#L30{EventChannel}]] {
+EventChannel() : void
+log(const Message & msg) : void
#~EventChannel() : void
+messageLogged : BasicEvent<const Message> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/EventChannel.h#L38{messageLogged}]]]
}
class "SimpleFileChannel" as C_0001876535751818413453
class C_0001876535751818413453 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L33{SimpleFileChannel}]] {
+SimpleFileChannel() : void
+SimpleFileChannel(const std::string & path) : void
+open() : void
+close() : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
+creationDate() const : Timestamp
+size() const : UInt64
+path() const : const std::string &
+secondaryPath() const : const std::string &
#~SimpleFileChannel() : void
#setRotation(const std::string & rotation) : void
#setFlush(const std::string & flush) : void
#rotate() : void
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L139{_path}]]]
-_secondaryPath : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L140{_secondaryPath}]]]
-_rotation : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L141{_rotation}]]]
-_limit : UInt64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L142{_limit}]]]
-_flush : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L143{_flush}]]]
-_pFile : LogFile * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L144{_pFile}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L145{_mutex}]]]
{static} +PROP_PATH : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L127{PROP_PATH}]]]
{static} +PROP_SECONDARYPATH : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L128{PROP_SECONDARYPATH}]]]
{static} +PROP_ROTATION : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L129{PROP_ROTATION}]]]
{static} +PROP_FLUSH : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SimpleFileChannel.h#L130{PROP_FLUSH}]]]
}
class "LogFileImpl" as C_0001105314075151856011
class C_0001105314075151856011 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogFile_STD.h#L29{LogFileImpl}]] {
+LogFileImpl(const std::string & path) : void
+~LogFileImpl() : void
+writeImpl(const std::string & text, bool flush) : void
+sizeImpl() const : UInt64
+creationDateImpl() const : Timestamp
+pathImpl() const : const std::string &
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogFile_STD.h#L43{_path}]]]
-_str : FileOutputStream [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogFile_STD.h#L44{_str}]]]
-_creationDate : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogFile_STD.h#L45{_creationDate}]]]
-_size : UInt64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogFile_STD.h#L46{_size}]]]
}
class "LogFile" as C_0001768662171573839056
class C_0001768662171573839056 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogFile.h#L34{LogFile}]] {
+LogFile(const std::string & path) : void
+~LogFile() : void
+write(const std::string & text, bool flush = true) : void
+size() const : UInt64
+creationDate() const : Timestamp
+path() const : const std::string &
}
class "SortedDirectoryIterator" as C_0002116415120375769938
class C_0002116415120375769938 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SortedDirectoryIterator.h#L30{SortedDirectoryIterator}]] {
+SortedDirectoryIterator() : void
+SortedDirectoryIterator(const std::string & path) : void
+SortedDirectoryIterator(const DirectoryIterator & iterator) : void
+SortedDirectoryIterator(const File & file) : void
+SortedDirectoryIterator(const Path & path) : void
+~SortedDirectoryIterator() : void
+operator++() : SortedDirectoryIterator &
-next() : void
-scan() : void
-_is_finished : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SortedDirectoryIterator.h#L57{_is_finished}]]]
-_directories : std::deque<std::string> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SortedDirectoryIterator.h#L58{_directories}]]]
-_files : std::deque<std::string> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SortedDirectoryIterator.h#L59{_files}]]]
}
class "SplitterChannel" as C_0000930901867536850208
class C_0000930901867536850208 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SplitterChannel.h#L31{SplitterChannel}]] {
+SplitterChannel() : void
+addChannel(Channel::Ptr pChannel) : void
+removeChannel(Channel::Ptr pChannel) : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
+close() : void
+count() const : int
#~SplitterChannel() : void
-_channels : SplitterChannel::ChannelVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SplitterChannel.h#L72{_channels}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SplitterChannel.h#L73{_mutex}]]]
}
class "Checksum" as C_0001909804586243600804
class C_0001909804586243600804 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Checksum.h#L27{Checksum}]] {
+Checksum() : void
+Checksum(Checksum::Type t) : void
+~Checksum() : void
+update(const char * data, unsigned int length) : void
+update(const std::string & data) : void
+update(char data) : void
+checksum() const : UInt32
+type() const : Checksum::Type
-_type : Checksum::Type [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Checksum.h#L73{_type}]]]
-_value : UInt32 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Checksum.h#L74{_value}]]]
}
enum "Checksum::Type" as C_0001932338689021546423
enum C_0001932338689021546423 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Checksum.h#L42{Checksum##Type}]] {
TYPE_ADLER32
TYPE_CRC32
}
abstract "ArchiveStrategy" as C_0001013121667606787276
abstract C_0001013121667606787276 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ArchiveStrategy.h#L34{ArchiveStrategy}]] {
+ArchiveStrategy() : void
+~ArchiveStrategy() : void
{abstract} +archive(LogFile * pFile) = 0 : LogFile *
+compress(bool flag = true) : void
#moveFile(const std::string & oldName, const std::string & newName) : void
#exists(const std::string & name) : bool
-ArchiveStrategy(const ArchiveStrategy & ) : void
-operator=(const ArchiveStrategy & ) : ArchiveStrategy &
-_compress : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ArchiveStrategy.h#L61{_compress}]]]
-_pCompressor : ArchiveCompressor * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ArchiveStrategy.h#L62{_pCompressor}]]]
}
class "ArchiveByNumberStrategy" as C_0002031340922369241723
class C_0002031340922369241723 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ArchiveStrategy.h#L66{ArchiveByNumberStrategy}]] {
+ArchiveByNumberStrategy() : void
+~ArchiveByNumberStrategy() : void
+archive(LogFile * pFile) : LogFile *
}
class "ArchiveByTimestampStrategy<DT>" as C_0000557475307545601980
class C_0000557475307545601980 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ArchiveStrategy.h#L79{ArchiveByTimestampStrategy}]] {
+ArchiveByTimestampStrategy<DT>() : void
+~ArchiveByTimestampStrategy<DT>() : void
+archive(LogFile * pFile) : LogFile *
-archiveByNumber(const std::string & basePath) : void
}
class "StreamCopier" as C_0001908475353179625715
class C_0001908475353179625715 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamCopier.h#L30{StreamCopier}]] {
{static} +copyStream(std::istream & istr, std::ostream & ostr, std::size_t bufferSize = 8192) : std::streamsize
{static} +copyStream64(std::istream & istr, std::ostream & ostr, std::size_t bufferSize = 8192) : UInt64
{static} +copyStreamUnbuffered(std::istream & istr, std::ostream & ostr) : std::streamsize
{static} +copyStreamUnbuffered64(std::istream & istr, std::ostream & ostr) : UInt64
{static} +copyToString(std::istream & istr, std::string & str, std::size_t bufferSize = 8192) : std::streamsize
{static} +copyToString64(std::istream & istr, std::string & str, std::size_t bufferSize = 8192) : UInt64
}
class "NotificationQueue" as C_0000503421568916662852
class C_0000503421568916662852 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L34{NotificationQueue}]] {
+NotificationQueue() : void
+~NotificationQueue() : void
+enqueueNotification(Notification::Ptr pNotification) : void
+enqueueUrgentNotification(Notification::Ptr pNotification) : void
+dequeueNotification() : Notification *
+waitDequeueNotification() : Notification *
+waitDequeueNotification(long milliseconds) : Notification *
+dispatch(NotificationCenter & notificationCenter) : void
+wakeUpAll() : void
+empty() const : bool
+size() const : int
+clear() : void
+remove(Notification::Ptr pNotification) : bool
+hasIdleThreads() const : bool
{static} +defaultQueue() : NotificationQueue &
#dequeueOne() : Notification::Ptr
-_nfQueue : NotificationQueue::NfQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L150{_nfQueue}]]]
-_waitQueue : NotificationQueue::WaitQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L151{_waitQueue}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L152{_mutex}]]]
}
class "NotificationQueue::WaitInfo" as C_0001349932699354709623
class C_0001349932699354709623 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L143{NotificationQueue##WaitInfo}]] {
+pNf : Notification::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L145{pNf}]]]
+nfAvailable : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NotificationQueue.h#L146{nfAvailable}]]]
}
class "ActiveDispatcher" as C_0001651859025848925397
class C_0001651859025848925397 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveDispatcher.h#L33{ActiveDispatcher}]] {
+ActiveDispatcher() : void
+ActiveDispatcher(Thread::Priority prio) : void
+~ActiveDispatcher() : void
+start(ActiveRunnableBase::Ptr pRunnable) : void
+cancel() : void
#run() : void
#stop() : void
-_thread : Thread [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveDispatcher.h#L96{_thread}]]]
-_queue : NotificationQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveDispatcher.h#L97{_queue}]]]
}
class "ActiveStarter<ActiveDispatcher>" as C_0001729244871434612668
class C_0001729244871434612668 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ActiveDispatcher.h#L102{ActiveStarter}]] {
{static} +start(ActiveDispatcher * pOwner, ActiveRunnableBase::Ptr pRunnable) : void
}
class "ActiveMethod<void,std::string,ArchiveCompressor,ActiveStarter<ActiveDispatcher>>" as C_0000134068163643100341
class C_0000134068163643100341 {
}
class "ArchiveCompressor" as C_0001478018116174211543
class C_0001478018116174211543 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ArchiveStrategy.cpp#L36{ArchiveCompressor}]] {
+ArchiveCompressor() : void
+~ArchiveCompressor() : void
#compressImpl(const std::string & path) : void
+compress : ActiveMethod<void,std::string,ArchiveCompressor,ActiveStarter<ActiveDispatcher>> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ArchiveStrategy.cpp#L48{compress}]]]
}
class "MD4Engine" as C_0001312735292904535254
class C_0001312735292904535254 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L51{MD4Engine}]] {
+MD4Engine() : void
+~MD4Engine() : void
+digestLength() const : std::size_t
+reset() : void
+digest() : const DigestEngine::Digest &
#updateImpl(const void * data, std::size_t length) : void
{static} -transform(UInt32 * state, const unsigned char * block) : void
{static} -encode(unsigned char * output, const UInt32 * input, std::size_t len) : void
{static} -decode(UInt32 * output, const unsigned char * input, std::size_t len) : void
-MD4Engine(const MD4Engine & ) : void
-operator=(const MD4Engine & ) : MD4Engine &
-_context : MD4Engine::Context [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L84{_context}]]]
-_digest : DigestEngine::Digest [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L85{_digest}]]]
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "MD4Engine::Context" as C_0001493561558202443367
class C_0001493561558202443367 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L77{MD4Engine##Context}]] {
+state : UInt32[4] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L79{state}]]]
+count : UInt32[2] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L80{count}]]]
+buffer : unsigned char[64] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MD4Engine.h#L81{buffer}]]]
}
class "Base32EncoderBuf" as C_0001539273769510739531
class C_0001539273769510739531 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L29{Base32EncoderBuf}]] {
+Base32EncoderBuf(std::ostream & ostr, bool padding = true) : void
+~Base32EncoderBuf() : void
+close() : int
-writeToDevice(char c) : int
-Base32EncoderBuf(const Base32EncoderBuf & ) : void
-operator=(const Base32EncoderBuf & ) : Base32EncoderBuf &
-_group : unsigned char[5] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L49{_group}]]]
-_groupLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L50{_groupLength}]]]
-_buf : std::streambuf & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L51{_buf}]]]
-_doPadding : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L52{_doPadding}]]]
{static} -OUT_ENCODING : const unsigned char[32] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L54{OUT_ENCODING}]]]
}
class "Base32EncoderIOS" as C_0000668080715308066158
class C_0000668080715308066158 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L63{Base32EncoderIOS}]] {
+Base32EncoderIOS(std::ostream & ostr, bool padding = true) : void
+~Base32EncoderIOS() : void
+close() : int
+rdbuf() : Base32EncoderBuf *
-Base32EncoderIOS(const Base32EncoderIOS & ) : void
-operator=(const Base32EncoderIOS & ) : Base32EncoderIOS &
#_buf : Base32EncoderBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L76{_buf}]]]
}
class "Base32Encoder" as C_0001363855970885973020
class C_0001363855970885973020 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Encoder.h#L84{Base32Encoder}]] {
+Base32Encoder(std::ostream & ostr, bool padding = true) : void
+~Base32Encoder() : void
-Base32Encoder(const Base32Encoder & ) : void
-operator=(const Base32Encoder & ) : Base32Encoder &
}
class "Observer<C,N>" as C_0000982871075127137247
class C_0000982871075127137247 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Observer.h#L30{Observer}]] {
+Observer<C, N>(C & object, Observer::Callback method) : void
+Observer<C, N>(const Observer<C,N> & observer) : void
+~Observer<C, N>() : void
+operator=(const Observer<C,N> & observer) : Observer<C,N> &
+notify(Notification * pNf) const : void
+equals(const AbstractObserver & abstractObserver) const : bool
+accepts(Notification * pNf, const char * pName = 0) const : bool
+clone() const : AbstractObserver *
+disable() : void
-Observer<C, N>() : void
-_pObject : C * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Observer.h#L115{_pObject}]]]
-_method : Observer::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Observer.h#L116{_method}]]]
-_mutex : Mutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Observer.h#L117{_mutex}]]]
}
class "AsyncChannel" as C_0000339212259491663501
class C_0000339212259491663501 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L34{AsyncChannel}]] {
+AsyncChannel(Channel::Ptr pChannel = 0, Thread::Priority prio = Thread::PRIO_NORMAL) : void
+setChannel(Channel::Ptr pChannel) : void
+getChannel() const : Channel::Ptr
+open() : void
+close() : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
#~AsyncChannel() : void
#run() : void
#setPriority(const std::string & value) : void
-_pChannel : Channel::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L107{_pChannel}]]]
-_thread : Thread [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L108{_thread}]]]
-_threadMutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L109{_threadMutex}]]]
-_channelMutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L110{_channelMutex}]]]
-_queue : NotificationQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L111{_queue}]]]
-_queueSize : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L112{_queueSize}]]]
-_dropCount : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L113{_dropCount}]]]
-_closed : std::atomic<bool> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/AsyncChannel.h#L114{_closed}]]]
}
class "MessageNotification" as C_0001647216797531995086
class C_0001647216797531995086 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/AsyncChannel.cpp#L30{MessageNotification}]] {
+MessageNotification(const Message & msg) : void
+~MessageNotification() : void
+message() const : const Message &
-_msg : Message [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/AsyncChannel.cpp#L48{_msg}]]]
}
class "TLSAbstractSlot" as C_0000549939075292803739
class C_0000549939075292803739 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadLocal.h#L28{TLSAbstractSlot}]] {
+TLSAbstractSlot() : void
+~TLSAbstractSlot() : void
}
class "TLSSlot<C>" as C_0000353138060525367947
class C_0000353138060525367947 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadLocal.h#L39{TLSSlot}]] {
+TLSSlot<C>() : void
+~TLSSlot<C>() : void
+value() : C &
-TLSSlot<C>(const TLSSlot<C> & ) : void
-operator=(const TLSSlot<C> & ) : TLSSlot<C> &
-_value : C [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadLocal.h#L64{_value}]]]
}
class "ThreadLocal<C>" as C_0001956532743369254390
class C_0001956532743369254390 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadLocal.h#L101{ThreadLocal}]] {
+ThreadLocal<C>() : void
+~ThreadLocal<C>() : void
+operator->() : C *
+operator*() : C &
+get() : C &
-ThreadLocal<C>(const ThreadLocal<C> & ) : void
-operator=(const ThreadLocal<C> & ) : ThreadLocal<C> &
}
class "ErrorHandler" as C_0001544364607386660238
class C_0001544364607386660238 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ErrorHandler.h#L29{ErrorHandler}]] {
+ErrorHandler() : void
+~ErrorHandler() : void
+exception(const Exception & exc) : void
+exception(const std::exception & exc) : void
+exception() : void
{static} +handle(const Exception & exc) : void
{static} +handle(const std::exception & exc) : void
{static} +handle() : void
{static} +set(ErrorHandler * pHandler) : ErrorHandler *
{static} +get() : ErrorHandler *
{static} #defaultHandler() : ErrorHandler *
{static} -_pHandler : ErrorHandler * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ErrorHandler.h#L103{_pHandler}]]]
{static} -_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ErrorHandler.h#L104{_mutex}]]]
}
class "RunnableHolder" as C_0000921178294042330616
class C_0000921178294042330616 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Thread.cpp#L42{RunnableHolder}]] {
+RunnableHolder(Runnable & target) : void
+~RunnableHolder() : void
+run() : void
-_target : Runnable & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Thread.cpp#L60{_target}]]]
}
class "CallableHolder" as C_0001477080063636139868
class C_0001477080063636139868 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Thread.cpp#L64{CallableHolder}]] {
+CallableHolder(Thread::Callable callable, void * pData) : void
+~CallableHolder() : void
+run() : void
-_callable : Thread::Callable [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Thread.cpp#L83{_callable}]]]
-_pData : void * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Thread.cpp#L84{_pData}]]]
}
class "FileChannel" as C_0002139733679108376691
class C_0002139733679108376691 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L37{FileChannel}]] {
+FileChannel() : void
+FileChannel(const std::string & path) : void
+open() : void
+close() : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
+creationDate() const : Timestamp
+size() const : UInt64
+path() const : const std::string &
#~FileChannel() : void
#setRotation(const std::string & rotation) : void
#setArchive(const std::string & archive) : void
#setCompress(const std::string & compress) : void
#setPurgeAge(const std::string & age) : void
#setPurgeCount(const std::string & count) : void
#setFlush(const std::string & flush) : void
#setRotateOnOpen(const std::string & rotateOnOpen) : void
#purge() : void
-setNoPurge(const std::string & value) : bool
-extractDigit(const std::string & value, std::string::const_iterator * nextToDigit = __null) const : int
-setPurgeStrategy(PurgeStrategy * strategy) : void
-extractFactor(const std::string & value, std::string::const_iterator start) const : Timespan::TimeDiff
-_path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L250{_path}]]]
-_times : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L251{_times}]]]
-_rotation : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L252{_rotation}]]]
-_archive : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L253{_archive}]]]
-_compress : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L254{_compress}]]]
-_purgeAge : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L255{_purgeAge}]]]
-_purgeCount : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L256{_purgeCount}]]]
-_flush : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L257{_flush}]]]
-_rotateOnOpen : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L258{_rotateOnOpen}]]]
-_pFile : LogFile * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L259{_pFile}]]]
-_pRotateStrategy : RotateStrategy * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L260{_pRotateStrategy}]]]
-_pArchiveStrategy : ArchiveStrategy * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L261{_pArchiveStrategy}]]]
-_pPurgeStrategy : PurgeStrategy * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L262{_pPurgeStrategy}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L263{_mutex}]]]
{static} +PROP_PATH : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L223{PROP_PATH}]]]
{static} +PROP_ROTATION : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L224{PROP_ROTATION}]]]
{static} +PROP_ARCHIVE : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L225{PROP_ARCHIVE}]]]
{static} +PROP_TIMES : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L226{PROP_TIMES}]]]
{static} +PROP_COMPRESS : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L227{PROP_COMPRESS}]]]
{static} +PROP_PURGEAGE : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L228{PROP_PURGEAGE}]]]
{static} +PROP_PURGECOUNT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L229{PROP_PURGECOUNT}]]]
{static} +PROP_FLUSH : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L230{PROP_FLUSH}]]]
{static} +PROP_ROTATEONOPEN : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/FileChannel.h#L231{PROP_ROTATEONOPEN}]]]
}
abstract "RotateStrategy" as C_0001863622787747053216
abstract C_0001863622787747053216 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L34{RotateStrategy}]] {
+RotateStrategy() : void
+~RotateStrategy() : void
{abstract} +mustRotate(LogFile * pFile) = 0 : bool
-RotateStrategy(const RotateStrategy & ) : void
-operator=(const RotateStrategy & ) : RotateStrategy &
}
class "RotateAtTimeStrategy<DT>" as C_0000857036423557090166
class C_0000857036423557090166 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L53{RotateAtTimeStrategy}]] {
+RotateAtTimeStrategy<DT>(const std::string & rtime) : void
+~RotateAtTimeStrategy<DT>() : void
+mustRotate(LogFile * ) : bool
-getNextRollover() : void
-_threshold : DT [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L120{_threshold}]]]
-_day : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L121{_day}]]]
-_hour : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L122{_hour}]]]
-_minute : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L123{_minute}]]]
}
class "RotateByIntervalStrategy" as C_0002224797461986433004
class C_0002224797461986433004 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L127{RotateByIntervalStrategy}]] {
+RotateByIntervalStrategy(const Timespan & span) : void
+~RotateByIntervalStrategy() : void
+mustRotate(LogFile * pFile) : bool
-_span : Timespan [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L142{_span}]]]
-_lastRotate : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L143{_lastRotate}]]]
{static} -ROTATE_TEXT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L144{ROTATE_TEXT}]]]
}
class "RotateBySizeStrategy" as C_0001123212921880770067
class C_0001123212921880770067 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L148{RotateBySizeStrategy}]] {
+RotateBySizeStrategy(UInt64 size) : void
+~RotateBySizeStrategy() : void
+mustRotate(LogFile * pFile) : bool
-_size : UInt64 [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/RotateStrategy.h#L158{_size}]]]
}
class "Stopwatch" as C_0000695839770737746479
class C_0000695839770737746479 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Stopwatch.h#L28{Stopwatch}]] {
+Stopwatch() : void
+~Stopwatch() : void
+start() : void
+stop() : void
+reset() : void
+restart() : void
+elapsed() const : Clock::ClockDiff
+elapsedSeconds() const : int
{static} +resolution() : Clock::ClockVal
-Stopwatch(const Stopwatch & ) : void
-operator=(const Stopwatch & ) : Stopwatch &
-_start : Clock [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Stopwatch.h#L63{_start}]]]
-_elapsed : Clock::ClockDiff [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Stopwatch.h#L64{_elapsed}]]]
-_running : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Stopwatch.h#L65{_running}]]]
}
class "Timer" as C_0000178503442785486670
class C_0000178503442785486670 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L36{Timer}]] {
+Timer(long startInterval = 0, long periodicInterval = 0) : void
+~Timer() : void
+start(const AbstractTimerCallback & method) : void
+start(const AbstractTimerCallback & method, Thread::Priority priority) : void
+start(const AbstractTimerCallback & method, ThreadPool & threadPool) : void
+start(const AbstractTimerCallback & method, Thread::Priority priority, ThreadPool & threadPool) : void
+stop() : void
+restart() : void
+restart(long milliseconds) : void
+getStartInterval() const : long
+setStartInterval(long milliseconds) : void
+getPeriodicInterval() const : long
+setPeriodicInterval(long milliseconds) : void
+skipped() const : long
#run() : void
-Timer(const Timer & ) : void
-operator=(const Timer & ) : Timer &
-_startInterval : long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L144{_startInterval}]]]
-_periodicInterval : long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L145{_periodicInterval}]]]
-_wakeUp : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L146{_wakeUp}]]]
-_done : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L147{_done}]]]
-_skipped : long [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L148{_skipped}]]]
-_pCallback : AbstractTimerCallback * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L149{_pCallback}]]]
-_nextInvocation : Clock [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L150{_nextInvocation}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L151{_mutex}]]]
}
abstract "AbstractTimerCallback" as C_0001120170482425500033
abstract C_0001120170482425500033 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L158{AbstractTimerCallback}]] {
+AbstractTimerCallback() : void
+AbstractTimerCallback(const AbstractTimerCallback & callback) : void
+~AbstractTimerCallback() : void
+operator=(const AbstractTimerCallback & callback) : AbstractTimerCallback &
{abstract} +invoke(Timer & timer) const = 0 : void
{abstract} +clone() const = 0 : AbstractTimerCallback *
}
class "TimerCallback<C>" as C_0000661517478816503369
class C_0000661517478816503369 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L175{TimerCallback}]] {
+TimerCallback<C>(C & object, TimerCallback::Callback method) : void
+TimerCallback<C>(const TimerCallback<C> & callback) : void
+~TimerCallback<C>() : void
+operator=(const TimerCallback<C> & callback) : TimerCallback<C> &
+invoke(Timer & timer) const : void
+clone() const : AbstractTimerCallback *
-TimerCallback<C>() : void
-_pObject : C * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L221{_pObject}]]]
-_method : TimerCallback::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timer.h#L222{_method}]]]
}
abstract "AbstractMetaObject<B>" as C_0000028310326980591512
abstract C_0000028310326980591512 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaObject.h#L31{AbstractMetaObject}]] {
+AbstractMetaObject<B>(const char * name) : void
+~AbstractMetaObject<B>() : void
+name() const : const char *
{abstract} +create() const = 0 : B *
{abstract} +instance() const = 0 : B &
{abstract} +canCreate() const = 0 : bool
+destroy(B * pObject) const : void
+autoDelete(B * pObject) const : B *
+isAutoDelete(B * pObject) const : bool
-AbstractMetaObject<B>() : void
-AbstractMetaObject<B>(const AbstractMetaObject<B> & ) : void
-operator=(const AbstractMetaObject<B> & ) : AbstractMetaObject<B> &
-_name : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaObject.h#L119{_name}]]]
-_deleteSet : AbstractMetaObject::ObjectSet [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaObject.h#L120{_deleteSet}]]]
}
class "MetaObject<C,B>" as C_0000474083635704054589
class C_0000474083635704054589 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaObject.h#L125{MetaObject}]] {
+MetaObject<C, B>(const char * name) : void
+~MetaObject<C, B>() : void
+create() const : B *
+instance() const : B &
+canCreate() const : bool
}
class "SingletonHolder<C>" as C_0000486705331160431818
class C_0000486705331160431818 {
}
class "MetaSingleton<C,B>" as C_0001146499130388999378
class C_0001146499130388999378 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaObject.h#L159{MetaSingleton}]] {
+MetaSingleton<C, B>(const char * name) : void
+~MetaSingleton<C, B>() : void
+create() const : B *
+canCreate() const : bool
+instance() const : B &
+isAutoDelete(B * ) const : bool
-_object : SingletonHolder<C> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/MetaObject.h#L194{_object}]]]
}
abstract "ManifestBase" as C_0001551345012104868531
abstract C_0001551345012104868531 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Manifest.h#L30{ManifestBase}]] {
+ManifestBase() : void
+~ManifestBase() : void
{abstract} +className() const = 0 : const char *
}
class "Manifest<B>" as C_0000591855119420637802
class C_0000591855119420637802 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Manifest.h#L44{Manifest}]] {
+Manifest<B>() : void
+~Manifest<B>() : void
+find(const std::string & className) const : Manifest::Iterator
+begin() const : Manifest::Iterator
+end() const : Manifest::Iterator
+insert(const Manifest::Meta * pMeta) : bool
+clear() : void
+size() const : int
+empty() const : bool
+className() const : const char *
-_metaMap : Manifest::MetaMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Manifest.h#L173{_metaMap}]]]
}
class "Manifest::Iterator" as C_0001033235586798701554
class C_0001033235586798701554 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Manifest.h#L56{Manifest##Iterator}]] {
+Iterator(const typename MetaMap::const_iterator & it) : void
+Iterator(const Manifest::Iterator & it) : void
+~Iterator() : void
+operator=(const Manifest::Iterator & it) : Manifest::Iterator &
+operator==(const Manifest::Iterator & it) const : bool
+operator!=(const Manifest::Iterator & it) const : bool
+operator++() : Manifest::Iterator &
+operator++(int ) : Manifest::Iterator
+operator*() const : const Manifest::Meta *
+operator->() const : const Manifest::Meta *
-_it : typename MetaMap::const_iterator [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Manifest.h#L105{_it}]]]
}
class "BinaryWriter" as C_0000799299838966234516
class C_0000799299838966234516 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L35{BinaryWriter}]] {
+BinaryWriter(std::ostream & ostr, BinaryWriter::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+BinaryWriter(std::ostream & ostr, TextEncoding & encoding, BinaryWriter::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+~BinaryWriter() : void
+operator<<(bool value) : BinaryWriter &
+operator<<(char value) : BinaryWriter &
+operator<<(unsigned char value) : BinaryWriter &
+operator<<(signed char value) : BinaryWriter &
+operator<<(short value) : BinaryWriter &
+operator<<(unsigned short value) : BinaryWriter &
+operator<<(int value) : BinaryWriter &
+operator<<(unsigned int value) : BinaryWriter &
+operator<<(long value) : BinaryWriter &
+operator<<(unsigned long value) : BinaryWriter &
+operator<<(float value) : BinaryWriter &
+operator<<(double value) : BinaryWriter &
+operator<<(long long value) : BinaryWriter &
+operator<<(unsigned long long value) : BinaryWriter &
+operator<<(const std::string & value) : BinaryWriter &
+operator<<(const char * value) : BinaryWriter &
+write7BitEncoded(UInt32 value) : void
+write7BitEncoded(UInt64 value) : void
+writeRaw(const std::string & rawData) : void
+writeRaw(const char * buffer, std::streamsize length) : void
+writeBOM() : void
+flush() : void
+good() : bool
+fail() : bool
+bad() : bool
+stream() const : std::ostream &
+byteOrder() const : BinaryWriter::StreamByteOrder
+operator<<<T>(const std::vector<T> & value) : class BinaryWriter &
-_ostr : std::ostream & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L161{_ostr}]]]
-_flipBytes : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L162{_flipBytes}]]]
-_pTextConverter : TextConverter * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L163{_pTextConverter}]]]
}
enum "BinaryWriter::StreamByteOrder" as C_0002176387723842041729
enum C_0002176387723842041729 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L50{BinaryWriter##StreamByteOrder}]] {
NATIVE_BYTE_ORDER
BIG_ENDIAN_BYTE_ORDER
NETWORK_BYTE_ORDER
LITTLE_ENDIAN_BYTE_ORDER
}
class "BasicMemoryBinaryWriter<T>" as C_0001207504148242290438
class C_0001207504148242290438 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L168{BasicMemoryBinaryWriter}]] {
+BasicMemoryBinaryWriter<T>(Buffer<T> & data, BinaryWriter::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+BasicMemoryBinaryWriter<T>(Buffer<T> & data, TextEncoding & encoding, BinaryWriter::StreamByteOrder byteOrder = NATIVE_BYTE_ORDER) : void
+~BasicMemoryBinaryWriter<T>() : void
+data() : Buffer<T> &
+data() const : const Buffer<T> &
+stream() const : const MemoryOutputStream &
+stream() : MemoryOutputStream &
-_data : Buffer<T> & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L219{_data}]]]
-_ostr : MemoryOutputStream [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/BinaryWriter.h#L220{_ostr}]]]
}
class "Base32DecoderBuf" as C_0000432823034649330038
class C_0000432823034649330038 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L29{Base32DecoderBuf}]] {
+Base32DecoderBuf(std::istream & istr) : void
+~Base32DecoderBuf() : void
-readFromDevice() : int
-readOne() : int
-Base32DecoderBuf(const Base32DecoderBuf & ) : void
-operator=(const Base32DecoderBuf & ) : Base32DecoderBuf &
-_group : unsigned char[8] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L47{_group}]]]
-_groupLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L48{_groupLength}]]]
-_groupIndex : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L49{_groupIndex}]]]
-_buf : std::streambuf & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L50{_buf}]]]
{static} -IN_ENCODING : unsigned char[256] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L52{IN_ENCODING}]]]
{static} -IN_ENCODING_INIT : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L53{IN_ENCODING_INIT}]]]
}
class "Base32DecoderIOS" as C_0001302827927167352541
class C_0001302827927167352541 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L61{Base32DecoderIOS}]] {
+Base32DecoderIOS(std::istream & istr) : void
+~Base32DecoderIOS() : void
+rdbuf() : Base32DecoderBuf *
-Base32DecoderIOS(const Base32DecoderIOS & ) : void
-operator=(const Base32DecoderIOS & ) : Base32DecoderIOS &
#_buf : Base32DecoderBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L73{_buf}]]]
}
class "Base32Decoder" as C_0001514863405507265282
class C_0001514863405507265282 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Base32Decoder.h#L81{Base32Decoder}]] {
+Base32Decoder(std::istream & istr) : void
+~Base32Decoder() : void
-Base32Decoder(const Base32Decoder & ) : void
-operator=(const Base32Decoder & ) : Base32Decoder &
}
class "HexBinaryEncoderBuf" as C_0000662420568412593533
class C_0000662420568412593533 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L29{HexBinaryEncoderBuf}]] {
+HexBinaryEncoderBuf(std::ostream & ostr) : void
+~HexBinaryEncoderBuf() : void
+close() : int
+setLineLength(int lineLength) : void
+getLineLength() const : int
+setUppercase(bool flag = true) : void
-writeToDevice(char c) : int
-_pos : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L67{_pos}]]]
-_lineLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L68{_lineLength}]]]
-_uppercase : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L69{_uppercase}]]]
-_buf : std::streambuf & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L70{_buf}]]]
}
class "HexBinaryEncoderIOS" as C_0000296539041573903715
class C_0000296539041573903715 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L74{HexBinaryEncoderIOS}]] {
+HexBinaryEncoderIOS(std::ostream & ostr) : void
+~HexBinaryEncoderIOS() : void
+close() : int
+rdbuf() : HexBinaryEncoderBuf *
#_buf : HexBinaryEncoderBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L87{_buf}]]]
}
class "HexBinaryEncoder" as C_0002187624587763014217
class C_0002187624587763014217 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryEncoder.h#L91{HexBinaryEncoder}]] {
+HexBinaryEncoder(std::ostream & ostr) : void
+~HexBinaryEncoder() : void
}
class "Timezone" as C_0000638075736413934088
class C_0000638075736413934088 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Timezone.h#L28{Timezone}]] {
{static} +utcOffset() : int
{static} +dst() : int
{static} +dst(const Timestamp & timestamp) : int
{static} +isDst(const Timestamp & timestamp) : bool
{static} +tzd() : int
{static} +name() : std::string
{static} +standardName() : std::string
{static} +dstName() : std::string
}
class "TemporaryFile" as C_0001286021211442138988
class C_0001286021211442138988 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TemporaryFile.h#L28{TemporaryFile}]] {
+TemporaryFile() : void
+TemporaryFile(const std::string & tempDir) : void
+~TemporaryFile() : void
+keep() : void
+keepUntilExit() : void
{static} +registerForDeletion(const std::string & path) : void
{static} +tempName(const std::string & tempDir = "") : std::string
-_keep : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TemporaryFile.h#L77{_keep}]]]
}
class "TempFileCollector" as C_0000374360102481866647
class C_0000374360102481866647 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/TemporaryFile.cpp#L29{TempFileCollector}]] {
+TempFileCollector() : void
+~TempFileCollector() : void
+registerFile(const std::string & path) : void
-_files : std::set<std::string> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/TemporaryFile.cpp#L68{_files}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/TemporaryFile.cpp#L69{_mutex}]]]
}
class "PathImpl" as C_0001444518894665418270
class C_0001444518894665418270 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Path_UNIX.h#L28{PathImpl}]] {
{static} +currentImpl() : std::string
{static} +homeImpl() : std::string
{static} +configHomeImpl() : std::string
{static} +dataHomeImpl() : std::string
{static} +tempHomeImpl() : std::string
{static} +cacheHomeImpl() : std::string
{static} +tempImpl() : std::string
{static} +configImpl() : std::string
{static} +nullImpl() : std::string
{static} +expandImpl(const std::string & path) : std::string
{static} +listRootsImpl(std::vector<std::string> & roots) : void
}
class "EnvironmentImpl" as C_0000042807779830434191
class C_0000042807779830434191 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Environment_UNIX.h#L29{EnvironmentImpl}]] {
{static} +getImpl(const std::string & name) : std::string
{static} +hasImpl(const std::string & name) : bool
{static} +setImpl(const std::string & name, const std::string & value) : void
{static} +osNameImpl() : std::string
{static} +osDisplayNameImpl() : std::string
{static} +osVersionImpl() : std::string
{static} +osArchitectureImpl() : std::string
{static} +nodeNameImpl() : std::string
{static} +nodeIdImpl(EnvironmentImpl::NodeId & id) : void
{static} +processorCountImpl() : unsigned int
{static} -_map : EnvironmentImpl::StringMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Environment_UNIX.h#L48{_map}]]]
{static} -_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Environment_UNIX.h#L49{_mutex}]]]
}
class "PatternFormatter" as C_0001798291351056602742
class C_0001798291351056602742 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L30{PatternFormatter}]] {
+PatternFormatter() : void
+PatternFormatter(const std::string & format) : void
+~PatternFormatter() : void
+format(const Message & msg, std::string & text) : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
#getPriorityName(int ) : const std::string &
-parsePattern() : void
-parsePriorityNames() : void
-_patternActions : std::vector<PatternAction> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L150{_patternActions}]]]
-_localTime : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L151{_localTime}]]]
-_pattern : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L152{_pattern}]]]
-_priorityNames : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L153{_priorityNames}]]]
-_priorities : std::string[9] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L154{_priorities}]]]
{static} +PROP_PATTERN : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L120{PROP_PATTERN}]]]
{static} +PROP_TIMES : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L121{PROP_TIMES}]]]
{static} +PROP_PRIORITY_NAMES : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L122{PROP_PRIORITY_NAMES}]]]
{static} -DEFAULT_PRIORITY_NAMES : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L148{DEFAULT_PRIORITY_NAMES}]]]
}
class "PatternFormatter::PatternAction" as C_0001901952625337206475
class C_0001901952625337206475 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L129{PatternFormatter##PatternAction}]] {
+PatternAction() : void
+key : char [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L135{key}]]]
+length : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L136{length}]]]
+property : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L137{property}]]]
+prepend : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/PatternFormatter.h#L138{prepend}]]]
}
class "ThreadPoolSingletonHolder" as C_0000948952027955582559
class C_0000948952027955582559 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L485{ThreadPoolSingletonHolder}]] {
+ThreadPoolSingletonHolder() : void
+~ThreadPoolSingletonHolder() : void
+pool() : ThreadPool *
-_pPool : ThreadPool * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L510{_pPool}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ThreadPool.cpp#L511{_mutex}]]]
}
class "BasicEvent<const DirectoryWatcher::DirectoryEvent>" as C_0001759403185093864905
class C_0001759403185093864905 {
}
class "BasicEvent<const Exception>" as C_0001544966738409555773
class C_0001544966738409555773 {
}
class "DirectoryWatcher" as C_0001352960356011033665
class C_0001352960356011033665 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L40{DirectoryWatcher}]] {
+DirectoryWatcher(const std::string & path, int eventMask = DW_FILTER_ENABLE_ALL, int scanInterval = DW_DEFAULT_SCAN_INTERVAL) : void
+DirectoryWatcher(const File & directory, int eventMask = DW_FILTER_ENABLE_ALL, int scanInterval = DW_DEFAULT_SCAN_INTERVAL) : void
+~DirectoryWatcher() : void
+suspendEvents() : void
+resumeEvents() : void
+eventsSuspended() const : bool
+eventMask() const : int
+scanInterval() const : int
+directory() const : const File &
+supportsMoveEvents() const : bool
#init() : void
#stop() : void
#run() : void
-DirectoryWatcher() : void
-DirectoryWatcher(const DirectoryWatcher & ) : void
-operator=(const DirectoryWatcher & ) : DirectoryWatcher &
+itemAdded : BasicEvent<const DirectoryWatcher::DirectoryEvent> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L117{itemAdded}]]]
+itemRemoved : BasicEvent<const DirectoryWatcher::DirectoryEvent> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L120{itemRemoved}]]]
+itemModified : BasicEvent<const DirectoryWatcher::DirectoryEvent> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L123{itemModified}]]]
+itemMovedFrom : BasicEvent<const DirectoryWatcher::DirectoryEvent> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L126{itemMovedFrom}]]]
+itemMovedTo : BasicEvent<const DirectoryWatcher::DirectoryEvent> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L129{itemMovedTo}]]]
+scanError : BasicEvent<const Exception> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L132{scanError}]]]
-_thread : Thread [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L187{_thread}]]]
-_directory : File [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L188{_directory}]]]
-_eventMask : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L189{_eventMask}]]]
-_eventsSuspended : AtomicCounter [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L190{_eventsSuspended}]]]
-_scanInterval : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L191{_scanInterval}]]]
-_pStrategy : DirectoryWatcherStrategy * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L192{_pStrategy}]]]
+DW_DEFAULT_SCAN_INTERVAL : enum
}
enum "DirectoryWatcher::DirectoryEventType" as C_0001298267866440427282
enum C_0001298267866440427282 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L73{DirectoryWatcher##DirectoryEventType}]] {
DW_ITEM_ADDED
DW_ITEM_REMOVED
DW_ITEM_MODIFIED
DW_ITEM_MOVED_FROM
DW_ITEM_MOVED_TO
}
enum "DirectoryWatcher::DirectoryEventMask" as C_0000075608327731243092
enum C_0000075608327731243092 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L91{DirectoryWatcher##DirectoryEventMask}]] {
DW_FILTER_ENABLE_ALL
DW_FILTER_DISABLE_ALL
}
class "DirectoryWatcher::DirectoryEvent" as C_0000432039243229901287
class C_0000432039243229901287 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L105{DirectoryWatcher##DirectoryEvent}]] {
+DirectoryEvent(const File & f, DirectoryWatcher::DirectoryEventType ev) : void
+item : const File & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L113{item}]]]
+event : DirectoryWatcher::DirectoryEventType [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DirectoryWatcher.h#L114{event}]]]
}
abstract "DirectoryWatcherStrategy" as C_0000777071345740656910
abstract C_0000777071345740656910 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L48{DirectoryWatcherStrategy}]] {
+DirectoryWatcherStrategy(DirectoryWatcher & owner) : void
+~DirectoryWatcherStrategy() : void
+owner() : DirectoryWatcher &
{abstract} +run() = 0 : void
{abstract} +stop() = 0 : void
{abstract} +supportsMoveEvents() const = 0 : bool
#scan(DirectoryWatcherStrategy::ItemInfoMap & entries) : void
#compare(DirectoryWatcherStrategy::ItemInfoMap & oldEntries, DirectoryWatcherStrategy::ItemInfoMap & newEntries) : void
-DirectoryWatcherStrategy() : void
-DirectoryWatcherStrategy(const DirectoryWatcherStrategy & ) : void
-operator=(const DirectoryWatcherStrategy & ) : DirectoryWatcherStrategy &
-_owner : DirectoryWatcher & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L149{_owner}]]]
}
class "DirectoryWatcherStrategy::ItemInfo" as C_0001967264452092302251
class C_0001967264452092302251 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L70{DirectoryWatcherStrategy##ItemInfo}]] {
+ItemInfo() : void
+ItemInfo(const DirectoryWatcherStrategy::ItemInfo & other) : void
+ItemInfo(const File & f) : void
+path : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L91{path}]]]
+size : File::FileSize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L92{size}]]]
+lastModified : Timestamp [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L93{lastModified}]]]
}
class "LinuxDirectoryWatcherStrategy" as C_0001916115735206194051
class C_0001916115735206194051 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L254{LinuxDirectoryWatcherStrategy}]] {
+LinuxDirectoryWatcherStrategy(DirectoryWatcher & owner) : void
+~LinuxDirectoryWatcherStrategy() : void
+run() : void
+stop() : void
+supportsMoveEvents() const : bool
-_fd : std::atomic<int> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L374{_fd}]]]
-_stopped : std::atomic<bool> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/DirectoryWatcher.cpp#L375{_stopped}]]]
}
class "Hash<T>" as C_0000638628479718764813
class C_0000638628479718764813 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Hash.h#L51{Hash}]] {
+operator()(T value) const : std::size_t
}
class "InflatingStreamBuf" as C_0001950526211289949919
class C_0001950526211289949919 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L35{InflatingStreamBuf}]] {
+InflatingStreamBuf(std::istream & istr, InflatingStreamBuf::StreamType type) : void
+InflatingStreamBuf(std::istream & istr, int windowBits) : void
+InflatingStreamBuf(std::ostream & ostr, InflatingStreamBuf::StreamType type) : void
+InflatingStreamBuf(std::ostream & ostr, int windowBits) : void
+~InflatingStreamBuf() : void
+close() : int
+reset() : void
#readFromDevice(char * buffer, std::streamsize length) : int
#writeToDevice(const char * buffer, std::streamsize length) : int
#sync() : int
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L95{_pIstr}]]]
-_pOstr : std::ostream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L96{_pOstr}]]]
-_buffer : char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L97{_buffer}]]]
-_zstr : z_stream [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L98{_zstr}]]]
-_eof : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L99{_eof}]]]
-_check : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L100{_check}]]]
-STREAM_BUFFER_SIZE : enum
-INFLATE_BUFFER_SIZE : enum
}
enum "InflatingStreamBuf::StreamType" as C_0001257776470696578383
enum C_0001257776470696578383 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L43{InflatingStreamBuf##StreamType}]] {
STREAM_ZLIB
STREAM_GZIP
STREAM_ZIP
}
class "InflatingIOS" as C_0001647197953565577529
class C_0001647197953565577529 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L104{InflatingIOS}]] {
+InflatingIOS(std::ostream & ostr, InflatingStreamBuf::StreamType type = InflatingStreamBuf::STREAM_ZLIB) : void
+InflatingIOS(std::ostream & ostr, int windowBits) : void
+InflatingIOS(std::istream & istr, InflatingStreamBuf::StreamType type = InflatingStreamBuf::STREAM_ZLIB) : void
+InflatingIOS(std::istream & istr, int windowBits) : void
+~InflatingIOS() : void
+rdbuf() : InflatingStreamBuf *
#_buf : InflatingStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L140{_buf}]]]
}
class "InflatingOutputStream" as C_0001628677755064749826
class C_0001628677755064749826 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L144{InflatingOutputStream}]] {
+InflatingOutputStream(std::ostream & ostr, InflatingStreamBuf::StreamType type = InflatingStreamBuf::STREAM_ZLIB) : void
+InflatingOutputStream(std::ostream & ostr, int windowBits) : void
+~InflatingOutputStream() : void
+close() : int
}
class "InflatingInputStream" as C_0000694586591102281210
class C_0000694586591102281210 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/InflatingStream.h#L174{InflatingInputStream}]] {
+InflatingInputStream(std::istream & istr, InflatingStreamBuf::StreamType type = InflatingStreamBuf::STREAM_ZLIB) : void
+InflatingInputStream(std::istream & istr, int windowBits) : void
+~InflatingInputStream() : void
+reset() : void
}
class "HexBinaryDecoderBuf" as C_0000557861678389581488
class C_0000557861678389581488 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryDecoder.h#L29{HexBinaryDecoderBuf}]] {
+HexBinaryDecoderBuf(std::istream & istr) : void
+~HexBinaryDecoderBuf() : void
-readFromDevice() : int
-readOne() : int
-_buf : std::streambuf & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryDecoder.h#L51{_buf}]]]
}
class "HexBinaryDecoderIOS" as C_0002234238327531340503
class C_0002234238327531340503 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryDecoder.h#L55{HexBinaryDecoderIOS}]] {
+HexBinaryDecoderIOS(std::istream & istr) : void
+~HexBinaryDecoderIOS() : void
+rdbuf() : HexBinaryDecoderBuf *
#_buf : HexBinaryDecoderBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryDecoder.h#L67{_buf}]]]
}
class "HexBinaryDecoder" as C_0000499679237572472424
class C_0000499679237572472424 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/HexBinaryDecoder.h#L71{HexBinaryDecoder}]] {
+HexBinaryDecoder(std::istream & istr) : void
+~HexBinaryDecoder() : void
}
class "TimedNotificationQueue" as C_0000766233471547334066
class C_0000766233471547334066 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TimedNotificationQueue.h#L33{TimedNotificationQueue}]] {
+TimedNotificationQueue() : void
+~TimedNotificationQueue() : void
+enqueueNotification(Notification::Ptr pNotification, Timestamp timestamp) : void
+enqueueNotification(Notification::Ptr pNotification, Clock clock) : void
+dequeueNotification() : Notification *
+waitDequeueNotification() : Notification *
+waitDequeueNotification(long milliseconds) : Notification *
+empty() const : bool
+size() const : int
+clear() : void
#dequeueOne(NfQueue::iterator & it) : Notification::Ptr
#wait(Clock::ClockDiff interval) : bool
-_nfQueue : TimedNotificationQueue::NfQueue [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TimedNotificationQueue.h#L134{_nfQueue}]]]
-_nfAvailable : Event [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TimedNotificationQueue.h#L135{_nfAvailable}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TimedNotificationQueue.h#L136{_mutex}]]]
}
class "TextBufferIterator" as C_0001578505165053786052
class C_0001578505165053786052 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextBufferIterator.h#L31{TextBufferIterator}]] {
+TextBufferIterator() : void
+TextBufferIterator(const char * begin, const TextEncoding & encoding) : void
+TextBufferIterator(const char * begin, std::size_t size, const TextEncoding & encoding) : void
+TextBufferIterator(const char * begin, const char * end, const TextEncoding & encoding) : void
+TextBufferIterator(const char * end) : void
+~TextBufferIterator() : void
+TextBufferIterator(const TextBufferIterator & it) : void
+operator=(const TextBufferIterator & it) : TextBufferIterator &
+swap(TextBufferIterator & it) : void
+operator*() const : int
+operator++() : TextBufferIterator &
+operator++(int ) : TextBufferIterator
+operator==(const TextBufferIterator & it) const : bool
+operator!=(const TextBufferIterator & it) const : bool
+end() const : TextBufferIterator
-_pEncoding : const TextEncoding * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextBufferIterator.h#L109{_pEncoding}]]]
-_it : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextBufferIterator.h#L110{_it}]]]
-_end : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TextBufferIterator.h#L111{_end}]]]
}
class "TZInfo" as C_0000084346323287749129
class C_0000084346323287749129 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Timezone_UNIX.cpp#L24{TZInfo}]] {
+TZInfo() : void
+timeZone() : int
+name(bool dst) : const char *
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/Timezone_UNIX.cpp#L60{_mutex}]]]
}
class "LineEnding" as C_0001150089217090132826
class C_0001150089217090132826 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L30{LineEnding}]] {
{static} +NEWLINE_DEFAULT : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L35{NEWLINE_DEFAULT}]]]
{static} +NEWLINE_CR : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L36{NEWLINE_CR}]]]
{static} +NEWLINE_CRLF : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L37{NEWLINE_CRLF}]]]
{static} +NEWLINE_LF : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L38{NEWLINE_LF}]]]
}
class "LineEndingConverterStreamBuf" as C_0001434923480159065033
class C_0001434923480159065033 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L42{LineEndingConverterStreamBuf}]] {
+LineEndingConverterStreamBuf(std::istream & istr) : void
+LineEndingConverterStreamBuf(std::ostream & ostr) : void
+~LineEndingConverterStreamBuf() : void
+setNewLine(const std::string & newLineCharacters) : void
+getNewLine() const : const std::string &
#readFromDevice() : int
#writeToDevice(char c) : int
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L82{_pIstr}]]]
-_pOstr : std::ostream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L83{_pOstr}]]]
-_newLine : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L84{_newLine}]]]
-_it : std::string::const_iterator [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L85{_it}]]]
-_lastChar : char [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L86{_lastChar}]]]
}
class "LineEndingConverterIOS" as C_0000948464525636325061
class C_0000948464525636325061 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L90{LineEndingConverterIOS}]] {
+LineEndingConverterIOS(std::istream & istr) : void
+LineEndingConverterIOS(std::ostream & ostr) : void
+~LineEndingConverterIOS() : void
+setNewLine(const std::string & newLineCharacters) : void
+getNewLine() const : const std::string &
+rdbuf() : LineEndingConverterStreamBuf *
#_buf : LineEndingConverterStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L130{_buf}]]]
}
class "InputLineEndingConverter" as C_0001514271543667812042
class C_0001514271543667812042 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L134{InputLineEndingConverter}]] {
+InputLineEndingConverter(std::istream & istr) : void
+InputLineEndingConverter(std::istream & istr, const std::string & newLineCharacters) : void
+~InputLineEndingConverter() : void
}
class "OutputLineEndingConverter" as C_0001899745693640730666
class C_0001899745693640730666 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LineEndingConverter.h#L156{OutputLineEndingConverter}]] {
+OutputLineEndingConverter(std::ostream & ostr) : void
+OutputLineEndingConverter(std::ostream & ostr, const std::string & newLineCharacters) : void
+~OutputLineEndingConverter() : void
}
class "MethodNotification" as C_0001003460166096379338
class C_0001003460166096379338 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ActiveDispatcher.cpp#L25{MethodNotification}]] {
+MethodNotification(ActiveRunnableBase::Ptr pRunnable) : void
+runnable() const : ActiveRunnableBase::Ptr
-_pRunnable : ActiveRunnableBase::Ptr [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ActiveDispatcher.cpp#L39{_pRunnable}]]]
}
class "StopNotification" as C_0001289552373452015302
class C_0001289552373452015302 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/ActiveDispatcher.cpp#L42{StopNotification}]] {
}
class "NullStreamBuf" as C_0000380049637305409601
class C_0000380049637305409601 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NullStream.h#L30{NullStreamBuf}]] {
+NullStreamBuf() : void
+~NullStreamBuf() : void
#readFromDevice() : int
#writeToDevice(char c) : int
}
class "NullIOS" as C_0001499872522016959729
class C_0001499872522016959729 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NullStream.h#L47{NullIOS}]] {
+NullIOS() : void
+~NullIOS() : void
#_buf : NullStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NullStream.h#L58{_buf}]]]
}
class "NullInputStream" as C_0000249297064991877312
class C_0000249297064991877312 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NullStream.h#L62{NullInputStream}]] {
+NullInputStream() : void
+~NullInputStream() : void
}
class "NullOutputStream" as C_0001339651780015601050
class C_0001339651780015601050 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NullStream.h#L75{NullOutputStream}]] {
+NullOutputStream() : void
+~NullOutputStream() : void
}
class "SHA2Engine" as C_0002049503466728844695
class C_0002049503466728844695 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L34{SHA2Engine}]] {
+SHA2Engine(SHA2Engine::ALGORITHM algorithm = SHA_256) : void
+~SHA2Engine() : void
+digestLength() const : std::size_t
+reset() : void
+digest() : const DigestEngine::Digest &
#updateImpl(const void * data, std::size_t length) : void
-transform() : void
-SHA2Engine(const SHA2Engine & ) : void
-operator=(const SHA2Engine & ) : SHA2Engine &
-_context : void * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L62{_context}]]]
-_algorithm : SHA2Engine::ALGORITHM [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L63{_algorithm}]]]
-_digest : DigestEngine::Digest [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L64{_digest}]]]
}
enum "SHA2Engine::ALGORITHM" as C_0001286171866177069736
enum C_0001286171866177069736 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L39{SHA2Engine##ALGORITHM}]] {
SHA_224
SHA_256
SHA_384
SHA_512
SHA_512_224
SHA_512_256
}
class "SHA2Engine224" as C_0000861463478491134680
class C_0000861463478491134680 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L71{SHA2Engine224}]] {
+SHA2Engine224() : void
+~SHA2Engine224() : void
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "SHA2Engine256" as C_0000098817567561142961
class C_0000098817567561142961 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L90{SHA2Engine256}]] {
+SHA2Engine256() : void
+~SHA2Engine256() : void
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "SHA2Engine384" as C_0000987971293548162250
class C_0000987971293548162250 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L109{SHA2Engine384}]] {
+SHA2Engine384() : void
+~SHA2Engine384() : void
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "SHA2Engine512" as C_0000003932258855102108
class C_0000003932258855102108 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SHA2Engine.h#L128{SHA2Engine512}]] {
+SHA2Engine512() : void
+~SHA2Engine512() : void
+BLOCK_SIZE : enum
+DIGEST_SIZE : enum
}
class "(anonymous_789733)" as C_0000115016228932451153
class C_0000115016228932451153 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L30{(anonymous_789733)}]] {
+total : ::(anonymous_789769) [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L36{total}]]]
+state : ::(anonymous_789946) [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L42{state}]]]
+buffer : unsigned char[128] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L44{buffer}]]]
}
class "(anonymous_789733)::(total)" as C_0001552174321562332620
class C_0001552174321562332620 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L32{(anonymous_789733)##(total)}]] {
+total32 : UInt32[4] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L34{total32}]]]
+total64 : UInt64[2] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L35{total64}]]]
}
class "(anonymous_789733)::(state)" as C_0001433694275376201942
class C_0001433694275376201942 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L38{(anonymous_789733)##(state)}]] {
+state32 : UInt32[16] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L40{state32}]]]
+state64 : UInt64[8] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/src/SHA2Engine.cpp#L41{state64}]]]
}
class "StreamConverterBuf" as C_0001873639078840997618
class C_0001873639078840997618 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L31{StreamConverterBuf}]] {
+StreamConverterBuf(std::istream & istr, const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+StreamConverterBuf(std::ostream & ostr, const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+~StreamConverterBuf() : void
+errors() const : int
#readFromDevice() : int
#writeToDevice(char c) : int
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L59{_pIstr}]]]
-_pOstr : std::ostream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L60{_pOstr}]]]
-_inEncoding : const TextEncoding & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L61{_inEncoding}]]]
-_outEncoding : const TextEncoding & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L62{_outEncoding}]]]
-_defaultChar : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L63{_defaultChar}]]]
-_buffer : unsigned char[4] [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L64{_buffer}]]]
-_sequenceLength : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L65{_sequenceLength}]]]
-_pos : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L66{_pos}]]]
-_errors : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L67{_errors}]]]
}
class "StreamConverterIOS" as C_0001747894738069545405
class C_0001747894738069545405 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L71{StreamConverterIOS}]] {
+StreamConverterIOS(std::istream & istr, const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+StreamConverterIOS(std::ostream & ostr, const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+~StreamConverterIOS() : void
+rdbuf() : StreamConverterBuf *
+errors() const : int
#_buf : StreamConverterBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L85{_buf}]]]
}
class "InputStreamConverter" as C_0000355277943770929846
class C_0000355277943770929846 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L89{InputStreamConverter}]] {
+InputStreamConverter(std::istream & istr, const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+~InputStreamConverter() : void
}
class "OutputStreamConverter" as C_0000146967754442816595
class C_0000146967754442816595 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamConverter.h#L107{OutputStreamConverter}]] {
+OutputStreamConverter(std::ostream & ostr, const TextEncoding & inEncoding, const TextEncoding & outEncoding, int defaultChar = '?') : void
+~OutputStreamConverter() : void
}
class "TeeStreamBuf" as C_0001208960305207411421
class C_0001208960305207411421 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L31{TeeStreamBuf}]] {
+TeeStreamBuf() : void
+TeeStreamBuf(std::istream & istr) : void
+TeeStreamBuf(std::ostream & ostr) : void
+~TeeStreamBuf() : void
+addStream(std::ostream & ostr) : void
#readFromDevice() : int
#writeToDevice(char c) : int
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L61{_pIstr}]]]
-_streams : TeeStreamBuf::StreamVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L62{_streams}]]]
}
class "TeeIOS" as C_0001227005240789555537
class C_0001227005240789555537 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L66{TeeIOS}]] {
+TeeIOS() : void
+TeeIOS(std::istream & istr) : void
+TeeIOS(std::ostream & ostr) : void
+~TeeIOS() : void
+addStream(std::ostream & ostr) : void
+rdbuf() : TeeStreamBuf *
#_buf : TeeStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L94{_buf}]]]
}
class "TeeInputStream" as C_0001703603721614878980
class C_0001703603721614878980 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L98{TeeInputStream}]] {
+TeeInputStream(std::istream & istr) : void
+~TeeInputStream() : void
}
class "TeeOutputStream" as C_0000206266465807076515
class C_0000206266465807076515 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/TeeStream.h#L112{TeeOutputStream}]] {
+TeeOutputStream() : void
+TeeOutputStream(std::ostream & ostr) : void
+~TeeOutputStream() : void
}
class "NestedDiagnosticContext" as C_0000043533095939514797
class C_0000043533095939514797 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L32{NestedDiagnosticContext}]] {
+NestedDiagnosticContext() : void
+NestedDiagnosticContext(const NestedDiagnosticContext & ctx) : void
+~NestedDiagnosticContext() : void
+operator=(const NestedDiagnosticContext & ctx) : NestedDiagnosticContext &
+push(const std::string & info) : void
+push(const std::string & info, int line, const char * filename) : void
+pop() : void
+depth() const : int
+toString() const : std::string
+dump(std::ostream & ostr) const : void
+dump(std::ostream & ostr, const std::string & delimiter) const : void
+clear() : void
{static} +current() : NestedDiagnosticContext &
-_stack : NestedDiagnosticContext::Stack [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L111{_stack}]]]
}
class "NestedDiagnosticContext::Context" as C_0002059762649752778308
class C_0002059762649752778308 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L103{NestedDiagnosticContext##Context}]] {
+info : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L105{info}]]]
+file : const char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L106{file}]]]
+line : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L107{line}]]]
}
class "NDCScope" as C_0000279426667371300365
class C_0000279426667371300365 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NestedDiagnosticContext.h#L118{NDCScope}]] {
+NDCScope(const std::string & info) : void
+NDCScope(const std::string & info, int line, const char * filename) : void
+~NDCScope() : void
}
class "SharedMemory" as C_0001699401474873869127
class C_0001699401474873869127 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory.h#L33{SharedMemory}]] {
+SharedMemory() : void
+SharedMemory(const std::string & name, std::size_t size, SharedMemory::AccessMode mode, const void * addrHint = 0, bool server = true) : void
+SharedMemory(const File & file, SharedMemory::AccessMode mode, const void * addrHint = 0) : void
+SharedMemory(const SharedMemory & other) : void
+~SharedMemory() : void
+operator=(const SharedMemory & other) : SharedMemory &
+swap(SharedMemory & other) : void
+begin() const : char *
+end() const : char *
-_pImpl : SharedMemoryImpl * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory.h#L96{_pImpl}]]]
}
enum "SharedMemory::AccessMode" as C_0000645094487015415570
enum C_0000645094487015415570 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory.h#L42{SharedMemory##AccessMode}]] {
AM_READ
AM_WRITE
}
class "SharedMemoryImpl" as C_0001186805946370749812
class C_0001186805946370749812 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L29{SharedMemoryImpl}]] {
+SharedMemoryImpl(const std::string & name, std::size_t size, SharedMemory::AccessMode mode, const void * addrHint, bool server) : void
+SharedMemoryImpl(const File & file, SharedMemory::AccessMode mode, const void * addrHint) : void
+begin() const : char *
+end() const : char *
#map(const void * addrHint) : void
#unmap() : void
#close() : void
#~SharedMemoryImpl() : void
-SharedMemoryImpl() : void
-SharedMemoryImpl(const SharedMemoryImpl & ) : void
-operator=(const SharedMemoryImpl & ) : SharedMemoryImpl &
-_size : std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L79{_size}]]]
-_fd : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L80{_fd}]]]
-_address : char * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L81{_address}]]]
-_access : SharedMemory::AccessMode [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L82{_access}]]]
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L83{_name}]]]
-_fileMapped : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L84{_fileMapped}]]]
-_server : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SharedMemory_POSIX.h#L85{_server}]]]
}
class "ThreadTarget" as C_0000643324715959020350
class C_0000643324715959020350 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadTarget.h#L28{ThreadTarget}]] {
+ThreadTarget(ThreadTarget::Callback method) : void
+ThreadTarget(const ThreadTarget & te) : void
+~ThreadTarget() : void
+operator=(const ThreadTarget & te) : ThreadTarget &
+run() : void
-ThreadTarget() : void
-_method : ThreadTarget::Callback [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/ThreadTarget.h#L71{_method}]]]
}
class "Token" as C_0000474207429020758890
class C_0000474207429020758890 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Token.h#L28{Token}]] {
+Token() : void
+~Token() : void
+start(char c, std::istream & istr) : bool
+finish(std::istream & istr) : void
+tokenClass() const : Token::Class
+tokenString() const : const std::string &
+asString() const : std::string
+asInteger64() const : Int64
+asUnsignedInteger64() const : UInt64
+asInteger() const : int
+asUnsignedInteger() const : unsigned int
+asFloat() const : double
+asChar() const : char
+is(Token::Class tokenClass) const : bool
-Token(const Token & ) : void
-operator=(const Token & ) : Token &
#_value : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Token.h#L110{_value}]]]
}
enum "Token::Class" as C_0002081627997438870943
enum C_0002081627997438870943 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Token.h#L33{Token##Class}]] {
IDENTIFIER_TOKEN
KEYWORD_TOKEN
SEPARATOR_TOKEN
OPERATOR_TOKEN
STRING_LITERAL_TOKEN
CHAR_LITERAL_TOKEN
INTEGER_LITERAL_TOKEN
LONG_INTEGER_LITERAL_TOKEN
FLOAT_LITERAL_TOKEN
DOUBLE_LITERAL_TOKEN
COMMENT_TOKEN
SPECIAL_COMMENT_TOKEN
PREPROCESSOR_TOKEN
WHITESPACE_TOKEN
EOF_TOKEN
INVALID_TOKEN
USER_TOKEN
}
class "InvalidToken" as C_0000010045059314243126
class C_0000010045059314243126 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Token.h#L118{InvalidToken}]] {
+InvalidToken() : void
+~InvalidToken() : void
+tokenClass() const : Token::Class
}
class "EOFToken" as C_0001601296300416379488
class C_0001601296300416379488 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Token.h#L130{EOFToken}]] {
+EOFToken() : void
+~EOFToken() : void
+tokenClass() const : Token::Class
}
class "WhitespaceToken" as C_0000596813156385297995
class C_0000596813156385297995 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Token.h#L141{WhitespaceToken}]] {
+WhitespaceToken() : void
+~WhitespaceToken() : void
+tokenClass() const : Token::Class
+start(char c, std::istream & istr) : bool
+finish(std::istream & istr) : void
}
class "StreamTokenizer" as C_0001651124971643906055
class C_0001651124971643906055 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L30{StreamTokenizer}]] {
+StreamTokenizer() : void
+StreamTokenizer(std::istream & istr) : void
+~StreamTokenizer() : void
+attachToStream(std::istream & istr) : void
+addToken(Token * pToken) : void
+addToken(Token * pToken, bool ignore) : void
+next() : const Token *
-_tokens : StreamTokenizer::TokenVec [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L87{_tokens}]]]
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L88{_pIstr}]]]
-_invalidToken : InvalidToken [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L89{_invalidToken}]]]
-_eofToken : EOFToken [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L90{_eofToken}]]]
}
class "StreamTokenizer::TokenInfo" as C_0001120677727623327250
class C_0001120677727623327250 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L79{StreamTokenizer##TokenInfo}]] {
+pToken : Token * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L81{pToken}]]]
+ignore : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/StreamTokenizer.h#L82{ignore}]]]
}
class "LogStreamBuf" as C_0001204112149714254436
class C_0001204112149714254436 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L30{LogStreamBuf}]] {
+LogStreamBuf(Logger & logger, Message::Priority priority, std::size_t bufferCapacity = 0) : void
+~LogStreamBuf() : void
+setPriority(Message::Priority priority) : void
+getPriority() const : Message::Priority
+logger() const : Logger &
+capacity() const : std::size_t
+reserve(std::size_t capacity) : void
-writeToDevice(char c) : int
-_logger : Logger & [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L65{_logger}]]]
-_priority : Message::Priority [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L66{_priority}]]]
-_message : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L67{_message}]]]
}
class "LogIOS" as C_0001315681032614379236
class C_0001315681032614379236 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L71{LogIOS}]] {
+LogIOS(Logger & logger, Message::Priority priority, std::size_t bufferCapacity = 0) : void
+~LogIOS() : void
+rdbuf() : LogStreamBuf *
#_buf : LogStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L83{_buf}]]]
}
class "LogStream" as C_0001955874322287869487
class C_0001955874322287869487 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L87{LogStream}]] {
+LogStream(Logger & logger, Message::Priority priority = Message::PRIO_INFORMATION, std::size_t bufferCapacity = DEFAULT_BUFFER_CAPACITY) : void
+LogStream(const std::string & loggerName, Message::Priority priority = Message::PRIO_INFORMATION, std::size_t bufferCapacity = DEFAULT_BUFFER_CAPACITY) : void
+~LogStream() : void
+fatal() : LogStream &
+fatal(const std::string & message) : LogStream &
+critical() : LogStream &
+critical(const std::string & message) : LogStream &
+error() : LogStream &
+error(const std::string & message) : LogStream &
+warning() : LogStream &
+warning(const std::string & message) : LogStream &
+notice() : LogStream &
+notice(const std::string & message) : LogStream &
+information() : LogStream &
+information(const std::string & message) : LogStream &
+debug() : LogStream &
+debug(const std::string & message) : LogStream &
+trace() : LogStream &
+trace(const std::string & message) : LogStream &
+priority(Message::Priority priority) : LogStream &
{static} +DEFAULT_BUFFER_CAPACITY : const std::size_t [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LogStream.h#L102{DEFAULT_BUFFER_CAPACITY}]]]
}
class "NamedMutexImpl" as C_0000205490546169098233
class C_0000205490546169098233 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedMutex_UNIX.h#L32{NamedMutexImpl}]] {
#NamedMutexImpl(const std::string & name) : void
#~NamedMutexImpl() : void
#lockImpl() : void
#tryLockImpl() : bool
#unlockImpl() : void
-getFileName() : std::string
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedMutex_UNIX.h#L44{_name}]]]
-_semid : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedMutex_UNIX.h#L48{_semid}]]]
-_owned : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedMutex_UNIX.h#L49{_owned}]]]
}
class "NamedMutex" as C_0000694428926822675449
class C_0000694428926822675449 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/NamedMutex.h#L37{NamedMutex}]] {
+NamedMutex(const std::string & name) : void
+~NamedMutex() : void
+lock() : void
+tryLock() : bool
+unlock() : void
-NamedMutex() : void
-NamedMutex(const NamedMutex & ) : void
-operator=(const NamedMutex & ) : NamedMutex &
}
abstract "AbstractInstantiator<Base>" as C_0000815848271746101983
abstract C_0000815848271746101983 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Instantiator.h#L28{AbstractInstantiator}]] {
+AbstractInstantiator<Base>() : void
+~AbstractInstantiator<Base>() : void
{abstract} +createInstance() const = 0 : Base *
-AbstractInstantiator<Base>(const AbstractInstantiator<Base> & ) : void
-operator=(const AbstractInstantiator<Base> & ) : AbstractInstantiator<Base> &
}
class "Instantiator<C,Base>" as C_0000431411468285635033
class C_0000431411468285635033 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/Instantiator.h#L53{Instantiator}]] {
+Instantiator<C, Base>() : void
+~Instantiator<C, Base>() : void
+createInstance() const : Base *
}
class "DynamicFactory<Base>" as C_0000246820176976328048
class C_0000246820176976328048 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DynamicFactory.h#L33{DynamicFactory}]] {
+DynamicFactory<Base>() : void
+~DynamicFactory<Base>() : void
+createInstance(const std::string & className) const : Base *
+registerClass(const std::string & className, DynamicFactory::AbstractFactory * pAbstractFactory) : void
+unregisterClass(const std::string & className) : void
+isClass(const std::string & className) const : bool
-DynamicFactory<Base>(const DynamicFactory<Base> & ) : void
-operator=(const DynamicFactory<Base> & ) : DynamicFactory<Base> &
+registerClass<C>(const std::string & className) : void
-_map : DynamicFactory::FactoryMap [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DynamicFactory.h#L129{_map}]]]
-_mutex : FastMutex [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/DynamicFactory.h#L130{_mutex}]]]
}
class "AbstractInstantiator<Channel>" as C_0001272757882626050053
class C_0001272757882626050053 {
}
class "AbstractInstantiator<Formatter>" as C_0001281872759224917001
class C_0001281872759224917001 {
}
class "DynamicFactory<Channel>" as C_0001905871330693439078
class C_0001905871330693439078 {
}
class "DynamicFactory<Formatter>" as C_0000514397411740592781
class C_0000514397411740592781 {
}
class "LoggingFactory" as C_0001504934680944362532
class C_0001504934680944362532 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingFactory.h#L30{LoggingFactory}]] {
+LoggingFactory() : void
+~LoggingFactory() : void
+registerChannelClass(const std::string & className, LoggingFactory::ChannelInstantiator * pFactory) : void
+registerFormatterClass(const std::string & className, LoggingFactory::FormatterFactory * pFactory) : void
+createChannel(const std::string & className) const : Channel::Ptr
+createFormatter(const std::string & className) const : Formatter::Ptr
{static} +defaultFactory() : LoggingFactory &
-registerBuiltins() : void
-_channelFactory : DynamicFactory<Channel> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingFactory.h#L84{_channelFactory}]]]
-_formatterFactory : DynamicFactory<Formatter> [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/LoggingFactory.h#L85{_formatterFactory}]]]
}
class "SyslogChannel" as C_0001573014150295245881
class C_0001573014150295245881 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L28{SyslogChannel}]] {
+SyslogChannel() : void
+SyslogChannel(const std::string & name, int options = SYSLOG_CONS, int facility = SYSLOG_USER) : void
+open() : void
+close() : void
+log(const Message & msg) : void
+setProperty(const std::string & name, const std::string & value) : void
+getProperty(const std::string & name) const : std::string
#~SyslogChannel() : void
{static} #getPrio(const Message & msg) : int
-_name : std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L101{_name}]]]
-_options : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L102{_options}]]]
-_facility : int [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L103{_facility}]]]
-_open : bool [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L104{_open}]]]
{static} +PROP_NAME : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L92{PROP_NAME}]]]
{static} +PROP_FACILITY : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L93{PROP_FACILITY}]]]
{static} +PROP_OPTIONS : const std::string [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L94{PROP_OPTIONS}]]]
}
enum "SyslogChannel::Option" as C_0000891241898355454953
enum C_0000891241898355454953 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L34{SyslogChannel##Option}]] {
SYSLOG_PID
SYSLOG_CONS
SYSLOG_NDELAY
SYSLOG_PERROR
}
enum "SyslogChannel::Facility" as C_0000593181339898151685
enum C_0000593181339898151685 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/SyslogChannel.h#L42{SyslogChannel##Facility}]] {
SYSLOG_KERN
SYSLOG_USER
SYSLOG_MAIL
SYSLOG_DAEMON
SYSLOG_AUTH
SYSLOG_SYSLOG
SYSLOG_LPR
SYSLOG_NEWS
SYSLOG_UUCP
SYSLOG_CRON
SYSLOG_AUTHPRIV
SYSLOG_FTP
SYSLOG_LOCAL0
SYSLOG_LOCAL1
SYSLOG_LOCAL2
SYSLOG_LOCAL3
SYSLOG_LOCAL4
SYSLOG_LOCAL5
SYSLOG_LOCAL6
SYSLOG_LOCAL7
}
class "CountingStreamBuf" as C_0000671871777879627559
class C_0000671871777879627559 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L30{CountingStreamBuf}]] {
+CountingStreamBuf() : void
+CountingStreamBuf(std::istream & istr) : void
+CountingStreamBuf(std::ostream & ostr) : void
+~CountingStreamBuf() : void
+chars() const : std::streamsize
+lines() const : std::streamsize
+pos() const : std::streamsize
+reset() : void
+setCurrentLineNumber(std::streamsize line) : void
+getCurrentLineNumber() const : std::streamsize
+addChars(std::streamsize chars) : void
+addLines(std::streamsize lines) : void
+addPos(std::streamsize pos) : void
#readFromDevice() : int
#writeToDevice(char c) : int
-_pIstr : std::istream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L84{_pIstr}]]]
-_pOstr : std::ostream * [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L85{_pOstr}]]]
-_chars : std::streamsize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L86{_chars}]]]
-_lines : std::streamsize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L87{_lines}]]]
-_pos : std::streamsize [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L88{_pos}]]]
}
class "CountingIOS" as C_0001957613811903324494
class C_0001957613811903324494 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L92{CountingIOS}]] {
+CountingIOS() : void
+CountingIOS(std::istream & istr) : void
+CountingIOS(std::ostream & ostr) : void
+~CountingIOS() : void
+chars() const : std::streamsize
+lines() const : std::streamsize
+pos() const : std::streamsize
+reset() : void
+setCurrentLineNumber(std::streamsize line) : void
+getCurrentLineNumber() const : std::streamsize
+addChars(std::streamsize chars) : void
+addLines(std::streamsize lines) : void
+addPos(std::streamsize pos) : void
+rdbuf() : CountingStreamBuf *
#_buf : CountingStreamBuf [[[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L147{_buf}]]]
}
class "CountingInputStream" as C_0001672497449586052306
class C_0001672497449586052306 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L151{CountingInputStream}]] {
+CountingInputStream(std::istream & istr) : void
+~CountingInputStream() : void
}
class "CountingOutputStream" as C_0001480852717883232933
class C_0001480852717883232933 [[https://github.com/pocoproject/poco/blob/9fc117d585e552ae3327b56900df9cc40653d574/Foundation/include/Poco/CountingStream.h#L166{CountingOutputStream}]] {
+CountingOutputStream() : void
+CountingOutputStream(std::ostream & ostr) : void
+~CountingOutputStream() : void
}
C_0001070281089206260370 --> C_0001070281089206260370 : -_pNested
C_0002253112329321174604 ..> C_0001070281089206260370
C_0001070281089206260370 <|-- C_0002253112329321174604
C_0000369634619393000163 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0000369634619393000163
C_0000603436052006048309 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0000603436052006048309
C_0000259348806633027081 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0000259348806633027081
C_0002196787985473942307 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0002196787985473942307
C_0000804372414630097293 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0000804372414630097293
C_0001077375683830921859 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0001077375683830921859
C_0000312200462047135904 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0000312200462047135904
C_0001149866676415928365 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0001149866676415928365
C_0001317874868527159358 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0001317874868527159358
C_0002166664061518458340 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0002166664061518458340
C_0000706618193686751111 ..> C_0001070281089206260370
C_0002253112329321174604 <|-- C_0000706618193686751111
C_0001301737730590463641 ..> C_0001070281089206260370
C_0001070281089206260370 <|-- C_0001301737730590463641
C_0001982521536317583068 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001982521536317583068
C_0001995191218173067844 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001995191218173067844
C_0000114987681251469531 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0000114987681251469531
C_0001353307009015576545 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001353307009015576545
C_0001382831319965010174 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001382831319965010174
C_0000938015591308671509 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0000938015591308671509
C_0000336898398178758676 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0000336898398178758676
C_0001281410252839205590 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001281410252839205590
C_0000633974864404558861 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0000633974864404558861
C_0001034853746252959865 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001034853746252959865
C_0000341228134218214254 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0000341228134218214254
C_0001133032318917766061 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001133032318917766061
C_0001527419901104954014 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001527419901104954014
C_0000995213146074472368 ..> C_0001070281089206260370
C_0001527419901104954014 <|-- C_0000995213146074472368
C_0000256423543056697251 ..> C_0001070281089206260370
C_0001527419901104954014 <|-- C_0000256423543056697251
C_0001433182852057747259 ..> C_0001070281089206260370
C_0001527419901104954014 <|-- C_0001433182852057747259
C_0000275335632689246562 ..> C_0001070281089206260370
C_0000256423543056697251 <|-- C_0000275335632689246562
C_0001662724143746653776 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001662724143746653776
C_0002140076054618695059 ..> C_0001070281089206260370
C_0001662724143746653776 <|-- C_0002140076054618695059
C_0001548248602662425253 ..> C_0001070281089206260370
C_0001662724143746653776 <|-- C_0001548248602662425253
C_0000493308447352789343 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0000493308447352789343
C_0001103010587203413666 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0001103010587203413666
C_0000702557745299095895 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0000702557745299095895
C_0000769837579431954161 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0000769837579431954161
C_0002153092292534409707 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0002153092292534409707
C_0001946023510605325600 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0001946023510605325600
C_0000330510123098801279 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0000330510123098801279
C_0000808441741908920803 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0000808441741908920803
C_0001769596158265295803 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0001769596158265295803
C_0001822784252292133827 ..> C_0001070281089206260370
C_0001548248602662425253 <|-- C_0001822784252292133827
C_0001684801065288788447 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001684801065288788447
C_0000568173543111799698 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0000568173543111799698
C_0002070464368740303928 ..> C_0001070281089206260370
C_0000256423543056697251 <|-- C_0002070464368740303928
C_0001716107766659869464 ..> C_0001070281089206260370
C_0001070281089206260370 <|-- C_0001716107766659869464
C_0001848154526537846383 ..> C_0001070281089206260370
C_0001301737730590463641 <|-- C_0001848154526537846383
C_0000845507381287174824 o-- C_0001621935907318778812 : -_cnt
C_0000569464036247977069 ..> C_0001388030794032533071
C_0000569464036247977069 ..|> C_0000501983570143558478
C_0001388030794032533071 ..> C_0000569464036247977069
C_0001388030794032533071 ..> C_0000857558409748687473
C_0000263478315192730004 --+ C_0001453117489077161826
C_0001388030794032533071 <|-- C_0000556610306589726120
C_0001388030794032533071 <|-- C_0000812281503290278213
C_0001388030794032533071 <|-- C_0001182021136873428883
C_0001388030794032533071 <|-- C_0000290074446143794595
C_0001388030794032533071 <|-- C_0001895604938853731380
C_0000266371265002709855 --+ C_0001895604938853731380
C_0001388030794032533071 <|-- C_0000400324972179862509
C_0000832415664923184117 --+ C_0000400324972179862509
C_0001388030794032533071 <|-- C_0000762129351852459476
C_0001388030794032533071 <|-- C_0000426249467656158832
C_0001388030794032533071 <|-- C_0000804403418642621726
C_0001388030794032533071 <|-- C_0002157842411017736270
C_0000665822436344816637 <|-- C_0000839264177954968318
C_0000811555575228215811 ..> C_0000839264177954968318
C_0000811555575228215811 --> C_0000839264177954968318 : -_rwl
C_0000061927783510467004 ..> C_0000839264177954968318
C_0000811555575228215811 <|-- C_0000061927783510467004
C_0001977200165855809713 ..> C_0000839264177954968318
C_0000811555575228215811 <|-- C_0001977200165855809713
C_0001753661655610731928 ..> C_0001507935607211469129
C_0000615089044328898624 <|-- C_0001912575929021062492
C_0000615089044328898624 <|-- C_0000317758303947094820
C_0001912575929021062492 <|-- C_0001208849321300700705
C_0000715608830579158836 o-- C_0001208849321300700705 : -_m
C_0000857558409748687473 ..> C_0001388030794032533071
C_0000857558409748687473 ..> C_0000569464036247977069
C_0000857558409748687473 o-- C_0000569464036247977069 : -_encodings
C_0000857558409748687473 o-- C_0000839264177954968318 : -_lock
C_0000129418764681780607 --+ C_0000103259944175666045
C_0002094379987949117379 --+ C_0000103259944175666045
C_0001998673595727325479 --+ C_0000103259944175666045
C_0001714191664412273273 --+ C_0000103259944175666045
C_0001113743326023075132 o-- C_0001621935907318778812 : -_counter
C_0001139956284459832268 ..> C_0002204584463250199617
C_0001200126201296015565 <|-- C_0001139956284459832268
C_0001113743326023075132 <|-- C_0001139956284459832268
C_0000482295528646993725 ..> C_0002204584463250199617
C_0000482295528646993725 --> C_0001208849321300700705 : -_mutex
C_0001139956284459832268 <|-- C_0000482295528646993725
C_0001962666083335112002 ..> C_0002204584463250199617
C_0001962666083335112002 --> C_0001208849321300700705 : -_mutex
C_0001139956284459832268 <|-- C_0001962666083335112002
C_0001449093476097162097 --+ C_0001962666083335112002
C_0002204584463250199617 ..> C_0001753661655610731928
C_0002204584463250199617 o-- C_0001753661655610731928 : -_time
C_0002092346162041059597 --+ C_0002204584463250199617
C_0001377878747410067940 <|-- C_0001151966828164333711
C_0000088281926639797410 --+ C_0001151966828164333711
C_0001335620280343073859 ..> C_0000778337630937443992
C_0001335620280343073859 ..> C_0000744659040841141778
C_0001335620280343073859 --> C_0000744659040841141778 : -_pOwner
C_0001335620280343073859 o-- C_0001151966828164333711 : -_cancelEvent
C_0001335620280343073859 o-- C_0001208849321300700705 : -_mutex
C_0001335620280343073859 <.. C_0000744659040841141778 : +<<friend>>
C_0001965421471606022753 <|-- C_0001335620280343073859
C_0001113743326023075132 <|-- C_0001335620280343073859
C_0000830455689999420114 --+ C_0001335620280343073859
C_0001113743326023075132 <|-- C_0000778337630937443992
C_0001854365760272980797 ..> C_0000778337630937443992
C_0001854365760272980797 ..|> C_0001565453218644542614
C_0000786021341029181962 ..> C_0000190609818484253828
C_0000786021341029181962 ..|> C_0000501983570143558478
C_0001984243994396754009 ..> C_0000190609818484253828
C_0001984243994396754009 ..> C_0000778337630937443992
C_0001984243994396754009 ..> C_0001854365760272980797
C_0001984243994396754009 ..> C_0000786021341029181962
C_0001984243994396754009 o-- C_0000786021341029181962 : -_observers
C_0001984243994396754009 o-- C_0000317758303947094820 : -_mutex
C_0000712991995608400945 ..> C_0001335620280343073859
C_0000712991995608400945 ..|> C_0001565453218644542614
C_0000744659040841141778 ..> C_0000578799755200939663
C_0000744659040841141778 ..> C_0001335620280343073859
C_0000744659040841141778 ..> C_0000190609818484253828
C_0000744659040841141778 ..> C_0000778337630937443992
C_0000744659040841141778 ..> C_0001854365760272980797
C_0000744659040841141778 ..> C_0001070281089206260370
C_0000744659040841141778 --> C_0000578799755200939663 : -_threadPool
C_0000744659040841141778 ..> C_0000712991995608400945
C_0000744659040841141778 o-- C_0000712991995608400945 : -_taskList
C_0000744659040841141778 o-- C_0001753661655610731928 : -_lastProgressNotification
C_0000744659040841141778 o-- C_0001984243994396754009 : -_nc
C_0000744659040841141778 o-- C_0001208849321300700705 : -_mutex
C_0000744659040841141778 <.. C_0001335620280343073859 : +<<friend>>
C_0001400049298759004605 ..> C_0001335620280343073859
C_0001400049298759004605 --> C_0001335620280343073859 : -_pTask
C_0000778337630937443992 <|-- C_0001400049298759004605
C_0001483563052275498022 ..> C_0001335620280343073859
C_0001400049298759004605 <|-- C_0001483563052275498022
C_0001594642119528241436 ..> C_0001335620280343073859
C_0001400049298759004605 <|-- C_0001594642119528241436
C_0001432284764107968376 ..> C_0001335620280343073859
C_0001400049298759004605 <|-- C_0001432284764107968376
C_0000063880861976262016 ..> C_0001335620280343073859
C_0000063880861976262016 ..> C_0001070281089206260370
C_0000063880861976262016 --> C_0001070281089206260370 : -_pException
C_0001400049298759004605 <|-- C_0000063880861976262016
C_0001242072285346898450 ..> C_0001335620280343073859
C_0001400049298759004605 <|-- C_0001242072285346898450
C_0000779007367107805186 ..> C_0001335620280343073859
C_0001400049298759004605 <|-- C_0000779007367107805186
C_0000001537846473447322 <.. C_0001127777098533119090 : +<<friend>>
C_0002012636548536719285 --+ C_0000001537846473447322
C_0000538007128095799409 ..> C_0001965421471606022753
C_0000538007128095799409 ..|> C_0000501983570143558478
C_0000128368451169465650 ..|> C_0001565453218644542614
C_0001127777098533119090 ..> C_0001965421471606022753
C_0001127777098533119090 ..> C_0000538007128095799409
C_0001127777098533119090 o-- C_0000128368451169465650 : -_pData
C_0001127777098533119090 <.. C_0000001537846473447322 : +<<friend>>
C_0001935176925135100095 --+ C_0001127777098533119090
C_0000860745802377526704 --+ C_0001127777098533119090
C_0000551965432486681823 --+ C_0001127777098533119090
C_0000551965432486681823 ..> C_0001127777098533119090
C_0001237314582236222701 --+ C_0001127777098533119090
C_0001237314582236222701 o-- C_0000538007128095799409 : +pRunnableTarget
C_0001237314582236222701 o-- C_0001151966828164333711 : +done
C_0001237314582236222701 o-- C_0001208849321300700705 : +mutex
C_0001113743326023075132 <|-- C_0001237314582236222701
C_0001168023544756617055 ..> C_0001965421471606022753
C_0001168023544756617055 ..> C_0000538007128095799409
C_0001168023544756617055 ..> C_0002149906927391810644
C_0001168023544756617055 --> C_0002149906927391810644 : -_pTLS
C_0001168023544756617055 o-- C_0001151966828164333711 : -_event
C_0001168023544756617055 o-- C_0001208849321300700705 : -_mutex
C_0001168023544756617055 <.. C_0001145923852811877192 : +<<friend>>
C_0001168023544756617055 <.. C_0002149906927391810644 : +<<friend>>
C_0001127777098533119090 <|-- C_0001168023544756617055
C_0001873375271791245391 --+ C_0001168023544756617055
C_0000125553801282412124 --+ C_0001168023544756617055
C_0000850823773088829116 --+ C_0001168023544756617055
C_0001965421471606022753 <|-- C_0000850823773088829116
C_0000578799755200939663 ..> C_0001965421471606022753
C_0000578799755200939663 ..> C_0001145923852811877192
C_0000578799755200939663 --> C_0001145923852811877192 : -_threads
C_0000578799755200939663 o-- C_0001208849321300700705 : -_mutex
C_0000190609818484253828 ..> C_0000778337630937443992
C_0001145923852811877192 ..> C_0001965421471606022753
C_0001145923852811877192 --> C_0001965421471606022753 : -_pTarget
C_0001145923852811877192 o-- C_0001168023544756617055 : -_thread
C_0001145923852811877192 o-- C_0001151966828164333711 : -_targetReady
C_0001145923852811877192 o-- C_0001151966828164333711 : -_targetCompleted
C_0001145923852811877192 o-- C_0001151966828164333711 : -_started
C_0001145923852811877192 o-- C_0001208849321300700705 : -_mutex
C_0001965421471606022753 <|-- C_0001145923852811877192
C_0002149906927391810644 ..> C_0000549939075292803739
C_0002149906927391810644 --> C_0000549939075292803739 : -_map
C_0002149906927391810644 <.. C_0001168023544756617055 : +<<friend>>
C_0000642651005064669200 --+ C_0000689703710541275447
C_0001856495841924249909 ..|> C_0001176615863512394763
C_0000479344489870899478 ..> C_0001856495841924249909
C_0000479344489870899478 o-- C_0001856495841924249909 : #_buf
C_0000479344489870899478 <|-- C_0000964920602530551508
C_0000479344489870899478 <|-- C_0000532327502470897545
C_0000756348071772279130 ..|> C_0001300577133371038212
C_0001802836422927741554 ..|> C_0001300577133371038212
C_0001733588137038710370 ..|> C_0000209357500568669947
C_0001848875410676016993 ..|> C_0000209357500568669947
C_0001081431353318555504 ..|> C_0000209357500568669947
C_0001234983749361663515 ..|> C_0002101157559588427005
C_0001149575210938021352 ..|> C_0002101157559588427005
C_0000093390567346172390 ..|> C_0002101157559588427005
C_0000820091630223006238 ..> C_0000500012695506990838
C_0000820091630223006238 ..> C_0001994141232353623230
C_0000820091630223006238 ..> C_0002272281318037047828
C_0000820091630223006238 ..> C_0001753661655610731928
C_0000820091630223006238 ..> C_0000182374977928068670
C_0000820091630223006238 ..> C_0001986079331790138471
C_0001112867090784569162 ..> C_0000820091630223006238
C_0001112867090784569162 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001112867090784569162
C_0002149165824584484566 ..|> C_0001112867090784569162
C_0002149165824584484566 ..> C_0001986079331790138471
C_0002149165824584484566 ..> C_0000820091630223006238
C_0002149165824584484566 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0002149165824584484566
C_0000198808093629002393 ..|> C_0001112867090784569162
C_0000198808093629002393 ..> C_0001986079331790138471
C_0000198808093629002393 ..> C_0000820091630223006238
C_0000198808093629002393 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000198808093629002393
C_0000976768452323437983 ..|> C_0001112867090784569162
C_0000976768452323437983 ..> C_0000820091630223006238
C_0000976768452323437983 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000976768452323437983
C_0001804431617899042426 ..|> C_0001112867090784569162
C_0001804431617899042426 ..> C_0001994141232353623230
C_0001804431617899042426 ..> C_0002272281318037047828
C_0001804431617899042426 ..> C_0001753661655610731928
C_0001804431617899042426 ..> C_0000820091630223006238
C_0001804431617899042426 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001804431617899042426
C_0001832009513687525374 ..|> C_0001112867090784569162
C_0001832009513687525374 ..> C_0000820091630223006238
C_0001832009513687525374 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001832009513687525374
C_0000572186414558919480 ..|> C_0001112867090784569162
C_0000572186414558919480 ..> C_0000820091630223006238
C_0000572186414558919480 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000572186414558919480
C_0000166253842255815357 ..|> C_0001112867090784569162
C_0000166253842255815357 ..> C_0000820091630223006238
C_0000166253842255815357 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000166253842255815357
C_0001459401574844645109 ..|> C_0001112867090784569162
C_0001459401574844645109 ..> C_0001994141232353623230
C_0001459401574844645109 ..> C_0002272281318037047828
C_0001459401574844645109 ..> C_0001753661655610731928
C_0001459401574844645109 ..> C_0000820091630223006238
C_0001459401574844645109 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001459401574844645109
C_0000599279109574326060 ..|> C_0001112867090784569162
C_0000599279109574326060 ..> C_0000820091630223006238
C_0000599279109574326060 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000599279109574326060
C_0000384619052225252533 ..|> C_0001112867090784569162
C_0000384619052225252533 ..> C_0000820091630223006238
C_0000384619052225252533 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000384619052225252533
C_0002242257052791493112 ..|> C_0001112867090784569162
C_0002242257052791493112 ..> C_0000820091630223006238
C_0002242257052791493112 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0002242257052791493112
C_0001942181379759217898 ..|> C_0001112867090784569162
C_0001942181379759217898 ..> C_0000820091630223006238
C_0001942181379759217898 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001942181379759217898
C_0002291903337356664508 ..|> C_0001112867090784569162
C_0002291903337356664508 ..> C_0001986079331790138471
C_0002291903337356664508 ..> C_0001994141232353623230
C_0002291903337356664508 ..> C_0002272281318037047828
C_0002291903337356664508 ..> C_0001753661655610731928
C_0002291903337356664508 ..> C_0000182374977928068670
C_0002291903337356664508 ..> C_0000820091630223006238
C_0002291903337356664508 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0002291903337356664508
C_0001370368867041199969 ..|> C_0001112867090784569162
C_0001370368867041199969 ..> C_0001986079331790138471
C_0001370368867041199969 ..> C_0001994141232353623230
C_0001370368867041199969 ..> C_0002272281318037047828
C_0001370368867041199969 ..> C_0001753661655610731928
C_0001370368867041199969 ..> C_0000820091630223006238
C_0001370368867041199969 ..> C_0000500012695506990838
C_0001370368867041199969 o-- C_0001986079331790138471 : -_val
C_0000820091630223006238 <|-- C_0001370368867041199969
C_0001646173285346905617 ..|> C_0001112867090784569162
C_0001646173285346905617 ..> C_0000820091630223006238
C_0001646173285346905617 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001646173285346905617
C_0001583654034047392858 ..|> C_0001112867090784569162
C_0001583654034047392858 ..> C_0000820091630223006238
C_0001583654034047392858 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001583654034047392858
C_0000910307965681926894 ..|> C_0001112867090784569162
C_0000910307965681926894 ..> C_0000820091630223006238
C_0000910307965681926894 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000910307965681926894
C_0000355772964752054032 ..|> C_0001112867090784569162
C_0000355772964752054032 ..> C_0000820091630223006238
C_0000355772964752054032 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0000355772964752054032
C_0001350084679139174053 ..|> C_0001112867090784569162
C_0001350084679139174053 ..> C_0000820091630223006238
C_0001350084679139174053 ..> C_0000500012695506990838
C_0000820091630223006238 <|-- C_0001350084679139174053
C_0000699000175415913074 ..> C_0001994141232353623230
C_0000699000175415913074 ..|> C_0001112867090784569162
C_0000699000175415913074 ..> C_0002272281318037047828
C_0000699000175415913074 ..> C_0001753661655610731928
C_0000699000175415913074 ..> C_0000820091630223006238
C_0000699000175415913074 ..> C_0000500012695506990838
C_0000699000175415913074 o-- C_0001994141232353623230 : -_val
C_0000820091630223006238 <|-- C_0000699000175415913074
C_0001850771625416044357 ..> C_0002272281318037047828
C_0001850771625416044357 ..|> C_0001112867090784569162
C_0001850771625416044357 ..> C_0001994141232353623230
C_0001850771625416044357 ..> C_0001753661655610731928
C_0001850771625416044357 ..> C_0000820091630223006238
C_0001850771625416044357 ..> C_0000500012695506990838
C_0001850771625416044357 o-- C_0002272281318037047828 : -_val
C_0000820091630223006238 <|-- C_0001850771625416044357
C_0001458511670125196521 ..> C_0001753661655610731928
C_0001458511670125196521 ..|> C_0001112867090784569162
C_0001458511670125196521 ..> C_0001994141232353623230
C_0001458511670125196521 ..> C_0002272281318037047828
C_0001458511670125196521 ..> C_0000820091630223006238
C_0001458511670125196521 ..> C_0000500012695506990838
C_0001458511670125196521 o-- C_0001753661655610731928 : -_val
C_0000820091630223006238 <|-- C_0001458511670125196521
C_0001286239480653274581 ..> C_0000182374977928068670
C_0001286239480653274581 ..|> C_0001112867090784569162
C_0001286239480653274581 ..> C_0000820091630223006238
C_0001286239480653274581 ..> C_0000500012695506990838
C_0001286239480653274581 o-- C_0000182374977928068670 : -_val
C_0000820091630223006238 <|-- C_0001286239480653274581
C_0002237184725500898553 ..> C_0001827593751126946500
C_0002237184725500898553 --> C_0001827593751126946500 : -_pVar
C_0002237184725500898553 <.. C_0001827593751126946500 : +<<friend>>
C_0001827593751126946500 ..> C_0002237184725500898553
C_0001827593751126946500 ..> C_0000820091630223006238
C_0001827593751126946500 o-- C_0000500012695506990838 : -_placeholder
C_0000562679976742134348 ..> C_0001827593751126946500
C_0000527346272489458655 ..> C_0001827593751126946500
C_0000527346272489458655 ..|> C_0000562679976742134348
C_0000005959213735263804 ..> C_0001827593751126946500
C_0000005959213735263804 ..|> C_0000562679976742134348
C_0000005959213735263804 ..|> C_0001112867090784569162
C_0000005959213735263804 ..> C_0000527346272489458655
C_0000005959213735263804 ..> C_0001994141232353623230
C_0000005959213735263804 ..> C_0002272281318037047828
C_0000005959213735263804 ..> C_0001753661655610731928
C_0000005959213735263804 ..> C_0000820091630223006238
C_0000005959213735263804 ..> C_0000500012695506990838
C_0000005959213735263804 o-- C_0000527346272489458655 : -_val
C_0000820091630223006238 <|-- C_0000005959213735263804
C_0000234522456695339728 ..> C_0001827593751126946500
C_0000234522456695339728 ..|> C_0000562679976742134348
C_0001212087958231445051 ..|> C_0000562679976742134348
C_0000337724165693095141 ..> C_0001827593751126946500
C_0000337724165693095141 ..|> C_0000562679976742134348
C_0000337724165693095141 ..|> C_0001112867090784569162
C_0000337724165693095141 ..> C_0001212087958231445051
C_0000337724165693095141 ..> C_0001994141232353623230
C_0000337724165693095141 ..> C_0002272281318037047828
C_0000337724165693095141 ..> C_0001753661655610731928
C_0000337724165693095141 ..> C_0000820091630223006238
C_0000337724165693095141 ..> C_0000500012695506990838
C_0000337724165693095141 o-- C_0001212087958231445051 : -_val
C_0000820091630223006238 <|-- C_0000337724165693095141
C_0001994773360593884629 ..> C_0001827593751126946500
C_0001994773360593884629 ..|> C_0000562679976742134348
C_0000285075638289121010 ..|> C_0000562679976742134348
C_0000919753061206343041 ..> C_0001827593751126946500
C_0000919753061206343041 ..|> C_0000562679976742134348
C_0000919753061206343041 ..|> C_0001112867090784569162
C_0000919753061206343041 ..> C_0000285075638289121010
C_0000919753061206343041 ..> C_0001994141232353623230
C_0000919753061206343041 ..> C_0002272281318037047828
C_0000919753061206343041 ..> C_0001753661655610731928
C_0000919753061206343041 ..> C_0000820091630223006238
C_0000919753061206343041 ..> C_0000500012695506990838
C_0000919753061206343041 o-- C_0000285075638289121010 : -_val
C_0000820091630223006238 <|-- C_0000919753061206343041
C_0000976793773745790650 ..> C_0001827593751126946500
C_0000976793773745790650 ..|> C_0000562679976742134348
C_0001731737538524969332 ..|> C_0000562679976742134348
C_0000988703063712340439 ..> C_0001827593751126946500
C_0000988703063712340439 ..|> C_0000562679976742134348
C_0000988703063712340439 ..|> C_0001112867090784569162
C_0000988703063712340439 ..> C_0001731737538524969332
C_0000988703063712340439 ..> C_0001994141232353623230
C_0000988703063712340439 ..> C_0002272281318037047828
C_0000988703063712340439 ..> C_0001753661655610731928
C_0000988703063712340439 ..> C_0000820091630223006238
C_0000988703063712340439 ..> C_0000500012695506990838
C_0000988703063712340439 o-- C_0001731737538524969332 : -_val
C_0000820091630223006238 <|-- C_0000988703063712340439
C_0000440051082624874314 --+ C_0001958374334460218080
C_0001447256287115683404 ..|> C_0001958374334460218080
C_0001404196069959735746 o-- C_0001447256287115683404 : -_valueHolder
C_0000985168791340319082 --+ C_0001404196069959735746
C_0000985168791340319082 ..> C_0001447256287115683404
C_0001266613636105806081 --+ C_0001404196069959735746
C_0001266613636105806081 ..> C_0001447256287115683404
C_0001755150906829178418 --+ C_0000509908291985632513
C_0001071291111989080379 --+ C_0000509908291985632513
C_0000509908291985632513 <|-- C_0000817876163529179707
C_0002246087043295788392 --+ C_0000817876163529179707
C_0000716816264121091887 --+ C_0000817876163529179707
C_0000397186824031498890 ..|> C_0001524954285563249481
C_0001710134571940765707 ..|> C_0001524954285563249481
C_0000101750212171724742 --+ C_0001256897499216409096
C_0001994141232353623230 ..> C_0001753661655610731928
C_0001994141232353623230 ..> C_0001507935607211469129
C_0001770012028735697047 --+ C_0001994141232353623230
C_0000098845606893434356 --+ C_0001994141232353623230
C_0002272281318037047828 ..> C_0001994141232353623230
C_0002272281318037047828 ..> C_0001753661655610731928
C_0002272281318037047828 ..> C_0001507935607211469129
C_0002272281318037047828 o-- C_0001994141232353623230 : -_dateTime
C_0002272281318037047828 <.. C_0002221123434653717605 : +<<friend>>
C_0002272281318037047828 <.. C_0000950060688741605253 : +<<friend>>
C_0000950060688741605253 ..> C_0001753661655610731928
C_0000950060688741605253 ..> C_0001994141232353623230
C_0000950060688741605253 ..> C_0002272281318037047828
C_0000950060688741605253 ..> C_0001507935607211469129
C_0002221123434653717605 ..> C_0001994141232353623230
C_0001547808404795034894 ..> C_0001986079331790138471
C_0000182374977928068670 <.. C_0001812645041580479861 : +<<friend>>
C_0002008043450462758320 --+ C_0000182374977928068670
C_0000500012695506990838 ..> C_0000820091630223006238
C_0000500012695506990838 ..|> C_0001958374334460218080
C_0001922854122078707353 ..> C_0001388030794032533071
C_0001922854122078707353 --> C_0000907772260287610600 : -_pTextConverter
C_0000835717827102234781 --+ C_0001922854122078707353
C_0000116394379955371835 ..> C_0001365619523926057599
C_0000116394379955371835 ..> C_0001388030794032533071
C_0000116394379955371835 ..> C_0000964920602530551508
C_0000116394379955371835 --> C_0001365619523926057599 : -_data
C_0000116394379955371835 o-- C_0000964920602530551508 : -_istr
C_0001922854122078707353 <|-- C_0000116394379955371835
C_0000907772260287610600 ..> C_0001388030794032533071
C_0000907772260287610600 --> C_0001388030794032533071 : -_inEncoding
C_0000907772260287610600 --> C_0001388030794032533071 : -_outEncoding
C_0000634730083395501742 --+ C_0000783418973520198838
C_0000061206875441959656 ..> C_0000783418973520198838
C_0000061206875441959656 o-- C_0000783418973520198838 : #_buf
C_0000061206875441959656 <|-- C_0001818937444083940422
C_0000061206875441959656 <|-- C_0001570938228759617789
C_0001213116382374608563 --+ C_0000556232260676736866
C_0001711829908199642357 --+ C_0000556232260676736866
C_0001113743326023075132 <|-- C_0001360537409230479781
C_0001112567962152961463 --> C_0001360537409230479781 : -_pImpl
C_0001151071929839061337 --+ C_0001112567962152961463
C_0000150490232910076306 o-- C_0000317758303947094820 : -_mutex
C_0000150490232910076306 o-- C_0001151966828164333711 : -_event
C_0000808432221961788140 --+ C_0002151864068859779218
C_0001812645041580479861 ..> C_0000182374977928068670
C_0001812645041580479861 ..> C_0000777257243320279470
C_0001812645041580479861 o-- C_0001208849321300700705 : -_mutex
C_0001812645041580479861 o-- C_0002151864068859779218 : -_random
C_0001812645041580479861 o-- C_0001753661655610731928 : -_lastTime
C_0001141577091994508979 ..> C_0001327785839452962833
C_0001141577091994508979 o-- C_0001327785839452962833 : #_buf
C_0001141577091994508979 <|-- C_0001743785934283401657
C_0000777257243320279470 <|-- C_0000945756009210152056
C_0000225431789614415548 --+ C_0000945756009210152056
C_0000777257243320279470 <|-- C_0001324611786786381120
C_0002121311177957628765 --+ C_0001324611786786381120
C_0000326619542703828852 ..> C_0002204584463250199617
C_0000326619542703828852 o-- C_0001208849321300700705 : -_mutex
C_0001139956284459832268 <|-- C_0000326619542703828852
C_0001259282692407170269 ..> C_0000778337630937443992
C_0001259282692407170269 ..> C_0001854365760272980797
C_0001259282692407170269 ..> C_0001984243994396754009
C_0001259282692407170269 o-- C_0001854365760272980797 : -_nfQueue
C_0001259282692407170269 o-- C_0001208849321300700705 : -_mutex
C_0000252891770375403110 --+ C_0001259282692407170269
C_0000252891770375403110 o-- C_0001854365760272980797 : +pNf
C_0000252891770375403110 o-- C_0001151966828164333711 : +nfAvailable
C_0001876684107292441776 o-- C_0001208849321300700705 : -_mutex
C_0001194006018242772921 o-- C_0001621935907318778812 : -_available
C_0001776643790081609039 --+ C_0001194006018242772921
C_0001776643790081609039 o-- C_0000668245676503162556 : +_memory
C_0000737503289654376783 ..> C_0001388030794032533071
C_0000737503289654376783 --> C_0001388030794032533071 : -_pEncoding
C_0001065209587280834302 ..> C_0001885826889660665099
C_0001065209587280834302 ..> C_0000737503289654376783
C_0001174425138909410790 --+ C_0001065209587280834302
C_0000597753878102788228 --+ C_0001885826889660665099
C_0001500606249666932665 ..> C_0001753661655610731928
C_0001500606249666932665 <.. C_0001916115735206194051 : +<<friend>>
C_0001500606249666932665 <.. C_0001909476426244774967 : +<<friend>>
C_0001403448667312781339 --+ C_0001500606249666932665
C_0001644128268345288171 ..> C_0001885826889660665099
C_0001644128268345288171 ..> C_0001753661655610731928
C_0001500606249666932665 <|-- C_0001644128268345288171
C_0000622574549466368290 --+ C_0001644128268345288171
C_0000005633886429669516 --+ C_0001644128268345288171
C_0000185259415814473539 ..> C_0001644128268345288171
C_0000185259415814473539 ..> C_0001885826889660665099
C_0000185259415814473539 o-- C_0001885826889660665099 : #_path
C_0000185259415814473539 o-- C_0001644128268345288171 : #_file
C_0000185259415814473539 --> C_0001909476426244774967 : -_pImpl
C_0000497396246447007446 ..> C_0000777257243320279470
C_0000497396246447007446 --> C_0000777257243320279470 : -_eng
C_0000696237004169527369 ..> C_0000777257243320279470
C_0000696237004169527369 ..> C_0000497396246447007446
C_0000696237004169527369 o-- C_0000497396246447007446 : #_buf
C_0001416704170948969742 ..> C_0000777257243320279470
C_0000696237004169527369 <|-- C_0001416704170948969742
C_0000035401107685360201 ..> C_0000777257243320279470
C_0000696237004169527369 <|-- C_0000035401107685360201
C_0000612840240710428706 ..> C_0000526725579819244397
C_0000612840240710428706 <.. C_0000398919761811267483 : +<<friend>>
C_0002250159164550911674 ..> C_0000526725579819244397
C_0000612840240710428706 <|-- C_0002250159164550911674
C_0000565945937925477761 ..> C_0000526725579819244397
C_0000565945937925477761 o-- C_0000964920602530551508 : -_memoryStream
C_0000565945937925477761 o-- C_0001741284645776061154 : -_base64Decoder
C_0000366366592142931484 ..> C_0000526725579819244397
C_0000565945937925477761 <|-- C_0000366366592142931484
C_0000526725579819244397 ..> C_0001885826889660665099
C_0000398919761811267483 ..> C_0000526725579819244397
C_0000398919761811267483 ..> C_0000612840240710428706
C_0000398919761811267483 ..> C_0001885826889660665099
C_0000398919761811267483 --> C_0000612840240710428706 : -_map
C_0000398919761811267483 o-- C_0001208849321300700705 : -_mutex
C_0001931915366392308965 <|-- C_0001741284645776061154
C_0001015873827464076217 ..> C_0002204584463250199617
C_0001200126201296015565 <|-- C_0001015873827464076217
C_0001113743326023075132 <|-- C_0001015873827464076217
C_0002051874582746861281 ..> C_0001015873827464076217
C_0002051874582746861281 ..|> C_0001565453218644542614
C_0001671326604635499943 ..> C_0001139956284459832268
C_0001671326604635499943 ..|> C_0001565453218644542614
C_0001554531559579674962 ..> C_0001015873827464076217
C_0001554531559579674962 ..> C_0002051874582746861281
C_0001554531559579674962 ..> C_0001139956284459832268
C_0001554531559579674962 ..> C_0001671326604635499943
C_0001554531559579674962 ..> C_0002204584463250199617
C_0001554531559579674962 o-- C_0002051874582746861281 : -_pFormatter
C_0001554531559579674962 o-- C_0001671326604635499943 : -_pChannel
C_0001139956284459832268 <|-- C_0001554531559579674962
C_0000189730875747902328 ..> C_0001139956284459832268
C_0000189730875747902328 ..> C_0001671326604635499943
C_0000189730875747902328 ..> C_0001015873827464076217
C_0000189730875747902328 ..> C_0002051874582746861281
C_0000189730875747902328 o-- C_0001671326604635499943 : -_channelMap
C_0000189730875747902328 o-- C_0002051874582746861281 : -_formatterMap
C_0000189730875747902328 o-- C_0001208849321300700705 : -_mutex
C_0002123193390234965891 --> C_0001208849321300700705 : -_mutex
C_0000610653108170722755 --+ C_0002123193390234965891
C_0002123193390234965891 <|-- C_0000861861755535409361
C_0000196955025784926895 --+ C_0000861861755535409361
C_0000839286562037154527 ..> C_0000185259415814473539
C_0000839286562037154527 ..> C_0001644128268345288171
C_0000839286562037154527 o-- C_0000185259415814473539 : #_depthDeterminer
C_0000839286562037154527 o-- C_0000185259415814473539 : #_itEnd
C_0000479886939872848446 ..> C_0000185259415814473539
C_0000839286562037154527 <|-- C_0000479886939872848446
C_0000617361744079545514 ..> C_0000185259415814473539
C_0000839286562037154527 <|-- C_0000617361744079545514
C_0001046348233015948797 ..> C_0001644128268345288171
C_0002224094242999086751 ..> C_0001507935607211469129
C_0002224094242999086751 o-- C_0001507935607211469129 : -_age
C_0001046348233015948797 <|-- C_0002224094242999086751
C_0001046348233015948797 <|-- C_0000196988138559427636
C_0001136122020205634799 <.. C_0000439410633562489390 : +<<friend>>
C_0000212326993776200317 ..> C_0001136122020205634799
C_0000212326993776200317 o-- C_0001136122020205634799 : #_buf
C_0000212326993776200317 <|-- C_0001486595647080915917
C_0000665530764299745441 <|-- C_0002036098277668455996
C_0000378530514203976140 ..> C_0001070281089206260370
C_0000378530514203976140 --> C_0001070281089206260370 : -_pExc
C_0000378530514203976140 o-- C_0001151966828164333711 : -_event
C_0001113743326023075132 <|-- C_0000378530514203976140
C_0001871683377739177940 ..|> C_0000378530514203976140
C_0001871683377739177940 ..> C_0001070281089206260370
C_0001871683377739177940 --> C_0001070281089206260370 : -_pExc
C_0001871683377739177940 o-- C_0001151966828164333711 : -_event
C_0001113743326023075132 <|-- C_0001871683377739177940
C_0000044006175775453717 ..|> C_0000378530514203976140
C_0001507141403596166823 ..> C_0000044006175775453717
C_0001507141403596166823 ..> C_0001070281089206260370
C_0001507141403596166823 --> C_0000044006175775453717 : -_pHolder
C_0001857067167002292292 ..|> C_0001507141403596166823
C_0001857067167002292292 ..> C_0001871683377739177940
C_0001857067167002292292 ..> C_0001070281089206260370
C_0001857067167002292292 --> C_0001871683377739177940 : -_pHolder
C_0001965421471606022753 <|-- C_0002181718886331998671
C_0001113743326023075132 <|-- C_0002181718886331998671
C_0000712137464050396427 ..|> C_0001507141403596166823
C_0000851690644016889858 ..> C_0000712137464050396427
C_0000851690644016889858 o-- C_0000712137464050396427 : -_result
C_0002181718886331998671 <|-- C_0000851690644016889858
C_0001106241217518248318 ..|> C_0000851690644016889858
C_0001106241217518248318 ..> C_0001857067167002292292
C_0001106241217518248318 o-- C_0001857067167002292292 : -_result
C_0002181718886331998671 <|-- C_0001106241217518248318
C_0000154589214191497229 ..|> C_0000851690644016889858
C_0000154589214191497229 ..> C_0000712137464050396427
C_0000154589214191497229 o-- C_0000712137464050396427 : -_result
C_0002181718886331998671 <|-- C_0000154589214191497229
C_0000018007672082295494 ..|> C_0001106241217518248318
C_0000018007672082295494 ..> C_0001857067167002292292
C_0000018007672082295494 o-- C_0001857067167002292292 : -_result
C_0002181718886331998671 <|-- C_0000018007672082295494
C_0000973724980682451772 ..> C_0002181718886331998671
C_0000973724980682451772 ..|> C_0001565453218644542614
C_0000471694716979945123 ..> C_0002181718886331998671
C_0000471694716979945123 ..> C_0000973724980682451772
C_0000098694403815870274 ..> C_0000712137464050396427
C_0000578994008077748773 ..|> C_0000098694403815870274
C_0000578994008077748773 ..> C_0000712137464050396427
C_0001230300871019127651 ..|> C_0000098694403815870274
C_0001925527173274535616 o-- C_0001230300871019127651 : #_executeAsync
C_0002039822852522290319 ..|> C_0000501983570143558478
C_0001966971112249220114 --+ C_0001925527173274535616
C_0001966971112249220114 o-- C_0002039822852522290319 : +ptrStrat
C_0002090321502436867335 ..|> C_0000098694403815870274
C_0000704478212082820090 ..|> C_0001925527173274535616
C_0000704478212082820090 ..> C_0001857067167002292292
C_0000704478212082820090 o-- C_0002090321502436867335 : #_executeAsync
C_0000087839959231010442 ..|> C_0001647206290041007719
C_0001846374180228514861 ..|> C_0002039822852522290319
C_0001179420655287153927 ..> C_0001846374180228514861
C_0001179420655287153927 o-- C_0001846374180228514861 : #_delegates
C_0001647206290041007719 <|-- C_0001179420655287153927
C_0001910864314618818803 ..|> C_0001179420655287153927
C_0001910864314618818803 ..> C_0001846374180228514861
C_0001910864314618818803 o-- C_0001846374180228514861 : #_delegates
C_0000087839959231010442 <|-- C_0001910864314618818803
C_0000366501905599821116 ..|> C_0002030572947849207060
C_0000774921858729379396 ..> C_0002030572947849207060
C_0000774921858729379396 ..|> C_0001179420655287153927
C_0000916576726322856292 ..|> C_0001986253815649114801
C_0001288338400588871207 ..> C_0001365619523926057599
C_0001288338400588871207 ..> C_0000317758303947094820
C_0001288338400588871207 o-- C_0000916576726322856292 : +writable
C_0001288338400588871207 o-- C_0000916576726322856292 : +readable
C_0001288338400588871207 o-- C_0001365619523926057599 : -_buffer
C_0001288338400588871207 o-- C_0000317758303947094820 : -_mutex
C_0001926002426095720145 ..|> C_0001288338400588871207
C_0000161046799810162995 ..> C_0001926002426095720145
C_0000161046799810162995 --> C_0001926002426095720145 : -_pFIFOBuffer
C_0000161046799810162995 --> C_0001926002426095720145 : -_fifoBuffer
C_0001272327730937850004 ..> C_0001926002426095720145
C_0001272327730937850004 ..> C_0000161046799810162995
C_0001272327730937850004 o-- C_0000161046799810162995 : #_buf
C_0000141504150266646037 ..> C_0001926002426095720145
C_0000141504150266646037 --> C_0000916576726322856292 : +readable
C_0000141504150266646037 --> C_0000916576726322856292 : +writable
C_0001272327730937850004 <|-- C_0000141504150266646037
C_0001889974659313219405 ..> C_0002204584463250199617
C_0001139956284459832268 <|-- C_0001889974659313219405
C_0000858234687263766787 ..> C_0001112567962152961463
C_0000858234687263766787 o-- C_0001112567962152961463 : -_pipe
C_0000436009583498103198 ..> C_0001112567962152961463
C_0000436009583498103198 ..> C_0000858234687263766787
C_0000436009583498103198 o-- C_0000858234687263766787 : #_buf
C_0001377302917114829558 ..> C_0001112567962152961463
C_0000436009583498103198 <|-- C_0001377302917114829558
C_0000923605218290966144 ..> C_0001112567962152961463
C_0000436009583498103198 <|-- C_0000923605218290966144
C_0001348864432568412117 ..> C_0000526725579819244397
C_0001348864432568412117 ..> C_0001885826889660665099
C_0000612840240710428706 <|-- C_0001348864432568412117
C_0001110883338738476829 ..> C_0001125006218235829978
C_0001110883338738476829 o-- C_0001125006218235829978 : #_buf
C_0001110883338738476829 <|-- C_0002005186884878428630
C_0001110883338738476829 <|-- C_0001719227248397825267
C_0001110883338738476829 <|-- C_0000436605573710598398
C_0000616227205505665745 <|-- C_0000010642104903790629
C_0001763890485961714712 ..> C_0001151966828164333711
C_0001763890485961714712 o-- C_0001208849321300700705 : -_mutex
C_0001763890485961714712 --> C_0001151966828164333711 : -_waitQueue
C_0001771527744203616137 ..> C_0000559903826089819710
C_0001771527744203616137 ..|> C_0001565453218644542614
C_0000559903826089819710 ..> C_0001139956284459832268
C_0000559903826089819710 ..> C_0001671326604635499943
C_0000559903826089819710 ..> C_0002204584463250199617
C_0000559903826089819710 ..> C_0001070281089206260370
C_0000559903826089819710 ..> C_0001771527744203616137
C_0000559903826089819710 o-- C_0001671326604635499943 : -_pChannel
C_0000559903826089819710 --> C_0000559903826089819710 : -_pLoggerMap
C_0000559903826089819710 --> C_0000317758303947094820 : -_mapMtx
C_0001139956284459832268 <|-- C_0000559903826089819710
C_0001113743326023075132 <|-- C_0000048713468887828847
C_0001059364385747160761 ..> C_0001112567962152961463
C_0001059364385747160761 ..> C_0000048713468887828847
C_0001719260909436674674 ..> C_0000048713468887828847
C_0001719260909436674674 --> C_0000048713468887828847 : -_pImpl
C_0001719260909436674674 <.. C_0001510175659377877048 : +<<friend>>
C_0001510175659377877048 ..> C_0001719260909436674674
C_0001510175659377877048 ..> C_0001112567962152961463
C_0001059364385747160761 <|-- C_0001510175659377877048
C_0001931915366392308965 ..> C_0000439410633562489390
C_0001931915366392308965 o-- C_0000439410633562489390 : #_buf
C_0002131554693291880326 ..|> C_0001986253815649114801
C_0000189904351278641819 ..> C_0002204584463250199617
C_0000189904351278641819 o-- C_0002131554693291880326 : +messageLogged
C_0001139956284459832268 <|-- C_0000189904351278641819
C_0001876535751818413453 ..> C_0002204584463250199617
C_0001876535751818413453 ..> C_0001753661655610731928
C_0001876535751818413453 --> C_0001768662171573839056 : -_pFile
C_0001876535751818413453 o-- C_0001208849321300700705 : -_mutex
C_0001139956284459832268 <|-- C_0001876535751818413453
C_0001105314075151856011 ..> C_0001753661655610731928
C_0001105314075151856011 o-- C_0001719227248397825267 : -_str
C_0001105314075151856011 o-- C_0001753661655610731928 : -_creationDate
C_0001768662171573839056 ..> C_0001753661655610731928
C_0001105314075151856011 <|-- C_0001768662171573839056
C_0002116415120375769938 ..> C_0000185259415814473539
C_0002116415120375769938 ..> C_0001644128268345288171
C_0002116415120375769938 ..> C_0001885826889660665099
C_0000185259415814473539 <|-- C_0002116415120375769938
C_0000930901867536850208 ..> C_0001139956284459832268
C_0000930901867536850208 ..> C_0001671326604635499943
C_0000930901867536850208 ..> C_0002204584463250199617
C_0000930901867536850208 o-- C_0001671326604635499943 : -_channels
C_0000930901867536850208 o-- C_0001208849321300700705 : -_mutex
C_0001139956284459832268 <|-- C_0000930901867536850208
C_0001932338689021546423 --+ C_0001909804586243600804
C_0001013121667606787276 ..> C_0001768662171573839056
C_0001013121667606787276 --> C_0001478018116174211543 : -_pCompressor
C_0002031340922369241723 ..> C_0001768662171573839056
C_0001013121667606787276 <|-- C_0002031340922369241723
C_0000557475307545601980 ..> C_0001768662171573839056
C_0001013121667606787276 <|-- C_0000557475307545601980
C_0000503421568916662852 ..> C_0000778337630937443992
C_0000503421568916662852 ..> C_0001854365760272980797
C_0000503421568916662852 ..> C_0001984243994396754009
C_0000503421568916662852 o-- C_0001854365760272980797 : -_nfQueue
C_0000503421568916662852 o-- C_0001208849321300700705 : -_mutex
C_0001349932699354709623 --+ C_0000503421568916662852
C_0001349932699354709623 o-- C_0001854365760272980797 : +pNf
C_0001349932699354709623 o-- C_0001151966828164333711 : +nfAvailable
C_0001651859025848925397 ..> C_0002181718886331998671
C_0001651859025848925397 ..> C_0000973724980682451772
C_0001651859025848925397 o-- C_0001168023544756617055 : -_thread
C_0001651859025848925397 o-- C_0000503421568916662852 : -_queue
C_0001965421471606022753 <|-- C_0001651859025848925397
C_0001729244871434612668 ..> C_0001651859025848925397
C_0001729244871434612668 ..|> C_0000471694716979945123
C_0001729244871434612668 ..> C_0002181718886331998671
C_0001729244871434612668 ..> C_0000973724980682451772
C_0000134068163643100341 ..> C_0001478018116174211543
C_0000134068163643100341 ..> C_0001729244871434612668
C_0000134068163643100341 ..|> C_0000098694403815870274
C_0001478018116174211543 o-- C_0000134068163643100341 : +compress
C_0001651859025848925397 <|-- C_0001478018116174211543
C_0000777257243320279470 <|-- C_0001312735292904535254
C_0001493561558202443367 --+ C_0001312735292904535254
C_0001539273769510739531 <.. C_0000432823034649330038 : +<<friend>>
C_0000668080715308066158 ..> C_0001539273769510739531
C_0000668080715308066158 o-- C_0001539273769510739531 : #_buf
C_0000668080715308066158 <|-- C_0001363855970885973020
C_0000982871075127137247 ..> C_0000778337630937443992
C_0000982871075127137247 ..> C_0000190609818484253828
C_0000982871075127137247 o-- C_0000317758303947094820 : -_mutex
C_0000190609818484253828 <|-- C_0000982871075127137247
C_0000339212259491663501 ..> C_0001139956284459832268
C_0000339212259491663501 ..> C_0001671326604635499943
C_0000339212259491663501 ..> C_0002204584463250199617
C_0000339212259491663501 o-- C_0001671326604635499943 : -_pChannel
C_0000339212259491663501 o-- C_0001168023544756617055 : -_thread
C_0000339212259491663501 o-- C_0001208849321300700705 : -_threadMutex
C_0000339212259491663501 o-- C_0001208849321300700705 : -_channelMutex
C_0000339212259491663501 o-- C_0000503421568916662852 : -_queue
C_0001139956284459832268 <|-- C_0000339212259491663501
C_0001965421471606022753 <|-- C_0000339212259491663501
C_0001647216797531995086 ..> C_0002204584463250199617
C_0001647216797531995086 o-- C_0002204584463250199617 : -_msg
C_0000778337630937443992 <|-- C_0001647216797531995086
C_0000549939075292803739 <|-- C_0000353138060525367947
C_0001544364607386660238 ..> C_0001070281089206260370
C_0001544364607386660238 --> C_0001544364607386660238 : -_pHandler
C_0001544364607386660238 --> C_0001208849321300700705 : -_mutex
C_0000921178294042330616 ..> C_0001965421471606022753
C_0000921178294042330616 --> C_0001965421471606022753 : -_target
C_0001965421471606022753 <|-- C_0000921178294042330616
C_0001965421471606022753 <|-- C_0001477080063636139868
C_0002139733679108376691 ..> C_0002204584463250199617
C_0002139733679108376691 ..> C_0001753661655610731928
C_0002139733679108376691 ..> C_0001046348233015948797
C_0002139733679108376691 --> C_0001768662171573839056 : -_pFile
C_0002139733679108376691 --> C_0001863622787747053216 : -_pRotateStrategy
C_0002139733679108376691 --> C_0001013121667606787276 : -_pArchiveStrategy
C_0002139733679108376691 --> C_0001046348233015948797 : -_pPurgeStrategy
C_0002139733679108376691 o-- C_0001208849321300700705 : -_mutex
C_0001139956284459832268 <|-- C_0002139733679108376691
C_0001863622787747053216 ..> C_0001768662171573839056
C_0000857036423557090166 ..> C_0001768662171573839056
C_0001863622787747053216 <|-- C_0000857036423557090166
C_0002224797461986433004 ..> C_0001507935607211469129
C_0002224797461986433004 ..> C_0001768662171573839056
C_0002224797461986433004 o-- C_0001507935607211469129 : -_span
C_0002224797461986433004 o-- C_0001753661655610731928 : -_lastRotate
C_0001863622787747053216 <|-- C_0002224797461986433004
C_0001123212921880770067 ..> C_0001768662171573839056
C_0001863622787747053216 <|-- C_0001123212921880770067
C_0000695839770737746479 o-- C_0001216257285233984362 : -_start
C_0000178503442785486670 ..> C_0001120170482425500033
C_0000178503442785486670 ..> C_0000578799755200939663
C_0000178503442785486670 o-- C_0001151966828164333711 : -_wakeUp
C_0000178503442785486670 o-- C_0001151966828164333711 : -_done
C_0000178503442785486670 --> C_0001120170482425500033 : -_pCallback
C_0000178503442785486670 o-- C_0001216257285233984362 : -_nextInvocation
C_0000178503442785486670 o-- C_0001208849321300700705 : -_mutex
C_0001965421471606022753 <|-- C_0000178503442785486670
C_0001120170482425500033 ..> C_0000178503442785486670
C_0000661517478816503369 ..> C_0000178503442785486670
C_0000661517478816503369 ..> C_0001120170482425500033
C_0001120170482425500033 <|-- C_0000661517478816503369
C_0000028310326980591512 <|-- C_0000474083635704054589
C_0000486705331160431818 ..|> C_0000715608830579158836
C_0001146499130388999378 o-- C_0000486705331160431818 : -_object
C_0000028310326980591512 <|-- C_0001146499130388999378
C_0000591855119420637802 ..> C_0000028310326980591512
C_0000591855119420637802 --> C_0000028310326980591512 : -_metaMap
C_0001551345012104868531 <|-- C_0000591855119420637802
C_0001033235586798701554 --+ C_0000591855119420637802
C_0001033235586798701554 ..> C_0000028310326980591512
C_0000799299838966234516 ..> C_0001388030794032533071
C_0000799299838966234516 --> C_0000907772260287610600 : -_pTextConverter
C_0002176387723842041729 --+ C_0000799299838966234516
C_0001207504148242290438 ..> C_0001365619523926057599
C_0001207504148242290438 ..> C_0001388030794032533071
C_0001207504148242290438 ..> C_0000532327502470897545
C_0001207504148242290438 --> C_0001365619523926057599 : -_data
C_0001207504148242290438 o-- C_0000532327502470897545 : -_ostr
C_0000799299838966234516 <|-- C_0001207504148242290438
C_0001302827927167352541 ..> C_0000432823034649330038
C_0001302827927167352541 o-- C_0000432823034649330038 : #_buf
C_0001302827927167352541 <|-- C_0001514863405507265282
C_0000296539041573903715 ..> C_0000662420568412593533
C_0000296539041573903715 o-- C_0000662420568412593533 : #_buf
C_0000296539041573903715 <|-- C_0002187624587763014217
C_0000638075736413934088 ..> C_0001753661655610731928
C_0001644128268345288171 <|-- C_0001286021211442138988
C_0000374360102481866647 o-- C_0001208849321300700705 : -_mutex
C_0000042807779830434191 --> C_0001208849321300700705 : -_mutex
C_0001798291351056602742 ..> C_0002204584463250199617
C_0001015873827464076217 <|-- C_0001798291351056602742
C_0001901952625337206475 --+ C_0001798291351056602742
C_0000948952027955582559 ..> C_0000578799755200939663
C_0000948952027955582559 --> C_0000578799755200939663 : -_pPool
C_0000948952027955582559 o-- C_0001208849321300700705 : -_mutex
C_0001759403185093864905 ..|> C_0001986253815649114801
C_0001544966738409555773 ..|> C_0001986253815649114801
C_0001352960356011033665 ..> C_0001644128268345288171
C_0001352960356011033665 o-- C_0001759403185093864905 : +itemAdded
C_0001352960356011033665 o-- C_0001759403185093864905 : +itemRemoved
C_0001352960356011033665 o-- C_0001759403185093864905 : +itemModified
C_0001352960356011033665 o-- C_0001759403185093864905 : +itemMovedFrom
C_0001352960356011033665 o-- C_0001759403185093864905 : +itemMovedTo
C_0001352960356011033665 o-- C_0001544966738409555773 : +scanError
C_0001352960356011033665 o-- C_0001168023544756617055 : -_thread
C_0001352960356011033665 o-- C_0001644128268345288171 : -_directory
C_0001352960356011033665 o-- C_0001621935907318778812 : -_eventsSuspended
C_0001352960356011033665 --> C_0000777071345740656910 : -_pStrategy
C_0001965421471606022753 <|-- C_0001352960356011033665
C_0001298267866440427282 --+ C_0001352960356011033665
C_0000075608327731243092 --+ C_0001352960356011033665
C_0000432039243229901287 --+ C_0001352960356011033665
C_0000432039243229901287 ..> C_0001644128268345288171
C_0000432039243229901287 --> C_0001644128268345288171 : +item
C_0000777071345740656910 ..> C_0001352960356011033665
C_0000777071345740656910 --> C_0001352960356011033665 : -_owner
C_0001967264452092302251 --+ C_0000777071345740656910
C_0001967264452092302251 ..> C_0001644128268345288171
C_0001967264452092302251 o-- C_0001753661655610731928 : +lastModified
C_0001916115735206194051 ..> C_0001352960356011033665
C_0000777071345740656910 <|-- C_0001916115735206194051
C_0001257776470696578383 --+ C_0001950526211289949919
C_0001647197953565577529 ..> C_0001950526211289949919
C_0001647197953565577529 o-- C_0001950526211289949919 : #_buf
C_0001647197953565577529 <|-- C_0001628677755064749826
C_0001647197953565577529 <|-- C_0000694586591102281210
C_0002234238327531340503 ..> C_0000557861678389581488
C_0002234238327531340503 o-- C_0000557861678389581488 : #_buf
C_0002234238327531340503 <|-- C_0000499679237572472424
C_0000766233471547334066 ..> C_0000778337630937443992
C_0000766233471547334066 ..> C_0001854365760272980797
C_0000766233471547334066 ..> C_0001753661655610731928
C_0000766233471547334066 ..> C_0001216257285233984362
C_0000766233471547334066 o-- C_0001216257285233984362 : -_nfQueue
C_0000766233471547334066 o-- C_0001854365760272980797 : -_nfQueue
C_0000766233471547334066 o-- C_0001151966828164333711 : -_nfAvailable
C_0000766233471547334066 o-- C_0001208849321300700705 : -_mutex
C_0001578505165053786052 ..> C_0001388030794032533071
C_0001578505165053786052 --> C_0001388030794032533071 : -_pEncoding
C_0000084346323287749129 o-- C_0001208849321300700705 : -_mutex
C_0000948464525636325061 ..> C_0001434923480159065033
C_0000948464525636325061 o-- C_0001434923480159065033 : #_buf
C_0000948464525636325061 <|-- C_0001514271543667812042
C_0000948464525636325061 <|-- C_0001899745693640730666
C_0001003460166096379338 ..> C_0002181718886331998671
C_0001003460166096379338 ..> C_0000973724980682451772
C_0001003460166096379338 o-- C_0000973724980682451772 : -_pRunnable
C_0000778337630937443992 <|-- C_0001003460166096379338
C_0000778337630937443992 <|-- C_0001289552373452015302
C_0001499872522016959729 o-- C_0000380049637305409601 : #_buf
C_0001499872522016959729 <|-- C_0000249297064991877312
C_0001499872522016959729 <|-- C_0001339651780015601050
C_0000777257243320279470 <|-- C_0002049503466728844695
C_0001286171866177069736 --+ C_0002049503466728844695
C_0002049503466728844695 <|-- C_0000861463478491134680
C_0002049503466728844695 <|-- C_0000098817567561142961
C_0002049503466728844695 <|-- C_0000987971293548162250
C_0002049503466728844695 <|-- C_0000003932258855102108
C_0000115016228932451153 o-- C_0001552174321562332620 : +total
C_0000115016228932451153 o-- C_0001433694275376201942 : +state
C_0001873639078840997618 ..> C_0001388030794032533071
C_0001873639078840997618 --> C_0001388030794032533071 : -_inEncoding
C_0001873639078840997618 --> C_0001388030794032533071 : -_outEncoding
C_0001747894738069545405 ..> C_0001388030794032533071
C_0001747894738069545405 ..> C_0001873639078840997618
C_0001747894738069545405 o-- C_0001873639078840997618 : #_buf
C_0000355277943770929846 ..> C_0001388030794032533071
C_0001747894738069545405 <|-- C_0000355277943770929846
C_0000146967754442816595 ..> C_0001388030794032533071
C_0001747894738069545405 <|-- C_0000146967754442816595
C_0001227005240789555537 ..> C_0001208960305207411421
C_0001227005240789555537 o-- C_0001208960305207411421 : #_buf
C_0001227005240789555537 <|-- C_0001703603721614878980
C_0001227005240789555537 <|-- C_0000206266465807076515
C_0002059762649752778308 --+ C_0000043533095939514797
C_0001699401474873869127 ..> C_0001644128268345288171
C_0001699401474873869127 --> C_0001186805946370749812 : -_pImpl
C_0000645094487015415570 --+ C_0001699401474873869127
C_0001186805946370749812 ..> C_0001644128268345288171
C_0001113743326023075132 <|-- C_0001186805946370749812
C_0001965421471606022753 <|-- C_0000643324715959020350
C_0002081627997438870943 --+ C_0000474207429020758890
C_0000474207429020758890 <|-- C_0000010045059314243126
C_0000474207429020758890 <|-- C_0001601296300416379488
C_0000474207429020758890 <|-- C_0000596813156385297995
C_0001651124971643906055 ..> C_0000474207429020758890
C_0001651124971643906055 o-- C_0000010045059314243126 : -_invalidToken
C_0001651124971643906055 o-- C_0001601296300416379488 : -_eofToken
C_0001120677727623327250 --+ C_0001651124971643906055
C_0001120677727623327250 --> C_0000474207429020758890 : +pToken
C_0001204112149714254436 ..> C_0000559903826089819710
C_0001204112149714254436 --> C_0000559903826089819710 : -_logger
C_0001315681032614379236 ..> C_0000559903826089819710
C_0001315681032614379236 ..> C_0001204112149714254436
C_0001315681032614379236 o-- C_0001204112149714254436 : #_buf
C_0001955874322287869487 ..> C_0000559903826089819710
C_0001315681032614379236 <|-- C_0001955874322287869487
C_0000205490546169098233 <|-- C_0000694428926822675449
C_0000815848271746101983 <|-- C_0000431411468285635033
C_0000246820176976328048 ..> C_0000815848271746101983
C_0000246820176976328048 --> C_0000815848271746101983 : -_map
C_0000246820176976328048 o-- C_0001208849321300700705 : -_mutex
C_0001272757882626050053 ..> C_0001139956284459832268
C_0001272757882626050053 ..|> C_0000815848271746101983
C_0001281872759224917001 ..> C_0001015873827464076217
C_0001281872759224917001 ..|> C_0000815848271746101983
C_0001905871330693439078 ..> C_0001139956284459832268
C_0001905871330693439078 ..|> C_0000246820176976328048
C_0000514397411740592781 ..> C_0001015873827464076217
C_0000514397411740592781 ..|> C_0000246820176976328048
C_0001504934680944362532 ..> C_0001139956284459832268
C_0001504934680944362532 ..> C_0001272757882626050053
C_0001504934680944362532 ..> C_0001015873827464076217
C_0001504934680944362532 ..> C_0001281872759224917001
C_0001504934680944362532 ..> C_0001671326604635499943
C_0001504934680944362532 ..> C_0002051874582746861281
C_0001504934680944362532 o-- C_0001905871330693439078 : -_channelFactory
C_0001504934680944362532 o-- C_0000514397411740592781 : -_formatterFactory
C_0001573014150295245881 ..> C_0002204584463250199617
C_0001139956284459832268 <|-- C_0001573014150295245881
C_0000891241898355454953 --+ C_0001573014150295245881
C_0000593181339898151685 --+ C_0001573014150295245881
C_0001957613811903324494 ..> C_0000671871777879627559
C_0001957613811903324494 o-- C_0000671871777879627559 : #_buf
C_0001957613811903324494 <|-- C_0001672497449586052306
C_0001957613811903324494 <|-- C_0001480852717883232933

'Generated with clang-uml, version 0.3.5-1-g9a5a152
'LLVM version Ubuntu clang version 15.0.6
@enduml
