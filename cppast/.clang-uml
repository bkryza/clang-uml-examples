compilation_database_dir: _build
output_directory: ../puml
generate_links:
  link: 'https://github.com/foonathan/cppast/blob/{{ git.commit }}/{{ element.source.path }}#L{{ element.source.line }}'
  tooltip: '{% if existsIn(element, "comment") and existsIn(element.comment, "brief") %}{{ abbrv(trim(replace(element.comment.brief.0, "\n+", " ")), 256) }}{% else %}{{ element.name }}{% endif %}'
diagrams:
  cpp_expression_class_diagram:
    type: class
    glob:
      - src/cpp_expression.cpp
    using_namespace:
      - cppast
    include:
      context:
        - cppast::cpp_expression
      namespaces:
        - cppast
  cpp_type_class_diagram:
    type: class
    glob:
      - src/cpp_type.cpp
      - src/cpp_type_alias.cpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      context:
        - cppast::cpp_type
        - cppast::cpp_cv_qualified_type
        - cppast::cpp_reference_type
        - cppast::cpp_builtin_type
    exclude:
      namespaces:
        - cppast::detail
      relationships:
        - dependency
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_entity_index_class_diagram:
    type: class
    glob:
      - src/cpp_entity.cpp
      - src/cpp_entity_container.cpp
      - src/cpp_entity_index.cpp
      - src/cpp_entity_kind.cpp
      - src/cpp_entity_ref.cpp
    using_namespace:
      - cppast
    include:
      #namespaces:
      #  - cppast
      context:
        - cppast::cpp_entity
        - cppast::cpp_entity_index
    exclude:
      namespaces:
        - cppast::detail
        - std
        - type_safe
      relationships:
        - dependency
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_entity_class_hierarchy_diagram:
    type: class
    glob:
      - src/*.cpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      relationships:
        - inheritance
      subclasses:
        - cppast::cpp_entity
        - cppast::cpp_variable_base
    exclude:
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_entity_class_hierarchy_full_diagram:
    type: class
    glob:
      - src/*.cpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      subclasses:
        - cppast::cpp_entity
        - cppast::cpp_variable_base
      relationships:
        - inheritance
    exclude:
      namespaces:
        - cppast::detail
      element_types:
        - enums
      access:
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_type_class_hierarchy_diagram:
    type: class
    glob:
      - src/*.cpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      relationships:
        - inheritance
      subclasses:
        - cppast::cpp_type
    exclude:
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_type_class_hierarchy_full_diagram:
    type: class
    glob:
      - src/*.cpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      relationships:
        - inheritance
      subclasses:
        - cppast::cpp_type
    exclude:
      access:
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  include_graph_diagram:
    type: include
    glob:
      - include/cppast/*.hpp
      - src/*.cpp
    relative_to: .
    include:
      paths:
        - include/cppast
        - src
    exclude:
      paths:
        - src/libclang
    plantuml:
      before:
        - left to right direction
