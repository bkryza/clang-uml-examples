compilation_database_dir: _build
output_directory: puml
generate_links:
  link: 'https://github.com/foonathan/cppast/blob/{{ git.commit }}/{{ element.source.path }}#L{{ element.source.line }}'
  tooltip: '{% if "comment" in element %}{{ abbrv(trim(replace(element.comment, "\n+", " ")), 256) }}{% else %}{{ element.name }}{% endif %}'
diagrams:
  cpp_expression_class_diagram:
    type: class
    glob:
      - include/cppast/cpp_expression.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
    exclude:
      namespaces:
        - cppast::detail
  cpp_type_class_diagram:
    type: class
    glob:
      - include/cppast/cpp_type.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
    exclude:
      namespaces:
        - cppast::detail
      access:
        - public
        - protected
        - private
  cpp_entity_index_class_diagram:
    type: class
    glob:
      - include/cppast/cpp_entity.hpp
      - include/cppast/cpp_entity_container.hpp
      - include/cppast/cpp_entity_index.hpp
      - include/cppast/cpp_entity_kind.hpp
      - include/cppast/cpp_entity_ref.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
    exclude:
      namespaces:
        - cppast::detail
      relationships:
        - dependency
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_entity_class_hierarchy_diagram:
    type: class
    glob:
      - include/cppast/*.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      relationships:
        - inheritance
      subclasses:
        - cppast::cpp_entity
        - cppast::cpp_variable_base
    exclude:
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_entity_class_hierarchy_full_diagram:
    type: class
    glob:
      - include/cppast/*.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      subclasses:
        - cppast::cpp_entity
        - cppast::cpp_variable_base
      relationships:
        - inheritance
    exclude:
      namespaces:
        - cppast::detail
      entity_types:
        - enums
      access:
        - protected
        - private
    plantuml:
      before:
        - 'left to right direction'
  cpp_type_class_hierarchy_diagram:
    type: class
    glob:
      - include/cppast/*.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      relationships:
        - inheritance
      subclasses:
        - cppast::cpp_type
    exclude:
      access:
        - public
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  cpp_type_class_hierarchy_full_diagram:
    type: class
    glob:
      - include/cppast/*.hpp
    using_namespace:
      - cppast
    include:
      namespaces:
        - cppast
      relationships:
        - inheritance
      subclasses:
        - cppast::cpp_type
    exclude:
      access:
        - protected
        - private
    plantuml:
      before:
        - left to right direction
  include_graph_diagram:
    type: include
    glob:
      - include/cppast/*.hpp
      - src/*.cpp
    relative_to: .
    include:
      paths:
        - include/cppast
        - src
    exclude:
      paths:
        - src/libclang
    plantuml:
      before:
        - left to right direction

#  cpp_expression_class_diagram:
#    type: class
#    glob:
#      - include/cppast/cpp_expression.hpp
#    using_namespace:
#      - cppast
#    include:
#      namespaces:
#        - cppast
#    exclude:
#      namespaces:
#        - cppast::detail
#  cpp_type_class_diagram:
#    type: class
#    glob:
#      - include/cppast/cpp_type.hpp
#    using_namespace:
#      - cppast
#    include:
#      namespaces:
#        - cppast
#    exclude:
#      namespaces:
#        - cppast::detail
#      scopes:
#        - public
#        - protected
#        - private
#    plantuml:
#      before:
#        - 'left to right direction'
#  cpp_entity_class_diagram:
#    type: class
#    glob:
#      - include/cppast/cpp_alias_template.hpp
#      - include/cppast/cpp_array_type.hpp
#      - include/cppast/cpp_attribute.hpp
#      - include/cppast/cpp_class.hpp
#      - include/cppast/cpp_class_template.hpp
#      - include/cppast/cpp_decltype_type.hpp
#      - include/cppast/cpp_entity_container.hpp
#      - include/cppast/cpp_entity.hpp
#      - include/cppast/cpp_entity_index.hpp
#      - include/cppast/cpp_entity_kind.hpp
#      - include/cppast/cpp_entity_ref.hpp
#      - include/cppast/cpp_enum.hpp
#      - include/cppast/cpp_expression.hpp
#      - include/cppast/cpp_friend.hpp
#      - include/cppast/cpp_function.hpp
#      - include/cppast/cpp_function_template.hpp
#      - include/cppast/cpp_function_type.hpp
#      - include/cppast/cpp_language_linkage.hpp
#      - include/cppast/cpp_member_function.hpp
#      - include/cppast/cpp_member_variable.hpp
#      - include/cppast/cpp_namespace.hpp
#      - include/cppast/cpp_template.hpp
#      - include/cppast/cpp_template_parameter.hpp
#      - include/cppast/cpp_token.hpp
#      - include/cppast/cpp_type_alias.hpp
#      - include/cppast/cpp_type.hpp
#      - include/cppast/cpp_variable_base.hpp
#      - include/cppast/cpp_variable.hpp
#      - include/cppast/cpp_variable_template.hpp
#    using_namespace:
#      - cppast
#    include:
#      namespaces:
#        - cppast
#      relationships:
#        - inheritance
#    exclude:
#      namespaces:
#        - cppast::detail
#      entity_types:
#        - enums
#      scopes:
#        - public
#        - protected
#        - private
#    plantuml:
#      before:
#        - 'left to right direction'
#  cpp_entity_index_class_diagram:
#    type: class
#    glob:
#      - include/cppast/cpp_entity.hpp
#      - include/cppast/cpp_entity_container.hpp
#      - include/cppast/cpp_entity_index.hpp
#      - include/cppast/cpp_entity_kind.hpp
#      - include/cppast/cpp_entity_ref.hpp
#    using_namespace:
#      - cppast
#    include:
#      namespaces:
#        - cppast
#    exclude:
#      namespaces:
#        - cppast::detail
#      scopes:
#        - public
#        - protected
#        - private
