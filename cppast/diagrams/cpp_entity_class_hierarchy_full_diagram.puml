@startuml
title 'cpp_entity' class hierarchy with public members
left to right direction
class "cpp_entity" as C_0014837562978658247224
class C_0014837562978658247224 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L47{cpp_entity}]] {
+cpp_entity(const cpp_entity &) = deleted : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L50{cpp_entity}]]]
+cpp_entity(std::string name) : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L155{cpp_entity}]]]
+~cpp_entity() noexcept = default : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L53{~cpp_entity}]]]
..
+operator=(const cpp_entity &) = deleted : cpp_entity & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L51{operator=}]]]
..
+add_attribute(cpp_attribute attr) noexcept : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L125{add_attribute}]]]
+add_attribute(const cpp_attribute_list & list) noexcept : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L131{add_attribute}]]]
+attributes() const noexcept : const cpp_attribute_list & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L119{attributes}]]]
+comment() const noexcept : type_safe::basic_optional<const std::string> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L106{comment}]]]
+kind() const noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L56{kind}]]]
+name() const noexcept : const std::string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L63{name}]]]
+parent() const noexcept : type_safe::basic_optional<const cpp_entity> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L76{parent}]]]
+scope_name() const : type_safe::basic_optional<cpp_scope_name> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L70{scope_name}]]]
+set_comment(type_safe::basic_optional<std::string> comment) noexcept : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L113{set_comment}]]]
+set_user_data(void * data) const noexcept : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L149{set_user_data}]]]
+user_data() const noexcept : void * [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L137{user_data}]]]
__
}
class "cpp_unexposed_entity" as C_0011598861676029238614
class C_0011598861676029238614 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L187{cpp_unexposed_entity}]] {
{static} +build(const cpp_entity_index & index, cpp_entity_id id, std::string name, cpp_token_string spelling) : std::unique_ptr<cpp_entity> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L194{build}]]]
{static} +build(cpp_token_string spelling) : std::unique_ptr<cpp_entity> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L199{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L190{kind}]]]
+spelling() const noexcept : const cpp_token_string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_entity.hpp#L202{spelling}]]]
__
}
class "cpp_friend" as C_0002424370915184415608
class C_0002424370915184415608 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_friend.hpp#L19{cpp_friend}]] {
{static} +build(std::unique_ptr<cpp_entity> e) : std::unique_ptr<cpp_friend> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_friend.hpp#L27{build}]]]
{static} +build(std::unique_ptr<cpp_type> type) : std::unique_ptr<cpp_friend> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_friend.hpp#L34{build}]]]
+entity() const noexcept : type_safe::basic_optional<const cpp_entity> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_friend.hpp#L40{entity}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_friend.hpp#L22{kind}]]]
+type() const noexcept : type_safe::basic_optional<const cpp_type> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_friend.hpp#L48{type}]]]
__
}
class "cpp_template" as C_0000056978405368650305
class C_0000056978405368650305 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L21{cpp_template}]] {
+parameters() const noexcept : detail::iteratable_intrusive_list<cpp_template_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L26{parameters}]]]
__
}
class "cpp_constructor" as C_0000744208881657781993
class C_0000744208881657781993 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L232{cpp_constructor}]] {
+is_consteval() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L275{is_consteval}]]]
+is_constexpr() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L269{is_constexpr}]]]
+is_explicit() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L263{is_explicit}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L235{kind}]]]
__
}
class "cpp_variable_base" as C_0001476801060215450073
class C_0001476801060215450073 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable_base.hpp#L16{cpp_variable_base}]] {
+default_value() const noexcept : type_safe::basic_optional<const cpp_expression> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable_base.hpp#L26{default_value}]]]
+type() const noexcept : const cpp_type & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable_base.hpp#L20{type}]]]
__
}
class "cpp_member_function" as C_0001638276770736048147
class C_0001638276770736048147 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L169{cpp_member_function}]] {
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L172{kind}]]]
__
}
class "cpp_class_template" as C_0002839554221933236183
class C_0002839554221933236183 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class_template.hpp#L13{cpp_class_template}]] {
+class_() const noexcept : const cpp_class & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class_template.hpp#L26{class_}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class_template.hpp#L16{kind}]]]
__
}
class "cpp_class" as C_0003247661836250681946
class C_0003247661836250681946 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L118{cpp_class}]] {
+bases() const noexcept : detail::iteratable_intrusive_list<cpp_base_class> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L210{bases}]]]
+class_kind() const noexcept : cpp_class_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L198{class_kind}]]]
+is_final() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L204{is_final}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L123{kind}]]]
__
}
class "cpp_macro_parameter" as C_0003851227765737185001
class C_0003851227765737185001 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L15{cpp_macro_parameter}]] {
{static} +build(std::string name) : std::unique_ptr<cpp_macro_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L23{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L18{kind}]]]
__
}
class "cpp_variable_template" as C_0004230719769475287964
class C_0004230719769475287964 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable_template.hpp#L13{cpp_variable_template}]] {
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable_template.hpp#L16{kind}]]]
+variable() const noexcept : const cpp_variable & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable_template.hpp#L26{variable}]]]
__
}
class "cpp_template_specialization" as C_0004233610848520158216
class C_0004233610848520158216 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L177{cpp_template_specialization}]] {
+arguments() const noexcept : type_safe::array_ref<const cpp_template_argument> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L196{arguments}]]]
+arguments_exposed() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L187{arguments_exposed}]]]
+is_full_specialization() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L212{is_full_specialization}]]]
+primary_template() const noexcept : cpp_template_ref [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L181{primary_template}]]]
+unexposed_arguments() const noexcept : const cpp_token_string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template.hpp#L206{unexposed_arguments}]]]
__
}
class "cpp_enum_value" as C_0004557712457062916037
class C_0004557712457062916037 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L21{cpp_enum_value}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_expression> value = nullptr) : std::unique_ptr<cpp_enum_value> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L28{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L24{kind}]]]
+value() const noexcept : type_safe::basic_optional<const cpp_expression> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L34{value}]]]
__
}
class "cpp_using_declaration" as C_0004873264564117253886
class C_0004873264564117253886 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L164{cpp_using_declaration}]] {
{static} +build(cpp_entity_ref target) : std::unique_ptr<cpp_using_declaration> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L172{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L167{kind}]]]
+target() const noexcept : const cpp_entity_ref & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L179{target}]]]
__
}
class "cpp_access_specifier" as C_0005654748856299689229
class C_0005654748856299689229 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L37{cpp_access_specifier}]] {
+access_specifier() const noexcept : cpp_access_specifier_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L51{access_specifier}]]]
{static} +build(cpp_access_specifier_kind kind) : std::unique_ptr<cpp_access_specifier> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L45{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L40{kind}]]]
__
}
class "cpp_include_directive" as C_0005687090430143692961
class C_0005687090430143692961 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L154{cpp_include_directive}]] {
{static} +build(const cpp_file_ref & target, cpp_include_kind kind, std::string full_path) : std::unique_ptr<cpp_include_directive> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L162{build}]]]
+full_path() const noexcept : const std::string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L183{full_path}]]]
+include_kind() const noexcept : cpp_include_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L177{include_kind}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L157{kind}]]]
+target() const noexcept : cpp_file_ref [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L171{target}]]]
__
}
class "cpp_template_template_parameter" as C_0006031188480135369622
class C_0006031188480135369622 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L173{cpp_template_template_parameter}]] {
+default_template() const noexcept : type_safe::basic_optional<cpp_template_ref> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L234{default_template}]]]
+keyword() const noexcept : cpp_template_keyword [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L228{keyword}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L176{kind}]]]
+parameters() const noexcept : detail::iteratable_intrusive_list<cpp_template_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L222{parameters}]]]
__
}
class "cpp_using_directive" as C_0007075944699303142096
class C_0007075944699303142096 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L133{cpp_using_directive}]] {
{static} +build(cpp_namespace_ref target) : std::unique_ptr<cpp_using_directive> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L141{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L136{kind}]]]
+target() const : const cpp_namespace_ref & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L147{target}]]]
__
}
class "cpp_enum" as C_0007312676154739140870
class C_0007312676154739140870 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L53{cpp_enum}]] {
+has_explicit_type() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L114{has_explicit_type}]]]
+is_scoped() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L120{is_scoped}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L58{kind}]]]
+underlying_type() const noexcept : const cpp_type & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_enum.hpp#L108{underlying_type}]]]
__
}
class "cpp_alias_template" as C_0007597908654956310057
class C_0007597908654956310057 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_alias_template.hpp#L13{cpp_alias_template}]] {
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_alias_template.hpp#L16{kind}]]]
+type_alias() const noexcept : const cpp_type_alias & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_alias_template.hpp#L26{type_alias}]]]
__
}
class "cpp_concept" as C_0008120007476062488875
class C_0008120007476062488875 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_concept.hpp#L17{cpp_concept}]] {
+constraint_expression() const noexcept : const cpp_expression & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_concept.hpp#L29{constraint_expression}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_concept.hpp#L20{kind}]]]
+parameters() const noexcept : const cpp_token_string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_concept.hpp#L23{parameters}]]]
__
}
class "cpp_function" as C_0008238402371001678400
class C_0008238402371001678400 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L201{cpp_function}]] {
+is_consteval() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L257{is_consteval}]]]
+is_constexpr() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L251{is_constexpr}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L204{kind}]]]
+return_type() const noexcept : const cpp_type & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L237{return_type}]]]
+storage_class() const noexcept : cpp_storage_class_specifiers [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L245{storage_class}]]]
__
}
class "cpp_static_assert" as C_0008285094756580070255
class C_0008285094756580070255 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_static_assert.hpp#L12{cpp_static_assert}]] {
{static} +build(std::unique_ptr<cpp_expression> expr, std::string msg) : std::unique_ptr<cpp_static_assert> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_static_assert.hpp#L19{build}]]]
+expression() const noexcept : const cpp_expression & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_static_assert.hpp#L27{expression}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_static_assert.hpp#L15{kind}]]]
+message() const noexcept : const std::string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_static_assert.hpp#L33{message}]]]
__
}
class "cpp_bitfield" as C_0009136645971418938112
class C_0009136645971418938112 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L53{cpp_bitfield}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_type> type, unsigned int no_bits, bool is_mutable) : std::unique_ptr<cpp_bitfield> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L60{build}]]]
{static} +build(std::unique_ptr<cpp_type> type, unsigned int no_bits, bool is_mutable) : std::unique_ptr<cpp_bitfield> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L66{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L56{kind}]]]
+no_bits() const noexcept : unsigned int [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L70{no_bits}]]]
__
}
class "cpp_template_parameter" as C_0009267542389196346145
class C_0009267542389196346145 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L17{cpp_template_parameter}]] {
+is_variadic() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L21{is_variadic}]]]
__
}
class "cpp_function_base" as C_0009784562603582606826
class C_0009784562603582606826 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L68{cpp_function_base}]] {
+body_kind() const noexcept : cpp_function_body_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L80{body_kind}]]]
+is_variadic() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L95{is_variadic}]]]
+noexcept_condition() const noexcept : type_safe::basic_optional<const cpp_expression> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L89{noexcept_condition}]]]
+parameters() const noexcept : detail::iteratable_intrusive_list<cpp_function_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L73{parameters}]]]
+signature() const : std::string [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L103{signature}]]]
__
}
class "cpp_file" as C_0009988748056411922181
class C_0009988748056411922181 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_file.hpp#L27{cpp_file}]] {
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_file.hpp#L30{kind}]]]
+unmatched_comments() const noexcept : type_safe::array_ref<const cpp_doc_comment> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_file.hpp#L71{unmatched_comments}]]]
__
}
class "cpp_member_variable_base" as C_0010327243877904530778
class C_0010327243877904530778 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L13{cpp_member_variable_base}]] {
+cpp_member_variable_base(std::string name, std::unique_ptr<cpp_type> type, std::unique_ptr<cpp_expression> def, bool is_mutable) : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L22{cpp_member_variable_base}]]]
..
+is_mutable() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L17{is_mutable}]]]
__
}
class "cpp_namespace" as C_0010549045533069850854
class C_0010549045533069850854 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L15{cpp_namespace}]] {
+is_anonymous() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L68{is_anonymous}]]]
+is_inline() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L56{is_inline}]]]
+is_nested() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L62{is_nested}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L19{kind}]]]
__
}
class "cpp_function_parameter" as C_0010820776029759690744
class C_0010820776029759690744 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L16{cpp_function_parameter}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_type> type, std::unique_ptr<cpp_expression> def = nullptr) : std::unique_ptr<cpp_function_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L22{build}]]]
{static} +build(std::unique_ptr<cpp_type> type, std::unique_ptr<cpp_expression> def = nullptr) : std::unique_ptr<cpp_function_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L30{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function.hpp#L19{kind}]]]
__
}
class "cpp_language_linkage" as C_0010950920259104279349
class C_0010950920259104279349 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_language_linkage.hpp#L13{cpp_language_linkage}]] {
+cpp_entity(std::string) : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_language_linkage.hpp#L53{cpp_entity}]]]
+is_block() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_language_linkage.hpp#L50{is_block}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_language_linkage.hpp#L17{kind}]]]
__
}
class "cpp_function_template" as C_0011606065587562226682
class C_0011606065587562226682 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function_template.hpp#L13{cpp_function_template}]] {
+function() const noexcept : const cpp_function_base & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function_template.hpp#L26{function}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function_template.hpp#L16{kind}]]]
__
}
class "cpp_non_type_template_parameter" as C_0011690277265699054121
class C_0011690277265699054121 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L137{cpp_non_type_template_parameter}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_type> type, bool is_variadic, std::unique_ptr<cpp_expression> default_value = nullptr) : std::unique_ptr<cpp_non_type_template_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L145{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L141{kind}]]]
__
}
class "cpp_base_class" as C_0012106362760772955090
class C_0012106362760772955090 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L67{cpp_base_class}]] {
+access_specifier() const noexcept : cpp_access_specifier_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L89{access_specifier}]]]
{static} +build(std::string name, std::unique_ptr<cpp_type> base, cpp_access_specifier_kind access, bool is_virtual) : std::unique_ptr<cpp_base_class> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L75{build}]]]
+is_virtual() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L95{is_virtual}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L70{kind}]]]
+type() const : const cpp_type & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class.hpp#L83{type}]]]
__
}
class "cpp_destructor" as C_0012177656741415012122
class C_0012177656741415012122 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L295{cpp_destructor}]] {
+is_virtual() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L318{is_virtual}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L298{kind}]]]
+virtual_info() const noexcept : cpp_virtual [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L324{virtual_info}]]]
__
}
class "cpp_type_alias" as C_0013221475101342136913
class C_0013221475101342136913 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_type_alias.hpp#L14{cpp_type_alias}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_type> type) : std::unique_ptr<cpp_type_alias> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_type_alias.hpp#L20{build}]]]
{static} +build(std::string name, std::unique_ptr<cpp_type> type) : std::unique_ptr<cpp_type_alias> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_type_alias.hpp#L25{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_type_alias.hpp#L17{kind}]]]
+underlying_type() const noexcept : const cpp_type & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_type_alias.hpp#L28{underlying_type}]]]
__
}
class "cpp_macro_definition" as C_0013286893680611750870
class C_0013286893680611750870 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L35{cpp_macro_definition}]] {
{static} +build_object_like(std::string name, std::string replacement) : std::unique_ptr<cpp_macro_definition> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L43{build_object_like}]]]
+is_function_like() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L110{is_function_like}]]]
+is_object_like() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L104{is_object_like}]]]
+is_variadic() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L116{is_variadic}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L38{kind}]]]
+parameters() const noexcept : detail::iteratable_intrusive_list<cpp_macro_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L123{parameters}]]]
+replacement() const noexcept : const std::string & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_preprocessor.hpp#L98{replacement}]]]
__
}
class "cpp_template_type_parameter" as C_0013382832105265801194
class C_0013382832105265801194 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L47{cpp_template_type_parameter}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, cpp_template_keyword kw, bool variadic, std::unique_ptr<cpp_type> default_type = nullptr, type_safe::basic_optional<cpp_token_string> concept_constraint = type_safe::nullopt) : std::unique_ptr<cpp_template_type_parameter> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L54{build}]]]
+concept_constraint() const noexcept : const type_safe::basic_optional<cpp_token_string> & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L71{concept_constraint}]]]
+default_type() const noexcept : type_safe::basic_optional<const cpp_type> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L60{default_type}]]]
+keyword() const noexcept : cpp_template_keyword [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L66{keyword}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_template_parameter.hpp#L50{kind}]]]
__
}
class "cpp_variable" as C_0013717450342305293971
class C_0013717450342305293971 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable.hpp#L18{cpp_variable}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_type> type, std::unique_ptr<cpp_expression> def, cpp_storage_class_specifiers spec, bool is_constexpr, type_safe::basic_optional<cpp_entity_ref> semantic_parent = = {}) : std::unique_ptr<cpp_variable> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable.hpp#L27{build}]]]
{static} +build_declaration(cpp_entity_id definition_id, std::string name, std::unique_ptr<cpp_type> type, cpp_storage_class_specifiers spec, bool is_constexpr, type_safe::basic_optional<cpp_entity_ref> semantic_parent = = {}) : std::unique_ptr<cpp_variable> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable.hpp#L36{build_declaration}]]]
+is_constexpr() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable.hpp#L48{is_constexpr}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable.hpp#L23{kind}]]]
+storage_class() const noexcept : cpp_storage_class_specifiers [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_variable.hpp#L42{storage_class}]]]
__
}
class "cpp_conversion_op" as C_0013975785137753859543
class C_0013975785137753859543 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L191{cpp_conversion_op}]] {
+is_explicit() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L214{is_explicit}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L194{kind}]]]
__
}
class "cpp_class_template_specialization" as C_0014101478609557655267
class C_0014101478609557655267 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class_template.hpp#L42{cpp_class_template_specialization}]] {
+class_() const noexcept : const cpp_class & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class_template.hpp#L55{class_}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_class_template.hpp#L45{kind}]]]
__
}
class "cpp_member_function_base" as C_0014267907891975603941
class C_0014267907891975603941 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L63{cpp_member_function_base}]] {
+cv_qualifier() const noexcept : cpp_cv [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L85{cv_qualifier}]]]
+is_consteval() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L103{is_consteval}]]]
+is_constexpr() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L97{is_constexpr}]]]
+is_virtual() const noexcept : bool [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L73{is_virtual}]]]
+ref_qualifier() const noexcept : cpp_reference [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L91{ref_qualifier}]]]
+return_type() const noexcept : const cpp_type & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L67{return_type}]]]
+virtual_info() const noexcept : const cpp_virtual & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_function.hpp#L79{virtual_info}]]]
__
}
class "cpp_function_template_specialization" as C_0015297399042783341047
class C_0015297399042783341047 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function_template.hpp#L42{cpp_function_template_specialization}]] {
+function() const noexcept : const cpp_function_base & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function_template.hpp#L59{function}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_function_template.hpp#L45{kind}]]]
__
}
class "cpp_member_variable" as C_0017651782178406027967
class C_0017651782178406027967 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L33{cpp_member_variable}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, std::unique_ptr<cpp_type> type, std::unique_ptr<cpp_expression> def, bool is_mutable) : std::unique_ptr<cpp_member_variable> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L40{build}]]]
+cpp_member_variable_base(std::string, std::unique_ptr<cpp_type>, std::unique_ptr<cpp_expression>, bool) : void [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L47{cpp_member_variable_base}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_member_variable.hpp#L36{kind}]]]
__
}
class "cpp_namespace_alias" as C_0001387303117080103145
class C_0001387303117080103145 [[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L102{cpp_namespace_alias}]] {
{static} +build(const cpp_entity_index & idx, cpp_entity_id id, std::string name, cpp_namespace_ref target) : std::unique_ptr<cpp_namespace_alias> [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L108{build}]]]
{static} +kind() noexcept : cpp_entity_kind [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L105{kind}]]]
+target() const noexcept : const cpp_namespace_ref & [[[https://github.com/foonathan/cppast/blob/5329e377ab9b9ab9309e9641f3fcda04366a449a/include/cppast/cpp_namespace.hpp#L114{target}]]]
__
}
C_0014837562978658247224 <|-- C_0011598861676029238614
C_0014837562978658247224 <|-- C_0002424370915184415608
C_0014837562978658247224 <|-- C_0000056978405368650305
C_0009784562603582606826 <|-- C_0000744208881657781993
C_0014267907891975603941 <|-- C_0001638276770736048147
C_0000056978405368650305 <|-- C_0002839554221933236183
C_0014837562978658247224 <|-- C_0003247661836250681946
C_0014837562978658247224 <|-- C_0003851227765737185001
C_0000056978405368650305 <|-- C_0004230719769475287964
C_0000056978405368650305 <|-- C_0004233610848520158216
C_0014837562978658247224 <|-- C_0004557712457062916037
C_0014837562978658247224 <|-- C_0004873264564117253886
C_0014837562978658247224 <|-- C_0005654748856299689229
C_0014837562978658247224 <|-- C_0005687090430143692961
C_0009267542389196346145 <|-- C_0006031188480135369622
C_0014837562978658247224 <|-- C_0007075944699303142096
C_0014837562978658247224 <|-- C_0007312676154739140870
C_0000056978405368650305 <|-- C_0007597908654956310057
C_0014837562978658247224 <|-- C_0008120007476062488875
C_0009784562603582606826 <|-- C_0008238402371001678400
C_0014837562978658247224 <|-- C_0008285094756580070255
C_0010327243877904530778 <|-- C_0009136645971418938112
C_0014837562978658247224 <|-- C_0009267542389196346145
C_0014837562978658247224 <|-- C_0009784562603582606826
C_0014837562978658247224 <|-- C_0009988748056411922181
C_0014837562978658247224 <|-- C_0010327243877904530778
C_0001476801060215450073 <|-- C_0010327243877904530778
C_0014837562978658247224 <|-- C_0010549045533069850854
C_0014837562978658247224 <|-- C_0010820776029759690744
C_0001476801060215450073 <|-- C_0010820776029759690744
C_0014837562978658247224 <|-- C_0010950920259104279349
C_0000056978405368650305 <|-- C_0011606065587562226682
C_0009267542389196346145 <|-- C_0011690277265699054121
C_0001476801060215450073 <|-- C_0011690277265699054121
C_0014837562978658247224 <|-- C_0012106362760772955090
C_0009784562603582606826 <|-- C_0012177656741415012122
C_0014837562978658247224 <|-- C_0013221475101342136913
C_0014837562978658247224 <|-- C_0013286893680611750870
C_0009267542389196346145 <|-- C_0013382832105265801194
C_0014837562978658247224 <|-- C_0013717450342305293971
C_0001476801060215450073 <|-- C_0013717450342305293971
C_0014267907891975603941 <|-- C_0013975785137753859543
C_0004233610848520158216 <|-- C_0014101478609557655267
C_0009784562603582606826 <|-- C_0014267907891975603941
C_0004233610848520158216 <|-- C_0015297399042783341047
C_0010327243877904530778 <|-- C_0017651782178406027967
C_0014837562978658247224 <|-- C_0001387303117080103145

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
