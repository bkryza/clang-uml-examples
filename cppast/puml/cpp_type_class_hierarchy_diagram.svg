<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1312px" preserveAspectRatio="none" style="width:401px;height:1312px;" version="1.1" viewBox="0 0 401 1312" width="401px" zoomAndPan="magnify"><defs><filter height="300%" id="f6dfqhayrekch" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[732db0a11060460351cae0b9d00a3488]
class C_0000005325--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L14" target="_top" title="A [cppast::cpp_type]() that is a function. A function pointer is created by wrapping it in [cppast::cpp_pointer_type]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L14" xlink:show="new" xlink:title="A [cppast::cpp_type]() that is a function. A function pointer is created by wrapping it in [cppast::cpp_pointer_type]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005325" style="stroke: #A80036; stroke-width: 1.5;" width="145" x="200" y="8"/><ellipse cx="215" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M217.9688,29.6406 Q217.3906,29.9375 216.75,30.0781 Q216.1094,30.2344 215.4063,30.2344 Q212.9063,30.2344 211.5781,28.5938 Q210.2656,26.9375 210.2656,23.8125 Q210.2656,20.6875 211.5781,19.0313 Q212.9063,17.375 215.4063,17.375 Q216.1094,17.375 216.75,17.5313 Q217.4063,17.6875 217.9688,17.9844 L217.9688,20.7031 Q217.3438,20.125 216.75,19.8594 Q216.1563,19.5781 215.5313,19.5781 Q214.1875,19.5781 213.5,20.6563 Q212.8125,21.7188 212.8125,23.8125 Q212.8125,25.9063 213.5,26.9844 Q214.1875,28.0469 215.5313,28.0469 Q216.1563,28.0469 216.75,27.7813 Q217.3438,27.5 217.9688,26.9219 L217.9688,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="229" y="28.1543">cpp_function_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="201" x2="344" y1="40" y2="40"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="201" x2="344" y1="48" y2="48"/></a><!--MD5=[98b00cc78386185d442899decc383801]
class C_0000005357--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L87" target="_top" title="A [cppast::cpp_type]() that is a member function. A member function with cv qualifier is created by wrapping it in [cppast::cpp_cv_qualified_type](). A member function with reference qualifier is created by wrapping it in [cppast::cpp_reference_type]()...." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L87" xlink:show="new" xlink:title="A [cppast::cpp_type]() that is a member function. A member function with cv qualifier is created by wrapping it in [cppast::cpp_cv_qualified_type](). A member function with reference qualifier is created by wrapping it in [cppast::cpp_reference_type]()...." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005357" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="171.5" y="91"/><ellipse cx="186.5" cy="107" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M189.4688,112.6406 Q188.8906,112.9375 188.25,113.0781 Q187.6094,113.2344 186.9063,113.2344 Q184.4063,113.2344 183.0781,111.5938 Q181.7656,109.9375 181.7656,106.8125 Q181.7656,103.6875 183.0781,102.0313 Q184.4063,100.375 186.9063,100.375 Q187.6094,100.375 188.25,100.5313 Q188.9063,100.6875 189.4688,100.9844 L189.4688,103.7031 Q188.8438,103.125 188.25,102.8594 Q187.6563,102.5781 187.0313,102.5781 Q185.6875,102.5781 185,103.6563 Q184.3125,104.7188 184.3125,106.8125 Q184.3125,108.9063 185,109.9844 Q185.6875,111.0469 187.0313,111.0469 Q187.6563,111.0469 188.25,110.7813 Q188.8438,110.5 189.4688,109.9219 L189.4688,112.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="200.5" y="111.1543">cpp_member_function_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="172.5" x2="372.5" y1="123" y2="123"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="172.5" x2="372.5" y1="131" y2="131"/></a><!--MD5=[daa607c10f1cad77ec0f928c40612efd]
class C_0000005399--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L164" target="_top" title="A [cppast::cpp_type]() that is a member object. A member object pointer is created by wrapping it in [cppast::cpp_pointer_type]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L164" xlink:show="new" xlink:title="A [cppast::cpp_type]() that is a member object. A member object pointer is created by wrapping it in [cppast::cpp_pointer_type]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005399" style="stroke: #A80036; stroke-width: 1.5;" width="190" x="177.5" y="174"/><ellipse cx="192.5" cy="190" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M195.4688,195.6406 Q194.8906,195.9375 194.25,196.0781 Q193.6094,196.2344 192.9063,196.2344 Q190.4063,196.2344 189.0781,194.5938 Q187.7656,192.9375 187.7656,189.8125 Q187.7656,186.6875 189.0781,185.0313 Q190.4063,183.375 192.9063,183.375 Q193.6094,183.375 194.25,183.5313 Q194.9063,183.6875 195.4688,183.9844 L195.4688,186.7031 Q194.8438,186.125 194.25,185.8594 Q193.6563,185.5781 193.0313,185.5781 Q191.6875,185.5781 191,186.6563 Q190.3125,187.7188 190.3125,189.8125 Q190.3125,191.9063 191,192.9844 Q191.6875,194.0469 193.0313,194.0469 Q193.6563,194.0469 194.25,193.7813 Q194.8438,193.5 195.4688,192.9219 L195.4688,195.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="206.5" y="194.1543">cpp_member_object_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="178.5" x2="366.5" y1="206" y2="206"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="178.5" x2="366.5" y1="214" y2="214"/></a><!--MD5=[4c7e6977c2e5cf7f593c308223aff69c]
class C_0000005499--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_template.hpp#L93" target="_top" title="A [cppast::cpp_type]() representing an instantiation of a [cppast::cpp_template]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_template.hpp#L93" xlink:show="new" xlink:title="A [cppast::cpp_type]() representing an instantiation of a [cppast::cpp_template]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005499" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="155" y="257"/><ellipse cx="170" cy="273" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M172.9688,278.6406 Q172.3906,278.9375 171.75,279.0781 Q171.1094,279.2344 170.4063,279.2344 Q167.9063,279.2344 166.5781,277.5938 Q165.2656,275.9375 165.2656,272.8125 Q165.2656,269.6875 166.5781,268.0313 Q167.9063,266.375 170.4063,266.375 Q171.1094,266.375 171.75,266.5313 Q172.4063,266.6875 172.9688,266.9844 L172.9688,269.7031 Q172.3438,269.125 171.75,268.8594 Q171.1563,268.5781 170.5313,268.5781 Q169.1875,268.5781 168.5,269.6563 Q167.8125,270.7188 167.8125,272.8125 Q167.8125,274.9063 168.5,275.9844 Q169.1875,277.0469 170.5313,277.0469 Q171.1563,277.0469 171.75,276.7813 Q172.3438,276.5 172.9688,275.9219 L172.9688,278.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="203" x="184" y="277.1543">cpp_template_instantiation_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="156" x2="389" y1="289" y2="289"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="156" x2="389" y1="297" y2="297"/></a><!--MD5=[d456ae9bbe5f4c9db2e2db3ea53b4192]
class C_0000005750--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_decltype_type.hpp#L13" target="_top" title="A [cppast::cpp_type]() that isn't given but taken from an expression." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_decltype_type.hpp#L13" xlink:show="new" xlink:title="A [cppast::cpp_type]() that isn't given but taken from an expression." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005750" style="stroke: #A80036; stroke-width: 1.5;" width="147" x="199" y="340"/><ellipse cx="214" cy="356" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M216.9688,361.6406 Q216.3906,361.9375 215.75,362.0781 Q215.1094,362.2344 214.4063,362.2344 Q211.9063,362.2344 210.5781,360.5938 Q209.2656,358.9375 209.2656,355.8125 Q209.2656,352.6875 210.5781,351.0313 Q211.9063,349.375 214.4063,349.375 Q215.1094,349.375 215.75,349.5313 Q216.4063,349.6875 216.9688,349.9844 L216.9688,352.7031 Q216.3438,352.125 215.75,351.8594 Q215.1563,351.5781 214.5313,351.5781 Q213.1875,351.5781 212.5,352.6563 Q211.8125,353.7188 211.8125,355.8125 Q211.8125,357.9063 212.5,358.9844 Q213.1875,360.0469 214.5313,360.0469 Q215.1563,360.0469 215.75,359.7813 Q216.3438,359.5 216.9688,358.9219 L216.9688,361.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="228" y="360.1543">cpp_decltype_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="200" x2="345" y1="372" y2="372"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="200" x2="345" y1="380" y2="380"/></a><!--MD5=[75be0a6198b5c01d434a2c8ce5a5e3db]
class C_0000005764--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_decltype_type.hpp#L40" target="_top" title="A [cppast::cpp_type]() that isn't given but deduced using the `decltype` rules." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_decltype_type.hpp#L40" xlink:show="new" xlink:title="A [cppast::cpp_type]() that isn't given but deduced using the `decltype` rules." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005764" style="stroke: #A80036; stroke-width: 1.5;" width="182" x="181.5" y="423"/><ellipse cx="196.5" cy="439" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M199.4688,444.6406 Q198.8906,444.9375 198.25,445.0781 Q197.6094,445.2344 196.9063,445.2344 Q194.4063,445.2344 193.0781,443.5938 Q191.7656,441.9375 191.7656,438.8125 Q191.7656,435.6875 193.0781,434.0313 Q194.4063,432.375 196.9063,432.375 Q197.6094,432.375 198.25,432.5313 Q198.9063,432.6875 199.4688,432.9844 L199.4688,435.7031 Q198.8438,435.125 198.25,434.8594 Q197.6563,434.5781 197.0313,434.5781 Q195.6875,434.5781 195,435.6563 Q194.3125,436.7188 194.3125,438.8125 Q194.3125,440.9063 195,441.9844 Q195.6875,443.0469 197.0313,443.0469 Q197.6563,443.0469 198.25,442.7813 Q198.8438,442.5 199.4688,441.9219 L199.4688,444.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="150" x="210.5" y="443.1543">cpp_decltype_auto_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="182.5" x2="362.5" y1="455" y2="455"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="182.5" x2="362.5" y1="463" y2="463"/></a><!--MD5=[132416cf9e0d20e3a98f3fe60a185dc4]
class C_0000005855--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_array_type.hpp#L13" target="_top" title="An array of a [cppast::cpp_type]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_array_type.hpp#L13" xlink:show="new" xlink:title="An array of a [cppast::cpp_type]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000005855" style="stroke: #A80036; stroke-width: 1.5;" width="126" x="209.5" y="506"/><ellipse cx="224.5" cy="522" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M227.4688,527.6406 Q226.8906,527.9375 226.25,528.0781 Q225.6094,528.2344 224.9063,528.2344 Q222.4063,528.2344 221.0781,526.5938 Q219.7656,524.9375 219.7656,521.8125 Q219.7656,518.6875 221.0781,517.0313 Q222.4063,515.375 224.9063,515.375 Q225.6094,515.375 226.25,515.5313 Q226.9063,515.6875 227.4688,515.9844 L227.4688,518.7031 Q226.8438,518.125 226.25,517.8594 Q225.6563,517.5781 225.0313,517.5781 Q223.6875,517.5781 223,518.6563 Q222.3125,519.7188 222.3125,521.8125 Q222.3125,523.9063 223,524.9844 Q223.6875,526.0469 225.0313,526.0469 Q225.6563,526.0469 226.25,525.7813 Q226.8438,525.5 227.4688,524.9219 L227.4688,527.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="94" x="238.5" y="526.1543">cpp_array_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="210.5" x2="334.5" y1="538" y2="538"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="210.5" x2="334.5" y1="546" y2="546"/></a><!--MD5=[6c2e953746538a99f5c66b1cf9977e08]
class C_0000006025--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_template_parameter.hpp#L97" target="_top" title="A [cppast::cpp_type]() defined by a [cppast::cpp_template_type_parameter]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_template_parameter.hpp#L97" xlink:show="new" xlink:title="A [cppast::cpp_type]() defined by a [cppast::cpp_template_type_parameter]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006025" style="stroke: #A80036; stroke-width: 1.5;" width="222" x="161.5" y="589"/><ellipse cx="176.5" cy="605" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M179.4688,610.6406 Q178.8906,610.9375 178.25,611.0781 Q177.6094,611.2344 176.9063,611.2344 Q174.4063,611.2344 173.0781,609.5938 Q171.7656,607.9375 171.7656,604.8125 Q171.7656,601.6875 173.0781,600.0313 Q174.4063,598.375 176.9063,598.375 Q177.6094,598.375 178.25,598.5313 Q178.9063,598.6875 179.4688,598.9844 L179.4688,601.7031 Q178.8438,601.125 178.25,600.8594 Q177.6563,600.5781 177.0313,600.5781 Q175.6875,600.5781 175,601.6563 Q174.3125,602.7188 174.3125,604.8125 Q174.3125,606.9063 175,607.9844 Q175.6875,609.0469 177.0313,609.0469 Q177.6563,609.0469 178.25,608.7813 Q178.8438,608.5 179.4688,607.9219 L179.4688,610.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="190" x="190.5" y="609.1543">cpp_template_parameter_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="162.5" x2="382.5" y1="621" y2="621"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="162.5" x2="382.5" y1="629" y2="629"/></a><!--MD5=[abd45c489927ac2eefb499052a50549f]
class C_0000006348--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L44" target="_top" title="Base class for all C++ types." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L44" xlink:show="new" xlink:title="Base class for all C++ types." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006348" style="stroke: #A80036; stroke-width: 1.5;" width="89" x="6" y="631"/><ellipse cx="21" cy="647" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21.1094,642.3438 L19.9531,647.4219 L22.2813,647.4219 L21.1094,642.3438 Z M19.625,640.1094 L22.6094,640.1094 L25.9688,652.5 L23.5156,652.5 L22.75,649.4375 L19.4688,649.4375 L18.7188,652.5 L16.2813,652.5 L19.625,640.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="35" y="651.1543">cpp_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="94" y1="663" y2="663"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="94" y1="671" y2="671"/></a><!--MD5=[d76e19448472d029ad04efd684a69ad1]
class C_0000006383--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L95" target="_top" title="An unexposed [cppast::cpp_type](). This is one where no further information besides a name is available." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L95" xlink:show="new" xlink:title="An unexposed [cppast::cpp_type](). This is one where no further information besides a name is available." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006383" style="stroke: #A80036; stroke-width: 1.5;" width="163" x="191" y="672"/><ellipse cx="206" cy="688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M208.9688,693.6406 Q208.3906,693.9375 207.75,694.0781 Q207.1094,694.2344 206.4063,694.2344 Q203.9063,694.2344 202.5781,692.5938 Q201.2656,690.9375 201.2656,687.8125 Q201.2656,684.6875 202.5781,683.0313 Q203.9063,681.375 206.4063,681.375 Q207.1094,681.375 207.75,681.5313 Q208.4063,681.6875 208.9688,681.9844 L208.9688,684.7031 Q208.3438,684.125 207.75,683.8594 Q207.1563,683.5781 206.5313,683.5781 Q205.1875,683.5781 204.5,684.6563 Q203.8125,685.7188 203.8125,687.8125 Q203.8125,689.9063 204.5,690.9844 Q205.1875,692.0469 206.5313,692.0469 Q207.1563,692.0469 207.75,691.7813 Q208.3438,691.5 208.9688,690.9219 L208.9688,693.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="131" x="220" y="692.1543">cpp_unexposed_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="192" x2="353" y1="704" y2="704"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="192" x2="353" y1="712" y2="712"/></a><!--MD5=[266389a8d9370485594f51252df2c3a1]
class C_0000006418--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L161" target="_top" title="A builtin [cppast::cpp_type](). This is one where there is no associated [cppast::cpp_entity]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L161" xlink:show="new" xlink:title="A builtin [cppast::cpp_type](). This is one where there is no associated [cppast::cpp_entity]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006418" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="206.5" y="755"/><ellipse cx="221.5" cy="771" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M224.4688,776.6406 Q223.8906,776.9375 223.25,777.0781 Q222.6094,777.2344 221.9063,777.2344 Q219.4063,777.2344 218.0781,775.5938 Q216.7656,773.9375 216.7656,770.8125 Q216.7656,767.6875 218.0781,766.0313 Q219.4063,764.375 221.9063,764.375 Q222.6094,764.375 223.25,764.5313 Q223.9063,764.6875 224.4688,764.9844 L224.4688,767.7031 Q223.8438,767.125 223.25,766.8594 Q222.6563,766.5781 222.0313,766.5781 Q220.6875,766.5781 220,767.6563 Q219.3125,768.7188 219.3125,770.8125 Q219.3125,772.9063 220,773.9844 Q220.6875,775.0469 222.0313,775.0469 Q222.6563,775.0469 223.25,774.7813 Q223.8438,774.5 224.4688,773.9219 L224.4688,776.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="235.5" y="775.1543">cpp_builtin_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="207.5" x2="337.5" y1="787" y2="787"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="207.5" x2="337.5" y1="795" y2="795"/></a><!--MD5=[ed8f9fb1ab90228d883e8fc402686448]
class C_0000006472--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L202" target="_top" title="A user-defined [cppast::cpp_type](). It has an associated [cppast::cpp_entity]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L202" xlink:show="new" xlink:title="A user-defined [cppast::cpp_type](). It has an associated [cppast::cpp_entity]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006472" style="stroke: #A80036; stroke-width: 1.5;" width="175" x="185" y="838"/><ellipse cx="200" cy="854" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M202.9688,859.6406 Q202.3906,859.9375 201.75,860.0781 Q201.1094,860.2344 200.4063,860.2344 Q197.9063,860.2344 196.5781,858.5938 Q195.2656,856.9375 195.2656,853.8125 Q195.2656,850.6875 196.5781,849.0313 Q197.9063,847.375 200.4063,847.375 Q201.1094,847.375 201.75,847.5313 Q202.4063,847.6875 202.9688,847.9844 L202.9688,850.7031 Q202.3438,850.125 201.75,849.8594 Q201.1563,849.5781 200.5313,849.5781 Q199.1875,849.5781 198.5,850.6563 Q197.8125,851.7188 197.8125,853.8125 Q197.8125,855.9063 198.5,856.9844 Q199.1875,858.0469 200.5313,858.0469 Q201.1563,858.0469 201.75,857.7813 Q202.3438,857.5 202.9688,856.9219 L202.9688,859.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="214" y="858.1543">cpp_user_defined_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="186" x2="359" y1="870" y2="870"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="186" x2="359" y1="878" y2="878"/></a><!--MD5=[e70e56d0045ea9c2000b828145b212fc]
class C_0000006545--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L230" target="_top" title="A [cppast::cpp_type]() that isn't given but deduced by `auto`." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L230" xlink:show="new" xlink:title="A [cppast::cpp_type]() that isn't given but deduced by `auto`." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006545" style="stroke: #A80036; stroke-width: 1.5;" width="123" x="211" y="921"/><ellipse cx="226" cy="937" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M228.9688,942.6406 Q228.3906,942.9375 227.75,943.0781 Q227.1094,943.2344 226.4063,943.2344 Q223.9063,943.2344 222.5781,941.5938 Q221.2656,939.9375 221.2656,936.8125 Q221.2656,933.6875 222.5781,932.0313 Q223.9063,930.375 226.4063,930.375 Q227.1094,930.375 227.75,930.5313 Q228.4063,930.6875 228.9688,930.9844 L228.9688,933.7031 Q228.3438,933.125 227.75,932.8594 Q227.1563,932.5781 226.5313,932.5781 Q225.1875,932.5781 224.5,933.6563 Q223.8125,934.7188 223.8125,936.8125 Q223.8125,938.9063 224.5,939.9844 Q225.1875,941.0469 226.5313,941.0469 Q227.1563,941.0469 227.75,940.7813 Q228.3438,940.5 228.9688,939.9219 L228.9688,942.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="240" y="941.1543">cpp_auto_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="212" x2="333" y1="953" y2="953"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="212" x2="333" y1="961" y2="961"/></a><!--MD5=[3fb14a59c58ef0f47b39734146692987]
class C_0000006564--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L249" target="_top" title="A [cppast::cpp_type]() that depends on another type." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L249" xlink:show="new" xlink:title="A [cppast::cpp_type]() that depends on another type." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006564" style="stroke: #A80036; stroke-width: 1.5;" width="163" x="191" y="1004"/><ellipse cx="206" cy="1020" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M208.9688,1025.6406 Q208.3906,1025.9375 207.75,1026.0781 Q207.1094,1026.2344 206.4063,1026.2344 Q203.9063,1026.2344 202.5781,1024.5938 Q201.2656,1022.9375 201.2656,1019.8125 Q201.2656,1016.6875 202.5781,1015.0313 Q203.9063,1013.375 206.4063,1013.375 Q207.1094,1013.375 207.75,1013.5313 Q208.4063,1013.6875 208.9688,1013.9844 L208.9688,1016.7031 Q208.3438,1016.125 207.75,1015.8594 Q207.1563,1015.5781 206.5313,1015.5781 Q205.1875,1015.5781 204.5,1016.6563 Q203.8125,1017.7188 203.8125,1019.8125 Q203.8125,1021.9063 204.5,1022.9844 Q205.1875,1024.0469 206.5313,1024.0469 Q207.1563,1024.0469 207.75,1023.7813 Q208.3438,1023.5 208.9688,1022.9219 L208.9688,1025.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="131" x="220" y="1024.1543">cpp_dependent_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="192" x2="353" y1="1036" y2="1036"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="192" x2="353" y1="1044" y2="1044"/></a><!--MD5=[96b5f6452326289191bb357bf920e979]
class C_0000006623--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L311" target="_top" title="A [cppast::cpp_cv]() qualified [cppast::cpp_type]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L311" xlink:show="new" xlink:title="A [cppast::cpp_cv]() qualified [cppast::cpp_type]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006623" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="189.5" y="1087"/><ellipse cx="204.5" cy="1103" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M207.4688,1108.6406 Q206.8906,1108.9375 206.25,1109.0781 Q205.6094,1109.2344 204.9063,1109.2344 Q202.4063,1109.2344 201.0781,1107.5938 Q199.7656,1105.9375 199.7656,1102.8125 Q199.7656,1099.6875 201.0781,1098.0313 Q202.4063,1096.375 204.9063,1096.375 Q205.6094,1096.375 206.25,1096.5313 Q206.9063,1096.6875 207.4688,1096.9844 L207.4688,1099.7031 Q206.8438,1099.125 206.25,1098.8594 Q205.6563,1098.5781 205.0313,1098.5781 Q203.6875,1098.5781 203,1099.6563 Q202.3125,1100.7188 202.3125,1102.8125 Q202.3125,1104.9063 203,1105.9844 Q203.6875,1107.0469 205.0313,1107.0469 Q205.6563,1107.0469 206.25,1106.7813 Q206.8438,1106.5 207.4688,1105.9219 L207.4688,1108.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="134" x="218.5" y="1107.1543">cpp_cv_qualified_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="190.5" x2="354.5" y1="1119" y2="1119"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190.5" x2="354.5" y1="1127" y2="1127"/></a><!--MD5=[3770651da10c21405a551c2e67e2ae37]
class C_0000006670--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L359" target="_top" title="A pointer to a [cppast::cpp_type]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L359" xlink:show="new" xlink:title="A pointer to a [cppast::cpp_type]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006670" style="stroke: #A80036; stroke-width: 1.5;" width="139" x="203" y="1170"/><ellipse cx="218" cy="1186" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M220.9688,1191.6406 Q220.3906,1191.9375 219.75,1192.0781 Q219.1094,1192.2344 218.4063,1192.2344 Q215.9063,1192.2344 214.5781,1190.5938 Q213.2656,1188.9375 213.2656,1185.8125 Q213.2656,1182.6875 214.5781,1181.0313 Q215.9063,1179.375 218.4063,1179.375 Q219.1094,1179.375 219.75,1179.5313 Q220.4063,1179.6875 220.9688,1179.9844 L220.9688,1182.7031 Q220.3438,1182.125 219.75,1181.8594 Q219.1563,1181.5781 218.5313,1181.5781 Q217.1875,1181.5781 216.5,1182.6563 Q215.8125,1183.7188 215.8125,1185.8125 Q215.8125,1187.9063 216.5,1188.9844 Q217.1875,1190.0469 218.5313,1190.0469 Q219.1563,1190.0469 219.75,1189.7813 Q220.3438,1189.5 220.9688,1188.9219 L220.9688,1191.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="232" y="1190.1543">cpp_pointer_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="204" x2="341" y1="1202" y2="1202"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="204" x2="341" y1="1210" y2="1210"/></a><!--MD5=[cd2f729b8d333b4a133e847ece61e652]
class C_0000006727--><a href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L394" target="_top" title="A reference to a [cppast::cpp_type]()." xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L394" xlink:show="new" xlink:title="A reference to a [cppast::cpp_type]()." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6dfqhayrekch)" height="48" id="C_0000006727" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="195" y="1253"/><ellipse cx="210" cy="1269" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M212.9688,1274.6406 Q212.3906,1274.9375 211.75,1275.0781 Q211.1094,1275.2344 210.4063,1275.2344 Q207.9063,1275.2344 206.5781,1273.5938 Q205.2656,1271.9375 205.2656,1268.8125 Q205.2656,1265.6875 206.5781,1264.0313 Q207.9063,1262.375 210.4063,1262.375 Q211.1094,1262.375 211.75,1262.5313 Q212.4063,1262.6875 212.9688,1262.9844 L212.9688,1265.7031 Q212.3438,1265.125 211.75,1264.8594 Q211.1563,1264.5781 210.5313,1264.5781 Q209.1875,1264.5781 208.5,1265.6563 Q207.8125,1266.7188 207.8125,1268.8125 Q207.8125,1270.9063 208.5,1271.9844 Q209.1875,1273.0469 210.5313,1273.0469 Q211.1563,1273.0469 211.75,1272.7813 Q212.3438,1272.5 212.9688,1271.9219 L212.9688,1274.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="224" y="1273.1543">cpp_reference_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="196" x2="349" y1="1285" y2="1285"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="196" x2="349" y1="1293" y2="1293"/></a><!--MD5=[ed6fcfce50f3f82197cb3a78dd11bff8]
reverse link C_0000006348 to C_0000005325--><path d="M53.71,610.78 C60.64,489.39 85.73,154.55 155,73 C166.59,59.35 183.02,50.25 199.89,44.17 " fill="none" id="C_0000006348&lt;-C_0000005325" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="60.7,611.27,52.62,630.86,46.72,610.51,60.7,611.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[caf720fa0cab705d174f07dcf19c55a7]
reverse link C_0000006348 to C_0000005357--><path d="M55.16,610.68 C65.02,501.6 95.48,224.08 155,156 C160.86,149.3 167.88,143.7 175.53,139.01 " fill="none" id="C_0000006348&lt;-C_0000005357" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="62.13,611.38,53.42,630.7,48.18,610.17,62.13,611.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4649e73641fe9441b3f5741102dc1a36]
reverse link C_0000006348 to C_0000005399--><path d="M57.11,611.13 C70.11,515.8 105.05,293.91 155,239 C161.42,231.94 169.13,226.1 177.48,221.26 " fill="none" id="C_0000006348&lt;-C_0000005399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="64.04,612.06,54.47,630.96,50.17,610.21,64.04,612.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[90993ff65aff5b03e14331ce5b5684dd]
reverse link C_0000006348 to C_0000005499--><path d="M53.07,610.44 C57.94,539.94 77.48,402.44 155,322 C161.4,315.36 168.93,309.8 177.04,305.13 " fill="none" id="C_0000006348&lt;-C_0000005499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="60.04,611.23,51.95,630.82,46.06,610.46,60.04,611.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7897e1340d6080612bc465ff5c2378ae]
reverse link C_0000006348 to C_0000005750--><path d="M58.47,610.86 C69.47,555.44 95.99,460.9 155,405 C167.22,393.42 182.9,385.09 198.77,379.1 " fill="none" id="C_0000006348&lt;-C_0000005750" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="65.34,612.24,54.88,630.67,51.56,609.74,65.34,612.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c8aca6a43f51b0f344350502cca4f7cc]
reverse link C_0000006348 to C_0000005764--><path d="M68.11,612.47 C84.82,574.85 113.99,520.97 155,488 C163.27,481.35 172.7,475.74 182.53,471.01 " fill="none" id="C_0000006348&lt;-C_0000005764" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="74.54,615.25,60.32,630.96,61.64,609.81,74.54,615.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e4597bd26f941466044bde9e27773317]
reverse link C_0000006348 to C_0000005855--><path d="M90.98,617.57 C109.37,601.61 132.19,583.76 155,571 C171.84,561.58 191.24,553.71 209.32,547.48 " fill="none" id="C_0000006348&lt;-C_0000005855" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="95.64,622.8,76.07,630.94,86.29,612.37,95.64,622.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c24894fc1da2299f951faf9ed3bc3a63]
reverse link C_0000006348 to C_0000006025--><path d="M115.08,642.86 C129.61,640.09 145.46,637.06 161.32,634.03 " fill="none" id="C_0000006348&lt;-C_0000006025" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="116.19,649.78,95.23,646.65,113.56,636.03,116.19,649.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2352598cb9c1094e5e4cf8ccd392f69e]
reverse link C_0000006348 to C_0000006383--><path d="M114.99,666.83 C138.68,671.25 165.89,676.32 190.91,680.98 " fill="none" id="C_0000006348&lt;-C_0000006383" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="113.61,673.7,95.23,663.15,116.17,659.93,113.61,673.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ccf3f8da7012d00bb916d909ee8fcbf3]
reverse link C_0000006348 to C_0000006418--><path d="M92.19,692.28 C110.43,707.62 132.8,724.64 155,737 C170.97,745.89 189.17,753.51 206.37,759.72 " fill="none" id="C_0000006348&lt;-C_0000006418" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="87.55,697.53,77.04,679.13,96.73,686.95,87.55,697.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[899e3856c573231ccbac0832da771adc]
reverse link C_0000006348 to C_0000006472--><path d="M68.55,697.51 C85.43,734.6 114.58,787.43 155,820 C163.96,827.22 174.26,833.25 184.95,838.28 " fill="none" id="C_0000006348&lt;-C_0000006472" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="62.06,700.14,60.55,679,74.91,694.58,62.06,700.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d100dfaebe2c864e9b7c21df2719d193]
reverse link C_0000006348 to C_0000006545--><path d="M58.72,699.09 C69.93,754.04 96.66,847.47 155,903 C170.34,917.6 191.12,927.18 210.89,933.45 " fill="none" id="C_0000006348&lt;-C_0000006545" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="51.77,700.04,54.98,679.09,65.53,697.47,51.77,700.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[50dc77ff49941cb21e8b69e96d80ff5e]
reverse link C_0000006348 to C_0000006564--><path d="M53.23,699.23 C58.31,769.22 78.14,905.77 155,986 C164.89,996.32 177.5,1004.12 190.76,1010 " fill="none" id="C_0000006348&lt;-C_0000006564" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="46.22,699.38,52.04,679,60.2,698.56,46.22,699.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4682c64fec2648a322be9ce9acca57c5]
reverse link C_0000006348 to C_0000006623--><path d="M57.25,699.27 C70.44,794.43 105.57,1014.3 155,1069 C164.37,1079.37 176.49,1087.18 189.37,1093.06 " fill="none" id="C_0000006348&lt;-C_0000006623" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="50.28,699.94,54.54,679.19,64.15,698.07,50.28,699.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[28a23f77dfe5dc5adbff83e05e832420]
reverse link C_0000006348 to C_0000006670--><path d="M55.22,699.12 C65.21,807.7 95.94,1083.98 155,1152 C167.4,1166.29 185.05,1175.71 202.86,1181.93 " fill="none" id="C_0000006348&lt;-C_0000006670" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="48.25,699.73,53.45,679.19,62.19,698.49,48.25,699.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7deb9aa368c74f2a50ae77b89ef6d211]
reverse link C_0000006348 to C_0000006727--><path d="M53.76,699.04 C60.83,819.95 86.24,1153.48 155,1235 C165.4,1247.33 179.7,1256.03 194.73,1262.19 " fill="none" id="C_0000006348&lt;-C_0000006727" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="46.77,699.4,52.65,679.04,60.75,698.62,46.77,699.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[74907fe4bd1f2e2231b1a8a2126d58f0]
@startuml
left to right direction
class "cpp_function_type" as C_0000005325
class C_0000005325 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L14{A [cppast::cpp_type]() that is a function. A function pointer is created by wrapping it in [cppast::cpp_pointer_type]().}]] {
}
class "cpp_member_function_type" as C_0000005357
class C_0000005357 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L87{A [cppast::cpp_type]() that is a member function. A member function with cv qualifier is created by wrapping it in [cppast::cpp_cv_qualified_type](). A member function with reference qualifier is created by wrapping it in [cppast::cpp_reference_type]()....}]] {
}
class "cpp_member_object_type" as C_0000005399
class C_0000005399 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_function_type.hpp#L164{A [cppast::cpp_type]() that is a member object. A member object pointer is created by wrapping it in [cppast::cpp_pointer_type]().}]] {
}
class "cpp_template_instantiation_type" as C_0000005499
class C_0000005499 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_template.hpp#L93{A [cppast::cpp_type]() representing an instantiation of a [cppast::cpp_template]().}]] {
}
class "cpp_decltype_type" as C_0000005750
class C_0000005750 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_decltype_type.hpp#L13{A [cppast::cpp_type]() that isn't given but taken from an expression.}]] {
}
class "cpp_decltype_auto_type" as C_0000005764
class C_0000005764 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_decltype_type.hpp#L40{A [cppast::cpp_type]() that isn't given but deduced using the `decltype` rules.}]] {
}
class "cpp_array_type" as C_0000005855
class C_0000005855 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_array_type.hpp#L13{An array of a [cppast::cpp_type]().}]] {
}
class "cpp_template_parameter_type" as C_0000006025
class C_0000006025 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_template_parameter.hpp#L97{A [cppast::cpp_type]() defined by a [cppast::cpp_template_type_parameter]().}]] {
}
abstract "cpp_type" as C_0000006348
abstract C_0000006348 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L44{Base class for all C++ types.}]] {
}
class "cpp_unexposed_type" as C_0000006383
class C_0000006383 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L95{An unexposed [cppast::cpp_type](). This is one where no further information besides a name is available.}]] {
}
class "cpp_builtin_type" as C_0000006418
class C_0000006418 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L161{A builtin [cppast::cpp_type](). This is one where there is no associated [cppast::cpp_entity]().}]] {
}
class "cpp_user_defined_type" as C_0000006472
class C_0000006472 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L202{A user-defined [cppast::cpp_type](). It has an associated [cppast::cpp_entity]().}]] {
}
class "cpp_auto_type" as C_0000006545
class C_0000006545 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L230{A [cppast::cpp_type]() that isn't given but deduced by `auto`.}]] {
}
class "cpp_dependent_type" as C_0000006564
class C_0000006564 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L249{A [cppast::cpp_type]() that depends on another type.}]] {
}
class "cpp_cv_qualified_type" as C_0000006623
class C_0000006623 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L311{A [cppast::cpp_cv]() qualified [cppast::cpp_type]().}]] {
}
class "cpp_pointer_type" as C_0000006670
class C_0000006670 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L359{A pointer to a [cppast::cpp_type]().}]] {
}
class "cpp_reference_type" as C_0000006727
class C_0000006727 [[https://github.com/foonathan/cppast/blob/19cbc378f8a6b3fe7d04b309784a3a0920de9e75/include/cppast/cpp_type.hpp#L394{A reference to a [cppast::cpp_type]().}]] {
}
C_0000006348 <|- - C_0000005325
C_0000006348 <|- - C_0000005357
C_0000006348 <|- - C_0000005399
C_0000006348 <|- - C_0000005499
C_0000006348 <|- - C_0000005750
C_0000006348 <|- - C_0000005764
C_0000006348 <|- - C_0000005855
C_0000006348 <|- - C_0000006025
C_0000006348 <|- - C_0000006383
C_0000006348 <|- - C_0000006418
C_0000006348 <|- - C_0000006472
C_0000006348 <|- - C_0000006545
C_0000006348 <|- - C_0000006564
C_0000006348 <|- - C_0000006623
C_0000006348 <|- - C_0000006670
C_0000006348 <|- - C_0000006727
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.15+10-Ubuntu-0ubuntu0.21.10.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>