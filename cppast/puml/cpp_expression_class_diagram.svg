<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="618px" preserveAspectRatio="none" style="width:1466px;height:618px;" version="1.1" viewBox="0 0 1466 618" width="1466px" zoomAndPan="magnify"><defs><filter height="300%" id="f1v3ccsp4ovhmf" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f9acc1116ddd7ca80d634d52aa69c1c9]
class C_0000674801488983168216--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cppast_fwd.hpp#L93" target="_top" title="cpp_expression_kind" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cppast_fwd.hpp#L93" xlink:show="new" xlink:title="cpp_expression_kind" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1v3ccsp4ovhmf)" height="73.6094" id="C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.5;" width="161" x="286.17" y="482"/><ellipse cx="301.17" cy="498" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M305.2794,504 L297.5606,504 L297.5606,491.6094 L305.2794,491.6094 L305.2794,493.7656 L300.0138,493.7656 L300.0138,496.4375 L304.7794,496.4375 L304.7794,498.5938 L300.0138,498.5938 L300.0138,501.8438 L305.2794,501.8438 L305.2794,504 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="315.17" y="502.1543">cpp_expression_kind</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="287.17" x2="446.17" y1="514" y2="514"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="292.17" y="528.2104">literal_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="292.17" y="541.0151">unexposed_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="287.17" x2="446.17" y1="547.6094" y2="547.6094"/></a><!--MD5=[4c12a51903926c4184eed03e07bdd7c6]
class C_0001585653041236922459--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L44" target="_top" title="cpp_type" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L44" xlink:show="new" xlink:title="cpp_type" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1v3ccsp4ovhmf)" height="176.0469" id="C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="1062.17" y="431"/><ellipse cx="1164.92" cy="447" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1165.0294,442.3438 L1163.8731,447.4219 L1166.2013,447.4219 L1165.0294,442.3438 Z M1163.545,440.1094 L1166.5294,440.1094 L1169.8888,452.5 L1167.4356,452.5 L1166.67,449.4375 L1163.3888,449.4375 L1162.6388,452.5 L1160.2013,452.5 L1163.545,440.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="1185.42" y="451.1543">cpp_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.17" x2="1332.17" y1="463" y2="463"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1068.17" y="469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070.17" y="471"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1082.17" y="477.2104">user_data_ : std::atomic&lt;void *&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.17" x2="1332.17" y1="483.8047" y2="483.8047"/><ellipse cx="1073.17" cy="494.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1082.17" y="498.0151">cpp_type(const cpp_type &amp; ) : void</text><ellipse cx="1073.17" cy="507.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1082.17" y="510.8198">operator=(const cpp_type &amp; ) : cpp_type &amp;</text><ellipse cx="1073.17" cy="520.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1082.17" y="523.6245">~cpp_type() = default : void</text><ellipse cx="1073.17" cy="533.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1082.17" y="536.4292">kind() const : cpp_type_kind</text><ellipse cx="1073.17" cy="546.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1082.17" y="549.2339">user_data() const : void *</text><ellipse cx="1073.17" cy="558.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1082.17" y="562.0386">set_user_data(void * data) const : void</text><polygon fill="#FFFF44" points="1073.17,566.6328,1077.17,570.6328,1073.17,574.6328,1069.17,570.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1082.17" y="574.8433">cpp_type() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070.17" y="581.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="1082.17" y="587.6479">do_get_kind() const = 0 : cpp_type_kind</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070.17" y="594.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="1082.17" y="600.4526">on_insert(const cpp_type &amp; ) : void</text><!--MD5=[38d1077848c5cc3074880e3f02ae30cd]
class C_0002228471918600734475--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L24" target="_top" title="cpp_expression" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L24" xlink:show="new" xlink:title="cpp_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1v3ccsp4ovhmf)" height="188.8516" id="C_0002228471918600734475" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="841.17" y="8"/><ellipse cx="963.42" cy="24" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M963.5294,19.3438 L962.3731,24.4219 L964.7013,24.4219 L963.5294,19.3438 Z M962.045,17.1094 L965.0294,17.1094 L968.3888,29.5 L965.9356,29.5 L965.17,26.4375 L961.8888,26.4375 L961.1388,29.5 L958.7013,29.5 L962.045,17.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="96" x="983.92" y="28.1543">cpp_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="842.17" x2="1189.17" y1="40" y2="40"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="847.17" y="46"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="849.17" y="48"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="861.17" y="54.2104">type_ : std::unique_ptr&lt;cpp_type&gt;</text></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="847.17" y="58.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="849.17" y="60.8047"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="861.17" y="67.0151">user_data_ : std::atomic&lt;void *&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="842.17" x2="1189.17" y1="73.6094" y2="73.6094"/><ellipse cx="852.17" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="861.17" y="87.8198">cpp_expression(const cpp_expression &amp; ) : void</text><ellipse cx="852.17" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="861.17" y="100.6245">operator=(const cpp_expression &amp; ) : cpp_expression &amp;</text><ellipse cx="852.17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="861.17" y="113.4292">~cpp_expression() = default : void</text><ellipse cx="852.17" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="861.17" y="126.2339">kind() const : cpp_expression_kind</text><ellipse cx="852.17" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="861.17" y="139.0386">type() const : const cpp_type &amp;</text><ellipse cx="852.17" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="861.17" y="151.8433">user_data() const : void *</text><ellipse cx="852.17" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="861.17" y="164.6479">set_user_data(void * data) const : void</text><polygon fill="#FFFF44" points="852.17,169.2422,856.17,173.2422,852.17,177.2422,848.17,173.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="861.17" y="177.4526">cpp_expression(std::unique_ptr&lt;cpp_type&gt; type) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="849.17" y="184.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="861.17" y="190.2573">do_get_kind() const = 0 : cpp_expression_kind</text><!--MD5=[a7e5d8ce2ef9e291c277fff2a6f3c855]
class C_0000978206085606851269--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L81" target="_top" title="cpp_unexposed_expression" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L81" xlink:show="new" xlink:title="cpp_unexposed_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1v3ccsp4ovhmf)" height="112.0234" id="C_0000978206085606851269" style="stroke: #A80036; stroke-width: 1.5;" width="640" x="46.67" y="258"/><ellipse cx="276.42" cy="274" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M279.3888,279.6406 Q278.8106,279.9375 278.17,280.0781 Q277.5294,280.2344 276.8263,280.2344 Q274.3263,280.2344 272.9981,278.5938 Q271.6856,276.9375 271.6856,273.8125 Q271.6856,270.6875 272.9981,269.0313 Q274.3263,267.375 276.8263,267.375 Q277.5294,267.375 278.17,267.5313 Q278.8263,267.6875 279.3888,267.9844 L279.3888,270.7031 Q278.7638,270.125 278.17,269.8594 Q277.5763,269.5781 276.9513,269.5781 Q275.6075,269.5781 274.92,270.6563 Q274.2325,271.7188 274.2325,273.8125 Q274.2325,275.9063 274.92,276.9844 Q275.6075,278.0469 276.9513,278.0469 Q277.5763,278.0469 278.17,277.7813 Q278.7638,277.5 279.3888,276.9219 L279.3888,279.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="296.92" y="278.1543">cpp_unexposed_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="47.67" x2="685.67" y1="290" y2="290"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" target="_top" title="str_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" xlink:show="new" xlink:title="str_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="52.67" y="296"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="54.67" y="298"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" target="_top" title="str_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" xlink:show="new" xlink:title="str_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="66.67" y="304.2104">str_ : cpp_token_string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="47.67" x2="685.67" y1="310.8047" y2="310.8047"/><ellipse cx="57.67" cy="321.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="614" x="66.67" y="325.0151">build(std::unique_ptr&lt;cpp_type&gt; type, cpp_token_string str) : std::unique_ptr&lt;cpp_unexposed_expression&gt;</text><ellipse cx="57.67" cy="334.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="66.67" y="337.8198">expression() const : const cpp_token_string &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="54.67" y="344.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="66.67" y="350.6245">cpp_unexposed_expression(std::unique_ptr&lt;cpp_type&gt; type, cpp_token_string str) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="54.67" y="357.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="66.67" y="363.4292">do_get_kind() const : cpp_expression_kind</text><!--MD5=[9ce27dad6ff5607624e74c4cf796696e]
class C_0001481645313438672561--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L112" target="_top" title="cpp_literal_expression" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L112" xlink:show="new" xlink:title="cpp_literal_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1v3ccsp4ovhmf)" height="112.0234" id="C_0001481645313438672561" style="stroke: #A80036; stroke-width: 1.5;" width="587" x="722.17" y="258"/><ellipse cx="942.42" cy="274" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M945.3888,279.6406 Q944.8106,279.9375 944.17,280.0781 Q943.5294,280.2344 942.8263,280.2344 Q940.3263,280.2344 938.9981,278.5938 Q937.6856,276.9375 937.6856,273.8125 Q937.6856,270.6875 938.9981,269.0313 Q940.3263,267.375 942.8263,267.375 Q943.5294,267.375 944.17,267.5313 Q944.8263,267.6875 945.3888,267.9844 L945.3888,270.7031 Q944.7638,270.125 944.17,269.8594 Q943.5763,269.5781 942.9513,269.5781 Q941.6075,269.5781 940.92,270.6563 Q940.2325,271.7188 940.2325,273.8125 Q940.2325,275.9063 940.92,276.9844 Q941.6075,278.0469 942.9513,278.0469 Q943.5763,278.0469 944.17,277.7813 Q944.7638,277.5 945.3888,276.9219 L945.3888,279.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="138" x="962.92" y="278.1543">cpp_literal_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="723.17" x2="1308.17" y1="290" y2="290"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" target="_top" title="value_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" xlink:show="new" xlink:title="value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="728.17" y="296"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="730.17" y="298"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" target="_top" title="value_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" xlink:show="new" xlink:title="value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="742.17" y="304.2104">value_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="723.17" x2="1308.17" y1="310.8047" y2="310.8047"/><ellipse cx="733.17" cy="321.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="561" x="742.17" y="325.0151">build(std::unique_ptr&lt;cpp_type&gt; type, std::string value) : std::unique_ptr&lt;cpp_literal_expression&gt;</text><ellipse cx="733.17" cy="334.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="742.17" y="337.8198">value() const : const std::string &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="730.17" y="344.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="742.17" y="350.6245">cpp_literal_expression(std::unique_ptr&lt;cpp_type&gt; type, std::string value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="730.17" y="357.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="742.17" y="363.4292">do_get_kind() const : cpp_expression_kind</text><!--MD5=[2e77956ab42342b5a37b99bfc5359ee7]
link C_0002228471918600734475 to C_0000674801488983168216--><path d="M841.13,104.72 C586.23,110.62 131.21,138.16 28.67,258 C-3.69,295.82 1.43,328.34 28.67,370 C84.15,454.86 200.23,491.36 280.77,506.86 " fill="none" id="C_0002228471918600734475-&gt;C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="286.02,507.85,277.9192,502.2485,281.1069,506.9217,276.4338,510.1094,286.02,507.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[02d43daa8b7b03173c2af277117b1393]
link C_0002228471918600734475 to C_0001585653041236922459--><path d="M1190.36,140.74 C1296.45,168.04 1415.3,208.83 1435.67,258 C1454.72,303.99 1454.72,324.01 1435.67,370 C1417.57,413.7 1378.9,445.55 1337.89,468.25 " fill="none" id="C_0002228471918600734475-&gt;C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1333.4,470.7,1343.2154,469.8885,1337.7862,468.2997,1339.3749,462.8706,1333.4,470.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9791a9f7d95f122f697c2bf1195e32f4]
reverse link C_0002228471918600734475 to C_0001585653041236922459--><path d="M1202.58,156.09 C1251.32,179.21 1298.14,211.96 1326.67,258 C1352.9,300.31 1344.13,323.39 1326.67,370 C1318.54,391.7 1305.63,412.32 1291.04,430.9 " fill="none" id="C_0002228471918600734475&lt;-C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1190.49,150.56,1194.2842,156.6922,1201.404,155.5485,1197.6098,149.4163,1190.49,150.56" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1345.67" y="311.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1355.67" y="318.5669">type_</text><!--MD5=[7776aeb207e8e400d48823f9f45c6a81]
link C_0000978206085606851269 to C_0001585653041236922459--><path d="M591.83,370 C740.24,406.26 930,452.61 1057.25,483.7 " fill="none" id="C_0000978206085606851269-&gt;C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1062.12,484.89,1054.3254,478.8697,1057.2626,483.7042,1052.4281,486.6415,1062.12,484.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf2609361509cebaa5939c7246f5bccd]
link C_0000978206085606851269 to C_0000674801488983168216--><path d="M366.67,370.2 C366.67,403.72 366.67,445.81 366.67,476.49 " fill="none" id="C_0000978206085606851269-&gt;C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="366.67,481.7,370.67,472.7,366.67,476.7,362.67,472.7,366.67,481.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c02a1d54be50fc37a15c5f7613182716]
reverse link C_0002228471918600734475 to C_0000978206085606851269--><path d="M821.85,166.07 C731.38,195.27 624.64,229.73 537.27,257.93 " fill="none" id="C_0002228471918600734475&lt;-C_0000978206085606851269" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="819.71,159.4,840.9,159.92,824.01,172.72,819.71,159.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[890df95fa6d88b45e1286a18d96d9a95]
link C_0001481645313438672561 to C_0001585653041236922459--><path d="M1065.16,370.2 C1080.85,387.7 1098.64,407.54 1115.97,426.87 " fill="none" id="C_0001481645313438672561-&gt;C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1119.43,430.73,1116.3825,421.3645,1116.0852,427.0135,1110.4361,426.7162,1119.43,430.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dbcdec1266ea18e9ded02314f901658f]
link C_0001481645313438672561 to C_0000674801488983168216--><path d="M839.61,370.07 C713.92,409.38 550.35,460.55 452.21,491.25 " fill="none" id="C_0001481645313438672561-&gt;C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="447.29,492.78,457.0753,493.8968,452.0599,491.2805,454.6761,486.265,447.29,492.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ae8e11f3e92b5017da0a0143b79a36a]
reverse link C_0002228471918600734475 to C_0001481645313438672561--><path d="M1015.67,217.67 C1015.67,231.59 1015.67,245.3 1015.67,257.78 " fill="none" id="C_0002228471918600734475&lt;-C_0001481645313438672561" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1008.67,217.22,1015.67,197.22,1022.67,217.22,1008.67,217.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b476d734e0675636151c43a4b8263acd]
@startuml
enum "cpp_expression_kind" as C_0000674801488983168216
enum C_0000674801488983168216 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cppast_fwd.hpp#L93{cpp_expression_kind}]] {
literal_t
unexposed_t
}
abstract "cpp_type" as C_0001585653041236922459
abstract C_0001585653041236922459 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L44{cpp_type}]] {
+cpp_type(const cpp_type & ) : void
+operator=(const cpp_type & ) : cpp_type &
+~cpp_type() = default : void
+kind() const : cpp_type_kind
+user_data() const : void *
+set_user_data(void * data) const : void
#cpp_type() : void
{abstract} -do_get_kind() const = 0 : cpp_type_kind
-on_insert(const cpp_type & ) : void
-user_data_ : std::atomic<void *> [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85{user_data_}]]]
}
abstract "cpp_expression" as C_0002228471918600734475
abstract C_0002228471918600734475 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L24{cpp_expression}]] {
+cpp_expression(const cpp_expression & ) : void
+operator=(const cpp_expression & ) : cpp_expression &
+~cpp_expression() = default : void
+kind() const : cpp_expression_kind
+type() const : const cpp_type &
+user_data() const : void *
+set_user_data(void * data) const : void
#cpp_expression(std::unique_ptr<cpp_type> type) : void
{abstract} -do_get_kind() const = 0 : cpp_expression_kind
-type_ : std::unique_ptr<cpp_type> [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74{type_}]]]
-user_data_ : std::atomic<void *> [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75{user_data_}]]]
}
class "cpp_unexposed_expression" as C_0000978206085606851269
class C_0000978206085606851269 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L81{cpp_unexposed_expression}]] {
{static} +build(std::unique_ptr<cpp_type> type, cpp_token_string str) : std::unique_ptr<cpp_unexposed_expression>
+expression() const : const cpp_token_string &
-cpp_unexposed_expression(std::unique_ptr<cpp_type> type, cpp_token_string str) : void
-do_get_kind() const : cpp_expression_kind
-str_ : cpp_token_string [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108{str_}]]]
}
class "cpp_literal_expression" as C_0001481645313438672561
class C_0001481645313438672561 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L112{cpp_literal_expression}]] {
{static} +build(std::unique_ptr<cpp_type> type, std::string value) : std::unique_ptr<cpp_literal_expression>
+value() const : const std::string &
-cpp_literal_expression(std::unique_ptr<cpp_type> type, std::string value) : void
-do_get_kind() const : cpp_expression_kind
-value_ : std::string [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139{value_}]]]
}
C_0002228471918600734475 ..> C_0000674801488983168216
C_0002228471918600734475 ..> C_0001585653041236922459
C_0002228471918600734475 o- - C_0001585653041236922459 : -type_
C_0000978206085606851269 ..> C_0001585653041236922459
C_0000978206085606851269 ..> C_0000674801488983168216
C_0002228471918600734475 <|- - C_0000978206085606851269
C_0001481645313438672561 ..> C_0001585653041236922459
C_0001481645313438672561 ..> C_0000674801488983168216
C_0002228471918600734475 <|- - C_0001481645313438672561

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>