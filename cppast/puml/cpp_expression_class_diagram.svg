<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="658px" preserveAspectRatio="none" style="width:1469px;height:658px;" version="1.1" viewBox="0 0 1469 658" width="1469px" zoomAndPan="magnify"><defs><filter height="300%" id="f1s4c3s46g2ap3" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f9acc1116ddd7ca80d634d52aa69c1c9]
class C_0000674801488983168216--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cppast_fwd.hpp#L93" target="_top" title="cpp_expression_kind" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cppast_fwd.hpp#L93" xlink:show="new" xlink:title="cpp_expression_kind" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s4c3s46g2ap3)" height="73.6094" id="C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.5;" width="161" x="287.4" y="514"/><ellipse cx="302.4" cy="530" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M306.5094,536 L298.7906,536 L298.7906,523.6094 L306.5094,523.6094 L306.5094,525.7656 L301.2438,525.7656 L301.2438,528.4375 L306.0094,528.4375 L306.0094,530.5938 L301.2438,530.5938 L301.2438,533.8438 L306.5094,533.8438 L306.5094,536 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="316.4" y="534.1543">cpp_expression_kind</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="288.4" x2="447.4" y1="546" y2="546"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="293.4" y="560.2104">literal_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="293.4" y="573.0151">unexposed_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="288.4" x2="447.4" y1="579.6094" y2="579.6094"/></a><!--MD5=[4c12a51903926c4184eed03e07bdd7c6]
class C_0001585653041236922459--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L44" target="_top" title="cpp_type" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L44" xlink:show="new" xlink:title="cpp_type" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s4c3s46g2ap3)" height="192.0469" id="C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.5;" width="326" x="1035.9" y="455"/><ellipse cx="1166.15" cy="471" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1166.2594,466.3438 L1165.1031,471.4219 L1167.4313,471.4219 L1166.2594,466.3438 Z M1164.775,464.1094 L1167.7594,464.1094 L1171.1188,476.5 L1168.6656,476.5 L1167.9,473.4375 L1164.6188,473.4375 L1163.8688,476.5 L1161.4313,476.5 L1164.775,464.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="1186.65" y="475.1543">cpp_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1036.9" x2="1360.9" y1="487" y2="487"/><ellipse cx="1046.9" cy="498" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="1055.9" y="501.2104">cpp_type(const cpp_type &amp;) = deleted : void</text><polygon fill="#FFFF44" points="1046.9,505.8047,1050.9,509.8047,1046.9,513.8047,1042.9,509.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1055.9" y="514.0151">cpp_type() noexcept : void</text><ellipse cx="1046.9" cy="523.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1055.9" y="526.8198">~cpp_type() noexcept = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1036.9" x2="1360.9" y1="533.4141" y2="533.4141"/><ellipse cx="1046.9" cy="544.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="1055.9" y="547.6245">operator=(const cpp_type &amp;) = deleted : cpp_type &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1036.9" x2="1360.9" y1="554.2188" y2="554.2188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1043.9" y="562.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="281" x="1055.9" y="568.4292">do_get_kind() const noexcept = 0 : cpp_type_kind</text><ellipse cx="1046.9" cy="578.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="1055.9" y="581.2339">kind() const noexcept : cpp_type_kind</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1043.9" y="587.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1055.9" y="594.0386">on_insert(const cpp_type &amp;) : void</text><ellipse cx="1046.9" cy="603.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1055.9" y="606.8433">set_user_data(void * data) const noexcept : void</text><ellipse cx="1046.9" cy="616.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="1055.9" y="619.6479">user_data() const noexcept : void *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1036.9" x2="1360.9" y1="626.2422" y2="626.2422"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1041.9" y="632.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1043.9" y="634.2422"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1055.9" y="640.4526">user_data_ : std::atomic&lt;void *&gt;</text></a><!--MD5=[38d1077848c5cc3074880e3f02ae30cd]
class C_0002228471918600734475--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L24" target="_top" title="cpp_expression" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L24" xlink:show="new" xlink:title="cpp_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s4c3s46g2ap3)" height="204.8516" id="C_0002228471918600734475" style="stroke: #A80036; stroke-width: 1.5;" width="404" x="814.9" y="8"/><ellipse cx="964.65" cy="24" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M964.7594,19.3438 L963.6031,24.4219 L965.9313,24.4219 L964.7594,19.3438 Z M963.275,17.1094 L966.2594,17.1094 L969.6188,29.5 L967.1656,29.5 L966.4,26.4375 L963.1188,26.4375 L962.3688,29.5 L959.9313,29.5 L963.275,17.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="96" x="985.15" y="28.1543">cpp_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="815.9" x2="1217.9" y1="40" y2="40"/><ellipse cx="825.9" cy="51" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="834.9" y="54.2104">cpp_expression(const cpp_expression &amp;) = deleted : void</text><polygon fill="#FFFF44" points="825.9,58.8047,829.9,62.8047,825.9,66.8047,821.9,62.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="834.9" y="67.0151">cpp_expression(std::unique_ptr&lt;cpp_type&gt; type) : void</text><ellipse cx="825.9" cy="76.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="834.9" y="79.8198">~cpp_expression() noexcept = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="815.9" x2="1217.9" y1="86.4141" y2="86.4141"/><ellipse cx="825.9" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="834.9" y="100.6245">operator=(const cpp_expression &amp;) = deleted : cpp_expression &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="815.9" x2="1217.9" y1="107.2188" y2="107.2188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="822.9" y="115.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="318" x="834.9" y="121.4292">do_get_kind() const noexcept = 0 : cpp_expression_kind</text><ellipse cx="825.9" cy="131.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="834.9" y="134.2339">kind() const noexcept : cpp_expression_kind</text><ellipse cx="825.9" cy="143.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="834.9" y="147.0386">set_user_data(void * data) const noexcept : void</text><ellipse cx="825.9" cy="156.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="834.9" y="159.8433">type() const noexcept : const cpp_type &amp;</text><ellipse cx="825.9" cy="169.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="834.9" y="172.6479">user_data() const noexcept : void *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="815.9" x2="1217.9" y1="179.2422" y2="179.2422"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="820.9" y="185.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="822.9" y="187.2422"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="834.9" y="193.4526">type_ : std::unique_ptr&lt;cpp_type&gt;</text></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="820.9" y="198.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="822.9" y="200.0469"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" target="_top" title="user_data_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75" xlink:show="new" xlink:title="user_data_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="834.9" y="206.2573">user_data_ : std::atomic&lt;void *&gt;</text></a><!--MD5=[a7e5d8ce2ef9e291c277fff2a6f3c855]
class C_0000978206085606851269--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L81" target="_top" title="cpp_unexposed_expression" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L81" xlink:show="new" xlink:title="cpp_unexposed_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s4c3s46g2ap3)" height="120.0234" id="C_0000978206085606851269" style="stroke: #A80036; stroke-width: 1.5;" width="640" x="47.9" y="274"/><ellipse cx="277.65" cy="290" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M280.6188,295.6406 Q280.0406,295.9375 279.4,296.0781 Q278.7594,296.2344 278.0563,296.2344 Q275.5563,296.2344 274.2281,294.5938 Q272.9156,292.9375 272.9156,289.8125 Q272.9156,286.6875 274.2281,285.0313 Q275.5563,283.375 278.0563,283.375 Q278.7594,283.375 279.4,283.5313 Q280.0563,283.6875 280.6188,283.9844 L280.6188,286.7031 Q279.9938,286.125 279.4,285.8594 Q278.8063,285.5781 278.1813,285.5781 Q276.8375,285.5781 276.15,286.6563 Q275.4625,287.7188 275.4625,289.8125 Q275.4625,291.9063 276.15,292.9844 Q276.8375,294.0469 278.1813,294.0469 Q278.8063,294.0469 279.4,293.7813 Q279.9938,293.5 280.6188,292.9219 L280.6188,295.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="298.15" y="294.1543">cpp_unexposed_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48.9" x2="686.9" y1="306" y2="306"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="55.9" y="314"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="67.9" y="320.2104">cpp_unexposed_expression(std::unique_ptr&lt;cpp_type&gt; type, cpp_token_string str) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="48.9" x2="686.9" y1="326.8047" y2="326.8047"/><ellipse cx="58.9" cy="337.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="614" x="67.9" y="341.0151">build(std::unique_ptr&lt;cpp_type&gt; type, cpp_token_string str) : std::unique_ptr&lt;cpp_unexposed_expression&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="55.9" y="347.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="67.9" y="353.8198">do_get_kind() const noexcept : cpp_expression_kind</text><ellipse cx="58.9" cy="363.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="67.9" y="366.6245">expression() const noexcept : const cpp_token_string &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48.9" x2="686.9" y1="373.2188" y2="373.2188"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" target="_top" title="str_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" xlink:show="new" xlink:title="str_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="53.9" y="379.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="55.9" y="381.2188"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" target="_top" title="str_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108" xlink:show="new" xlink:title="str_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="67.9" y="387.4292">str_ : cpp_token_string</text></a><!--MD5=[9ce27dad6ff5607624e74c4cf796696e]
class C_0001481645313438672561--><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L112" target="_top" title="cpp_literal_expression" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L112" xlink:show="new" xlink:title="cpp_literal_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s4c3s46g2ap3)" height="120.0234" id="C_0001481645313438672561" style="stroke: #A80036; stroke-width: 1.5;" width="587" x="723.4" y="274"/><ellipse cx="943.65" cy="290" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M946.6188,295.6406 Q946.0406,295.9375 945.4,296.0781 Q944.7594,296.2344 944.0563,296.2344 Q941.5563,296.2344 940.2281,294.5938 Q938.9156,292.9375 938.9156,289.8125 Q938.9156,286.6875 940.2281,285.0313 Q941.5563,283.375 944.0563,283.375 Q944.7594,283.375 945.4,283.5313 Q946.0563,283.6875 946.6188,283.9844 L946.6188,286.7031 Q945.9938,286.125 945.4,285.8594 Q944.8063,285.5781 944.1813,285.5781 Q942.8375,285.5781 942.15,286.6563 Q941.4625,287.7188 941.4625,289.8125 Q941.4625,291.9063 942.15,292.9844 Q942.8375,294.0469 944.1813,294.0469 Q944.8063,294.0469 945.4,293.7813 Q945.9938,293.5 946.6188,292.9219 L946.6188,295.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="138" x="964.15" y="294.1543">cpp_literal_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="724.4" x2="1309.4" y1="306" y2="306"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="731.4" y="314"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="743.4" y="320.2104">cpp_literal_expression(std::unique_ptr&lt;cpp_type&gt; type, std::string value) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="724.4" x2="1309.4" y1="326.8047" y2="326.8047"/><ellipse cx="734.4" cy="337.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="561" x="743.4" y="341.0151">build(std::unique_ptr&lt;cpp_type&gt; type, std::string value) : std::unique_ptr&lt;cpp_literal_expression&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="731.4" y="347.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="743.4" y="353.8198">do_get_kind() const noexcept : cpp_expression_kind</text><ellipse cx="734.4" cy="363.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="743.4" y="366.6245">value() const noexcept : const std::string &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="724.4" x2="1309.4" y1="373.2188" y2="373.2188"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" target="_top" title="value_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" xlink:show="new" xlink:title="value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="729.4" y="379.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="731.4" y="381.2188"/></a><a href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" target="_top" title="value_" xlink:actuate="onRequest" xlink:href="https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139" xlink:show="new" xlink:title="value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="743.4" y="387.4292">value_ : std::string</text></a><!--MD5=[2e77956ab42342b5a37b99bfc5359ee7]
link C_0002228471918600734475 to C_0000674801488983168216--><path d="M814.75,115.14 C555.79,124.56 128.52,157.82 29.9,274 C-4.61,314.66 1.16,349.08 29.9,394 C85.03,480.16 201.19,519.41 281.84,536.83 " fill="none" id="C_0002228471918600734475-&gt;C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="287.1,537.94,279.1298,532.1541,282.2095,536.8992,277.4645,539.9789,287.1,537.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[02d43daa8b7b03173c2af277117b1393]
link C_0002228471918600734475 to C_0001585653041236922459--><path d="M1218.99,127.58 C1308.43,147.06 1401.37,188.22 1436.9,274 C1457.31,323.27 1457.31,344.73 1436.9,394 C1422.7,428.29 1396.33,455.89 1366.17,477.77 " fill="none" id="C_0002228471918600734475-&gt;C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1362.09,480.69,1371.7412,478.7266,1366.1625,477.7892,1367.0999,472.2106,1362.09,480.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9791a9f7d95f122f697c2bf1195e32f4]
reverse link C_0002228471918600734475 to C_0001585653041236922459--><path d="M1230.71,183.33 C1269.41,206.19 1304.78,235.82 1327.9,274 C1355.54,319.62 1345.96,343.82 1327.9,394 C1320.17,415.49 1308.04,436.13 1294.26,454.96 " fill="none" id="C_0002228471918600734475&lt;-C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1219.16,176.76,1222.3972,183.2036,1229.5903,182.6938,1226.3531,176.2501,1219.16,176.76" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1347.9" y="331.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1357.9" y="338.5669">type_</text><!--MD5=[7776aeb207e8e400d48823f9f45c6a81]
link C_0000978206085606851269 to C_0001585653041236922459--><path d="M596.08,394.03 C733.51,429.59 905.53,474.1 1030.6,506.46 " fill="none" id="C_0000978206085606851269-&gt;C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1035.77,507.79,1028.0638,501.657,1030.9304,506.5337,1026.0537,509.4003,1035.77,507.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cf2609361509cebaa5939c7246f5bccd]
link C_0000978206085606851269 to C_0000674801488983168216--><path d="M367.9,394.03 C367.9,430.38 367.9,476.07 367.9,508.58 " fill="none" id="C_0000978206085606851269-&gt;C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="367.9,513.69,371.9,504.69,367.9,508.69,363.9,504.69,367.9,513.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c02a1d54be50fc37a15c5f7613182716]
reverse link C_0002228471918600734475 to C_0000978206085606851269--><path d="M795.69,187 C712.45,215.41 619.09,247.27 540.87,273.97 " fill="none" id="C_0002228471918600734475&lt;-C_0000978206085606851269" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="793.48,180.36,814.67,180.52,798,193.61,793.48,180.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[890df95fa6d88b45e1286a18d96d9a95]
link C_0001481645313438672561 to C_0001585653041236922459--><path d="M1066.87,394.03 C1081.77,411.63 1098.52,431.42 1114.97,450.85 " fill="none" id="C_0001481645313438672561-&gt;C_0001585653041236922459" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1118.25,454.73,1115.5059,445.2711,1115.0267,450.9077,1109.3902,450.4284,1118.25,454.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dbcdec1266ea18e9ded02314f901658f]
link C_0001481645313438672561 to C_0000674801488983168216--><path d="M838.7,394.03 C713.23,435.6 550.86,489.39 453.29,521.71 " fill="none" id="C_0001481645313438672561-&gt;C_0000674801488983168216" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="448.4,523.33,458.2013,524.2964,453.1463,521.7574,455.6852,516.7024,448.4,523.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ae8e11f3e92b5017da0a0143b79a36a]
reverse link C_0002228471918600734475 to C_0001481645313438672561--><path d="M1016.9,233.21 C1016.9,247.33 1016.9,261.22 1016.9,273.94 " fill="none" id="C_0002228471918600734475&lt;-C_0001481645313438672561" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1009.9,233.17,1016.9,213.17,1023.9,233.17,1009.9,233.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[621f6110bcaea807dea4eedd0a53501d]
@startuml
enum "cpp_expression_kind" as C_0000674801488983168216
enum C_0000674801488983168216 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cppast_fwd.hpp#L93{cpp_expression_kind}]] {
literal_t
unexposed_t
}
abstract "cpp_type" as C_0001585653041236922459
abstract C_0001585653041236922459 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L44{cpp_type}]] {
+cpp_type(const cpp_type &) = deleted : void
#cpp_type() noexcept : void
+~cpp_type() noexcept = default : void
..
+operator=(const cpp_type &) = deleted : cpp_type &
..
{abstract} -do_get_kind() const noexcept = 0 : cpp_type_kind
+kind() const noexcept : cpp_type_kind
-on_insert(const cpp_type &) : void
+set_user_data(void * data) const noexcept : void
+user_data() const noexcept : void *
__
-user_data_ : std::atomic<void *> [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_type.hpp#L85{user_data_}]]]
}
abstract "cpp_expression" as C_0002228471918600734475
abstract C_0002228471918600734475 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L24{cpp_expression}]] {
+cpp_expression(const cpp_expression &) = deleted : void
#cpp_expression(std::unique_ptr<cpp_type> type) : void
+~cpp_expression() noexcept = default : void
..
+operator=(const cpp_expression &) = deleted : cpp_expression &
..
{abstract} -do_get_kind() const noexcept = 0 : cpp_expression_kind
+kind() const noexcept : cpp_expression_kind
+set_user_data(void * data) const noexcept : void
+type() const noexcept : const cpp_type &
+user_data() const noexcept : void *
__
-type_ : std::unique_ptr<cpp_type> [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L74{type_}]]]
-user_data_ : std::atomic<void *> [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L75{user_data_}]]]
}
class "cpp_unexposed_expression" as C_0000978206085606851269
class C_0000978206085606851269 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L81{cpp_unexposed_expression}]] {
-cpp_unexposed_expression(std::unique_ptr<cpp_type> type, cpp_token_string str) : void
..
{static} +build(std::unique_ptr<cpp_type> type, cpp_token_string str) : std::unique_ptr<cpp_unexposed_expression>
-do_get_kind() const noexcept : cpp_expression_kind
+expression() const noexcept : const cpp_token_string &
__
-str_ : cpp_token_string [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L108{str_}]]]
}
class "cpp_literal_expression" as C_0001481645313438672561
class C_0001481645313438672561 [[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L112{cpp_literal_expression}]] {
-cpp_literal_expression(std::unique_ptr<cpp_type> type, std::string value) : void
..
{static} +build(std::unique_ptr<cpp_type> type, std::string value) : std::unique_ptr<cpp_literal_expression>
-do_get_kind() const noexcept : cpp_expression_kind
+value() const noexcept : const std::string &
__
-value_ : std::string [[[https://github.com/foonathan/cppast/blob/f00df6675d87c6983033d270728c57a55cd3db22/include/cppast/cpp_expression.hpp#L139{value_}]]]
}
C_0002228471918600734475 ..> C_0000674801488983168216
C_0002228471918600734475 ..> C_0001585653041236922459
C_0002228471918600734475 o- - C_0001585653041236922459 : -type_
C_0000978206085606851269 ..> C_0001585653041236922459
C_0000978206085606851269 ..> C_0000674801488983168216
C_0002228471918600734475 <|- - C_0000978206085606851269
C_0001481645313438672561 ..> C_0001585653041236922459
C_0001481645313438672561 ..> C_0000674801488983168216
C_0002228471918600734475 <|- - C_0001481645313438672561

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>