<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4414px" preserveAspectRatio="none" style="width:4535px;height:4414px;" version="1.1" viewBox="0 0 4535 4414" width="4535px" zoomAndPan="magnify"><defs><filter height="300%" id="f24mvo73gcl6f" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[cf783620a584c64bd1efc066c2bded96]
class C_0001539432614095357204--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L161" target="_top" title="exception_wrapper" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L161" xlink:show="new" xlink:title="exception_wrapper" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="688.2344" id="C_0001539432614095357204" style="stroke: #A80036; stroke-width: 1.5;" width="968" x="265.48" y="3581"/><ellipse cx="686.23" cy="3597" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M689.1988,3602.6406 Q688.6206,3602.9375 687.98,3603.0781 Q687.3394,3603.2344 686.6363,3603.2344 Q684.1363,3603.2344 682.8081,3601.5938 Q681.4956,3599.9375 681.4956,3596.8125 Q681.4956,3593.6875 682.8081,3592.0313 Q684.1363,3590.375 686.6363,3590.375 Q687.3394,3590.375 687.98,3590.5313 Q688.6363,3590.6875 689.1988,3590.9844 L689.1988,3593.7031 Q688.5738,3593.125 687.98,3592.8594 Q687.3863,3592.5781 686.7613,3592.5781 Q685.4175,3592.5781 684.73,3593.6563 Q684.0425,3594.7188 684.0425,3596.8125 Q684.0425,3598.9063 684.73,3599.9844 Q685.4175,3601.0469 686.7613,3601.0469 Q687.3863,3601.0469 687.98,3600.7813 Q688.5738,3600.5 689.1988,3599.9219 L689.1988,3602.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="706.73" y="3601.1543">exception_wrapper</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="266.48" x2="1232.48" y1="3613" y2="3613"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L342" target="_top" title="vptr_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L342" xlink:show="new" xlink:title="vptr_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="271.48" y="3619"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="3621"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L342" target="_top" title="vptr_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L342" xlink:show="new" xlink:title="vptr_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="285.48" y="3627.2104">vptr_ : const exception_wrapper::VTable *</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L205" target="_top" title="uninit_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L205" xlink:show="new" xlink:title="uninit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="271.48" y="3631.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="3633.8047"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L205" target="_top" title="uninit_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L205" xlink:show="new" xlink:title="uninit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="237" x="285.48" y="3640.0151">uninit_ : const exception_wrapper::VTable</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="266.48" x2="1232.48" y1="3646.6094" y2="3646.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="3654.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="261" x="285.48" y="3660.8198">onNoExceptionError(const char * name) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="3667.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="365" x="285.48" y="3673.6245">uninit_type_(const exception_wrapper * ) : const std::type_info *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="3680.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="415" x="285.48" y="3686.4292">as_exception_or_null_(const std::exception &amp; ex) : const std::exception *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="3693.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="462" x="285.48" y="3699.2339">as_exception_or_null_(exception_wrapper::AnyException ) : const std::exception *</text><ellipse cx="276.48" cy="3708.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="414" x="285.48" y="3712.0386">from_exception_ptr(const std::exception_ptr &amp; eptr) : exception_wrapper</text><ellipse cx="276.48" cy="3721.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="389" x="285.48" y="3724.8433">from_exception_ptr(std::exception_ptr &amp;&amp; eptr) : exception_wrapper</text><ellipse cx="276.48" cy="3734.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="285.48" y="3737.6479">exception_wrapper() : void</text><ellipse cx="276.48" cy="3747.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="285.48" y="3750.4526">exception_wrapper(exception_wrapper &amp;&amp; that) : void</text><ellipse cx="276.48" cy="3760.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="285.48" y="3763.2573">exception_wrapper(const exception_wrapper &amp; that) : void</text><ellipse cx="276.48" cy="3772.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="285.48" y="3776.062">operator=(exception_wrapper &amp;&amp; that) : exception_wrapper &amp;</text><ellipse cx="276.48" cy="3785.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="285.48" y="3788.8667">operator=(const exception_wrapper &amp; that) : exception_wrapper &amp;</text><ellipse cx="276.48" cy="3798.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="285.48" y="3801.6714">~exception_wrapper() : void</text><ellipse cx="276.48" cy="3811.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="285.48" y="3814.4761">exception_wrapper(std::exception_ptr ptr) : void</text><ellipse cx="276.48" cy="3824.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="285.48" y="3827.2808">swap(exception_wrapper &amp; that) : void</text><ellipse cx="276.48" cy="3836.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="285.48" y="3840.0854">operator bool() const : bool</text><ellipse cx="276.48" cy="3849.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="285.48" y="3852.8901">operator!() const : bool</text><ellipse cx="276.48" cy="3862.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="285.48" y="3865.6948">reset() : void</text><ellipse cx="276.48" cy="3875.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="285.48" y="3878.4995">has_exception_ptr() const : bool</text><ellipse cx="276.48" cy="3888.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="285.48" y="3891.3042">get_exception() : std::exception *</text><ellipse cx="276.48" cy="3900.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="285.48" y="3904.1089">get_exception() const : const std::exception *</text><ellipse cx="276.48" cy="3913.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="285.48" y="3916.9136">to_exception_ptr() : std::exception_ptr</text><ellipse cx="276.48" cy="3926.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="285.48" y="3929.7183">to_exception_ptr() const : std::exception_ptr</text><ellipse cx="276.48" cy="3939.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="285.48" y="3942.5229">none() : const std::type_info &amp;</text><ellipse cx="276.48" cy="3952.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="285.48" y="3955.3276">unknown() : const std::type_info &amp;</text><ellipse cx="276.48" cy="3964.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="285.48" y="3968.1323">type() const : const std::type_info &amp;</text><ellipse cx="276.48" cy="3977.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="285.48" y="3980.937">what() const : fbstring</text><ellipse cx="276.48" cy="3990.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="285.48" y="3993.7417">class_name() const : fbstring</text><ellipse cx="276.48" cy="4003.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="285.48" y="4006.5464">throw_exception() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4013.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="192" x="285.48" y="4019.3511">noop_&lt;Ret,Args...&gt;(Args... ) : Ret</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4025.9453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="285.48" y="4032.1558">exception_wrapper&lt;Ex,As...&gt;(exception_wrapper::ThrownTag , in_place_type_tag&lt;Ex&gt; , As &amp;&amp;... as) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4038.75"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="615" x="285.48" y="4044.9604">exception_wrapper&lt;Ex,As...&gt;(exception_wrapper::OnHeapTag , in_place_type_tag&lt;Ex&gt; , As &amp;&amp;... as) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4051.5547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="602" x="285.48" y="4057.7651">exception_wrapper&lt;Ex,As...&gt;(exception_wrapper::InSituTag , in_place_type_tag&lt;Ex&gt; , As &amp;&amp;... as) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4064.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="470" x="285.48" y="4070.5698">handle_&lt;This,CatchFns...&gt;(std::false_type , This &amp; this_, CatchFns &amp;... fns) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4077.1641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="465" x="285.48" y="4083.3745">handle_&lt;This,CatchFns...&gt;(std::true_type , This &amp; this_, CatchFns &amp;... fns) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4089.9688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="327" x="285.48" y="4096.1792">with_exception_&lt;Ex,This,Fn&gt;(This &amp; this_, Fn fn_) : _Bool</text><ellipse cx="276.48" cy="4105.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="285.48" y="4108.9839">exception_wrapper&lt;Ex&gt;(std::exception_ptr ptr, Ex &amp; ex) : void</text><ellipse cx="276.48" cy="4118.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="942" x="285.48" y="4121.7886">exception_wrapper&lt;Ex,Ex_,std::enable_if_t&lt;static_cast&lt;_Bool&gt;(Conjunction&lt;IsStdException&lt;Ex_&gt;, IsRegularExceptionType&lt;Ex_&gt; &gt;::value), long&gt;&gt;(Ex &amp;&amp; ex) : void</text><ellipse cx="276.48" cy="4131.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="794" x="285.48" y="4134.5933">exception_wrapper&lt;Ex,Ex_,std::enable_if_t&lt;static_cast&lt;_Bool&gt;(IsRegularExceptionType&lt;Ex_&gt;::value), long&gt;&gt;(in_place_t , Ex &amp;&amp; ex) : void</text><ellipse cx="276.48" cy="4144.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="884" x="285.48" y="4147.3979">exception_wrapper&lt;Ex,As...,std::enable_if_t&lt;static_cast&lt;_Bool&gt;(IsRegularExceptionType&lt;Ex&gt;::value), long&gt;&gt;(in_place_type_tag&lt;Ex&gt; , As &amp;&amp;... as) : void</text><ellipse cx="276.48" cy="4156.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="285.48" y="4160.2026">get_exception&lt;Ex&gt;() : Ex *</text><ellipse cx="276.48" cy="4169.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="285.48" y="4173.0073">get_exception&lt;Ex&gt;() : const Ex *</text><ellipse cx="276.48" cy="4182.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="285.48" y="4185.812">is_compatible_with&lt;Ex&gt;() : _Bool</text><ellipse cx="276.48" cy="4195.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="285.48" y="4198.6167">throw_with_nested&lt;Ex&gt;(Ex &amp;&amp; ex) : void</text><ellipse cx="276.48" cy="4208.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="285.48" y="4211.4214">with_exception&lt;Ex,Fn&gt;(Fn fn) : _Bool</text><ellipse cx="276.48" cy="4221.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="285.48" y="4224.2261">with_exception&lt;Ex,Fn&gt;(Fn fn) : _Bool</text><ellipse cx="276.48" cy="4233.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="285.48" y="4237.0308">handle&lt;CatchFns...&gt;(CatchFns... fns) : void</text><ellipse cx="276.48" cy="4246.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="285.48" y="4249.8354">handle&lt;CatchFns...&gt;(CatchFns... fns) : void</text><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L337" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L337" xlink:show="new" xlink:title="" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="271.48" y="4254.4297"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="273.48" y="4256.4297"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L337" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L337" xlink:show="new" xlink:title="" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="285.48" y="4262.6401">: exception_wrapper::(anonymous_3222246)</text></a><!--MD5=[886ed44e8383d4ac471e56cb4376991e]
class C_0001149405143997573904--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Unit.h#L36" target="_top" title="Unit" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Unit.h#L36" xlink:show="new" xlink:title="Unit" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="73.6094" id="C_0001149405143997573904" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="2675.98" y="4330"/><ellipse cx="2782.73" cy="4346" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2785.6988,4351.6406 Q2785.1206,4351.9375 2784.48,4352.0781 Q2783.8394,4352.2344 2783.1363,4352.2344 Q2780.6363,4352.2344 2779.3081,4350.5938 Q2777.9956,4348.9375 2777.9956,4345.8125 Q2777.9956,4342.6875 2779.3081,4341.0313 Q2780.6363,4339.375 2783.1363,4339.375 Q2783.8394,4339.375 2784.48,4339.5313 Q2785.1363,4339.6875 2785.6988,4339.9844 L2785.6988,4342.7031 Q2785.0738,4342.125 2784.48,4341.8594 Q2783.8863,4341.5781 2783.2613,4341.5781 Q2781.9175,4341.5781 2781.23,4342.6563 Q2780.5425,4343.7188 2780.5425,4345.8125 Q2780.5425,4347.9063 2781.23,4348.9844 Q2781.9175,4350.0469 2783.2613,4350.0469 Q2783.8863,4350.0469 2784.48,4349.7813 Q2785.0738,4349.5 2785.6988,4348.9219 L2785.6988,4351.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="2803.23" y="4350.1543">Unit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2676.98" x2="2921.98" y1="4362" y2="4362"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2676.98" x2="2921.98" y1="4370" y2="4370"/><ellipse cx="2686.98" cy="4381" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2695.98" y="4384.2104">operator==(const Unit &amp; ) const : bool</text><ellipse cx="2686.98" cy="4393.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2695.98" y="4397.0151">operator!=(const Unit &amp; ) const : bool</text></a><!--MD5=[2d3a420fce14daecd921b0175e490cf5]
class C_0000135335628570802873--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L52" target="_top" title="Try" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L52" xlink:show="new" xlink:title="Try" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="611.4063" id="C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.5;" width="621" x="837.98" y="2909"/><ellipse cx="1129.73" cy="2925" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1132.6988,2930.6406 Q1132.1206,2930.9375 1131.48,2931.0781 Q1130.8394,2931.2344 1130.1363,2931.2344 Q1127.6363,2931.2344 1126.3081,2929.5938 Q1124.9956,2927.9375 1124.9956,2924.8125 Q1124.9956,2921.6875 1126.3081,2920.0313 Q1127.6363,2918.375 1130.1363,2918.375 Q1130.8394,2918.375 1131.48,2918.5313 Q1132.1363,2918.6875 1132.6988,2918.9844 L1132.6988,2921.7031 Q1132.0738,2921.125 1131.48,2920.8594 Q1130.8863,2920.5781 1130.2613,2920.5781 Q1128.9175,2920.5781 1128.23,2921.6563 Q1127.5425,2922.7188 1127.5425,2924.8125 Q1127.5425,2926.9063 1128.23,2927.9844 Q1128.9175,2929.0469 1130.2613,2929.0469 Q1130.8863,2929.0469 1131.48,2928.7813 Q1132.0738,2928.5 1132.6988,2927.9219 L1132.6988,2930.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="18" x="1150.23" y="2929.1543">Try</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1452.98" y="2906"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1453.98" y="2918.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="838.98" x2="1457.98" y1="2941" y2="2941"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L356" target="_top" title="contains_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L356" xlink:show="new" xlink:title="contains_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="843.98" y="2947"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="845.98" y="2949"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L356" target="_top" title="contains_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L356" xlink:show="new" xlink:title="contains_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="857.98" y="2955.2104">contains_ : Try::Contains</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="838.98" x2="1457.98" y1="2961.8047" y2="2961.8047"/><ellipse cx="848.98" cy="2972.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="857.98" y="2976.0151">Try&lt;T&gt;() : void</text><ellipse cx="848.98" cy="2985.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="857.98" y="2988.8198">Try&lt;T&gt;(const T &amp; v) : void</text><ellipse cx="848.98" cy="2998.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="857.98" y="3001.6245">Try&lt;T&gt;(T &amp;&amp; v) : void</text><ellipse cx="848.98" cy="3011.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="857.98" y="3014.4292">Try&lt;T&gt;(exception_wrapper e) : void</text><ellipse cx="848.98" cy="3024.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="857.98" y="3027.2339">Try&lt;T&gt;(Try&lt;T&gt; &amp;&amp; t) : void</text><ellipse cx="848.98" cy="3036.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="857.98" y="3040.0386">operator=(Try&lt;T&gt; &amp;&amp; t) : Try&lt;T&gt; &amp;</text><ellipse cx="848.98" cy="3049.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="857.98" y="3052.8433">Try&lt;T&gt;(const Try&lt;T&gt; &amp; t) : void</text><ellipse cx="848.98" cy="3062.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="857.98" y="3065.6479">operator=(const Try&lt;T&gt; &amp; t) : Try&lt;T&gt; &amp;</text><ellipse cx="848.98" cy="3075.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="857.98" y="3078.4526">~Try&lt;T&gt;() : void</text><ellipse cx="848.98" cy="3088.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="857.98" y="3091.2573">value() : T &amp;</text><ellipse cx="848.98" cy="3100.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="857.98" y="3104.062">value() : T &amp;&amp;</text><ellipse cx="848.98" cy="3113.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="857.98" y="3116.8667">value() const : const T &amp;</text><ellipse cx="848.98" cy="3126.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="857.98" y="3129.6714">value() const : const T &amp;&amp;</text><ellipse cx="848.98" cy="3139.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="857.98" y="3142.4761">throwIfFailed() const : void</text><ellipse cx="848.98" cy="3152.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="857.98" y="3155.2808">operator*() const : const T &amp;</text><ellipse cx="848.98" cy="3164.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="857.98" y="3168.0854">operator*() : T &amp;</text><ellipse cx="848.98" cy="3177.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="857.98" y="3180.8901">operator*() : T &amp;&amp;</text><ellipse cx="848.98" cy="3190.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="857.98" y="3193.6948">operator*() const : const T &amp;&amp;</text><ellipse cx="848.98" cy="3203.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="857.98" y="3206.4995">operator-&gt;() const : const T *</text><ellipse cx="848.98" cy="3216.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="857.98" y="3219.3042">operator-&gt;() : T *</text><ellipse cx="848.98" cy="3228.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="857.98" y="3232.1089">hasValue() const : bool</text><ellipse cx="848.98" cy="3241.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="857.98" y="3244.9136">hasException() const : bool</text><ellipse cx="848.98" cy="3254.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="857.98" y="3257.7183">exception() : exception_wrapper &amp;</text><ellipse cx="848.98" cy="3267.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="857.98" y="3270.5229">exception() : exception_wrapper &amp;&amp;</text><ellipse cx="848.98" cy="3280.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="857.98" y="3283.3276">exception() const : const exception_wrapper &amp;</text><ellipse cx="848.98" cy="3292.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="857.98" y="3296.1323">exception() const : const exception_wrapper &amp;&amp;</text><ellipse cx="848.98" cy="3305.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="857.98" y="3308.937">tryGetExceptionObject() : std::exception *</text><ellipse cx="848.98" cy="3318.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="857.98" y="3321.7417">tryGetExceptionObject() const : const std::exception *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="845.98" y="3328.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="857.98" y="3334.5464">destroy() : void</text><ellipse cx="848.98" cy="3344.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="857.98" y="3347.3511">Try&lt;T&gt;&lt;Args...&gt;(in_place_t , Args &amp;&amp;... args) : void</text><ellipse cx="848.98" cy="3356.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="595" x="857.98" y="3360.1558">Try&lt;T&gt;&lt;T2&gt;(typename std::enable_if&lt;std::is_same&lt;Unit,T2&gt;::value,const Try&lt;void&gt; &amp;&gt;::type t) : void</text><ellipse cx="848.98" cy="3369.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="857.98" y="3372.9604">emplace&lt;Args...&gt;(Args &amp;&amp;... args) : T &amp;</text><ellipse cx="848.98" cy="3382.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="857.98" y="3385.7651">emplaceException&lt;Args...&gt;(Args &amp;&amp;... args) : class exception_wrapper &amp;</text><ellipse cx="848.98" cy="3395.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="857.98" y="3398.5698">hasException&lt;Ex&gt;() : _Bool</text><ellipse cx="848.98" cy="3408.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="857.98" y="3411.3745">tryGetExceptionObject&lt;E&gt;() : E *</text><ellipse cx="848.98" cy="3420.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="857.98" y="3424.1792">tryGetExceptionObject&lt;E&gt;() : const E *</text><ellipse cx="848.98" cy="3433.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="857.98" y="3436.9839">withException&lt;Ex,F&gt;(F func) : _Bool</text><ellipse cx="848.98" cy="3446.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="857.98" y="3449.7886">withException&lt;Ex,F&gt;(F func) : _Bool</text><ellipse cx="848.98" cy="3459.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="857.98" y="3462.5933">withException&lt;F&gt;(F func) : _Bool</text><ellipse cx="848.98" cy="3472.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="857.98" y="3475.3979">withException&lt;F&gt;(F func) : _Bool</text><ellipse cx="848.98" cy="3484.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="857.98" y="3488.2026">get&lt;_Bool isTry,R&gt;() : typename std::enable_if&lt;isTry, R&gt;::type</text><ellipse cx="848.98" cy="3497.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="857.98" y="3501.0073">get&lt;_Bool isTry,R&gt;() : typename std::enable_if&lt;!isTry, R&gt;::type</text><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L357" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L357" xlink:show="new" xlink:title="" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="843.98" y="3505.6016"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="845.98" y="3507.6016"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L357" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L357" xlink:show="new" xlink:title="" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="857.98" y="3513.812">: Try::(anonymous_3397912)</text></a><!--MD5=[b73d77cbb13d16bdf9a9c99e84cdd43b]
class C_0000547783453785439447--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L78" target="_top" title="UniqueDeleter" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L78" xlink:show="new" xlink:title="UniqueDeleter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="60.8047" id="C_0000547783453785439447" style="stroke: #A80036; stroke-width: 1.5;" width="343" x="3431.98" y="3184"/><ellipse cx="3506.23" cy="3200" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3509.1988,3205.6406 Q3508.6206,3205.9375 3507.98,3206.0781 Q3507.3394,3206.2344 3506.6363,3206.2344 Q3504.1363,3206.2344 3502.8081,3204.5938 Q3501.4956,3202.9375 3501.4956,3199.8125 Q3501.4956,3196.6875 3502.8081,3195.0313 Q3504.1363,3193.375 3506.6363,3193.375 Q3507.3394,3193.375 3507.98,3193.5313 Q3508.6363,3193.6875 3509.1988,3193.9844 L3509.1988,3196.7031 Q3508.5738,3196.125 3507.98,3195.8594 Q3507.3863,3195.5781 3506.7613,3195.5781 Q3505.4175,3195.5781 3504.73,3196.6563 Q3504.0425,3197.7188 3504.0425,3199.8125 Q3504.0425,3201.9063 3504.73,3202.9844 Q3505.4175,3204.0469 3506.7613,3204.0469 Q3507.3863,3204.0469 3507.98,3203.7813 Q3508.5738,3203.5 3509.1988,3202.9219 L3509.1988,3205.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="186" x="3526.73" y="3204.1543">futures::detail::UniqueDeleter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3432.98" x2="3773.98" y1="3216" y2="3216"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3432.98" x2="3773.98" y1="3224" y2="3224"/><ellipse cx="3442.98" cy="3235" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="3451.98" y="3238.2104">operator()(futures::detail::DeferredExecutor * ptr) : void</text></a><!--MD5=[05bac9d298ee4660bc933093ee84b9e6]
class C_0001108426710866155196--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L142" target="_top" title="DeferredExecutor" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L142" xlink:show="new" xlink:title="DeferredExecutor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="240.0703" id="C_0001108426710866155196" style="stroke: #A80036; stroke-width: 1.5;" width="605" x="3458.98" y="2214"/><ellipse cx="3654.23" cy="2230" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3657.1988,2235.6406 Q3656.6206,2235.9375 3655.98,2236.0781 Q3655.3394,2236.2344 3654.6363,2236.2344 Q3652.1363,2236.2344 3650.8081,2234.5938 Q3649.4956,2232.9375 3649.4956,2229.8125 Q3649.4956,2226.6875 3650.8081,2225.0313 Q3652.1363,2223.375 3654.6363,2223.375 Q3655.3394,2223.375 3655.98,2223.5313 Q3656.6363,2223.6875 3657.1988,2223.9844 L3657.1988,2226.7031 Q3656.5738,2226.125 3655.98,2225.8594 Q3655.3863,2225.5781 3654.7613,2225.5781 Q3653.4175,2225.5781 3652.73,2226.6563 Q3652.0425,2227.7188 3652.0425,2229.8125 Q3652.0425,2231.9063 3652.73,2232.9844 Q3653.4175,2234.0469 3654.7613,2234.0469 Q3655.3863,2234.0469 3655.98,2233.7813 Q3656.5738,2233.5 3657.1988,2232.9219 L3657.1988,2235.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="206" x="3674.73" y="2234.1543">futures::detail::DeferredExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3459.98" x2="4062.98" y1="2246" y2="2246"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L175" target="_top" title="state_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L175" xlink:show="new" xlink:title="state_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3464.98" y="2252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2254"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L175" target="_top" title="state_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L175" xlink:show="new" xlink:title="state_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3478.98" y="2260.2104">state_ : std::atomic&lt;State&gt;</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L176" target="_top" title="func_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L176" xlink:show="new" xlink:title="func_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3464.98" y="2264.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2266.8047"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L176" target="_top" title="func_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L176" xlink:show="new" xlink:title="func_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="3478.98" y="2273.0151">func_ : Executor::KeepAlive&lt;&gt;::KeepAliveFunc</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L177" target="_top" title="executor_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L177" xlink:show="new" xlink:title="executor_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3464.98" y="2277.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2279.6094"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L177" target="_top" title="executor_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L177" xlink:show="new" xlink:title="executor_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="3478.98" y="2285.8198">executor_ : Executor::KeepAlive&lt;&gt;</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L178" target="_top" title="nestedExecutors_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L178" xlink:show="new" xlink:title="nestedExecutors_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3464.98" y="2290.4141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2292.4141"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L178" target="_top" title="nestedExecutors_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L178" xlink:show="new" xlink:title="nestedExecutors_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3478.98" y="2298.6245">nestedExecutors_ : std::unique_ptr&lt;std::vector&lt;DeferredWrapper&gt;&gt;</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L179" target="_top" title="keepAliveCount_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L179" xlink:show="new" xlink:title="keepAliveCount_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3464.98" y="2303.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2305.2188"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L179" target="_top" title="keepAliveCount_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L179" xlink:show="new" xlink:title="keepAliveCount_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3478.98" y="2311.4292">keepAliveCount_ : std::atomic&lt;ssize_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3459.98" x2="4062.98" y1="2318.0234" y2="2318.0234"/><ellipse cx="3469.98" cy="2329.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="3478.98" y="2332.2339">addFrom(Executor::KeepAlive&lt;&gt; &amp;&amp; completingKA, Executor::KeepAlive&lt;&gt;::KeepAliveFunc func) : void</text><ellipse cx="3469.98" cy="2341.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="3478.98" y="2345.0386">getExecutor() const : Executor *</text><ellipse cx="3469.98" cy="2354.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="3478.98" y="2357.8433">setExecutor(Executor::KeepAlive&lt;&gt; executor) : void</text><ellipse cx="3469.98" cy="2367.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3478.98" y="2370.6479">setNestedExecutors(std::vector&lt;DeferredWrapper&gt; executors) : void</text><ellipse cx="3469.98" cy="2380.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3478.98" y="2383.4526">detach() : void</text><ellipse cx="3469.98" cy="2393.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="3478.98" y="2396.2573">copy() : futures::detail::DeferredWrapper</text><ellipse cx="3469.98" cy="2405.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="241" x="3478.98" y="2409.062">create() : futures::detail::DeferredWrapper</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2415.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3478.98" y="2421.8667">DeferredExecutor() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2428.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3478.98" y="2434.6714">acquire() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3466.98" y="2441.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3478.98" y="2447.4761">release() : void</text><!--MD5=[ac8826442556fa4970d92afb9c42c86a]
class C_0000487431047047122182--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L504" target="_top" title="Core" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L504" xlink:show="new" xlink:title="Core" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="214.4609" id="C_0000487431047047122182" style="stroke: #A80036; stroke-width: 1.5;" width="748" x="1446.48" y="1365.5"/><ellipse cx="1748.23" cy="1381.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1751.1988,1387.1406 Q1750.6206,1387.4375 1749.98,1387.5781 Q1749.3394,1387.7344 1748.6363,1387.7344 Q1746.1363,1387.7344 1744.8081,1386.0938 Q1743.4956,1384.4375 1743.4956,1381.3125 Q1743.4956,1378.1875 1744.8081,1376.5313 Q1746.1363,1374.875 1748.6363,1374.875 Q1749.3394,1374.875 1749.98,1375.0313 Q1750.6363,1375.1875 1751.1988,1375.4844 L1751.1988,1378.2031 Q1750.5738,1377.625 1749.98,1377.3594 Q1749.3863,1377.0781 1748.7613,1377.0781 Q1747.4175,1377.0781 1746.73,1378.1563 Q1746.0425,1379.2188 1746.0425,1381.3125 Q1746.0425,1383.4063 1746.73,1384.4844 Q1747.4175,1385.5469 1748.7613,1385.5469 Q1749.3863,1385.5469 1749.98,1385.2813 Q1750.5738,1385 1751.1988,1384.4219 L1751.1988,1387.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="125" x="1768.73" y="1385.6543">futures::detail::Core</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="2188.48" y="1362.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2189.48" y="1374.6387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1447.48" x2="2193.48" y1="1397.5" y2="1397.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1447.48" x2="2193.48" y1="1405.5" y2="1405.5"/><ellipse cx="1457.48" cy="1416.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="113" x="1466.48" y="1419.7104">make() : Core&lt;T&gt; *</text><ellipse cx="1457.48" cy="1429.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="1466.48" y="1432.5151">make(Try&lt;T&gt; &amp;&amp; t) : Core&lt;T&gt; *</text><ellipse cx="1457.48" cy="1442.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1466.48" y="1445.3198">getTry() : Try&lt;T&gt; &amp;</text><ellipse cx="1457.48" cy="1454.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1466.48" y="1458.1245">getTry() const : const Try&lt;T&gt; &amp;</text><ellipse cx="1457.48" cy="1467.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1466.48" y="1470.9292">setResult(Try&lt;T&gt; &amp;&amp; t) : void</text><ellipse cx="1457.48" cy="1480.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="1466.48" y="1483.7339">setResult(Executor::KeepAlive&lt;&gt; &amp;&amp; completingKA, Try&lt;T&gt; &amp;&amp; t) : void</text><ellipse cx="1457.48" cy="1493.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1466.48" y="1496.5386">setProxy(Core&lt;T&gt; * proxy) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.48" y="1503.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1466.48" y="1509.3433">Core&lt;T&gt;() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.48" y="1515.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1466.48" y="1522.1479">Core&lt;T&gt;(Try&lt;T&gt; &amp;&amp; t) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.48" y="1528.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1466.48" y="1534.9526">~Core&lt;T&gt;() : void</text><ellipse cx="1457.48" cy="1544.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="329" x="1466.48" y="1547.7573">make&lt;Args...&gt;(in_place_t , Args &amp;&amp;... args) : Core&lt;T&gt; *</text><ellipse cx="1457.48" cy="1557.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="722" x="1466.48" y="1560.562">setCallback&lt;F&gt;(F &amp;&amp; func, std::shared_ptr&lt;RequestContext&gt; &amp;&amp; context, futures::detail::InlineContinuation allowInline) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.48" y="1567.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="1466.48" y="1573.3667">Core&lt;T&gt;&lt;Args...&gt;(in_place_t , Args &amp;&amp;... args) : void</text></a><!--MD5=[68e801f468b854e77c0329757b9e44c8]
class C_0001636747636195825603--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L68" target="_top" title="EmptyConstruct" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L68" xlink:show="new" xlink:title="EmptyConstruct" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0001636747636195825603" style="stroke: #A80036; stroke-width: 1.5;" width="227" x="2300.98" y="3190.5"/><ellipse cx="2315.98" cy="3206.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2318.9488,3212.1406 Q2318.3706,3212.4375 2317.73,3212.5781 Q2317.0894,3212.7344 2316.3863,3212.7344 Q2313.8863,3212.7344 2312.5581,3211.0938 Q2311.2456,3209.4375 2311.2456,3206.3125 Q2311.2456,3203.1875 2312.5581,3201.5313 Q2313.8863,3199.875 2316.3863,3199.875 Q2317.0894,3199.875 2317.73,3200.0313 Q2318.3863,3200.1875 2318.9488,3200.4844 L2318.9488,3203.2031 Q2318.3238,3202.625 2317.73,3202.3594 Q2317.1363,3202.0781 2316.5113,3202.0781 Q2315.1675,3202.0781 2314.48,3203.1563 Q2313.7925,3204.2188 2313.7925,3206.3125 Q2313.7925,3208.4063 2314.48,3209.4844 Q2315.1675,3210.5469 2316.5113,3210.5469 Q2317.1363,3210.5469 2317.73,3210.2813 Q2318.3238,3210 2318.9488,3209.4219 L2318.9488,3212.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="195" x="2329.98" y="3210.6543">futures::detail::EmptyConstruct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2301.98" x2="2526.98" y1="3222.5" y2="3222.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2301.98" x2="2526.98" y1="3230.5" y2="3230.5"/></a><!--MD5=[ca7e8c8eb79983d0e5cd66bab26ca64f]
class C_0000725183341054102552--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L116" target="_top" title="FutureBase" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L116" xlink:show="new" xlink:title="FutureBase" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="611.4063" id="C_0000725183341054102552" style="stroke: #A80036; stroke-width: 1.5;" width="915" x="1877.98" y="498"/><ellipse cx="2241.73" cy="514" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2244.6988,519.6406 Q2244.1206,519.9375 2243.48,520.0781 Q2242.8394,520.2344 2242.1363,520.2344 Q2239.6363,520.2344 2238.3081,518.5938 Q2236.9956,516.9375 2236.9956,513.8125 Q2236.9956,510.6875 2238.3081,509.0313 Q2239.6363,507.375 2242.1363,507.375 Q2242.8394,507.375 2243.48,507.5313 Q2244.1363,507.6875 2244.6988,507.9844 L2244.6988,510.7031 Q2244.0738,510.125 2243.48,509.8594 Q2242.8863,509.5781 2242.2613,509.5781 Q2240.9175,509.5781 2240.23,510.6563 Q2239.5425,511.7188 2239.5425,513.8125 Q2239.5425,515.9063 2240.23,516.9844 Q2240.9175,518.0469 2242.2613,518.0469 Q2242.8863,518.0469 2243.48,517.7813 Q2244.0738,517.5 2244.6988,516.9219 L2244.6988,519.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="168" x="2262.23" y="518.1543">futures::detail::FutureBase</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="2786.98" y="495"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2787.98" y="507.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1878.98" x2="2791.98" y1="530" y2="530"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L383" target="_top" title="core_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L383" xlink:show="new" xlink:title="core_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1883.98" y="536"/><polygon fill="none" points="1888.98,536,1892.98,540,1888.98,544,1884.98,540" style="stroke: #B38D22; stroke-width: 1.0;"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L383" target="_top" title="core_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L383" xlink:show="new" xlink:title="core_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1897.98" y="544.2104">core_ : futures::detail::FutureBase::Core *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1878.98" x2="2791.98" y1="550.8047" y2="550.8047"/><ellipse cx="1888.98" cy="561.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1897.98" y="565.0151">FutureBase&lt;T&gt;(const FutureBase&lt;T&gt; &amp; ) : void</text><ellipse cx="1888.98" cy="574.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="1897.98" y="577.8198">FutureBase&lt;T&gt;(SemiFuture&lt;T&gt; &amp;&amp; ) : void</text><ellipse cx="1888.98" cy="587.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1897.98" y="590.6245">FutureBase&lt;T&gt;(Future&lt;T&gt; &amp;&amp; ) : void</text><ellipse cx="1888.98" cy="600.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1897.98" y="603.4292">FutureBase&lt;T&gt;(const Future&lt;T&gt; &amp; ) : void</text><ellipse cx="1888.98" cy="613.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1897.98" y="616.2339">FutureBase&lt;T&gt;(const SemiFuture&lt;T&gt; &amp; ) : void</text><ellipse cx="1888.98" cy="625.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1897.98" y="629.0386">~FutureBase&lt;T&gt;() : void</text><ellipse cx="1888.98" cy="638.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1897.98" y="641.8433">valid() const : bool</text><ellipse cx="1888.98" cy="651.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1897.98" y="654.6479">value() : T &amp;</text><ellipse cx="1888.98" cy="664.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1897.98" y="667.4526">value() const : const T &amp;</text><ellipse cx="1888.98" cy="677.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1897.98" y="680.2573">value() : T &amp;&amp;</text><ellipse cx="1888.98" cy="689.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1897.98" y="693.062">value() const : const T &amp;&amp;</text><ellipse cx="1888.98" cy="702.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1897.98" y="705.8667">result() : Try&lt;T&gt; &amp;</text><ellipse cx="1888.98" cy="715.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1897.98" y="718.6714">result() const : const Try&lt;T&gt; &amp;</text><ellipse cx="1888.98" cy="728.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1897.98" y="731.4761">result() : Try&lt;T&gt; &amp;&amp;</text><ellipse cx="1888.98" cy="741.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1897.98" y="744.2808">result() const : const Try&lt;T&gt; &amp;&amp;</text><ellipse cx="1888.98" cy="753.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1897.98" y="757.0854">isReady() const : bool</text><ellipse cx="1888.98" cy="766.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1897.98" y="769.8901">hasValue() const : bool</text><ellipse cx="1888.98" cy="779.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1897.98" y="782.6948">hasException() const : bool</text><ellipse cx="1888.98" cy="792.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1897.98" y="795.4995">poll() : Optional&lt;Try&lt;T&gt;&gt;</text><ellipse cx="1888.98" cy="805.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1897.98" y="808.3042">raise(exception_wrapper interrupt) : void</text><ellipse cx="1888.98" cy="817.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1897.98" y="821.1089">cancel() : void</text><polygon fill="#FFFF44" points="1888.98,825.7031,1892.98,829.7031,1888.98,833.7031,1884.98,829.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="1897.98" y="833.9136">getCore() : futures::detail::FutureBase::Core &amp;</text><polygon fill="#FFFF44" points="1888.98,838.5078,1892.98,842.5078,1888.98,846.5078,1884.98,842.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="1897.98" y="846.7183">getCore() const : const futures::detail::FutureBase::Core &amp;</text><polygon fill="#FFFF44" points="1888.98,851.3125,1892.98,855.3125,1888.98,859.3125,1884.98,855.3125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1897.98" y="859.5229">getCoreTryChecked() : Try&lt;T&gt; &amp;</text><polygon fill="#FFFF44" points="1888.98,864.1172,1892.98,868.1172,1888.98,872.1172,1884.98,868.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1897.98" y="872.3276">getCoreTryChecked() const : const Try&lt;T&gt; &amp;</text><polygon fill="#FFFF44" points="1888.98,876.9219,1892.98,880.9219,1888.98,884.9219,1884.98,880.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1897.98" y="885.1323">FutureBase&lt;T&gt;(futures::detail::FutureBase::Core * obj) : void</text><polygon fill="#FFFF44" points="1888.98,889.7266,1892.98,893.7266,1888.98,897.7266,1884.98,893.7266" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1897.98" y="897.937">FutureBase&lt;T&gt;(futures::detail::EmptyConstruct ) : void</text><polygon fill="#FFFF44" points="1888.98,902.5313,1892.98,906.5313,1888.98,910.5313,1884.98,906.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1897.98" y="910.7417">detach() : void</text><polygon fill="#FFFF44" points="1888.98,915.3359,1892.98,919.3359,1888.98,923.3359,1884.98,919.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="1897.98" y="923.5464">throwIfInvalid() const : void</text><polygon fill="#FFFF44" points="1888.98,928.1406,1892.98,932.1406,1888.98,936.1406,1884.98,932.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1897.98" y="936.3511">throwIfContinued() const : void</text><polygon fill="#FFFF44" points="1888.98,940.9453,1892.98,944.9453,1888.98,948.9453,1884.98,944.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1897.98" y="949.1558">assign(FutureBase&lt;T&gt; &amp;&amp; other) : void</text><polygon fill="#FFFF44" points="1888.98,953.75,1892.98,957.75,1888.98,961.75,1884.98,957.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1897.98" y="961.9604">getExecutor() const : Executor *</text><polygon fill="#FFFF44" points="1888.98,966.5547,1892.98,970.5547,1888.98,974.5547,1884.98,970.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="1897.98" y="974.7651">getDeferredExecutor() const : futures::detail::DeferredExecutor *</text><polygon fill="#FFFF44" points="1888.98,979.3594,1892.98,983.3594,1888.98,987.3594,1884.98,983.3594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="1897.98" y="987.5698">setExecutor(futures::detail::KeepAliveOrDeferred x) : void</text><ellipse cx="1888.98" cy="997.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1897.98" y="1000.3745">FutureBase&lt;T&gt;&lt;T2,&gt;(T2 &amp;&amp; val) : void</text><ellipse cx="1888.98" cy="1009.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="536" x="1897.98" y="1013.1792">FutureBase&lt;T&gt;&lt;T2&gt;(typename std::enable_if&lt;std::is_same&lt;Unit,T2&gt;::value&gt;::type * ) : void</text><ellipse cx="1888.98" cy="1022.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="810" x="1897.98" y="1025.9839">FutureBase&lt;T&gt;&lt;Args...,typename std::enable_if&lt;std::is_constructible&lt;T, Args &amp;&amp;...&gt;::value, int&gt;::type&gt;(in_place_t , Args &amp;&amp;... args) : void</text><ellipse cx="1888.98" cy="1035.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="1897.98" y="1038.7886">setCallback_&lt;F&gt;(F &amp;&amp; func, futures::detail::InlineContinuation  = InlineContinuation::forbid) : void</text><ellipse cx="1888.98" cy="1048.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1897.98" y="1051.5933">raise&lt;E&gt;(E &amp;&amp; exception) : void</text><polygon fill="#FFFF44" points="1888.98,1056.1875,1892.98,1060.1875,1888.98,1064.1875,1884.98,1060.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="270" x="1897.98" y="1064.3979">getCoreImpl&lt;Self&gt;(Self &amp; self) : decltype(auto)</text><polygon fill="#FFFF44" points="1888.98,1068.9922,1892.98,1072.9922,1888.98,1076.9922,1884.98,1072.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="312" x="1897.98" y="1077.2026">getCoreTryChecked&lt;Self&gt;(Self &amp; self) : decltype(auto)</text><polygon fill="#FFFF44" points="1888.98,1081.7969,1892.98,1085.7969,1888.98,1089.7969,1884.98,1085.7969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="889" x="1897.98" y="1090.0073">thenImplementation&lt;F,R&gt;(F &amp;&amp; func, R , futures::detail::InlineContinuation ) : typename std::enable_if&lt;!R::ReturnsFuture::value, typename R::Return&gt;::type</text><polygon fill="#FFFF44" points="1888.98,1094.6016,1892.98,1098.6016,1888.98,1102.6016,1884.98,1098.6016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="886" x="1897.98" y="1102.812">thenImplementation&lt;F,R&gt;(F &amp;&amp; func, R , futures::detail::InlineContinuation ) : typename std::enable_if&lt;R::ReturnsFuture::value, typename R::Return&gt;::type</text><!--MD5=[f7c120b3138309e71b33687555c3dfdd]
class C_0001797157475442677168--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L104" target="_top" title="CoreCallbackState" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L104" xlink:show="new" xlink:title="CoreCallbackState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="201.6563" id="C_0001797157475442677168" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="1062.48" y="187"/><ellipse cx="1196.73" cy="203" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1199.6988,208.6406 Q1199.1206,208.9375 1198.48,209.0781 Q1197.8394,209.2344 1197.1363,209.2344 Q1194.6363,209.2344 1193.3081,207.5938 Q1191.9956,205.9375 1191.9956,202.8125 Q1191.9956,199.6875 1193.3081,198.0313 Q1194.6363,196.375 1197.1363,196.375 Q1197.8394,196.375 1198.48,196.5313 Q1199.1363,196.6875 1199.6988,196.9844 L1199.6988,199.7031 Q1199.0738,199.125 1198.48,198.8594 Q1197.8863,198.5781 1197.2613,198.5781 Q1195.9175,198.5781 1195.23,199.6563 Q1194.5425,200.7188 1194.5425,202.8125 Q1194.5425,204.9063 1195.23,205.9844 Q1195.9175,207.0469 1197.2613,207.0469 Q1197.8863,207.0469 1198.48,206.7813 Q1199.0738,206.5 1199.6988,205.9219 L1199.6988,208.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="211" x="1217.23" y="207.1543">futures::detail::CoreCallbackState</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="20" x="1555.48" y="184"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="18" x="1556.48" y="196.1387">T,F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.48" x2="1571.48" y1="219" y2="219"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L162" target="_top" title="promise_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L162" xlink:show="new" xlink:title="promise_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1068.48" y="225"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070.48" y="227"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L162" target="_top" title="promise_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L162" xlink:show="new" xlink:title="promise_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1082.48" y="233.2104">promise_ : Promise&lt;T&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.48" x2="1571.48" y1="239.8047" y2="239.8047"/><ellipse cx="1073.48" cy="250.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="1082.48" y="254.0151">CoreCallbackState&lt;T, F&gt;(Promise&lt;T&gt; &amp;&amp; promise, F &amp;&amp; func) : void</text><ellipse cx="1073.48" cy="263.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="1082.48" y="266.8198">CoreCallbackState&lt;T, F&gt;(CoreCallbackState&lt;T,F&gt; &amp;&amp; that) : void</text><ellipse cx="1073.48" cy="276.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="1082.48" y="279.6245">operator=(CoreCallbackState&lt;T,F&gt; &amp;&amp; ) : CoreCallbackState&lt;T,F&gt; &amp;</text><ellipse cx="1073.48" cy="289.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1082.48" y="292.4292">~CoreCallbackState&lt;T, F&gt;() : void</text><ellipse cx="1073.48" cy="302.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1082.48" y="305.2339">setTry(Executor::KeepAlive&lt;&gt; &amp;&amp; keepAlive, Try&lt;T&gt; &amp;&amp; t) : void</text><ellipse cx="1073.48" cy="314.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="1082.48" y="318.0386">setException(Executor::KeepAlive&lt;&gt; &amp;&amp; keepAlive, exception_wrapper &amp;&amp; ew) : void</text><ellipse cx="1073.48" cy="327.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1082.48" y="330.8433">stealPromise() : Promise&lt;T&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070.48" y="337.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1082.48" y="343.6479">before_barrier() const : bool</text><ellipse cx="1073.48" cy="353.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1082.48" y="356.4526">invoke&lt;Args...&gt;(Args &amp;&amp;... args) : auto</text><ellipse cx="1073.48" cy="366.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1082.48" y="369.2573">tryInvoke&lt;Args...&gt;(Args &amp;&amp;... args) : auto</text><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L159" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L159" xlink:show="new" xlink:title="" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1068.48" y="373.8516"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070.48" y="375.8516"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L159" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L159" xlink:show="new" xlink:title="" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1082.48" y="382.062">: CoreCallbackState::(anonymous_8228286)</text></a><!--MD5=[deaaab4a33ea538684a0da45c7befd05]
class C_0002242828088217415598--><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.5;" width="154" x="3187.48" y="3190.5"/><ellipse cx="3202.48" cy="3206.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3205.4488,3212.1406 Q3204.8706,3212.4375 3204.23,3212.5781 Q3203.5894,3212.7344 3202.8863,3212.7344 Q3200.3863,3212.7344 3199.0581,3211.0938 Q3197.7456,3209.4375 3197.7456,3206.3125 Q3197.7456,3203.1875 3199.0581,3201.5313 Q3200.3863,3199.875 3202.8863,3199.875 Q3203.5894,3199.875 3204.23,3200.0313 Q3204.8863,3200.1875 3205.4488,3200.4844 L3205.4488,3203.2031 Q3204.8238,3202.625 3204.23,3202.3594 Q3203.6363,3202.0781 3203.0113,3202.0781 Q3201.6675,3202.0781 3200.98,3203.1563 Q3200.2925,3204.2188 3200.2925,3206.3125 Q3200.2925,3208.4063 3200.98,3209.4844 Q3201.6675,3210.5469 3203.0113,3210.5469 Q3203.6363,3210.5469 3204.23,3210.2813 Q3204.8238,3210 3205.4488,3209.4219 L3205.4488,3212.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="3216.48" y="3210.6543">Executor::KeepAlive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3188.48" x2="3340.48" y1="3222.5" y2="3222.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3188.48" x2="3340.48" y1="3230.5" y2="3230.5"/><!--MD5=[5ce47a6e8371bf107ea8ee246178b48d]
class C_0001778078938283944881--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L147" target="_top" title="Promise" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L147" xlink:show="new" xlink:title="Promise" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="393.7266" id="C_0001778078938283944881" style="stroke: #A80036; stroke-width: 1.5;" width="635" x="1056.98" y="606.5"/><ellipse cx="1339.73" cy="622.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1342.6988,628.1406 Q1342.1206,628.4375 1341.48,628.5781 Q1340.8394,628.7344 1340.1363,628.7344 Q1337.6363,628.7344 1336.3081,627.0938 Q1334.9956,625.4375 1334.9956,622.3125 Q1334.9956,619.1875 1336.3081,617.5313 Q1337.6363,615.875 1340.1363,615.875 Q1340.8394,615.875 1341.48,616.0313 Q1342.1363,616.1875 1342.6988,616.4844 L1342.6988,619.2031 Q1342.0738,618.625 1341.48,618.3594 Q1340.8863,618.0781 1340.2613,618.0781 Q1338.9175,618.0781 1338.23,619.1563 Q1337.5425,620.2188 1337.5425,622.3125 Q1337.5425,624.4063 1338.23,625.4844 Q1338.9175,626.5469 1340.2613,626.5469 Q1340.8863,626.5469 1341.48,626.2813 Q1342.0738,626 1342.6988,625.4219 L1342.6988,628.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="1360.23" y="626.6543">Promise</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1685.98" y="603.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1686.98" y="615.6387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1057.98" x2="1690.98" y1="638.5" y2="638.5"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L418" target="_top" title="retrieved_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L418" xlink:show="new" xlink:title="retrieved_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1062.98" y="644.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="646.5"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L418" target="_top" title="retrieved_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L418" xlink:show="new" xlink:title="retrieved_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1076.98" y="652.7104">retrieved_ : bool</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L444" target="_top" title="core_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L444" xlink:show="new" xlink:title="core_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1062.98" y="657.3047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="659.3047"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L444" target="_top" title="core_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L444" xlink:show="new" xlink:title="core_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1076.98" y="665.5151">core_ : Promise::Core *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1057.98" x2="1690.98" y1="672.1094" y2="672.1094"/><ellipse cx="1067.98" cy="683.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="158" x="1076.98" y="686.3198">makeEmpty() : Promise&lt;T&gt;</text><ellipse cx="1067.98" cy="695.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1076.98" y="699.1245">Promise&lt;T&gt;() : void</text><ellipse cx="1067.98" cy="708.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1076.98" y="711.9292">~Promise&lt;T&gt;() : void</text><ellipse cx="1067.98" cy="721.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="1076.98" y="724.7339">Promise&lt;T&gt;(const Promise&lt;T&gt; &amp; ) : void</text><ellipse cx="1067.98" cy="734.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="1076.98" y="737.5386">operator=(const Promise&lt;T&gt; &amp; ) : Promise&lt;T&gt; &amp;</text><ellipse cx="1067.98" cy="747.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1076.98" y="750.3433">Promise&lt;T&gt;(Promise&lt;T&gt; &amp;&amp; other) : void</text><ellipse cx="1067.98" cy="759.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="1076.98" y="763.1479">operator=(Promise&lt;T&gt; &amp;&amp; other) : Promise&lt;T&gt; &amp;</text><ellipse cx="1067.98" cy="772.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1076.98" y="775.9526">getSemiFuture() : SemiFuture&lt;T&gt;</text><ellipse cx="1067.98" cy="785.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1076.98" y="788.7573">getFuture() : Future&lt;T&gt;</text><ellipse cx="1067.98" cy="798.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1076.98" y="801.562">setException(exception_wrapper ew) : void</text><ellipse cx="1067.98" cy="811.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1076.98" y="814.3667">setTry(Try&lt;T&gt; &amp;&amp; t) : void</text><ellipse cx="1067.98" cy="823.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1076.98" y="827.1714">valid() const : bool</text><ellipse cx="1067.98" cy="836.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1076.98" y="839.9761">isFulfilled() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="846.5703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1076.98" y="852.7808">getCore() : Promise::Core &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="859.375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1076.98" y="865.5854">getCore() const : const Promise::Core &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="872.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="1076.98" y="878.3901">setTry(Executor::KeepAlive&lt;&gt; &amp;&amp; ka, Try&lt;T&gt; &amp;&amp; t) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="884.9844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="1076.98" y="891.1948">Promise&lt;T&gt;(futures::detail::EmptyConstruct ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="897.7891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1076.98" y="903.9995">throwIfFulfilled() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="910.5938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1076.98" y="916.8042">detach() : void</text><ellipse cx="1067.98" cy="926.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="609" x="1076.98" y="929.6089">setException&lt;E&gt;(const E &amp; e) : typename std::enable_if&lt;std::is_base_of&lt;std::exception, E&gt;::value&gt;::type</text><ellipse cx="1067.98" cy="939.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1076.98" y="942.4136">setInterruptHandler&lt;F&gt;(F &amp;&amp; fn) : void</text><ellipse cx="1067.98" cy="952.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="1076.98" y="955.2183">setValue</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="489" x="1125.98" y="955.2183">() : typename std::enable_if&lt;std::is_same&lt;struct Unit, B&gt;::value, void&gt;::type</text><ellipse cx="1067.98" cy="964.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1076.98" y="968.0229">setValue&lt;M&gt;(M &amp;&amp; value) : void</text><ellipse cx="1067.98" cy="977.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1076.98" y="980.8276">setWith&lt;F&gt;(F &amp;&amp; func) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1064.98" y="987.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="262" x="1076.98" y="993.6323">getCoreImpl&lt;CoreT&gt;(CoreT * core) : CoreT &amp;</text><!--MD5=[e39d5cb1daa64537bcdef5f48ceb7e5e]
class C_0000481841646641149488--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/DrivableExecutor.h#L40" target="_top" title="DrivableExecutor" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/DrivableExecutor.h#L40" xlink:show="new" xlink:title="DrivableExecutor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="73.6094" id="C_0000481841646641149488" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="1930.98" y="3177.5"/><ellipse cx="1988.23" cy="3193.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1988.3394,3188.8438 L1987.1831,3193.9219 L1989.5113,3193.9219 L1988.3394,3188.8438 Z M1986.855,3186.6094 L1989.8394,3186.6094 L1993.1988,3199 L1990.7456,3199 L1989.98,3195.9375 L1986.6988,3195.9375 L1985.9488,3199 L1983.5113,3199 L1986.855,3186.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="2008.73" y="3197.6543">DrivableExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1931.98" x2="2158.98" y1="3209.5" y2="3209.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1931.98" x2="2158.98" y1="3217.5" y2="3217.5"/><ellipse cx="1941.98" cy="3228.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1950.98" y="3231.7104">~DrivableExecutor() = default : void</text><ellipse cx="1941.98" cy="3241.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="1950.98" y="3244.5151">drive() = 0 : void</text></a><!--MD5=[533c44690536949bf73673dd85860041]
class C_0000769434624932181431--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L30" target="_top" title="TimedDrivableExecutor" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L30" xlink:show="new" xlink:title="TimedDrivableExecutor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="240.0703" id="C_0000769434624932181431" style="stroke: #A80036; stroke-width: 1.5;" width="589" x="1727.98" y="3805"/><ellipse cx="1947.23" cy="3821" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1950.1988,3826.6406 Q1949.6206,3826.9375 1948.98,3827.0781 Q1948.3394,3827.2344 1947.6363,3827.2344 Q1945.1363,3827.2344 1943.8081,3825.5938 Q1942.4956,3823.9375 1942.4956,3820.8125 Q1942.4956,3817.6875 1943.8081,3816.0313 Q1945.1363,3814.375 1947.6363,3814.375 Q1948.3394,3814.375 1948.98,3814.5313 Q1949.6363,3814.6875 1950.1988,3814.9844 L1950.1988,3817.7031 Q1949.5738,3817.125 1948.98,3816.8594 Q1948.3863,3816.5781 1947.7613,3816.5781 Q1946.4175,3816.5781 1945.73,3817.6563 Q1945.0425,3818.7188 1945.0425,3820.8125 Q1945.0425,3822.9063 1945.73,3823.9844 Q1946.4175,3825.0469 1947.7613,3825.0469 Q1948.3863,3825.0469 1948.98,3824.7813 Q1949.5738,3824.5 1950.1988,3823.9219 L1950.1988,3826.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="142" x="1967.73" y="3825.1543">TimedDrivableExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1728.98" x2="2315.98" y1="3837" y2="3837"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L99" target="_top" title="queue_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L99" xlink:show="new" xlink:title="queue_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1733.98" y="3843"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1735.98" y="3845"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L99" target="_top" title="queue_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L99" xlink:show="new" xlink:title="queue_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1747.98" y="3851.2104">queue_ : UMPSCQueue&lt;Func,true&gt;</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L100" target="_top" title="func_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L100" xlink:show="new" xlink:title="func_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1733.98" y="3855.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1735.98" y="3857.8047"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L100" target="_top" title="func_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L100" xlink:show="new" xlink:title="func_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1747.98" y="3864.0151">func_ : Func</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1728.98" x2="2315.98" y1="3870.6094" y2="3870.6094"/><ellipse cx="1738.98" cy="3881.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1747.98" y="3884.8198">TimedDrivableExecutor() : void</text><ellipse cx="1738.98" cy="3894.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1747.98" y="3897.6245">~TimedDrivableExecutor() : void</text><ellipse cx="1738.98" cy="3907.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1747.98" y="3910.4292">drive() : void</text><ellipse cx="1738.98" cy="3920.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1747.98" y="3923.2339">try_drive() : bool</text><ellipse cx="1738.98" cy="3932.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1747.98" y="3936.0386">add(Func ) : void</text><ellipse cx="1738.98" cy="3945.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1747.98" y="3948.8433">run() : size_t</text><ellipse cx="1738.98" cy="3958.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1747.98" y="3961.6479">drain() : size_t</text><ellipse cx="1738.98" cy="3971.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1747.98" y="3974.4526">wait() : void</text><ellipse cx="1738.98" cy="3984.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1747.98" y="3987.2573">try_wait() : bool</text><ellipse cx="1738.98" cy="3996.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="1747.98" y="4000.062">try_drive_for&lt;Rep,Period&gt;(const std::chrono::duration&lt;Rep,Period&gt; &amp; timeout) : _Bool</text><ellipse cx="1738.98" cy="4009.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="563" x="1747.98" y="4012.8667">try_drive_until&lt;Clock,Duration&gt;(const std::chrono::time_point&lt;Clock,Duration&gt; &amp; deadline) : _Bool</text><ellipse cx="1738.98" cy="4022.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="1747.98" y="4025.6714">try_wait_for&lt;Rep,Period&gt;(const std::chrono::duration&lt;Rep,Period&gt; &amp; timeout) : _Bool</text><ellipse cx="1738.98" cy="4035.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="1747.98" y="4038.4761">try_wait_until&lt;Clock,Duration&gt;(const std::chrono::time_point&lt;Clock,Duration&gt; &amp; deadline) : _Bool</text><!--MD5=[2127b0c09bf6e55a01eccbfd6684f901]
class C_0000630050676637484276--><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0000630050676637484276" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="2973.48" y="3901"/><ellipse cx="2988.48" cy="3917" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2991.4488,3922.6406 Q2990.8706,3922.9375 2990.23,3923.0781 Q2989.5894,3923.2344 2988.8863,3923.2344 Q2986.3863,3923.2344 2985.0581,3921.5938 Q2983.7456,3919.9375 2983.7456,3916.8125 Q2983.7456,3913.6875 2985.0581,3912.0313 Q2986.3863,3910.375 2988.8863,3910.375 Q2989.5894,3910.375 2990.23,3910.5313 Q2990.8863,3910.6875 2991.4488,3910.9844 L2991.4488,3913.7031 Q2990.8238,3913.125 2990.23,3912.8594 Q2989.6363,3912.5781 2989.0113,3912.5781 Q2987.6675,3912.5781 2986.98,3913.6563 Q2986.2925,3914.7188 2986.2925,3916.8125 Q2986.2925,3918.9063 2986.98,3919.9844 Q2987.6675,3921.0469 2989.0113,3921.0469 Q2989.6363,3921.0469 2990.23,3920.7813 Q2990.8238,3920.5 2991.4488,3919.9219 L2991.4488,3922.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="3002.48" y="3921.1543">SemiFuture</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="27" x="3081.48" y="3898"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="25" x="3082.48" y="3910.1387">Unit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2974.48" x2="3104.48" y1="3933" y2="3933"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2974.48" x2="3104.48" y1="3941" y2="3941"/><!--MD5=[61dc80a935b7ebb58aafe537ed868864]
class C_0000156632990802225029--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L487" target="_top" title="SemiFuture" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L487" xlink:show="new" xlink:title="SemiFuture" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="572.9922" id="C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.5;" width="836" x="2476.48" y="1186"/><ellipse cx="2849.23" cy="1202" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2852.1988,1207.6406 Q2851.6206,1207.9375 2850.98,1208.0781 Q2850.3394,1208.2344 2849.6363,1208.2344 Q2847.1363,1208.2344 2845.8081,1206.5938 Q2844.4956,1204.9375 2844.4956,1201.8125 Q2844.4956,1198.6875 2845.8081,1197.0313 Q2847.1363,1195.375 2849.6363,1195.375 Q2850.3394,1195.375 2850.98,1195.5313 Q2851.6363,1195.6875 2852.1988,1195.9844 L2852.1988,1198.7031 Q2851.5738,1198.125 2850.98,1197.8594 Q2850.3863,1197.5781 2849.7613,1197.5781 Q2848.4175,1197.5781 2847.73,1198.6563 Q2847.0425,1199.7188 2847.0425,1201.8125 Q2847.0425,1203.9063 2847.73,1204.9844 Q2848.4175,1206.0469 2849.7613,1206.0469 Q2850.3863,1206.0469 2850.98,1205.7813 Q2851.5738,1205.5 2852.1988,1204.9219 L2852.1988,1207.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="2869.73" y="1206.1543">SemiFuture</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="3306.48" y="1183"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="3307.48" y="1195.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2477.48" x2="3311.48" y1="1218" y2="1218"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2477.48" x2="3311.48" y1="1226" y2="1226"/><ellipse cx="2487.48" cy="1237" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2496.48" y="1240.2104">~SemiFuture&lt;T&gt;() : void</text><ellipse cx="2487.48" cy="1249.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="2496.48" y="1253.0151">makeEmpty() : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1262.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="2496.48" y="1265.8198">SemiFuture&lt;T&gt;(const SemiFuture&lt;T&gt; &amp; ) : void</text><ellipse cx="2487.48" cy="1275.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2496.48" y="1278.6245">SemiFuture&lt;T&gt;(SemiFuture&lt;T&gt; &amp;&amp; ) : void</text><ellipse cx="2487.48" cy="1288.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="2496.48" y="1291.4292">SemiFuture&lt;T&gt;(Future&lt;T&gt; &amp;&amp; ) : void</text><ellipse cx="2487.48" cy="1301.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="2496.48" y="1304.2339">operator=(const SemiFuture&lt;T&gt; &amp; ) : SemiFuture&lt;T&gt; &amp;</text><ellipse cx="2487.48" cy="1313.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="2496.48" y="1317.0386">operator=(SemiFuture&lt;T&gt; &amp;&amp; ) : SemiFuture&lt;T&gt; &amp;</text><ellipse cx="2487.48" cy="1326.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="2496.48" y="1329.8433">operator=(Future&lt;T&gt; &amp;&amp; ) : SemiFuture&lt;T&gt; &amp;</text><ellipse cx="2487.48" cy="1339.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2496.48" y="1342.6479">get() : T</text><ellipse cx="2487.48" cy="1352.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2496.48" y="1355.4526">get(HighResDuration dur) : T</text><ellipse cx="2487.48" cy="1365.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2496.48" y="1368.2573">getTry() : Try&lt;T&gt;</text><ellipse cx="2487.48" cy="1377.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="2496.48" y="1381.062">getTry(HighResDuration dur) : Try&lt;T&gt;</text><ellipse cx="2487.48" cy="1390.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="2496.48" y="1393.8667">wait() : SemiFuture&lt;T&gt; &amp;</text><ellipse cx="2487.48" cy="1403.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="2496.48" y="1406.6714">wait() : SemiFuture&lt;T&gt; &amp;&amp;</text><ellipse cx="2487.48" cy="1416.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2496.48" y="1419.4761">wait(HighResDuration dur) : bool</text><ellipse cx="2487.48" cy="1429.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="2496.48" y="1432.2808">via(Executor::KeepAlive&lt;&gt; executor) : Future&lt;T&gt;</text><ellipse cx="2487.48" cy="1441.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="2496.48" y="1445.0854">via(Executor::KeepAlive&lt;&gt; executor, int8_t priority) : Future&lt;T&gt;</text><ellipse cx="2487.48" cy="1454.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2496.48" y="1457.8901">unit() : SemiFuture&lt;Unit&gt;</text><ellipse cx="2487.48" cy="1467.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="2496.48" y="1470.6948">within(HighResDuration dur, Timekeeper * tk = nullptr) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1480.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="2496.48" y="1483.4995">delayed(HighResDuration dur, Timekeeper * tk = nullptr) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1493.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2496.48" y="1496.3042">toUnsafeFuture() : Future&lt;T&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2484.48" y="1502.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="2496.48" y="1509.1089">SemiFuture&lt;T&gt;(SemiFuture::Core * obj) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2484.48" y="1515.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2496.48" y="1521.9136">SemiFuture&lt;T&gt;(futures::detail::EmptyConstruct ) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2484.48" y="1528.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="2496.48" y="1534.7183">stealDeferredExecutor() : futures::detail::DeferredWrapper</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2484.48" y="1541.3125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="2496.48" y="1547.5229">wait(HighResDuration dur) : SemiFuture&lt;T&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2484.48" y="1554.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="324" x="2496.48" y="1560.3276">releaseDeferredExecutor(SemiFuture::Core * core) : void</text><ellipse cx="2487.48" cy="1569.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2496.48" y="1573.1323">SemiFuture&lt;T&gt;&lt;T2,&gt;(T2 &amp;&amp; val) : void</text><ellipse cx="2487.48" cy="1582.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="596" x="2496.48" y="1585.937">SemiFuture&lt;T&gt;&lt;T2&gt;(typename std::enable_if&lt;std::is_same&lt;Unit,T2&gt;::value&gt;::type * p = nullptr) : void</text><ellipse cx="2487.48" cy="1595.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="810" x="2496.48" y="1598.7417">SemiFuture&lt;T&gt;&lt;Args...,typename std::enable_if&lt;std::is_constructible&lt;T, Args &amp;&amp;...&gt;::value, int&gt;::type&gt;(in_place_t , Args &amp;&amp;... args) : void</text><ellipse cx="2487.48" cy="1608.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2496.48" y="1611.5464">defer&lt;F&gt;(F &amp;&amp; func) : SemiFuture&lt;typename futures::detail::tryCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="2487.48" cy="1621.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="645" x="2496.48" y="1624.3511">deferExTry&lt;F&gt;(F &amp;&amp; func) : SemiFuture&lt;typename futures::detail::tryExecutorCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="2487.48" cy="1633.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="2496.48" y="1637.1558">defer&lt;R,Args...&gt;(R (&amp;)(Args...) func) : auto</text><ellipse cx="2487.48" cy="1646.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="611" x="2496.48" y="1649.9604">deferValue&lt;F&gt;(F &amp;&amp; func) : SemiFuture&lt;typename futures::detail::valueCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="2487.48" cy="1659.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="673" x="2496.48" y="1662.7651">deferExValue&lt;F&gt;(F &amp;&amp; func) : SemiFuture&lt;typename futures::detail::valueExecutorCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="2487.48" cy="1672.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="2496.48" y="1675.5698">deferValue&lt;R,Args...&gt;(R (&amp;)(Args...) func) : auto</text><ellipse cx="2487.48" cy="1685.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="2496.48" y="1688.3745">deferError&lt;ExceptionType,F&gt;(tag_t&lt;ExceptionType&gt; , F &amp;&amp; func) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1697.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="581" x="2496.48" y="1701.1792">deferError&lt;ExceptionType,R,Args...&gt;(tag_t&lt;ExceptionType&gt; tag, R (&amp;)(Args...) func) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1710.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="2496.48" y="1713.9839">deferError&lt;ExceptionType,F&gt;(F &amp;&amp; func) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1723.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2496.48" y="1726.7886">deferError&lt;F&gt;(F &amp;&amp; func) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1736.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="2496.48" y="1739.5933">deferError&lt;R,Args...&gt;(R (&amp;)(Args...) func) : SemiFuture&lt;T&gt;</text><ellipse cx="2487.48" cy="1749.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="2496.48" y="1752.3979">within&lt;E&gt;(HighResDuration dur, E e, Timekeeper * tk = nullptr) : SemiFuture&lt;T&gt;</text></a><!--MD5=[71b607715536e1850623b34de6f23c28]
class C_0000873025366658585071--><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0000873025366658585071" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="2498.48" y="3901"/><ellipse cx="2513.48" cy="3917" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2516.4488,3922.6406 Q2515.8706,3922.9375 2515.23,3923.0781 Q2514.5894,3923.2344 2513.8863,3923.2344 Q2511.3863,3923.2344 2510.0581,3921.5938 Q2508.7456,3919.9375 2508.7456,3916.8125 Q2508.7456,3913.6875 2510.0581,3912.0313 Q2511.3863,3910.375 2513.8863,3910.375 Q2514.5894,3910.375 2515.23,3910.5313 Q2515.8863,3910.6875 2516.4488,3910.9844 L2516.4488,3913.7031 Q2515.8238,3913.125 2515.23,3912.8594 Q2514.6363,3912.5781 2514.0113,3912.5781 Q2512.6675,3912.5781 2511.98,3913.6563 Q2511.2925,3914.7188 2511.2925,3916.8125 Q2511.2925,3918.9063 2511.98,3919.9844 Q2512.6675,3921.0469 2514.0113,3921.0469 Q2514.6363,3921.0469 2515.23,3920.7813 Q2515.8238,3920.5 2516.4488,3919.9219 L2516.4488,3922.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="2527.48" y="3921.1543">Future</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="27" x="2576.48" y="3898"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="25" x="2577.48" y="3910.1387">Unit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2499.48" x2="2599.48" y1="3933" y2="3933"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2499.48" x2="2599.48" y1="3941" y2="3941"/><!--MD5=[ed452a243f0d36bc86bb7ff51b234c1e]
class C_0000219446053632489521--><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0000219446053632489521" style="stroke: #A80036; stroke-width: 1.5;" width="104" x="1720.48" y="3190.5"/><ellipse cx="1735.48" cy="3206.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1738.4488,3212.1406 Q1737.8706,3212.4375 1737.23,3212.5781 Q1736.5894,3212.7344 1735.8863,3212.7344 Q1733.3863,3212.7344 1732.0581,3211.0938 Q1730.7456,3209.4375 1730.7456,3206.3125 Q1730.7456,3203.1875 1732.0581,3201.5313 Q1733.3863,3199.875 1735.8863,3199.875 Q1736.5894,3199.875 1737.23,3200.0313 Q1737.8863,3200.1875 1738.4488,3200.4844 L1738.4488,3203.2031 Q1737.8238,3202.625 1737.23,3202.3594 Q1736.6363,3202.0781 1736.0113,3202.0781 Q1734.6675,3202.0781 1733.98,3203.1563 Q1733.2925,3204.2188 1733.2925,3206.3125 Q1733.2925,3208.4063 1733.98,3209.4844 Q1734.6675,3210.5469 1736.0113,3210.5469 Q1736.6363,3210.5469 1737.23,3210.2813 Q1737.8238,3210 1738.4488,3209.4219 L1738.4488,3212.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="1749.48" y="3210.6543">Future</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="1798.48" y="3187.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="1799.48" y="3199.6387">bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1721.48" x2="1823.48" y1="3222.5" y2="3222.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1721.48" x2="1823.48" y1="3230.5" y2="3230.5"/><!--MD5=[de35e8fd69a90587d1caa838690c71e4]
class C_0000432533400863196245--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1003" target="_top" title="Future" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1003" xlink:show="new" xlink:title="Future" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="995.5469" id="C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.5;" width="1328" x="1334.48" y="1836"/><ellipse cx="1968.23" cy="1852" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1971.1988,1857.6406 Q1970.6206,1857.9375 1969.98,1858.0781 Q1969.3394,1858.2344 1968.6363,1858.2344 Q1966.1363,1858.2344 1964.8081,1856.5938 Q1963.4956,1854.9375 1963.4956,1851.8125 Q1963.4956,1848.6875 1964.8081,1847.0313 Q1966.1363,1845.375 1968.6363,1845.375 Q1969.3394,1845.375 1969.98,1845.5313 Q1970.6363,1845.6875 1971.1988,1845.9844 L1971.1988,1848.7031 Q1970.5738,1848.125 1969.98,1847.8594 Q1969.3863,1847.5781 1968.7613,1847.5781 Q1967.4175,1847.5781 1966.73,1848.6563 Q1966.0425,1849.7188 1966.0425,1851.8125 Q1966.0425,1853.9063 1966.73,1854.9844 Q1967.4175,1856.0469 1968.7613,1856.0469 Q1969.3863,1856.0469 1969.98,1855.7813 Q1970.5738,1855.5 1971.1988,1854.9219 L1971.1988,1857.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="1988.73" y="1856.1543">Future</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="2656.48" y="1833"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2657.48" y="1845.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1335.48" x2="2661.48" y1="1868" y2="1868"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1335.48" x2="2661.48" y1="1876" y2="1876"/><ellipse cx="1345.48" cy="1887" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1354.48" y="1890.2104">Future&lt;T&gt;(const Future&lt;T&gt; &amp; ) : void</text><ellipse cx="1345.48" cy="1899.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1354.48" y="1903.0151">Future&lt;T&gt;(Future&lt;T&gt; &amp;&amp; ) : void</text><ellipse cx="1345.48" cy="1912.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="147" x="1354.48" y="1915.8198">makeEmpty() : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="1925.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="1354.48" y="1928.6245">operator=(const Future&lt;T&gt; &amp; ) : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="1938.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1354.48" y="1941.4292">operator=(Future&lt;T&gt; &amp;&amp; ) : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="1951.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1354.48" y="1954.2339">getVia(DrivableExecutor * e) : T</text><ellipse cx="1345.48" cy="1963.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="1354.48" y="1967.0386">getVia(TimedDrivableExecutor * e, HighResDuration dur) : T</text><ellipse cx="1345.48" cy="1976.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1354.48" y="1979.8433">getTryVia(DrivableExecutor * e) : Try&lt;T&gt;</text><ellipse cx="1345.48" cy="1989.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="1354.48" y="1992.6479">getTryVia(TimedDrivableExecutor * e, HighResDuration dur) : Try&lt;T&gt;</text><ellipse cx="1345.48" cy="2002.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1354.48" y="2005.4526">via(Executor::KeepAlive&lt;&gt; executor) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2015.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1354.48" y="2018.2573">via(Executor::KeepAlive&lt;&gt; executor, int8_t priority) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2027.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1354.48" y="2031.062">via(Executor::KeepAlive&lt;&gt; executor) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2040.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1354.48" y="2043.8667">via(Executor::KeepAlive&lt;&gt; executor, int8_t priority) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2053.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1354.48" y="2056.6714">then() : Future&lt;Unit&gt;</text><ellipse cx="1345.48" cy="2066.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1354.48" y="2069.4761">unit() : Future&lt;Unit&gt;</text><ellipse cx="1345.48" cy="2079.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="1354.48" y="2082.2808">within(HighResDuration dur, Timekeeper * tk = nullptr) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2091.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="1354.48" y="2095.0854">delayed(HighResDuration , Timekeeper *  = nullptr) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2104.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="1354.48" y="2107.8901">get() : T</text><ellipse cx="1345.48" cy="2117.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1354.48" y="2120.6948">get(HighResDuration dur) : T</text><ellipse cx="1345.48" cy="2130.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1354.48" y="2133.4995">getTry() : Try&lt;T&gt;</text><ellipse cx="1345.48" cy="2143.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1354.48" y="2146.3042">getTry(HighResDuration dur) : Try&lt;T&gt;</text><ellipse cx="1345.48" cy="2155.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="1354.48" y="2159.1089">wait() : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="2168.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1354.48" y="2171.9136">wait() : Future&lt;T&gt; &amp;&amp;</text><ellipse cx="1345.48" cy="2181.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1354.48" y="2184.7183">wait(HighResDuration dur) : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="2194.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1354.48" y="2197.5229">wait(HighResDuration dur) : Future&lt;T&gt; &amp;&amp;</text><ellipse cx="1345.48" cy="2207.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="1354.48" y="2210.3276">waitVia(DrivableExecutor * e) : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="2219.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1354.48" y="2223.1323">waitVia(DrivableExecutor * e) : Future&lt;T&gt; &amp;&amp;</text><ellipse cx="1345.48" cy="2232.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="411" x="1354.48" y="2235.937">waitVia(TimedDrivableExecutor * e, HighResDuration dur) : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="2245.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="1354.48" y="2248.7417">waitVia(TimedDrivableExecutor * e, HighResDuration dur) : Future&lt;T&gt; &amp;&amp;</text><ellipse cx="1345.48" cy="2258.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1354.48" y="2261.5464">willEqual(Future&lt;T&gt; &amp; ) : Future&lt;bool&gt;</text><ellipse cx="1345.48" cy="2271.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1354.48" y="2274.3511">semi() : SemiFuture&lt;T&gt;</text><polygon fill="#FFFF44" points="1345.48,2278.9453,1349.48,2282.9453,1345.48,2286.9453,1341.48,2282.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1354.48" y="2287.1558">Future&lt;T&gt;(Future::Core * obj) : void</text><polygon fill="#FFFF44" points="1345.48,2291.75,1349.48,2295.75,1345.48,2299.75,1341.48,2295.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="1354.48" y="2299.9604">Future&lt;T&gt;(futures::detail::EmptyConstruct ) : void</text><ellipse cx="1345.48" cy="2309.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1354.48" y="2312.7651">Future&lt;T&gt;&lt;T2,&gt;(T2 &amp;&amp; val) : void</text><ellipse cx="1345.48" cy="2322.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="1354.48" y="2325.5698">Future&lt;T&gt;&lt;T2&gt;(typename std::enable_if&lt;std::is_same&lt;Unit,T2&gt;::value&gt;::type * p = nullptr) : void</text><ellipse cx="1345.48" cy="2335.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="781" x="1354.48" y="2338.3745">Future&lt;T&gt;&lt;Args...,typename std::enable_if&lt;std::is_constructible&lt;T, Args &amp;&amp;...&gt;::value, int&gt;::type&gt;(in_place_t , Args &amp;&amp;... args) : void</text><ellipse cx="1345.48" cy="2347.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1299" x="1354.48" y="2351.1792">Future&lt;T&gt;&lt;T2,typename std::enable_if&lt;!std::is_same&lt;T, typename std::decay&lt;T2&gt;::type&gt;::value &amp;&amp; std::is_constructible&lt;T, T2 &amp;&amp;&gt;::value &amp;&amp; std::is_convertible&lt;T2 &amp;&amp;, T&gt;::value, int&gt;::type&gt;(Future&lt;T2&gt; &amp;&amp; other) : void</text><ellipse cx="1345.48" cy="2360.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1302" x="1354.48" y="2363.9839">Future&lt;T&gt;&lt;T2,typename std::enable_if&lt;!std::is_same&lt;T, typename std::decay&lt;T2&gt;::type&gt;::value &amp;&amp; std::is_constructible&lt;T, T2 &amp;&amp;&gt;::value &amp;&amp; !std::is_convertible&lt;T2 &amp;&amp;, T&gt;::value, int&gt;::type&gt;(Future&lt;T2&gt; &amp;&amp; other) : void</text><ellipse cx="1345.48" cy="2373.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1107" x="1354.48" y="2376.7886">operator=&lt;T2,typename std::enable_if&lt;!std::is_same&lt;T, typename std::decay&lt;T2&gt;::type&gt;::value &amp;&amp; std::is_constructible&lt;T, T2 &amp;&amp;&gt;::value, int&gt;::type&gt;(Future&lt;T2&gt; &amp;&amp; other) : Future&lt;T&gt; &amp;</text><ellipse cx="1345.48" cy="2386.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="615" x="1354.48" y="2389.5933">unwrap&lt;F&gt;() : typename std::enable_if&lt;isFuture&lt;F&gt;::value, Future&lt;typename isFuture&lt;T&gt;::Inner&gt; &gt;::type</text><ellipse cx="1345.48" cy="2399.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="531" x="1354.48" y="2402.3979">then&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::tryCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2411.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="1354.48" y="2415.2026">thenInline&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::tryCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2424.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="614" x="1354.48" y="2428.0073">then&lt;R,Caller,Args...&gt;(R (Caller::*)(Args...) func, Caller * instance) : Future&lt;typename isFuture&lt;R&gt;::Inner&gt;</text><ellipse cx="1345.48" cy="2437.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="1354.48" y="2440.812">then&lt;Arg&gt;(Executor::KeepAlive&lt;&gt; x, Arg &amp;&amp; arg) : auto</text><ellipse cx="1345.48" cy="2450.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="549" x="1354.48" y="2453.6167">thenTry&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::tryCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2463.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="1354.48" y="2466.4214">thenTryInline&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::tryCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2476.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="611" x="1354.48" y="2479.2261">thenExTry&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::tryExecutorCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2488.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="1354.48" y="2492.0308">thenExTryInline&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::tryExecutorCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2501.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1354.48" y="2504.8354">thenTry&lt;R,Args...&gt;(R (&amp;)(Args...) func) : auto</text><ellipse cx="1345.48" cy="2514.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="1354.48" y="2517.6401">thenTryInline&lt;R,Args...&gt;(R (&amp;)(Args...) func) : auto</text><ellipse cx="1345.48" cy="2527.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1354.48" y="2530.4448">thenValue&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::valueCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2540.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="607" x="1354.48" y="2543.2495">thenValueInline&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::valueCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2552.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="639" x="1354.48" y="2556.0542">thenExValue&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::valueExecutorCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2565.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="1354.48" y="2568.8589">thenExValueInline&lt;F&gt;(F &amp;&amp; func) : Future&lt;typename futures::detail::valueExecutorCallableResult&lt;T, F&gt;::value_type&gt;</text><ellipse cx="1345.48" cy="2578.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1354.48" y="2581.6636">thenValue&lt;R,Args...&gt;(R (&amp;)(Args...) func) : auto</text><ellipse cx="1345.48" cy="2591.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1354.48" y="2594.4683">thenValueInline&lt;R,Args...&gt;(R (&amp;)(Args...) func) : auto</text><ellipse cx="1345.48" cy="2604.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1023" x="1354.48" y="2607.2729">thenError&lt;ExceptionType,F&gt;(tag_t&lt;ExceptionType&gt; , F &amp;&amp; func) : typename std::enable_if&lt;isFutureOrSemiFuture&lt;invoke_result_t&lt;F, ExceptionType&gt; &gt;::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2616.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1026" x="1354.48" y="2620.0776">thenError&lt;ExceptionType,F&gt;(tag_t&lt;ExceptionType&gt; , F &amp;&amp; func) : typename std::enable_if&lt;!isFutureOrSemiFuture&lt;invoke_result_t&lt;F, ExceptionType&gt; &gt;::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2629.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="547" x="1354.48" y="2632.8823">thenError&lt;ExceptionType,R,Args...&gt;(tag_t&lt;ExceptionType&gt; tag, R (&amp;)(Args...) func) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2642.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="1354.48" y="2645.687">thenError&lt;ExceptionType,F&gt;(F &amp;&amp; func) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2655.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="859" x="1354.48" y="2658.4917">thenError&lt;F&gt;(F &amp;&amp; func) : typename std::enable_if&lt;isFutureOrSemiFuture&lt;invoke_result_t&lt;F, class exception_wrapper&gt; &gt;::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2668.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="862" x="1354.48" y="2671.2964">thenError&lt;F&gt;(F &amp;&amp; func) : typename std::enable_if&lt;!isFutureOrSemiFuture&lt;invoke_result_t&lt;F, class exception_wrapper&gt; &gt;::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2680.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="1354.48" y="2684.1011">thenError&lt;R,Args...&gt;(R (&amp;)(Args...) func) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2693.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="970" x="1354.48" y="2696.9058">onError&lt;F&gt;(F &amp;&amp; func) : typename std::enable_if&lt;!is_invocable_v&lt;F, class exception_wrapper&gt; &amp;&amp; !futures::detail::Extract&lt;F&gt;::ReturnsFuture::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2706.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="967" x="1354.48" y="2709.7104">onError&lt;F&gt;(F &amp;&amp; func) : typename std::enable_if&lt;!is_invocable_v&lt;F, class exception_wrapper&gt; &amp;&amp; futures::detail::Extract&lt;F&gt;::ReturnsFuture::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2719.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="964" x="1354.48" y="2722.5151">onError&lt;F&gt;(F &amp;&amp; func) : typename std::enable_if&lt;is_invocable_v&lt;F, class exception_wrapper&gt; &amp;&amp; futures::detail::Extract&lt;F&gt;::ReturnsFuture::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2732.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="967" x="1354.48" y="2735.3198">onError&lt;F&gt;(F &amp;&amp; func) : typename std::enable_if&lt;is_invocable_v&lt;F, class exception_wrapper&gt; &amp;&amp; !futures::detail::Extract&lt;F&gt;::ReturnsFuture::value, Future&lt;T&gt; &gt;::type</text><ellipse cx="1345.48" cy="2744.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="1354.48" y="2748.1245">onError&lt;R,Args...&gt;(R (&amp;)(Args...) func) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2757.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1354.48" y="2760.9292">onError&lt;F&gt;(F &amp;&amp; func) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2770.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1354.48" y="2773.7339">ensure&lt;F&gt;(F &amp;&amp; func) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2783.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="1354.48" y="2786.5386">onTimeout&lt;F&gt;(HighResDuration , F &amp;&amp; func, Timekeeper *  = nullptr) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2796.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="481" x="1354.48" y="2799.3433">within&lt;E&gt;(HighResDuration dur, E exception, Timekeeper * tk = nullptr) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2808.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1354.48" y="2812.1479">filter&lt;F&gt;(F &amp;&amp; predicate) : Future&lt;T&gt;</text><ellipse cx="1345.48" cy="2821.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="1354.48" y="2824.9526">reduce&lt;I,F&gt;(I &amp;&amp; initial, F &amp;&amp; func) : Future&lt;I&gt;</text></a><!--MD5=[2e8dd4ef6718ce57e779d0c1ad13f1f9]
class C_0001579326926673473295--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1973" target="_top" title="Timekeeper" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1973" xlink:show="new" xlink:title="Timekeeper" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="112.0234" id="C_0001579326926673473295" style="stroke: #A80036; stroke-width: 1.5;" width="472" x="2563.48" y="3158.5"/><ellipse cx="2758.73" cy="3174.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2758.8394,3169.8438 L2757.6831,3174.9219 L2760.0113,3174.9219 L2758.8394,3169.8438 Z M2757.355,3167.6094 L2760.3394,3167.6094 L2763.6988,3180 L2761.2456,3180 L2760.48,3176.9375 L2757.1988,3176.9375 L2756.4488,3180 L2754.0113,3180 L2757.355,3167.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="2779.23" y="3178.6543">Timekeeper</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2564.48" x2="3034.48" y1="3190.5" y2="3190.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2564.48" x2="3034.48" y1="3198.5" y2="3198.5"/><ellipse cx="2574.48" cy="3209.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2583.48" y="3212.7104">~Timekeeper() = default : void</text><ellipse cx="2574.48" cy="3222.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="292" x="2583.48" y="3225.5151">after(HighResDuration dur) = 0 : SemiFuture&lt;Unit&gt;</text><ellipse cx="2574.48" cy="3235.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="2583.48" y="3238.3198">afterUnsafe(HighResDuration dur) : Future&lt;Unit&gt;</text><ellipse cx="2574.48" cy="3247.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="2583.48" y="3251.1245">at&lt;Clock&gt;(std::chrono::time_point&lt;Clock&gt; when) : SemiFuture&lt;struct Unit&gt;</text><ellipse cx="2574.48" cy="3260.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="2583.48" y="3263.9292">atUnsafe&lt;Clock&gt;(std::chrono::time_point&lt;Clock&gt; when) : Future&lt;struct Unit&gt;</text></a><!--MD5=[0decdc676e23e2a8528b53be76608132]
class C_0000742750151299031844--><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0000742750151299031844" style="stroke: #A80036; stroke-width: 1.5;" width="234" x="74.48" y="779.5"/><ellipse cx="89.48" cy="795.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M92.4488,801.1406 Q91.8706,801.4375 91.23,801.5781 Q90.5894,801.7344 89.8863,801.7344 Q87.3863,801.7344 86.0581,800.0938 Q84.7456,798.4375 84.7456,795.3125 Q84.7456,792.1875 86.0581,790.5313 Q87.3863,788.875 89.8863,788.875 Q90.5894,788.875 91.23,789.0313 Q91.8863,789.1875 92.4488,789.4844 L92.4488,792.2031 Q91.8238,791.625 91.23,791.3594 Q90.6363,791.0781 90.0113,791.0781 Q88.6675,791.0781 87.98,792.1563 Q87.2925,793.2188 87.2925,795.3125 Q87.2925,797.4063 87.98,798.4844 Q88.6675,799.5469 90.0113,799.5469 Q90.6363,799.5469 91.23,799.2813 Q91.8238,799 92.4488,798.4219 L92.4488,801.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="103.48" y="799.6543">SharedPromise::Defaulted</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="275.48" y="776.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="276.48" y="788.6387">size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="75.48" x2="307.48" y1="811.5" y2="811.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="75.48" x2="307.48" y1="819.5" y2="819.5"/><!--MD5=[3a289efd884d86cb5d4845d3010b5abf]
class C_0000616814101618455991--><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0000616814101618455991" style="stroke: #A80036; stroke-width: 1.5;" width="246" x="414.48" y="779.5"/><ellipse cx="429.48" cy="795.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M432.4488,801.1406 Q431.8706,801.4375 431.23,801.5781 Q430.5894,801.7344 429.8863,801.7344 Q427.3863,801.7344 426.0581,800.0938 Q424.7456,798.4375 424.7456,795.3125 Q424.7456,792.1875 426.0581,790.5313 Q427.3863,788.875 429.8863,788.875 Q430.5894,788.875 431.23,789.0313 Q431.8863,789.1875 432.4488,789.4844 L432.4488,792.2031 Q431.8238,791.625 431.23,791.3594 Q430.6363,791.0781 430.0113,791.0781 Q428.6675,791.0781 427.98,792.1563 Q427.2925,793.2188 427.2925,795.3125 Q427.2925,797.4063 427.98,798.4844 Q428.6675,799.5469 430.0113,799.5469 Q430.6363,799.5469 431.23,799.2813 Q431.8238,799 432.4488,798.4219 L432.4488,801.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="443.48" y="799.6543">SharedPromise::Defaulted</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="48" x="615.48" y="776.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="46" x="616.48" y="788.6387">Try&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="415.48" x2="659.48" y1="811.5" y2="811.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="415.48" x2="659.48" y1="819.5" y2="819.5"/><!--MD5=[9672e2939a542d57339757f8e99f71ae]
class C_0000070676212088190880--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L41" target="_top" title="SharedPromise" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L41" xlink:show="new" xlink:title="SharedPromise" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="265.6797" id="C_0000070676212088190880" style="stroke: #A80036; stroke-width: 1.5;" width="628" x="399.48" y="155"/><ellipse cx="656.23" cy="171" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M659.1988,176.6406 Q658.6206,176.9375 657.98,177.0781 Q657.3394,177.2344 656.6363,177.2344 Q654.1363,177.2344 652.8081,175.5938 Q651.4956,173.9375 651.4956,170.8125 Q651.4956,167.6875 652.8081,166.0313 Q654.1363,164.375 656.6363,164.375 Q657.3394,164.375 657.98,164.5313 Q658.6363,164.6875 659.1988,164.9844 L659.1988,167.7031 Q658.5738,167.125 657.98,166.8594 Q657.3863,166.5781 656.7613,166.5781 Q655.4175,166.5781 654.73,167.6563 Q654.0425,168.7188 654.0425,170.8125 Q654.0425,172.9063 654.73,173.9844 Q655.4175,175.0469 656.7613,175.0469 Q657.3863,175.0469 657.98,174.7813 Q658.5738,174.5 659.1988,173.9219 L659.1988,176.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="676.73" y="175.1543">SharedPromise</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1021.48" y="152"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1022.48" y="164.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="400.48" x2="1026.48" y1="187" y2="187"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L130" target="_top" title="mutex_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L130" xlink:show="new" xlink:title="mutex_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="405.48" y="193"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="407.48" y="195"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L130" target="_top" title="mutex_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L130" xlink:show="new" xlink:title="mutex_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="419.48" y="201.2104">mutex_ : SharedPromise::Mutex</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L131" target="_top" title="size_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L131" xlink:show="new" xlink:title="size_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="405.48" y="205.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="407.48" y="207.8047"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L131" target="_top" title="size_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L131" xlink:show="new" xlink:title="size_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="419.48" y="214.0151">size_ : Defaulted&lt;size_t&gt;</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L132" target="_top" title="try_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L132" xlink:show="new" xlink:title="try_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="405.48" y="218.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="407.48" y="220.6094"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L132" target="_top" title="try_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L132" xlink:show="new" xlink:title="try_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="419.48" y="226.8198">try_ : Defaulted&lt;Try&lt;T&gt;&gt;</text></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L133" target="_top" title="promises_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L133" xlink:show="new" xlink:title="promises_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="405.48" y="231.4141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="407.48" y="233.4141"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L133" target="_top" title="promises_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L133" xlink:show="new" xlink:title="promises_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="419.48" y="239.6245">promises_ : std::vector&lt;Promise&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="400.48" x2="1026.48" y1="246.2188" y2="246.2188"/><ellipse cx="410.48" cy="257.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="419.48" y="260.4292">getSemiFuture() const : SemiFuture&lt;T&gt;</text><ellipse cx="410.48" cy="270.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="419.48" y="273.2339">getFuture() const : Future&lt;T&gt;</text><ellipse cx="410.48" cy="282.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="419.48" y="286.0386">size() const : size_t</text><ellipse cx="410.48" cy="295.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="419.48" y="298.8433">setException(exception_wrapper ew) : void</text><ellipse cx="410.48" cy="308.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="419.48" y="311.6479">setInterruptHandler(std::function&lt;void (const exception_wrapper &amp;)&gt; ) : void</text><ellipse cx="410.48" cy="321.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="419.48" y="324.4526">setTry(Try&lt;T&gt; &amp;&amp; t) : void</text><ellipse cx="410.48" cy="334.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="419.48" y="337.2573">isFulfilled() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="407.48" y="343.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="419.48" y="350.062">hasResult() const : bool</text><ellipse cx="410.48" cy="359.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="602" x="419.48" y="362.8667">setException&lt;E&gt;(const E &amp; ) : typename std::enable_if&lt;std::is_base_of&lt;std::exception, E&gt;::value&gt;::type</text><ellipse cx="410.48" cy="372.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="419.48" y="375.6714">setValue</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="489" x="468.48" y="375.6714">() : typename std::enable_if&lt;std::is_same&lt;struct Unit, B&gt;::value, void&gt;::type</text><ellipse cx="410.48" cy="385.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="419.48" y="388.4761">setValue&lt;M&gt;(M &amp;&amp; value) : void</text><ellipse cx="410.48" cy="398.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="419.48" y="401.2808">setWith&lt;F&gt;(F &amp;&amp; func) : void</text><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L134" target="_top" title="interruptHandler_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L134" xlink:show="new" xlink:title="interruptHandler_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="405.48" y="405.875"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="407.48" y="407.875"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L134" target="_top" title="interruptHandler_" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L134" xlink:show="new" xlink:title="interruptHandler_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="419.48" y="414.0854">interruptHandler_ : std::function&lt;void (const exception_wrapper &amp;)&gt;</text></a><!--MD5=[8f9fe92f0812d77ee2acf5c96e15b53f]
class C_0001000827240401510911--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L104" target="_top" title="SharedPromise##Mutex" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L104" xlink:show="new" xlink:title="SharedPromise##Mutex" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="86.4141" id="C_0001000827240401510911" style="stroke: #A80036; stroke-width: 1.5;" width="404" x="511.48" y="8"/><ellipse cx="639.23" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M642.1988,29.6406 Q641.6206,29.9375 640.98,30.0781 Q640.3394,30.2344 639.6363,30.2344 Q637.1363,30.2344 635.8081,28.5938 Q634.4956,26.9375 634.4956,23.8125 Q634.4956,20.6875 635.8081,19.0313 Q637.1363,17.375 639.6363,17.375 Q640.3394,17.375 640.98,17.5313 Q641.6363,17.6875 642.1988,17.9844 L642.1988,20.7031 Q641.5738,20.125 640.98,19.8594 Q640.3863,19.5781 639.7613,19.5781 Q638.4175,19.5781 637.73,20.6563 Q637.0425,21.7188 637.0425,23.8125 Q637.0425,25.9063 637.73,26.9844 Q638.4175,28.0469 639.7613,28.0469 Q640.3863,28.0469 640.98,27.7813 Q641.5738,27.5 642.1988,26.9219 L642.1988,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="659.73" y="28.1543">SharedPromise::Mutex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="512.48" x2="914.48" y1="40" y2="40"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="512.48" x2="914.48" y1="48" y2="48"/><ellipse cx="522.48" cy="59" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="531.48" y="62.2104">Mutex() = default : void</text><ellipse cx="522.48" cy="71.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="531.48" y="75.0151">Mutex(SharedPromise::Mutex &amp;&amp; ) : void</text><ellipse cx="522.48" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="531.48" y="87.8198">operator=(SharedPromise::Mutex &amp;&amp; ) : SharedPromise::Mutex &amp;</text></a><!--MD5=[27968ed9821c2c9c496d9f0429a33d40]
class C_0000764427108203128807--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L111" target="_top" title="SharedPromise##Defaulted" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L111" xlink:show="new" xlink:title="SharedPromise##Defaulted" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="99.2188" id="C_0000764427108203128807" style="stroke: #A80036; stroke-width: 1.5;" width="326" x="198.48" y="1423"/><ellipse cx="269.23" cy="1439" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M272.1988,1444.6406 Q271.6206,1444.9375 270.98,1445.0781 Q270.3394,1445.2344 269.6363,1445.2344 Q267.1363,1445.2344 265.8081,1443.5938 Q264.4956,1441.9375 264.4956,1438.8125 Q264.4956,1435.6875 265.8081,1434.0313 Q267.1363,1432.375 269.6363,1432.375 Q270.3394,1432.375 270.98,1432.5313 Q271.6363,1432.6875 272.1988,1432.9844 L272.1988,1435.7031 Q271.5738,1435.125 270.98,1434.8594 Q270.3863,1434.5781 269.7613,1434.5781 Q268.4175,1434.5781 267.73,1435.6563 Q267.0425,1436.7188 267.0425,1438.8125 Q267.0425,1440.9063 267.73,1441.9844 Q268.4175,1443.0469 269.7613,1443.0469 Q270.3863,1443.0469 270.98,1442.7813 Q271.5738,1442.5 272.1988,1441.9219 L272.1988,1444.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="289.73" y="1443.1543">SharedPromise::Defaulted</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="517.48" y="1420"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="518.48" y="1432.1387">V</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="199.48" x2="523.48" y1="1455" y2="1455"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L116" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L116" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="204.48" y="1461"/><ellipse cx="209.48" cy="1466" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L116" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L116" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="218.48" y="1469.2104">value : V</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="199.48" x2="523.48" y1="1475.8047" y2="1475.8047"/><ellipse cx="209.48" cy="1486.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="218.48" y="1490.0151">Defaulted&lt;V&gt;() = default : void</text><ellipse cx="209.48" cy="1499.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="218.48" y="1502.8198">Defaulted&lt;V&gt;(Defaulted&lt;V&gt; &amp;&amp; that) : void</text><ellipse cx="209.48" cy="1512.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="218.48" y="1515.6245">operator=(Defaulted&lt;V&gt; &amp;&amp; that) : Defaulted&lt;V&gt; &amp;</text><!--MD5=[dcef8def874ea4c97f4e6c974ac7f662]
class C_0000913905008779572763--><a href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L111" target="_top" title="FutureSplitter" xlink:actuate="onRequest" xlink:href="https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L111" xlink:show="new" xlink:title="FutureSplitter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f24mvo73gcl6f)" height="48" id="C_0000913905008779572763" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="950.98" y="27"/><ellipse cx="965.98" cy="43" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M968.9488,48.6406 Q968.3706,48.9375 967.73,49.0781 Q967.0894,49.2344 966.3863,49.2344 Q963.8863,49.2344 962.5581,47.5938 Q961.2456,45.9375 961.2456,42.8125 Q961.2456,39.6875 962.5581,38.0313 Q963.8863,36.375 966.3863,36.375 Q967.0894,36.375 967.73,36.5313 Q968.3863,36.6875 968.9488,36.9844 L968.9488,39.7031 Q968.3238,39.125 967.73,38.8594 Q967.1363,38.5781 966.5113,38.5781 Q965.1675,38.5781 964.48,39.6563 Q963.7925,40.7188 963.7925,42.8125 Q963.7925,44.9063 964.48,45.9844 Q965.1675,47.0469 966.5113,47.0469 Q967.1363,47.0469 967.73,46.7813 Q968.3238,46.5 968.9488,45.9219 L968.9488,48.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="979.98" y="47.1543">FutureSplitter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1073.98" y="24"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1074.98" y="36.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="951.98" x2="1078.98" y1="59" y2="59"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="951.98" x2="1078.98" y1="67" y2="67"/></a><!--MD5=[04e56d142b5c6c782d478332b98c90f7]
link C_0000135335628570802873 to C_0001539432614095357204--><path d="M976.95,3520.08 C966.49,3538.66 955.92,3557.43 945.36,3576.18 " fill="none" id="C_0000135335628570802873-&gt;C_0001539432614095357204" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="942.68,3580.95,950.5851,3575.0755,945.1361,3576.5948,943.6167,3571.1458,942.68,3580.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[de5c8ac46ca2a44d71384a7aa8fffd98]
link C_0000135335628570802873 to C_0000135335628570802873--><path d="M1459.16,3168.63 C1480.8,3179.11 1493.98,3194.4 1493.98,3214.5 C1493.98,3233.03 1482.77,3247.47 1464.07,3257.82 " fill="none" id="C_0000135335628570802873-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1459.16,3260.37,1468.9914,3259.7846,1463.6003,3258.0713,1465.3136,3252.6802,1459.16,3260.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b85f3e68f1106bf243e1b9d116d908a1]
link C_0000547783453785439447 to C_0001108426710866155196--><path d="M3634.18,3183.9 C3688.07,3129.55 3797.83,3007.57 3838.48,2879 C3882.68,2739.2 3846.04,2571.15 3809.7,2459.18 " fill="none" id="C_0000547783453785439447-&gt;C_0001108426710866155196" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3808.08,2454.23,3807.0782,2464.0278,3809.6354,2458.9819,3814.6813,2461.5391,3808.08,2454.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e320f6719d12893aea96374fb60dba65]
link C_0001108426710866155196 to C_0000547783453785439447--><path d="M3688.4,2454.19 C3630.05,2561.68 3559.27,2725.93 3567.48,2879 C3573.37,2988.77 3590.06,3117.94 3598.48,3178.65 " fill="none" id="C_0001108426710866155196-&gt;C_0000547783453785439447" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3599.17,3183.6,3601.8991,3174.1368,3598.4849,3178.6472,3593.9745,3175.233,3599.17,3183.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c5f0568fd4a15592c30379dd6fc0405e]
reverse link C_0001108426710866155196 to C_0000547783453785439447--><path d="M3709.44,2466.31 C3670.72,2571.43 3621.14,2723.66 3600.48,2862 C3599.36,2869.47 3600.45,2871.44 3600.48,2879 C3600.99,2991.66 3602.45,3125.67 3603.13,3183.97 " fill="none" id="C_0001108426710866155196&lt;-C_0000547783453785439447" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3713.99,2454.05,3708.1564,2458.289,3709.8257,2465.3043,3715.6592,2461.0652,3713.99,2454.05" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3603.48" y="2868.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="114" x="3613.48" y="2875.0669">nestedExecutors_</text><!--MD5=[c5f0568fd4a15592c30379dd6fc0405e]
reverse link C_0001108426710866155196 to C_0000547783453785439447--><path d="M3765.87,2459.45 C3767.19,2570.67 3762.75,2737.43 3732.48,2879 C3707.43,2996.17 3647.11,3126.26 3618.73,3183.59 " fill="none" id="C_0001108426710866155196&lt;-C_0000547783453785439447-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3765.8,2454.2,3761.929,2463.2562,3765.8714,2459.1995,3769.9282,2463.1419,3765.8,2454.2" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3740.48" cy="2871.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="3747.48" y="2875.0669">«friend»</text><!--MD5=[66f8cfffc44253abc9a5e650b04e5d01]
link C_0001108426710866155196 to C_0002242828088217415598--><path d="M3700.39,2454.15 C3640.31,2567.34 3543.06,2740.34 3441.48,2879 C3430.88,2893.47 3424.54,2894.15 3414.48,2909 C3350.33,3003.73 3297.21,3129.9 3275.29,3185.35 " fill="none" id="C_0001108426710866155196-&gt;C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3273.39,3190.17,3280.4026,3183.2545,3275.2174,3185.5159,3272.956,3180.3307,3273.39,3190.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bf13d336b71ea108b145d7f1e1728907]
reverse link C_0001108426710866155196 to C_0002242828088217415598--><path d="M3638.43,2464.02 C3548.33,2565.03 3429.51,2712.96 3356.48,2862 C3299.86,2977.56 3275.06,3132.15 3267.32,3190.19 " fill="none" id="C_0001108426710866155196&lt;-C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3647.33,2454.08,3640.3477,2455.8822,3639.3258,2463.0205,3646.308,2461.2183,3647.33,2454.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3359.48" y="2868.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="3369.48" y="2875.0669">executor_</text><!--MD5=[0a9358b83fdc4959a407897257ceaeff]
reverse link C_0001108426710866155196 to C_0001108426710866155196--><path d="M4074.11,2269.09 C4089.76,2285.23 4098.98,2306.87 4098.98,2334 C4098.98,2366.45 4085.78,2391.05 4064.18,2407.78 " fill="none" id="C_0001108426710866155196&lt;-C_0001108426710866155196" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4064.18,2260.22,4065.9879,2267.2008,4073.127,2268.2169,4071.3192,2261.2361,4064.18,2260.22" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4106.98" y="2331.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="114" x="4116.98" y="2338.5669">nestedExecutors_</text><!--MD5=[72b1944e8cdaeeed37c9d6da0b8bbfb5]
link C_0000487431047047122182 to C_0000135335628570802873--><path d="M1638.01,1579.52 C1534.4,1637.15 1401.06,1707.03 1277.48,1759 C1237.45,1775.83 1210.49,1754.22 1184.48,1789 C1119.59,1875.79 1126.66,2511.17 1137.59,2903.47 " fill="none" id="C_0000487431047047122182-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1137.73,2908.65,1141.4713,2899.5394,1137.5872,2903.652,1133.4746,2899.7679,1137.73,2908.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4bc6c5bf92c3936341ddd0454187e104]
link C_0000487431047047122182 to C_0002242828088217415598--><path d="M2005.05,1579.63 C2115.85,1639.54 2261.3,1711.66 2397.48,1759 C2552.85,1813.01 2635.22,1728.22 2759.48,1836 C2815.74,1884.8 3190.85,2994.6 3255.12,3185.63 " fill="none" id="C_0000487431047047122182-&gt;C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3256.75,3190.49,3257.6898,3180.6861,3255.1646,3185.748,3250.1026,3183.2228,3256.75,3190.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d5ce84ad139ba8b559154715269cb0ce]
link C_0000725183341054102552 to C_0000725183341054102552--><path d="M2793.11,762.49 C2815.08,772.78 2827.98,786.45 2827.98,803.5 C2827.98,819.35 2816.83,832.28 2797.61,842.29 " fill="none" id="C_0000725183341054102552-&gt;C_0000725183341054102552" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2793.11,844.51,2802.9509,844.1131,2797.5935,842.2968,2799.4097,836.9395,2793.11,844.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[77f9e3ab7735a27eb798d71f249201cb]
link C_0000725183341054102552 to C_0000156632990802225029--><path d="M2578.14,1109.21 C2598.35,1133.4 2618.82,1157.8 2639.12,1181.89 " fill="none" id="C_0000725183341054102552-&gt;C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2642.37,1185.76,2639.6466,1176.2952,2639.155,1181.9306,2633.5196,1181.4391,2642.37,1185.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fa61ade088edfeabda52cc1e347b1878]
reverse link C_0000725183341054102552 to C_0000156632990802225029--><path d="M2617.38,1124.77 C2634.48,1145.13 2651.56,1165.56 2668.38,1185.76 " fill="none" id="C_0000725183341054102552&lt;-C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2611.81,1129.02,2604.31,1109.21,2622.53,1120.02,2611.81,1129.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1915eae47c2f462fd9e98cc141b1a583]
link C_0000725183341054102552 to C_0000432533400863196245--><path d="M2330.32,1109.04 C2326.75,1298.85 2312.05,1546.53 2256.48,1759 C2250.22,1782.93 2242.96,1807.06 2234.92,1831.18 " fill="none" id="C_0000725183341054102552-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2233.3,1836,2239.967,1828.7508,2234.8983,1831.2623,2232.3867,1826.1936,2233.3,1836" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba189f642304587b3450024c6af58441]
reverse link C_0000725183341054102552 to C_0000432533400863196245--><path d="M2360.57,1129.27 C2360.67,1316.22 2345.1,1554 2291.48,1759 C2284.8,1784.52 2276.98,1810.28 2268.27,1836 " fill="none" id="C_0000725183341054102552&lt;-C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2353.57,1129.07,2360.5,1109.04,2367.57,1129.02,2353.57,1129.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d1c764802cfcd1ebaa3c12097b5b9c5d]
link C_0000725183341054102552 to C_0000135335628570802873--><path d="M1877.79,1046.51 C1827.71,1069.13 1776.96,1090.48 1727.48,1109 C1711.42,1115.01 1441.59,1174.94 1428.48,1186 C1215.12,1365.94 1303.86,1513.28 1171.48,1759 C1152.24,1794.71 1133.82,1797.05 1122.48,1836 C998.72,2261.01 1107.42,2389.59 1122.48,2832 C1123.27,2855.31 1124.34,2879.4 1125.59,2903.62 " fill="none" id="C_0000725183341054102552-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1125.85,2908.79,1129.3811,2899.5959,1125.5925,2903.7966,1121.3917,2900.008,1125.85,2908.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cdc5b73497f11db363d91ef3599a82a5]
link C_0000725183341054102552 to C_0001539432614095357204--><path d="M2280.83,1109 C2276.76,1135.01 2272.91,1160.94 2269.48,1186 C2252.12,1312.8 2302.66,1669.19 2211.48,1759 C2069.27,1899.09 1451.45,1688.92 1316.48,1836 C1166.83,1999.08 1194.95,2647.02 1316.48,2832 C1363.81,2904.04 1447.15,2836.96 1494.48,2909 C1643.59,3135.96 1633.39,3286.66 1494.48,3520 C1434.69,3620.44 1340.26,3697.45 1238.45,3755.89 " fill="none" id="C_0000725183341054102552-&gt;C_0001539432614095357204" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1233.91,3758.49,1243.708,3757.4908,1238.2495,3756.0062,1239.734,3750.5477,1233.91,3758.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[83eb94b880bc5b008ba5dd7491fb2ec0]
link C_0000725183341054102552 to C_0000487431047047122182--><path d="M2100.21,1109.21 C2030.69,1199.25 1958.99,1292.11 1905.59,1361.27 " fill="none" id="C_0000725183341054102552-&gt;C_0000487431047047122182" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1902.42,1365.38,1911.0877,1360.7033,1905.4768,1361.4233,1904.7569,1355.8124,1902.42,1365.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[83eb94b880bc5b008ba5dd7491fb2ec0]
link C_0000725183341054102552 to C_0000487431047047122182--><path d="M2131.79,1109.1 C2120.03,1125.09 2108.21,1140.82 2096.48,1156 C2041.83,1226.72 1976.1,1302.19 1922.5,1361.58 " fill="none" id="C_0000725183341054102552-&gt;C_0000487431047047122182-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1918.98,1365.47,1927.9824,1361.4753,1922.3327,1361.7606,1922.0474,1356.111,1918.98,1365.47" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2109.48,1143.0664,2113.48,1147.0664,2109.48,1151.0664,2105.48,1147.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2116.48" y="1152.0669">core_</text><!--MD5=[46fe40ed9a05f66b0e491a9ec4c198a8]
link C_0000725183341054102552 to C_0001636747636195825603--><path d="M2384.36,1109.32 C2385.78,1119.33 2387.16,1129.24 2388.48,1139 C2425.74,1413.79 2276.38,1549.86 2458.48,1759 C2549.16,1863.14 2674.8,1726.93 2759.48,1836 C2901.62,2019.08 2911.57,2704.1 2759.48,2879 C2696.46,2951.47 2621.83,2850.73 2545.48,2909 C2454.48,2978.45 2425.81,3123.8 2417.54,3185.18 " fill="none" id="C_0000725183341054102552-&gt;C_0001636747636195825603" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2416.89,3190.16,2422.038,3181.7637,2417.5471,3185.2034,2414.1074,3180.7124,2416.89,3190.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[451079642aff937a383727268a318163]
link C_0000725183341054102552 to C_0001108426710866155196--><path d="M2793.17,870.19 C3006.19,922.71 3247.67,1016.99 3409.48,1186 C3686.35,1475.2 3745.89,1976.71 3758.38,2208.7 " fill="none" id="C_0000725183341054102552-&gt;C_0001108426710866155196" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3758.65,2213.79,3762.1548,2204.5859,3758.3782,2208.7974,3754.1667,2205.0208,3758.65,2213.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[abef1ee8f4f9191dcca99b897d5f3d47]
link C_0001797157475442677168 to C_0001778078938283944881--><path d="M1328.61,389.23 C1335.3,449.51 1344.06,528.41 1352.12,601.1 " fill="none" id="C_0001797157475442677168-&gt;C_0001778078938283944881" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1352.7,606.32,1355.6994,596.939,1352.1572,601.3495,1347.7467,597.8074,1352.7,606.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[796b2dd0ccc468789ca46d250b28cbb7]
reverse link C_0001797157475442677168 to C_0001778078938283944881--><path d="M1330.07,402.28 C1331.89,418.62 1333.73,435.24 1335.48,451 C1341.07,501.34 1347.11,555.75 1352.72,606.36 " fill="none" id="C_0001797157475442677168&lt;-C_0001778078938283944881" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1328.62,389.24,1325.3102,395.6466,1329.951,401.166,1333.2608,394.7593,1328.62,389.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1340.48" y="457.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="59" x="1350.48" y="464.0669">promise_</text><!--MD5=[3a377b62bd4046757bd4d4febc5eb75a]
link C_0001797157475442677168 to C_0002242828088217415598--><path d="M1572.57,293.41 C1971.63,304.97 2720.04,346.77 2933.48,498 C3234.42,711.22 3289.66,833.29 3397.48,1186 C3519.12,1583.9 3303.65,2970.11 3269.06,3185.33 " fill="none" id="C_0001797157475442677168-&gt;C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3268.23,3190.48,3273.597,3182.222,3269.0172,3185.5424,3265.6968,3180.9625,3268.23,3190.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[acfed21556ac6a21aea474cd05bc77c6]
link C_0001797157475442677168 to C_0000135335628570802873--><path d="M1133.48,389.09 C1095.64,418.85 1060.86,455.19 1039.48,498 C965.82,645.53 874.11,1359.79 1056.48,2832 C1059.38,2855.43 1063.19,2879.52 1067.59,2903.64 " fill="none" id="C_0001797157475442677168-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1068.54,2908.79,1070.8533,2899.2167,1067.6393,2903.8718,1062.9841,2900.6578,1068.54,2908.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[36627dbd37654e625891e8536244152a]
link C_0001797157475442677168 to C_0001539432614095357204--><path d="M1123.14,389.03 C1097.05,400.66 1070.36,411.68 1044.48,421 C991.95,439.92 960.21,409.84 922.48,451 C718.03,674.06 713.48,1493.91 713.48,1796.5 C713.48,1796.5 713.48,1796.5 713.48,3215.5 C713.48,3332.91 718.47,3461.13 724.74,3575.83 " fill="none" id="C_0001797157475442677168-&gt;C_0001539432614095357204" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="725.02,3580.93,728.5248,3571.7259,724.7482,3575.9374,720.5367,3572.1608,725.02,3580.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[644de8e4e15bef889ae252cb1e63a441]
link C_0001778078938283944881 to C_0001778078938283944881--><path d="M1691.99,756.8 C1713.75,767.53 1726.98,783.09 1726.98,803.5 C1726.98,822.47 1715.54,837.26 1696.45,847.86 " fill="none" id="C_0001778078938283944881-&gt;C_0001778078938283944881" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1691.99,850.2,1701.8191,849.5767,1696.4214,847.8842,1698.1139,842.4865,1691.99,850.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d3986a643dceb6f4260d56817e74dc43]
link C_0001778078938283944881 to C_0000156632990802225029--><path d="M1651.25,1000.6 C1717.49,1041.03 1789.62,1080.05 1860.48,1109 C2008.33,1169.4 2059.19,1137.9 2211.48,1186 C2296.88,1212.97 2386.39,1246.42 2471.45,1280.81 " fill="none" id="C_0001778078938283944881-&gt;C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2476.27,1282.76,2469.4256,1275.6781,2471.6346,1280.8858,2466.4268,1283.0948,2476.27,1282.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bd532e4fe9e916f59a652ece9436de1]
link C_0001778078938283944881 to C_0000432533400863196245--><path d="M1326.89,1000.84 C1288.67,1201.04 1257.56,1515.89 1367.48,1759 C1378.68,1783.77 1391.52,1807.94 1405.7,1831.47 " fill="none" id="C_0001778078938283944881-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1408.37,1835.86,1407.1073,1826.0924,1405.7703,1831.589,1400.2737,1830.252,1408.37,1835.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6146de6048728fe0d19ad692ed1d4fc]
link C_0001778078938283944881 to C_0001539432614095357204--><path d="M1179.23,1000.51 C1133.49,1056.39 1089.66,1120.11 1060.48,1186 C874.44,1606.1 792.5,2937.15 763.17,3575.69 " fill="none" id="C_0001778078938283944881-&gt;C_0001539432614095357204" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="762.93,3580.83,767.338,3572.0226,763.159,3575.8352,759.3464,3571.6563,762.93,3580.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[af7ab0bf5ffc61d1ae7c54a1617e5e76]
link C_0001778078938283944881 to C_0000135335628570802873--><path d="M1293.6,1000.66 C1270.39,1059.79 1245.86,1125.15 1225.48,1186 C1141.48,1436.84 1153.05,1509.74 1064.48,1759 C1059.62,1772.69 1055.76,1775.11 1051.48,1789 C1045.21,1809.32 1045.22,1814.91 1042.48,1836 C983.61,2289.28 987.27,2405.18 971.48,2862 C971,2875.91 971.72,2889.83 973.44,2903.68 " fill="none" id="C_0001778078938283944881-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="974.12,2908.78,976.9026,2899.3324,973.4629,2903.8234,968.972,2900.3837,974.12,2908.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[674a3125b93735fc840c5e3bc36ba30a]
link C_0001778078938283944881 to C_0000487431047047122182--><path d="M1391,1000.89 C1401.62,1053.89 1418.8,1109.41 1446.48,1156 C1495.08,1237.81 1572.76,1308.43 1644.76,1362 " fill="none" id="C_0001778078938283944881-&gt;C_0000487431047047122182" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1649.06,1365.18,1644.1914,1356.6186,1645.0362,1362.2121,1639.4427,1363.0568,1649.06,1365.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[674a3125b93735fc840c5e3bc36ba30a]
link C_0001778078938283944881 to C_0000487431047047122182--><path d="M1505.58,1000.56 C1584.08,1117.96 1681,1262.9 1746.42,1360.74 " fill="none" id="C_0001778078938283944881-&gt;C_0000487431047047122182-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1749.31,1365.07,1747.6459,1355.3627,1746.5365,1360.9097,1740.9895,1359.8003,1749.31,1365.07" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1607.48" y="1145.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1617.48" y="1152.0669">core_</text><!--MD5=[81002a457275910f6a17a07d777d9bc2]
link C_0001778078938283944881 to C_0002242828088217415598--><path d="M1645.23,1000.65 C1712.84,1042.03 1787.07,1081.44 1860.48,1109 C1875.97,1114.81 2138.01,1154.48 2154.48,1156 C2187.52,1159.04 3325.32,1162.25 3348.48,1186 C3437.38,1277.16 3378.06,1635.15 3348.48,1759 C3339.57,1796.31 3319,1798.84 3309.48,1836 C3240.77,2104.28 3259.52,3013.63 3263.75,3185.39 " fill="none" id="C_0001778078938283944881-&gt;C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3263.87,3190.48,3267.6373,3181.3802,3263.7415,3185.4817,3259.64,3181.5858,3263.87,3190.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b3cfec4edbf19add9f7d3356861cc0b7]
link C_0001778078938283944881 to C_0001636747636195825603--><path d="M1371.95,1000.65 C1370.6,1264.41 1376.29,1706.59 1428.48,1759 C1627.84,1959.18 2503.85,1630.27 2697.48,1836 C2773.33,1916.59 2755.41,2737.71 2697.48,2832 C2657.84,2896.52 2597.33,2853.8 2545.48,2909 C2468.03,2991.45 2432.29,3126.81 2419.86,3185.22 " fill="none" id="C_0001778078938283944881-&gt;C_0001636747636195825603" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2418.8,3190.29,2424.5636,3182.3037,2419.8272,3185.3966,2416.7342,3180.6602,2418.8,3190.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d6cc176091032b9e9a6d8f3477fd2ab]
reverse link C_0000481841646641149488 to C_0000769434624932181431--><path d="M2043.65,3271.91 C2039.92,3386.82 2031.37,3650.23 2026.35,3804.81 " fill="none" id="C_0000481841646641149488&lt;-C_0000769434624932181431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2036.66,3271.37,2044.31,3251.61,2050.66,3271.83,2036.66,3271.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4753edebc9a8e76909bbd3ec2e828257]
link C_0000630050676637484276 to C_0001149405143997573904--><path d="M3026.91,3949.04 C2988.26,4019.9 2870.79,4235.26 2821.56,4325.52 " fill="none" id="C_0000630050676637484276-&gt;C_0001149405143997573904" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2819.12,4329.99,2826.9344,4323.9954,2821.5092,4325.5978,2819.9069,4320.1726,2819.12,4329.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d4c678ac7521d06212d1970e2de3f979]
link C_0000630050676637484276 to C_0000156632990802225029--><path d="M3046.33,3900.8 C3079.67,3731.84 3191.09,2673.49 3037.48,1836 C3034,1817.03 3029.71,1797.71 3024.81,1778.37 " fill="none" id="C_0000630050676637484276-&gt;C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3018.04,1780.15,3019.71,1759.03,3031.57,1776.58,3018.04,1780.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[40b2625380f1e9481bd2b9a1f8edc8cc]
link C_0000156632990802225029 to C_0000630050676637484276--><path d="M2984.83,1759.03 C2991.76,1784.8 2997.84,1810.71 3002.48,1836 C3154.59,2665.31 3046.82,3711.19 3038.58,3895.6 " fill="none" id="C_0000156632990802225029-&gt;C_0000630050676637484276" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3038.36,3900.8,3042.7417,3891.9795,3038.5741,3895.8046,3034.749,3891.637,3038.36,3900.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6e8d4e68e4fde02a50bcc7bf588c2037]
link C_0000156632990802225029 to C_0000156632990802225029--><path d="M3312.67,1432.61 C3334.54,1442.43 3347.48,1455.73 3347.48,1472.5 C3347.48,1487.96 3336.48,1500.47 3317.63,1510.03 " fill="none" id="C_0000156632990802225029-&gt;C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3312.67,1512.39,3322.5158,1512.1441,3317.1869,1510.2459,3319.0852,1504.917,3312.67,1512.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d14437bc767ffdcfff9e0894e7d7c7f3]
link C_0000156632990802225029 to C_0000432533400863196245--><path d="M2584.66,1759.1 C2559.68,1782.85 2534.06,1807.26 2508.17,1831.99 " fill="none" id="C_0000156632990802225029-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2504.35,1835.64,2513.6187,1832.3096,2507.9632,1832.1839,2508.0889,1826.5284,2504.35,1835.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b2a589801b7a800fdc1665b909f19752]
link C_0000432533400863196245 to C_0000156632990802225029--><path d="M2530.31,1835.64 C2556.01,1810.88 2581.34,1786.42 2605.93,1762.61 " fill="none" id="C_0000432533400863196245-&gt;C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2609.55,1759.1,2600.3016,1762.4862,2605.9577,1762.5778,2605.8661,1768.2339,2609.55,1759.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[49b52db706504174e5d744c5cfa0c99b]
link C_0000156632990802225029 to C_0000135335628570802873--><path d="M2476.03,1672.28 C2390.15,1706.25 2299.16,1737.46 2211.48,1759 C2017.62,1806.62 1460.12,1697.38 1316.48,1836 C1278.37,1872.78 1213.35,2508.99 1176.37,2903.78 " fill="none" id="C_0000156632990802225029-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1175.88,2908.99,1180.7095,2900.4065,1176.3507,2904.0122,1172.745,2899.6534,1175.88,2908.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f83c18a188ed6c690ef32d9c3fdc419]
link C_0000156632990802225029 to C_0002242828088217415598--><path d="M3135.34,1759.35 C3140.11,1769.15 3144.51,1779.04 3148.48,1789 C3155.21,1805.88 3246.88,2986.32 3262.29,3185.2 " fill="none" id="C_0000156632990802225029-&gt;C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3262.68,3190.26,3265.9739,3180.9783,3262.2943,3185.2749,3257.9977,3181.5953,3262.68,3190.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[052ef521377bd888307290b663ca711f]
link C_0000156632990802225029 to C_0001149405143997573904--><path d="M3312.58,1531.46 C3662.4,1589.38 4122.3,1690.77 4237.48,1836 C4523.07,2196.1 4272.48,2409.9 4272.48,2869.5 C4272.48,2869.5 4272.48,2869.5 4272.48,3926 C4272.48,4205.37 3287.43,4322.07 2928.4,4355.32 " fill="none" id="C_0000156632990802225029-&gt;C_0001149405143997573904" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2923.17,4355.81,2932.5066,4358.945,2928.1478,4355.3393,2931.7535,4350.9805,2923.17,4355.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[07fb0e8dc352ec8842fde5c381c27d1c]
link C_0000156632990802225029 to C_0001579326926673473295--><path d="M2968.33,1759.26 C2969.89,1769.26 2971.29,1779.2 2972.48,1789 C3028.52,2249.16 3025.65,2371.5 2972.48,2832 C2958.35,2954.36 2887.19,3081.81 2840.65,3154.05 " fill="none" id="C_0000156632990802225029-&gt;C_0001579326926673473295" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2837.9,3158.3,2846.1445,3152.9122,2840.6139,3154.1006,2839.4255,3148.57,2837.9,3158.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[68d6ebf002aab3867ca3f6448ffe52b6]
link C_0000156632990802225029 to C_0001636747636195825603--><path d="M2932.42,1759.06 C2960.8,2036.7 2982.34,2468.53 2901.48,2832 C2866.33,2990.02 2676.57,2814.02 2545.48,2909 C2452.56,2976.33 2424.92,3123.5 2417.23,3185.3 " fill="none" id="C_0000156632990802225029-&gt;C_0001636747636195825603" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2416.63,3190.3,2421.6796,3181.8441,2417.2291,3185.336,2413.7372,3180.8856,2416.63,3190.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed6efd1d3b9e395cf85f8bda80f5e39c]
link C_0000156632990802225029 to C_0001108426710866155196--><path d="M3240.63,1759.17 C3267.9,1776.23 3295.67,1792.08 3323.48,1806 C3368.41,1828.48 3391.8,1806.51 3432.48,1836 C3563.55,1931.03 3657.3,2095.54 3710.39,2209.11 " fill="none" id="C_0000156632990802225029-&gt;C_0001108426710866155196" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3712.57,2213.8,3712.3989,2203.9526,3710.4603,2209.2669,3705.146,2207.3282,3712.57,2213.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[36b66df865449ea050e8c2667449db8b]
link C_0000156632990802225029 to C_0000547783453785439447--><path d="M3173.03,1759.25 C3190.27,1784.17 3206.04,1809.88 3219.48,1836 C3426.94,2239.3 3302.94,2400.15 3441.48,2832 C3483.77,2963.82 3553.99,3112.96 3586.27,3178.95 " fill="none" id="C_0000156632990802225029-&gt;C_0000547783453785439447" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3588.53,3183.56,3588.1583,3173.7182,3586.3283,3179.0708,3580.9756,3177.2409,3588.53,3183.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[67c7868e587798b9e23e997a21d267a4]
link C_0000873025366658585071 to C_0001149405143997573904--><path d="M2562.57,3949.04 C2602.83,4019.9 2725.2,4235.26 2776.48,4325.52 " fill="none" id="C_0000873025366658585071-&gt;C_0001149405143997573904" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2779.02,4329.99,2778.0451,4320.1895,2776.547,4325.6444,2771.0921,4324.1463,2779.02,4329.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f21d0e2eb1954f3dd192943a8fff63d5]
link C_0000873025366658585071 to C_0000432533400863196245--><path d="M2545.46,3900.83 C2522.39,3844.48 2436.32,3696.44 2352.48,3581 C2331.71,3552.41 2316.34,3552.06 2301.48,3520 C2185.57,3269.95 2260.2,3176.91 2195.48,2909 C2190.91,2890.07 2186.05,2870.85 2180.97,2851.48 " fill="none" id="C_0000873025366658585071-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2174.18,2853.2,2175.81,2832.08,2187.71,2849.61,2174.18,2853.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[74bb4da9164130fc3006039c219db670]
link C_0000432533400863196245 to C_0000873025366658585071--><path d="M2140.84,2832.08 C2147.78,2858.01 2154.38,2883.76 2160.48,2909 C2225.2,3176.91 2150.57,3269.95 2266.48,3520 C2281.34,3552.06 2296.71,3552.41 2317.48,3581 C2399.35,3693.73 2483.35,3837.56 2524.98,3896.71 " fill="none" id="C_0000432533400863196245-&gt;C_0000873025366658585071" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2527.91,3900.83,2525.9626,3891.1756,2525.016,3896.7527,2519.4389,3895.8061,2527.91,3900.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e5addb9b20c7610dc72f3b0869af3d00]
link C_0000219446053632489521 to C_0000432533400863196245--><path d="M1786.28,3190.37 C1806.97,3134.01 1838.49,2985.13 1869.48,2862 C1870.34,2858.6 1871.2,2855.18 1872.07,2851.75 " fill="none" id="C_0000219446053632489521-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1865.37,2849.68,1877.1,2832.03,1878.94,2853.14,1865.37,2849.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ccc0e937709f09c8399ffae7ab9cd2bb]
link C_0000432533400863196245 to C_0000219446053632489521--><path d="M1842.1,2832.03 C1839.51,2842.1 1836.97,2852.1 1834.48,2862 C1804.4,2981.52 1773.82,3125.31 1769.09,3185.18 " fill="none" id="C_0000432533400863196245-&gt;C_0000219446053632489521" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1768.73,3190.37,1773.3628,3181.6788,1769.0873,3185.3828,1765.3833,3181.1072,1768.73,3190.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f33654ceff6a26b00161384e82bb482]
link C_0000432533400863196245 to C_0000432533400863196245--><path d="M2662.54,2278.6 C2684.79,2293.42 2697.48,2311.88 2697.48,2334 C2697.48,2354.56 2686.51,2371.97 2667.09,2386.22 " fill="none" id="C_0000432533400863196245-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2662.54,2389.4,2672.2109,2387.5361,2666.6422,2386.5413,2667.637,2380.9726,2662.54,2389.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[28aad39a20209e40e7d123e79cf29ceb]
link C_0000432533400863196245 to C_0000481841646641149488--><path d="M2025.07,2832.01 C2032.65,2973.62 2039.79,3107.07 2043.27,3172.12 " fill="none" id="C_0000432533400863196245-&gt;C_0000481841646641149488" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2043.55,3177.45,2047.0548,3168.2459,2043.2782,3172.4574,2039.0667,3168.6808,2043.55,3177.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8c33da7054571d37515fc3119e501]
link C_0000432533400863196245 to C_0000769434624932181431--><path d="M1917.99,2832.19 C1895.17,3044.67 1883.67,3295.08 1913.48,3520 C1926.14,3615.49 1954.92,3720.44 1979.73,3799.43 " fill="none" id="C_0000432533400863196245-&gt;C_0000769434624932181431" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1981.36,3804.6,1982.4768,3794.8147,1979.8605,3799.8301,1974.845,3797.2139,1981.36,3804.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0a8dd20eca7d07d000a52d78adb050b5]
link C_0000432533400863196245 to C_0000135335628570802873--><path d="M1517.59,2832.01 C1493.7,2856.7 1470.05,2881.14 1446.95,2905.02 " fill="none" id="C_0000432533400863196245-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1443.25,2908.85,1452.3766,2905.1479,1446.7207,2905.2508,1446.6178,2899.5949,1443.25,2908.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[46b48794b74f8863721a20e6e11bf83c]
link C_0000432533400863196245 to C_0002242828088217415598--><path d="M2662.59,2775.81 C2701.22,2795.88 2740,2814.79 2778.48,2832 C2785.7,2835.23 3046.04,2904.42 3052.48,2909 C3156.63,2983.09 3226.69,3125.26 3252.94,3185.46 " fill="none" id="C_0000432533400863196245-&gt;C_0002242828088217415598" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3255.05,3190.34,3255.1443,3180.4916,3253.0632,3185.7517,3247.8031,3183.6705,3255.05,3190.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f1b18a6f49a5ed7365e0dbbe2a3cf1ad]
link C_0000432533400863196245 to C_0001149405143997573904--><path d="M1724.88,2832.02 C1716.26,2857.65 1708.69,2883.39 1702.48,2909 C1678.76,3006.77 1694.96,4252.22 1710.48,4269 C1774.57,4338.3 2396.55,4358.47 2670.75,4364.02 " fill="none" id="C_0000432533400863196245-&gt;C_0001149405143997573904" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2675.96,4364.12,2667.0418,4359.9408,2670.961,4364.02,2666.8818,4367.9392,2675.96,4364.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1fc488ded4365452ca72f6f8aa328443]
link C_0000432533400863196245 to C_0001579326926673473295--><path d="M2475.98,2832.09 C2499.64,2857.96 2522.92,2883.7 2545.48,2909 C2619.8,2992.33 2701.9,3092.3 2752.09,3154.37 " fill="none" id="C_0000432533400863196245-&gt;C_0001579326926673473295" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2755.35,3158.4,2752.8002,3148.8869,2752.2057,3154.5124,2746.5801,3153.9179,2755.35,3158.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[62abe11da37622e1188cb48df3e7b5ae]
link C_0000432533400863196245 to C_0001636747636195825603--><path d="M2259.63,2832.25 C2264.33,2842.23 2268.95,2852.16 2273.48,2862 C2327.74,2979.94 2382.18,3125.05 2404.24,3185.26 " fill="none" id="C_0000432533400863196245-&gt;C_0001636747636195825603" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2406.03,3190.13,2406.7039,3180.3042,2404.3167,3185.4327,2399.1882,3183.0455,2406.03,3190.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[590ebe83814839d0948b09f1009a1ba6]
link C_0001579326926673473295 to C_0001149405143997573904--><path d="M2799.48,3270.6 C2799.48,3469.77 2799.48,4149.8 2799.48,4324.71 " fill="none" id="C_0001579326926673473295-&gt;C_0001149405143997573904" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2799.48,4329.74,2803.48,4320.74,2799.48,4324.74,2795.48,4320.74,2799.48,4329.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc35dc026af462d844d1d3ef7fa99897]
link C_0001579326926673473295 to C_0000630050676637484276--><path d="M2818.11,3270.51 C2866.36,3412.93 2994.09,3790 3029.98,3895.95 " fill="none" id="C_0001579326926673473295-&gt;C_0000630050676637484276" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3031.62,3900.79,3032.4978,3890.9803,3030.0046,3896.0581,3024.9268,3893.565,3031.62,3900.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dfa6b655dcc5e0e2aa1f81b3858ac29b]
link C_0001579326926673473295 to C_0000873025366658585071--><path d="M2780.07,3270.51 C2729.82,3412.93 2596.77,3790 2559.38,3895.95 " fill="none" id="C_0001579326926673473295-&gt;C_0000873025366658585071" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2557.67,3900.79,2564.4475,3893.644,2559.3408,3896.0774,2556.9074,3890.9707,2557.67,3900.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[13f9d367ce9f1190eeb84b4bba1091ae]
link C_0000742750151299031844 to C_0000764427108203128807--><path d="M197.43,827.85 C220.78,919.47 306.71,1256.6 344.01,1402.95 " fill="none" id="C_0000742750151299031844-&gt;C_0000764427108203128807" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="350.89,1401.59,349.04,1422.7,337.32,1405.05,350.89,1401.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70dc746d839bbde3bf053dba48137fa3]
link C_0000616814101618455991 to C_0000764427108203128807--><path d="M531.32,827.85 C507.14,919.47 418.19,1256.6 379.57,1402.95 " fill="none" id="C_0000616814101618455991-&gt;C_0000764427108203128807" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="386.23,1405.15,374.36,1422.7,372.69,1401.57,386.23,1405.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c76bb8cef7bedaa5ea05f9dffd47f8b4]
link C_0000070676212088190880 to C_0000156632990802225029--><path d="M1027.62,417.15 C1033.26,418.51 1038.89,419.8 1044.48,421 C1238.47,462.61 2686.47,359.44 2828.48,498 C3005.02,670.25 3002.09,961.48 2966.73,1180.63 " fill="none" id="C_0000070676212088190880-&gt;C_0000156632990802225029" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2965.89,1185.79,2971.2803,1177.5472,2966.6911,1180.8546,2963.3837,1176.2654,2965.89,1185.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e43793e2e86ac6c8b9ef0bbe6e8b4766]
link C_0000070676212088190880 to C_0000432533400863196245--><path d="M795.63,421.31 C800.89,431.23 805.9,441.2 810.48,451 C1072.29,1011.16 921.67,1258.31 1284.48,1759 C1302.42,1783.76 1321.69,1808.03 1341.99,1831.76 " fill="none" id="C_0000070676212088190880-&gt;C_0000432533400863196245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1345.26,1835.56,1342.4399,1826.1235,1342.006,1831.7637,1336.3659,1831.3299,1345.26,1835.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f5e59c0115dd80ee2f322a63cca1dd13]
link C_0000070676212088190880 to C_0001539432614095357204--><path d="M707.97,421.09 C701.13,583.16 688.99,866.31 677.48,1109 C662.99,1414.61 642.48,1490.55 642.48,1796.5 C642.48,1796.5 642.48,1796.5 642.48,3215.5 C642.48,3333.63 657.2,3461.62 675.73,3575.88 " fill="none" id="C_0000070676212088190880-&gt;C_0001539432614095357204" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="676.56,3580.97,679.0663,3571.4454,675.7589,3576.0346,671.1697,3572.7272,676.56,3580.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f5e59c0115dd80ee2f322a63cca1dd13]
link C_0000070676212088190880 to C_0001539432614095357204--><path d="M399.06,315.92 C274.13,343.1 140.43,395.99 56.48,498 C-30.09,603.18 21.48,666.28 21.48,802.5 C21.48,802.5 21.48,802.5 21.48,3215.5 C21.48,3389.05 129.05,3533.86 261.49,3646.39 " fill="none" id="C_0000070676212088190880-&gt;C_0001539432614095357204-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="265.41,3649.71,261.1084,3640.8502,261.5877,3646.4867,255.9511,3646.9659,265.41,3649.71" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24.48" y="1795.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="34.48" y="1802.0669">interruptHandler_</text><!--MD5=[19529699b380f971224f31ecdde00a87]
link C_0000070676212088190880 to C_0000135335628570802873--><path d="M741.9,421.03 C761.66,524.34 784.48,671.89 784.48,802.5 C784.48,802.5 784.48,802.5 784.48,2335 C784.48,2534.44 865.54,2741.29 951.16,2904.13 " fill="none" id="C_0000070676212088190880-&gt;C_0000135335628570802873" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="953.69,2908.94,953.0419,2899.1125,951.363,2904.5145,945.961,2902.8356,953.69,2908.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0d2ec4c15152d521d61cef548f434e4c]
reverse link C_0000070676212088190880 to C_0000742750151299031844--><path d="M387.42,375.96 C350.95,396.04 317.07,420.71 289.48,451 C201.17,547.94 191.6,717.93 191.17,779.45 " fill="none" id="C_0000070676212088190880&lt;-C_0000742750151299031844" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="399.35,369.6,392.1737,368.8923,388.7603,375.2443,395.9366,375.9521,399.35,369.6" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="292.48" y="457.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="32" x="302.48" y="464.0669">size_</text><!--MD5=[dc7587d5214fd63d47c25e98ff1b6a82]
reverse link C_0000070676212088190880 to C_0000616814101618455991--><path d="M655.66,433.96 C653.54,439.71 651.48,445.4 649.48,451 C605.83,573.47 560.98,722.73 544.28,779.29 " fill="none" id="C_0000070676212088190880&lt;-C_0000616814101618455991" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="660.35,421.34,654.5061,425.5648,656.1582,432.5841,662.0021,428.3593,660.35,421.34" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="652.48" y="457.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="24" x="662.48" y="464.0669">try_</text><!--MD5=[7a5a92f5b8d52739059d3c75e4331e89]
link C_0000070676212088190880 to C_0001778078938283944881--><path d="M1013.32,421.01 C1028.61,430.57 1043.43,440.57 1057.48,451 C1115.47,494.05 1171.01,548.97 1218.94,602.54 " fill="none" id="C_0000070676212088190880-&gt;C_0001778078938283944881" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1222.38,606.39,1219.3703,597.0123,1219.0502,602.6601,1213.4024,602.3399,1222.38,606.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[13c4d34014f920070260c65cfb8990b2]
reverse link C_0000070676212088190880 to C_0001778078938283944881--><path d="M901.95,429.2 C911.62,436.54 921.17,443.84 930.48,451 C995.37,500.89 1065,555.5 1129.44,606.49 " fill="none" id="C_0000070676212088190880&lt;-C_0001778078938283944881" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="891.43,421.21,893.7926,428.0231,900.9903,428.4626,898.6277,421.6496,891.43,421.21" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="946.48" y="457.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="956.48" y="464.0669">promises_</text><!--MD5=[ea8682a620c7a2b6777c591d3cc09807]
link C_0001000827240401510911 to C_0000070676212088190880--><path d="M713.48,94.01 C713.48,107.42 713.48,123.11 713.48,139.64 " fill="none" id="C_0001000827240401510911-&gt;C_0000070676212088190880" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="713.48" cy="146.68" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="713.48" x2="713.48" y1="138.68" y2="154.68"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="721.48" x2="705.48" y1="146.68" y2="146.68"/><!--MD5=[1c5946bab4f5147cd76df61e291627d5]
link C_0000764427108203128807 to C_0000070676212088190880--><path d="M357.5,1422.95 C344.12,1248.93 306.39,658.34 396.48,498 C410.23,473.52 428.19,451.4 448.56,431.54 " fill="none" id="C_0000764427108203128807-&gt;C_0000070676212088190880" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="453.9297" cy="426.5072" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="448.0893" x2="459.77" y1="431.9744" y2="421.04"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="448.4624" x2="459.3969" y1="420.6669" y2="432.3476"/><!--MD5=[4bcd8c01b642db8c6dfc2a8c95058903]
@startuml
class "exception_wrapper" as C_0001539432614095357204
class C_0001539432614095357204 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L161{exception_wrapper}]] {
{static} -onNoExceptionError(const char * name) : void
{static} -uninit_type_(const exception_wrapper * ) : const std::type_info *
{static} -as_exception_or_null_(const std::exception & ex) : const std::exception *
{static} -as_exception_or_null_(exception_wrapper::AnyException ) : const std::exception *
{static} +from_exception_ptr(const std::exception_ptr & eptr) : exception_wrapper
{static} +from_exception_ptr(std::exception_ptr && eptr) : exception_wrapper
+exception_wrapper() : void
+exception_wrapper(exception_wrapper && that) : void
+exception_wrapper(const exception_wrapper & that) : void
+operator=(exception_wrapper && that) : exception_wrapper &
+operator=(const exception_wrapper & that) : exception_wrapper &
+~exception_wrapper() : void
+exception_wrapper(std::exception_ptr ptr) : void
+swap(exception_wrapper & that) : void
+operator bool() const : bool
+operator!() const : bool
+reset() : void
+has_exception_ptr() const : bool
+get_exception() : std::exception *
+get_exception() const : const std::exception *
+to_exception_ptr() : std::exception_ptr
+to_exception_ptr() const : std::exception_ptr
{static} +none() : const std::type_info &
{static} +unknown() : const std::type_info &
+type() const : const std::type_info &
+what() const : fbstring
+class_name() const : fbstring
+throw_exception() const : void
{static} -noop_<Ret,Args...>(Args... ) : Ret
-exception_wrapper<Ex,As...>(exception_wrapper::ThrownTag , in_place_type_tag<Ex> , As &&... as) : void
-exception_wrapper<Ex,As...>(exception_wrapper::OnHeapTag , in_place_type_tag<Ex> , As &&... as) : void
-exception_wrapper<Ex,As...>(exception_wrapper::InSituTag , in_place_type_tag<Ex> , As &&... as) : void
{static} -handle_<This,CatchFns...>(std::false_type , This & this_, CatchFns &... fns) : void
{static} -handle_<This,CatchFns...>(std::true_type , This & this_, CatchFns &... fns) : void
{static} -with_exception_<Ex,This,Fn>(This & this_, Fn fn_) : _Bool
+exception_wrapper<Ex>(std::exception_ptr ptr, Ex & ex) : void
+exception_wrapper<Ex,Ex_,std::enable_if_t<static_cast<_Bool>(Conjunction<IsStdException<Ex_>, IsRegularExceptionType<Ex_> >::value), long>>(Ex && ex) : void
+exception_wrapper<Ex,Ex_,std::enable_if_t<static_cast<_Bool>(IsRegularExceptionType<Ex_>::value), long>>(in_place_t , Ex && ex) : void
+exception_wrapper<Ex,As...,std::enable_if_t<static_cast<_Bool>(IsRegularExceptionType<Ex>::value), long>>(in_place_type_tag<Ex> , As &&... as) : void
+get_exception<Ex>() : Ex *
+get_exception<Ex>() : const Ex *
+is_compatible_with<Ex>() : _Bool
+throw_with_nested<Ex>(Ex && ex) : void
+with_exception<Ex,Fn>(Fn fn) : _Bool
+with_exception<Ex,Fn>(Fn fn) : _Bool
+handle<CatchFns...>(CatchFns... fns) : void
+handle<CatchFns...>(CatchFns... fns) : void
- : exception_wrapper::(anonymous_3222246) [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L337{}]]]
-vptr_ : const exception_wrapper::VTable * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L342{vptr_}]]]
{static} -uninit_ : const exception_wrapper::VTable [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L205{uninit_}]]]
}
class "Unit" as C_0001149405143997573904
class C_0001149405143997573904 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Unit.h#L36{Unit}]] {
+operator==(const Unit & ) const : bool
+operator!=(const Unit & ) const : bool
}
class "Try<T>" as C_0000135335628570802873
class C_0000135335628570802873 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L52{Try}]] {
+Try<T>() : void
+Try<T>(const T & v) : void
+Try<T>(T && v) : void
+Try<T>(exception_wrapper e) : void
+Try<T>(Try<T> && t) : void
+operator=(Try<T> && t) : Try<T> &
+Try<T>(const Try<T> & t) : void
+operator=(const Try<T> & t) : Try<T> &
+~Try<T>() : void
+value() : T &
+value() : T &&
+value() const : const T &
+value() const : const T &&
+throwIfFailed() const : void
+operator*() const : const T &
+operator*() : T &
+operator*() : T &&
+operator*() const : const T &&
+operator->() const : const T *
+operator->() : T *
+hasValue() const : bool
+hasException() const : bool
+exception() : exception_wrapper &
+exception() : exception_wrapper &&
+exception() const : const exception_wrapper &
+exception() const : const exception_wrapper &&
+tryGetExceptionObject() : std::exception *
+tryGetExceptionObject() const : const std::exception *
-destroy() : void
+Try<T><Args...>(in_place_t , Args &&... args) : void
+Try<T><T2>(typename std::enable_if<std::is_same<Unit,T2>::value,const Try<void> &>::type t) : void
+emplace<Args...>(Args &&... args) : T &
+emplaceException<Args...>(Args &&... args) : class exception_wrapper &
+hasException<Ex>() : _Bool
+tryGetExceptionObject<E>() : E *
+tryGetExceptionObject<E>() : const E *
+withException<Ex,F>(F func) : _Bool
+withException<Ex,F>(F func) : _Bool
+withException<F>(F func) : _Bool
+withException<F>(F func) : _Bool
+get<_Bool isTry,R>() : typename std::enable_if<isTry, R>::type
+get<_Bool isTry,R>() : typename std::enable_if<!isTry, R>::type
-contains_ : Try::Contains [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L356{contains_}]]]
- : Try::(anonymous_3397912) [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L357{}]]]
}
class "futures::detail::UniqueDeleter" as C_0000547783453785439447
class C_0000547783453785439447 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L78{UniqueDeleter}]] {
+operator()(futures::detail::DeferredExecutor * ptr) : void
}
class "futures::detail::DeferredExecutor" as C_0001108426710866155196
class C_0001108426710866155196 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L142{DeferredExecutor}]] {
+addFrom(Executor::KeepAlive<> && completingKA, Executor::KeepAlive<>::KeepAliveFunc func) : void
+getExecutor() const : Executor *
+setExecutor(Executor::KeepAlive<> executor) : void
+setNestedExecutors(std::vector<DeferredWrapper> executors) : void
+detach() : void
+copy() : futures::detail::DeferredWrapper
{static} +create() : futures::detail::DeferredWrapper
-DeferredExecutor() : void
-acquire() : void
-release() : void
-state_ : std::atomic<State> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L175{state_}]]]
-func_ : Executor::KeepAlive<>::KeepAliveFunc [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L176{func_}]]]
-executor_ : Executor::KeepAlive<> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L177{executor_}]]]
-nestedExecutors_ : std::unique_ptr<std::vector<DeferredWrapper>> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L178{nestedExecutors_}]]]
-keepAliveCount_ : std::atomic<ssize_t> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L179{keepAliveCount_}]]]
}
class "futures::detail::Core<T>" as C_0000487431047047122182
class C_0000487431047047122182 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/detail/Core.h#L504{Core}]] {
{static} +make() : Core<T> *
{static} +make(Try<T> && t) : Core<T> *
+getTry() : Try<T> &
+getTry() const : const Try<T> &
+setResult(Try<T> && t) : void
+setResult(Executor::KeepAlive<> && completingKA, Try<T> && t) : void
+setProxy(Core<T> * proxy) : void
-Core<T>() : void
-Core<T>(Try<T> && t) : void
-~Core<T>() : void
{static} +make<Args...>(in_place_t , Args &&... args) : Core<T> *
+setCallback<F>(F && func, std::shared_ptr<RequestContext> && context, futures::detail::InlineContinuation allowInline) : void
-Core<T><Args...>(in_place_t , Args &&... args) : void
}
class "futures::detail::EmptyConstruct" as C_0001636747636195825603
class C_0001636747636195825603 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L68{EmptyConstruct}]] {
}
class "futures::detail::FutureBase<T>" as C_0000725183341054102552
class C_0000725183341054102552 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L116{FutureBase}]] {
+FutureBase<T>(const FutureBase<T> & ) : void
+FutureBase<T>(SemiFuture<T> && ) : void
+FutureBase<T>(Future<T> && ) : void
+FutureBase<T>(const Future<T> & ) : void
+FutureBase<T>(const SemiFuture<T> & ) : void
+~FutureBase<T>() : void
+valid() const : bool
+value() : T &
+value() const : const T &
+value() : T &&
+value() const : const T &&
+result() : Try<T> &
+result() const : const Try<T> &
+result() : Try<T> &&
+result() const : const Try<T> &&
+isReady() const : bool
+hasValue() const : bool
+hasException() const : bool
+poll() : Optional<Try<T>>
+raise(exception_wrapper interrupt) : void
+cancel() : void
#getCore() : futures::detail::FutureBase::Core &
#getCore() const : const futures::detail::FutureBase::Core &
#getCoreTryChecked() : Try<T> &
#getCoreTryChecked() const : const Try<T> &
#FutureBase<T>(futures::detail::FutureBase::Core * obj) : void
#FutureBase<T>(futures::detail::EmptyConstruct ) : void
#detach() : void
#throwIfInvalid() const : void
#throwIfContinued() const : void
#assign(FutureBase<T> && other) : void
#getExecutor() const : Executor *
#getDeferredExecutor() const : futures::detail::DeferredExecutor *
#setExecutor(futures::detail::KeepAliveOrDeferred x) : void
+FutureBase<T><T2,>(T2 && val) : void
+FutureBase<T><T2>(typename std::enable_if<std::is_same<Unit,T2>::value>::type * ) : void
+FutureBase<T><Args...,typename std::enable_if<std::is_constructible<T, Args &&...>::value, int>::type>(in_place_t , Args &&... args) : void
+setCallback_<F>(F && func, futures::detail::InlineContinuation  = InlineContinuation::forbid) : void
+raise<E>(E && exception) : void
{static} #getCoreImpl<Self>(Self & self) : decltype(auto)
{static} #getCoreTryChecked<Self>(Self & self) : decltype(auto)
#thenImplementation<F,R>(F && func, R , futures::detail::InlineContinuation ) : typename std::enable_if<!R::ReturnsFuture::value, typename R::Return>::type
#thenImplementation<F,R>(F && func, R , futures::detail::InlineContinuation ) : typename std::enable_if<R::ReturnsFuture::value, typename R::Return>::type
#core_ : futures::detail::FutureBase::Core * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L383{core_}]]]
}
class "futures::detail::CoreCallbackState<T,F>" as C_0001797157475442677168
class C_0001797157475442677168 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L104{CoreCallbackState}]] {
+CoreCallbackState<T, F>(Promise<T> && promise, F && func) : void
+CoreCallbackState<T, F>(CoreCallbackState<T,F> && that) : void
+operator=(CoreCallbackState<T,F> && ) : CoreCallbackState<T,F> &
+~CoreCallbackState<T, F>() : void
+setTry(Executor::KeepAlive<> && keepAlive, Try<T> && t) : void
+setException(Executor::KeepAlive<> && keepAlive, exception_wrapper && ew) : void
+stealPromise() : Promise<T>
-before_barrier() const : bool
+invoke<Args...>(Args &&... args) : auto
+tryInvoke<Args...>(Args &&... args) : auto
- : CoreCallbackState::(anonymous_8228286) [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L159{}]]]
-promise_ : Promise<T> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-inl.h#L162{promise_}]]]
}
class "Executor::KeepAlive" as C_0002242828088217415598
class C_0002242828088217415598 {
}
class "Promise<T>" as C_0001778078938283944881
class C_0001778078938283944881 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L147{Promise}]] {
{static} +makeEmpty() : Promise<T>
+Promise<T>() : void
+~Promise<T>() : void
+Promise<T>(const Promise<T> & ) : void
+operator=(const Promise<T> & ) : Promise<T> &
+Promise<T>(Promise<T> && other) : void
+operator=(Promise<T> && other) : Promise<T> &
+getSemiFuture() : SemiFuture<T>
+getFuture() : Future<T>
+setException(exception_wrapper ew) : void
+setTry(Try<T> && t) : void
+valid() const : bool
+isFulfilled() const : bool
-getCore() : Promise::Core &
-getCore() const : const Promise::Core &
-setTry(Executor::KeepAlive<> && ka, Try<T> && t) : void
-Promise<T>(futures::detail::EmptyConstruct ) : void
-throwIfFulfilled() const : void
-detach() : void
+setException<E>(const E & e) : typename std::enable_if<std::is_base_of<std::exception, E>::value>::type
+setInterruptHandler<F>(F && fn) : void
+setValue<B>() : typename std::enable_if<std::is_same<struct Unit, B>::value, void>::type
+setValue<M>(M && value) : void
+setWith<F>(F && func) : void
{static} -getCoreImpl<CoreT>(CoreT * core) : CoreT &
-retrieved_ : bool [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L418{retrieved_}]]]
-core_ : Promise::Core * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L444{core_}]]]
}
abstract "DrivableExecutor" as C_0000481841646641149488
abstract C_0000481841646641149488 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/DrivableExecutor.h#L40{DrivableExecutor}]] {
+~DrivableExecutor() = default : void
{abstract} +drive() = 0 : void
}
class "TimedDrivableExecutor" as C_0000769434624932181431
class C_0000769434624932181431 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L30{TimedDrivableExecutor}]] {
+TimedDrivableExecutor() : void
+~TimedDrivableExecutor() : void
+drive() : void
+try_drive() : bool
+add(Func ) : void
+run() : size_t
+drain() : size_t
+wait() : void
+try_wait() : bool
+try_drive_for<Rep,Period>(const std::chrono::duration<Rep,Period> & timeout) : _Bool
+try_drive_until<Clock,Duration>(const std::chrono::time_point<Clock,Duration> & deadline) : _Bool
+try_wait_for<Rep,Period>(const std::chrono::duration<Rep,Period> & timeout) : _Bool
+try_wait_until<Clock,Duration>(const std::chrono::time_point<Clock,Duration> & deadline) : _Bool
-queue_ : UMPSCQueue<Func,true> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L99{queue_}]]]
-func_ : Func [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/executors/TimedDrivableExecutor.h#L100{func_}]]]
}
class "SemiFuture<Unit>" as C_0000630050676637484276
class C_0000630050676637484276 {
}
class "SemiFuture<T>" as C_0000156632990802225029
class C_0000156632990802225029 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L487{SemiFuture}]] {
+~SemiFuture<T>() : void
{static} +makeEmpty() : SemiFuture<T>
+SemiFuture<T>(const SemiFuture<T> & ) : void
+SemiFuture<T>(SemiFuture<T> && ) : void
+SemiFuture<T>(Future<T> && ) : void
+operator=(const SemiFuture<T> & ) : SemiFuture<T> &
+operator=(SemiFuture<T> && ) : SemiFuture<T> &
+operator=(Future<T> && ) : SemiFuture<T> &
+get() : T
+get(HighResDuration dur) : T
+getTry() : Try<T>
+getTry(HighResDuration dur) : Try<T>
+wait() : SemiFuture<T> &
+wait() : SemiFuture<T> &&
+wait(HighResDuration dur) : bool
+via(Executor::KeepAlive<> executor) : Future<T>
+via(Executor::KeepAlive<> executor, int8_t priority) : Future<T>
+unit() : SemiFuture<Unit>
+within(HighResDuration dur, Timekeeper * tk = nullptr) : SemiFuture<T>
+delayed(HighResDuration dur, Timekeeper * tk = nullptr) : SemiFuture<T>
+toUnsafeFuture() : Future<T>
-SemiFuture<T>(SemiFuture::Core * obj) : void
-SemiFuture<T>(futures::detail::EmptyConstruct ) : void
-stealDeferredExecutor() : futures::detail::DeferredWrapper
-wait(HighResDuration dur) : SemiFuture<T> &
{static} -releaseDeferredExecutor(SemiFuture::Core * core) : void
+SemiFuture<T><T2,>(T2 && val) : void
+SemiFuture<T><T2>(typename std::enable_if<std::is_same<Unit,T2>::value>::type * p = nullptr) : void
+SemiFuture<T><Args...,typename std::enable_if<std::is_constructible<T, Args &&...>::value, int>::type>(in_place_t , Args &&... args) : void
+defer<F>(F && func) : SemiFuture<typename futures::detail::tryCallableResult<T, F>::value_type>
+deferExTry<F>(F && func) : SemiFuture<typename futures::detail::tryExecutorCallableResult<T, F>::value_type>
+defer<R,Args...>(R (&)(Args...) func) : auto
+deferValue<F>(F && func) : SemiFuture<typename futures::detail::valueCallableResult<T, F>::value_type>
+deferExValue<F>(F && func) : SemiFuture<typename futures::detail::valueExecutorCallableResult<T, F>::value_type>
+deferValue<R,Args...>(R (&)(Args...) func) : auto
+deferError<ExceptionType,F>(tag_t<ExceptionType> , F && func) : SemiFuture<T>
+deferError<ExceptionType,R,Args...>(tag_t<ExceptionType> tag, R (&)(Args...) func) : SemiFuture<T>
+deferError<ExceptionType,F>(F && func) : SemiFuture<T>
+deferError<F>(F && func) : SemiFuture<T>
+deferError<R,Args...>(R (&)(Args...) func) : SemiFuture<T>
+within<E>(HighResDuration dur, E e, Timekeeper * tk = nullptr) : SemiFuture<T>
}
class "Future<Unit>" as C_0000873025366658585071
class C_0000873025366658585071 {
}
class "Future<bool>" as C_0000219446053632489521
class C_0000219446053632489521 {
}
class "Future<T>" as C_0000432533400863196245
class C_0000432533400863196245 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1003{Future}]] {
+Future<T>(const Future<T> & ) : void
+Future<T>(Future<T> && ) : void
{static} +makeEmpty() : Future<T>
+operator=(const Future<T> & ) : Future<T> &
+operator=(Future<T> && ) : Future<T> &
+getVia(DrivableExecutor * e) : T
+getVia(TimedDrivableExecutor * e, HighResDuration dur) : T
+getTryVia(DrivableExecutor * e) : Try<T>
+getTryVia(TimedDrivableExecutor * e, HighResDuration dur) : Try<T>
+via(Executor::KeepAlive<> executor) : Future<T>
+via(Executor::KeepAlive<> executor, int8_t priority) : Future<T>
+via(Executor::KeepAlive<> executor) : Future<T>
+via(Executor::KeepAlive<> executor, int8_t priority) : Future<T>
+then() : Future<Unit>
+unit() : Future<Unit>
+within(HighResDuration dur, Timekeeper * tk = nullptr) : Future<T>
+delayed(HighResDuration , Timekeeper *  = nullptr) : Future<T>
+get() : T
+get(HighResDuration dur) : T
+getTry() : Try<T>
+getTry(HighResDuration dur) : Try<T>
+wait() : Future<T> &
+wait() : Future<T> &&
+wait(HighResDuration dur) : Future<T> &
+wait(HighResDuration dur) : Future<T> &&
+waitVia(DrivableExecutor * e) : Future<T> &
+waitVia(DrivableExecutor * e) : Future<T> &&
+waitVia(TimedDrivableExecutor * e, HighResDuration dur) : Future<T> &
+waitVia(TimedDrivableExecutor * e, HighResDuration dur) : Future<T> &&
+willEqual(Future<T> & ) : Future<bool>
+semi() : SemiFuture<T>
#Future<T>(Future::Core * obj) : void
#Future<T>(futures::detail::EmptyConstruct ) : void
+Future<T><T2,>(T2 && val) : void
+Future<T><T2>(typename std::enable_if<std::is_same<Unit,T2>::value>::type * p = nullptr) : void
+Future<T><Args...,typename std::enable_if<std::is_constructible<T, Args &&...>::value, int>::type>(in_place_t , Args &&... args) : void
+Future<T><T2,typename std::enable_if<!std::is_same<T, typename std::decay<T2>::type>::value && std::is_constructible<T, T2 &&>::value && std::is_convertible<T2 &&, T>::value, int>::type>(Future<T2> && other) : void
+Future<T><T2,typename std::enable_if<!std::is_same<T, typename std::decay<T2>::type>::value && std::is_constructible<T, T2 &&>::value && !std::is_convertible<T2 &&, T>::value, int>::type>(Future<T2> && other) : void
+operator=<T2,typename std::enable_if<!std::is_same<T, typename std::decay<T2>::type>::value && std::is_constructible<T, T2 &&>::value, int>::type>(Future<T2> && other) : Future<T> &
+unwrap<F>() : typename std::enable_if<isFuture<F>::value, Future<typename isFuture<T>::Inner> >::type
+then<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+thenInline<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+then<R,Caller,Args...>(R (Caller::*)(Args...) func, Caller * instance) : Future<typename isFuture<R>::Inner>
+then<Arg>(Executor::KeepAlive<> x, Arg && arg) : auto
+thenTry<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+thenTryInline<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+thenExTry<F>(F && func) : Future<typename futures::detail::tryExecutorCallableResult<T, F>::value_type>
+thenExTryInline<F>(F && func) : Future<typename futures::detail::tryExecutorCallableResult<T, F>::value_type>
+thenTry<R,Args...>(R (&)(Args...) func) : auto
+thenTryInline<R,Args...>(R (&)(Args...) func) : auto
+thenValue<F>(F && func) : Future<typename futures::detail::valueCallableResult<T, F>::value_type>
+thenValueInline<F>(F && func) : Future<typename futures::detail::valueCallableResult<T, F>::value_type>
+thenExValue<F>(F && func) : Future<typename futures::detail::valueExecutorCallableResult<T, F>::value_type>
+thenExValueInline<F>(F && func) : Future<typename futures::detail::valueExecutorCallableResult<T, F>::value_type>
+thenValue<R,Args...>(R (&)(Args...) func) : auto
+thenValueInline<R,Args...>(R (&)(Args...) func) : auto
+thenError<ExceptionType,F>(tag_t<ExceptionType> , F && func) : typename std::enable_if<isFutureOrSemiFuture<invoke_result_t<F, ExceptionType> >::value, Future<T> >::type
+thenError<ExceptionType,F>(tag_t<ExceptionType> , F && func) : typename std::enable_if<!isFutureOrSemiFuture<invoke_result_t<F, ExceptionType> >::value, Future<T> >::type
+thenError<ExceptionType,R,Args...>(tag_t<ExceptionType> tag, R (&)(Args...) func) : Future<T>
+thenError<ExceptionType,F>(F && func) : Future<T>
+thenError<F>(F && func) : typename std::enable_if<isFutureOrSemiFuture<invoke_result_t<F, class exception_wrapper> >::value, Future<T> >::type
+thenError<F>(F && func) : typename std::enable_if<!isFutureOrSemiFuture<invoke_result_t<F, class exception_wrapper> >::value, Future<T> >::type
+thenError<R,Args...>(R (&)(Args...) func) : Future<T>
+onError<F>(F && func) : typename std::enable_if<!is_invocable_v<F, class exception_wrapper> && !futures::detail::Extract<F>::ReturnsFuture::value, Future<T> >::type
+onError<F>(F && func) : typename std::enable_if<!is_invocable_v<F, class exception_wrapper> && futures::detail::Extract<F>::ReturnsFuture::value, Future<T> >::type
+onError<F>(F && func) : typename std::enable_if<is_invocable_v<F, class exception_wrapper> && futures::detail::Extract<F>::ReturnsFuture::value, Future<T> >::type
+onError<F>(F && func) : typename std::enable_if<is_invocable_v<F, class exception_wrapper> && !futures::detail::Extract<F>::ReturnsFuture::value, Future<T> >::type
+onError<R,Args...>(R (&)(Args...) func) : Future<T>
+onError<F>(F && func) : Future<T>
+ensure<F>(F && func) : Future<T>
+onTimeout<F>(HighResDuration , F && func, Timekeeper *  = nullptr) : Future<T>
+within<E>(HighResDuration dur, E exception, Timekeeper * tk = nullptr) : Future<T>
+filter<F>(F && predicate) : Future<T>
+reduce<I,F>(I && initial, F && func) : Future<I>
}
abstract "Timekeeper" as C_0001579326926673473295
abstract C_0001579326926673473295 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1973{Timekeeper}]] {
+~Timekeeper() = default : void
{abstract} +after(HighResDuration dur) = 0 : SemiFuture<Unit>
+afterUnsafe(HighResDuration dur) : Future<Unit>
+at<Clock>(std::chrono::time_point<Clock> when) : SemiFuture<struct Unit>
+atUnsafe<Clock>(std::chrono::time_point<Clock> when) : Future<struct Unit>
}
class "SharedPromise::Defaulted<size_t>" as C_0000742750151299031844
class C_0000742750151299031844 {
}
class "SharedPromise::Defaulted<Try<T>>" as C_0000616814101618455991
class C_0000616814101618455991 {
}
class "SharedPromise<T>" as C_0000070676212088190880
class C_0000070676212088190880 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L41{SharedPromise}]] {
+getSemiFuture() const : SemiFuture<T>
+getFuture() const : Future<T>
+size() const : size_t
+setException(exception_wrapper ew) : void
+setInterruptHandler(std::function<void (const exception_wrapper &)> ) : void
+setTry(Try<T> && t) : void
+isFulfilled() const : bool
-hasResult() const : bool
+setException<E>(const E & ) : typename std::enable_if<std::is_base_of<std::exception, E>::value>::type
+setValue<B>() : typename std::enable_if<std::is_same<struct Unit, B>::value, void>::type
+setValue<M>(M && value) : void
+setWith<F>(F && func) : void
-mutex_ : SharedPromise::Mutex [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L130{mutex_}]]]
-size_ : Defaulted<size_t> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L131{size_}]]]
-try_ : Defaulted<Try<T>> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L132{try_}]]]
-promises_ : std::vector<Promise<T>> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L133{promises_}]]]
-interruptHandler_ : std::function<void (const exception_wrapper &)> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L134{interruptHandler_}]]]
}
class "SharedPromise::Mutex" as C_0001000827240401510911
class C_0001000827240401510911 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L104{SharedPromise##Mutex}]] {
+Mutex() = default : void
+Mutex(SharedPromise::Mutex && ) : void
+operator=(SharedPromise::Mutex && ) : SharedPromise::Mutex &
}
class "SharedPromise::Defaulted<V>" as C_0000764427108203128807
class C_0000764427108203128807 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L111{SharedPromise##Defaulted}]] {
+Defaulted<V>() = default : void
+Defaulted<V>(Defaulted<V> && that) : void
+operator=(Defaulted<V> && that) : Defaulted<V> &
+value : V [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L116{value}]]]
}
class "FutureSplitter<T>" as C_0000913905008779572763
class C_0000913905008779572763 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L111{FutureSplitter}]] {
}
C_0000135335628570802873 ..> C_0001539432614095357204
C_0000135335628570802873 ..> C_0000135335628570802873
C_0000547783453785439447 ..> C_0001108426710866155196
C_0001108426710866155196 ..> C_0002242828088217415598
C_0001108426710866155196 ..> C_0000547783453785439447
C_0001108426710866155196 o- - C_0002242828088217415598 : -executor_
C_0001108426710866155196 o- - C_0001108426710866155196 : -nestedExecutors_
C_0001108426710866155196 o- - C_0000547783453785439447 : -nestedExecutors_
C_0001108426710866155196 <.. C_0000547783453785439447 : +<<friend>>
C_0000487431047047122182 ..> C_0000135335628570802873
C_0000487431047047122182 ..> C_0002242828088217415598
C_0000725183341054102552 ..> C_0000725183341054102552
C_0000725183341054102552 ..> C_0000156632990802225029
C_0000725183341054102552 ..> C_0000432533400863196245
C_0000725183341054102552 ..> C_0000135335628570802873
C_0000725183341054102552 ..> C_0001539432614095357204
C_0000725183341054102552 ..> C_0000487431047047122182
C_0000725183341054102552 ..> C_0001636747636195825603
C_0000725183341054102552 ..> C_0001108426710866155196
C_0000725183341054102552 - -> C_0000487431047047122182 : #core_
C_0001797157475442677168 ..> C_0001778078938283944881
C_0001797157475442677168 ..> C_0002242828088217415598
C_0001797157475442677168 ..> C_0000135335628570802873
C_0001797157475442677168 ..> C_0001539432614095357204
C_0001797157475442677168 o- - C_0001778078938283944881 : -promise_
C_0001778078938283944881 ..> C_0001778078938283944881
C_0001778078938283944881 ..> C_0000156632990802225029
C_0001778078938283944881 ..> C_0000432533400863196245
C_0001778078938283944881 ..> C_0001539432614095357204
C_0001778078938283944881 ..> C_0000135335628570802873
C_0001778078938283944881 ..> C_0000487431047047122182
C_0001778078938283944881 ..> C_0002242828088217415598
C_0001778078938283944881 ..> C_0001636747636195825603
C_0001778078938283944881 - -> C_0000487431047047122182 : -core_
C_0000481841646641149488 <|- - C_0000769434624932181431
C_0000630050676637484276 ..> C_0001149405143997573904
C_0000630050676637484276 ..|> C_0000156632990802225029
C_0000156632990802225029 ..> C_0000156632990802225029
C_0000156632990802225029 ..> C_0000432533400863196245
C_0000156632990802225029 ..> C_0000135335628570802873
C_0000156632990802225029 ..> C_0002242828088217415598
C_0000156632990802225029 ..> C_0001149405143997573904
C_0000156632990802225029 ..> C_0000630050676637484276
C_0000156632990802225029 ..> C_0001579326926673473295
C_0000156632990802225029 ..> C_0001636747636195825603
C_0000156632990802225029 ..> C_0001108426710866155196
C_0000156632990802225029 ..> C_0000547783453785439447
C_0000725183341054102552 <|- - C_0000156632990802225029
C_0000873025366658585071 ..> C_0001149405143997573904
C_0000873025366658585071 ..|> C_0000432533400863196245
C_0000219446053632489521 ..|> C_0000432533400863196245
C_0000432533400863196245 ..> C_0000432533400863196245
C_0000432533400863196245 ..> C_0000481841646641149488
C_0000432533400863196245 ..> C_0000769434624932181431
C_0000432533400863196245 ..> C_0000135335628570802873
C_0000432533400863196245 ..> C_0002242828088217415598
C_0000432533400863196245 ..> C_0001149405143997573904
C_0000432533400863196245 ..> C_0000873025366658585071
C_0000432533400863196245 ..> C_0001579326926673473295
C_0000432533400863196245 ..> C_0000219446053632489521
C_0000432533400863196245 ..> C_0000156632990802225029
C_0000432533400863196245 ..> C_0001636747636195825603
C_0000725183341054102552 <|- - C_0000432533400863196245
C_0001579326926673473295 ..> C_0001149405143997573904
C_0001579326926673473295 ..> C_0000630050676637484276
C_0001579326926673473295 ..> C_0000873025366658585071
C_0000742750151299031844 ..|> C_0000764427108203128807
C_0000616814101618455991 ..|> C_0000764427108203128807
C_0000070676212088190880 ..> C_0000156632990802225029
C_0000070676212088190880 ..> C_0000432533400863196245
C_0000070676212088190880 ..> C_0001539432614095357204
C_0000070676212088190880 ..> C_0000135335628570802873
C_0000070676212088190880 o- - C_0000742750151299031844 : -size_
C_0000070676212088190880 o- - C_0000616814101618455991 : -try_
C_0000070676212088190880 ..> C_0001778078938283944881
C_0000070676212088190880 o- - C_0001778078938283944881 : -promises_
C_0000070676212088190880 - -> C_0001539432614095357204 : -interruptHandler_
C_0001000827240401510911 - -+ C_0000070676212088190880
C_0000764427108203128807 - -+ C_0000070676212088190880
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>