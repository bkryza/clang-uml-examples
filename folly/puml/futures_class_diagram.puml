@startuml
title 'futures' class diagram
class "exception_wrapper" as C_0001539432614095357204
class C_0001539432614095357204 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L161{exception_wrapper}]] {
+exception_wrapper() noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L386{exception_wrapper}]]]
+exception_wrapper(exception_wrapper && that) noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L391{exception_wrapper}]]]
+exception_wrapper(const exception_wrapper & that) noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L396{exception_wrapper}]]]
+exception_wrapper(std::exception_ptr ptr) noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L416{exception_wrapper}]]]
-exception_wrapper<Ex,As...>(exception_wrapper::ThrownTag, in_place_type_tag<Ex>, As &&... as) : void
-exception_wrapper<Ex,As...>(exception_wrapper::OnHeapTag, in_place_type_tag<Ex>, As &&... as) : void
-exception_wrapper<Ex,As...>(exception_wrapper::InSituTag, in_place_type_tag<Ex>, As &&... as) : void
+exception_wrapper<Ex>(std::exception_ptr ptr, Ex & ex) noexcept : void
+exception_wrapper<Ex,Ex_=std::decay_t<Ex>,std::enable_if_t<static_cast<_Bool>(Conjunction<IsStdException<Ex_>, IsRegularExceptionType<Ex_> >::value), long>=435>(Ex && ex) : void
+exception_wrapper<Ex,Ex_=std::decay_t<Ex>,std::enable_if_t<static_cast<_Bool>(IsRegularExceptionType<Ex_>::value), long>=448>(in_place_t, Ex && ex) : void
+exception_wrapper<Ex,As...,std::enable_if_t<static_cast<_Bool>(IsRegularExceptionType<Ex>::value), long>=454>(in_place_type_tag<Ex>, As &&... as) : void
+~exception_wrapper() : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L409{~exception_wrapper}]]]
..
+operator=(exception_wrapper && that) noexcept : exception_wrapper & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L402{operator=}]]]
+operator=(const exception_wrapper & that) noexcept : exception_wrapper & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L407{operator=}]]]
..
+operator!() const noexcept : bool [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L464{operator!}]]]
..
{static} -as_exception_or_null_(const std::exception & ex) : const std::exception * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L252{as_exception_or_null_}]]]
{static} -as_exception_or_null_(exception_wrapper::AnyException) : const std::exception * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L253{as_exception_or_null_}]]]
+class_name() const : fbstring [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L527{class_name}]]]
{static} +from_exception_ptr(const std::exception_ptr & eptr) noexcept : exception_wrapper [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L379{from_exception_ptr}]]]
{static} +from_exception_ptr(std::exception_ptr && eptr) noexcept : exception_wrapper [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L381{from_exception_ptr}]]]
+get_exception<Ex>() const noexcept : const Ex *
+get_exception<Ex>() noexcept : Ex *
+get_exception() const noexcept : const std::exception * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L482{get_exception}]]]
+get_exception() noexcept : std::exception * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L480{get_exception}]]]
+handle<CatchFns...>(CatchFns... fns) const : void
+handle<CatchFns...>(CatchFns... fns) : void
{static} -handle_<This,CatchFns...>(std::false_type, This & this_, CatchFns &... fns) : void
{static} -handle_<This,CatchFns...>(std::true_type, This & this_, CatchFns &... fns) : void
+has_exception_ptr() const noexcept : bool [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L474{has_exception_ptr}]]]
+is_compatible_with<Ex>() const noexcept : _Bool
{static} +none() noexcept : const std::type_info & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L508{none}]]]
{static} -noop_<Ret,Args...>(Args...) : Ret
{static} -onNoExceptionError(const char * name) : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L198{onNoExceptionError}]]]
+operator bool() const noexcept : bool [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L461{operator bool}]]]
+reset() : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L468{reset}]]]
+swap(exception_wrapper & that) noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L458{swap}]]]
+throw_exception() const : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L538{throw_exception}]]]
+throw_with_nested<Ex>(Ex && ex) const : void
+to_exception_ptr() noexcept : std::exception_ptr [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L502{to_exception_ptr}]]]
+to_exception_ptr() const noexcept : std::exception_ptr [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L504{to_exception_ptr}]]]
+type() const noexcept : const std::type_info & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L518{type}]]]
{static} -uninit_type_(const exception_wrapper *) : const std::type_info * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L203{uninit_type_}]]]
{static} +unknown() noexcept : const std::type_info & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L512{unknown}]]]
+what() const : fbstring [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L522{what}]]]
+with_exception<Ex=const void,Fn>(Fn fn) : _Bool
+with_exception<Ex=const void,Fn>(Fn fn) const : _Bool
{static} -with_exception_<Ex,This,Fn>(This & this_, Fn fn_) : _Bool
__
- : exception_wrapper::(anonymous_3224166) [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L337{}]]]
{static} -uninit_ : const exception_wrapper::VTable [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L205{uninit_}]]]
-vptr_ : const exception_wrapper::VTable * [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/ExceptionWrapper.h#L342{vptr_}]]]
}
class "Try<T>" as C_0000135335628570802873
class C_0000135335628570802873 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/Try.h#L52{Try}]] {
__
}
class "Promise<T>" as C_0001778078938283944881
class C_0001778078938283944881 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L147{Promise}]] {
__
}
class "SemiFuture<T>" as C_0000156632990802225029
class C_0000156632990802225029 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L58{SemiFuture}]] {
__
}
class "Future<T>" as C_0000432533400863196245
class C_0000432533400863196245 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Promise.h#L60{Future}]] {
__
}
class "isSemiFuture<SemiFuture<T>>" as C_0000927697699920734713
class C_0000927697699920734713 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-pre.h#L35{isSemiFuture}]] {
__
}
class "isFuture<Future<T>>" as C_0000729422988404595288
class C_0000729422988404595288 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-pre.h#L45{isFuture}]] {
__
}
class "isFutureOrSemiFuture<Future<T>>" as C_0002251174128064838303
class C_0002251174128064838303 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-pre.h#L62{isFutureOrSemiFuture}]] {
__
}
class "Future<Try<T>>" as C_0001773118382379833528
class C_0001773118382379833528 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-pre.h#L50{Future}]] {
__
}
class "isFutureOrSemiFuture<SemiFuture<T>>" as C_0000292621078341661500
class C_0000292621078341661500 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-pre.h#L74{isFutureOrSemiFuture}]] {
__
}
class "SemiFuture<Try<T>>" as C_0000578240337546425866
class C_0000578240337546425866 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future-pre.h#L50{SemiFuture}]] {
__
}
class "SemiFuture<Unit>" as C_0000630050676637484276
class C_0000630050676637484276 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L487{SemiFuture}]] {
__
}
class "Future<Unit>" as C_0000873025366658585071
class C_0000873025366658585071 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1003{Future}]] {
__
}
class "Future<bool>" as C_0000219446053632489521
class C_0000219446053632489521 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1003{Future}]] {
__
}
class "Future<T2>" as C_0000407203995172612528
class C_0000407203995172612528 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L1003{Future}]] {
__
}
class "SharedPromise::Defaulted<size_t>" as C_0000742750151299031844
class C_0000742750151299031844 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L111{SharedPromise##Defaulted}]] {
__
}
class "SharedPromise::Defaulted<Try<T>>" as C_0000616814101618455991
class C_0000616814101618455991 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L111{SharedPromise##Defaulted}]] {
__
}
class "SharedPromise<T>" as C_0000070676212088190880
class C_0000070676212088190880 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L41{SharedPromise}]] {
+getFuture() const : Future<T> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L56{getFuture}]]]
+getSemiFuture() const : SemiFuture<T> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L47{getSemiFuture}]]]
-hasResult() const : bool [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L126{hasResult}]]]
+isFulfilled() const : bool [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L100{isFulfilled}]]]
+setException(exception_wrapper ew) : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L62{setException}]]]
+setException<E>(const E &) : typename std::enable_if<std::is_base_of<std::exception, E>::value>::type
+setInterruptHandler(std::function<void (const exception_wrapper &)>) : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L77{setInterruptHandler}]]]
+setTry(Try<T> && t) : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L89{setTry}]]]
+setValue<B=T>() : typename std::enable_if<std::is_same<struct Unit, B>::value, void>::type
+setValue<M>(M && value) : void
+setWith<F>(F && func) : void
+size() const : size_t [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L59{size}]]]
__
-interruptHandler_ : std::function<void (const exception_wrapper &)> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L134{interruptHandler_}]]]
-mutex_ : SharedPromise::Mutex [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L130{mutex_}]]]
-promises_ : std::vector<Promise<T>> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L133{promises_}]]]
-size_ : Defaulted<size_t> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L131{size_}]]]
-try_ : Defaulted<Try<T>> [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L132{try_}]]]
}
class "SharedPromise::Mutex" as C_0001000827240401510911
class C_0001000827240401510911 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L104{SharedPromise##Mutex}]] {
+operator=(SharedPromise::Mutex &&) noexcept : SharedPromise::Mutex & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L107{operator=}]]]
..
+Mutex() = default : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L105{Mutex}]]]
+Mutex(SharedPromise::Mutex &&) noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L106{Mutex}]]]
__
}
class "SharedPromise::Defaulted<V>" as C_0000764427108203128807
class C_0000764427108203128807 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L111{SharedPromise##Defaulted}]] {
+operator=(Defaulted<V> && that) noexcept : Defaulted<V> & [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L120{operator=}]]]
..
+Defaulted() = default : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L117{Defaulted}]]]
+Defaulted(Defaulted<V> && that) noexcept : void [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L118{Defaulted}]]]
__
+value : V [[[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/SharedPromise.h#L116{value}]]]
}
class "FutureSplitter<T>" as C_0000913905008779572763
class C_0000913905008779572763 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/folly/futures/Future.h#L111{FutureSplitter}]] {
__
}
class "Promise<Unit>" as C_0000436737001401312240
class C_0000436737001401312240 [[https://github.com/facebook/folly/blob/c7166a677d17ff0a52cb14e02a84ad0a75821ca7/../../../../../../usr/include/c++/12/bits/stl_multimap.h#L99{Promise}]] {
__
}
C_0000135335628570802873 ..|> C_0000135335628570802873
C_0001778078938283944881 ..|> C_0001778078938283944881
C_0000156632990802225029 ..|> C_0000156632990802225029
C_0000432533400863196245 ..|> C_0000432533400863196245
C_0000927697699920734713 ..> C_0000156632990802225029
C_0000729422988404595288 ..> C_0000432533400863196245
C_0002251174128064838303 ..> C_0000432533400863196245
C_0001773118382379833528 ..> C_0000135335628570802873
C_0001773118382379833528 ..|> C_0000432533400863196245
C_0000292621078341661500 ..> C_0000156632990802225029
C_0000578240337546425866 ..> C_0000135335628570802873
C_0000578240337546425866 ..|> C_0000156632990802225029
C_0000630050676637484276 ..|> C_0000156632990802225029
C_0000873025366658585071 ..|> C_0000432533400863196245
C_0000219446053632489521 ..|> C_0000432533400863196245
C_0000407203995172612528 ..|> C_0000432533400863196245
C_0000742750151299031844 ..|> C_0000764427108203128807
C_0000616814101618455991 ..> C_0000135335628570802873
C_0000616814101618455991 ..|> C_0000764427108203128807
C_0000070676212088190880 ..> C_0000156632990802225029
C_0000070676212088190880 ..> C_0000432533400863196245
C_0000070676212088190880 ..> C_0000135335628570802873
C_0000070676212088190880 o-- C_0000742750151299031844 : -size_
C_0000070676212088190880 o-- C_0000616814101618455991 : -try_
C_0000070676212088190880 o-- C_0001778078938283944881 : -promises_
C_0000070676212088190880 --> C_0001539432614095357204 : -interruptHandler_
C_0001000827240401510911 --+ C_0000070676212088190880
C_0000764427108203128807 --+ C_0000070676212088190880
C_0000436737001401312240 ..|> C_0001778078938283944881
note left of C_0000156632990802225029 : 
note left of C_0000432533400863196245 : 

'Generated with clang-uml, version 0.4.0-9-gc398c6f
'LLVM version Ubuntu clang version 15.0.7
@enduml
