@startuml
title 'futures' class diagram
class "tag_t<typename...>" as C_0003474684073711699487
class C_0003474684073711699487 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Traits.h#L57{tag_t}]] {
__
}
class "Executor::KeepAlive<ExecutorT=Executor>" as C_0003318743605067253837
class C_0003318743605067253837 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L86{Executor::KeepAlive}]] {
+operator=(KeepAlive<ExecutorT> && other) noexcept : KeepAlive<ExecutorT> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L127{operator=}]]]
+operator=(const KeepAlive<ExecutorT> & other) : KeepAlive<ExecutorT> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L133{operator=}]]]
..
+operator*() const : ExecutorT & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L168{operator*}]]]
+operator->() const : ExecutorT * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L170{operator->}]]]
+operator=<OtherExecutor,typename=typename std::enable_if<std::is_convertible<OtherExecutor *, ExecutorT *>::value>::type>(KeepAlive<OtherExecutor> && other) noexcept : KeepAlive<ExecutorT> &
+operator=<OtherExecutor,typename=typename std::enable_if<std::is_convertible<OtherExecutor *, ExecutorT *>::value>::type>(const KeepAlive<OtherExecutor> & other) : KeepAlive<ExecutorT> &
..
+KeepAlive() = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L90{KeepAlive}]]]
+KeepAlive(KeepAlive<ExecutorT> && other) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L101{KeepAlive}]]]
+KeepAlive(const KeepAlive<ExecutorT> & other) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L104{KeepAlive}]]]
+KeepAlive(ExecutorT * executor) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L123{KeepAlive}]]]
-KeepAlive(ExecutorT * executor, uintptr_t flags) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L196{KeepAlive}]]]
-KeepAlive(uintptr_t storage) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L203{KeepAlive}]]]
+KeepAlive<OtherExecutor,typename=typename std::enable_if<std::is_convertible<OtherExecutor *, ExecutorT *>::value>::type>(KeepAlive<OtherExecutor> && other) noexcept : void
+KeepAlive<OtherExecutor,typename=typename std::enable_if<std::is_convertible<OtherExecutor *, ExecutorT *>::value>::type>(const KeepAlive<OtherExecutor> & other) noexcept : void
+add<KAF>(KAF && f) : void
+copy() const : KeepAlive<ExecutorT> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L172{copy}]]]
+get() const : ExecutorT * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L164{get}]]]
+get_alias() const : KeepAlive<ExecutorT> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L178{get_alias}]]]
+operator bool() const : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L162{operator bool}]]]
+reset() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L153{reset}]]]
+~KeepAlive() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L92{~KeepAlive}]]]
__
-storage_ : uintptr_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Executor.h#L206{storage_}]]]
}
class "exception_wrapper" as C_0012315460912762857634
class C_0012315460912762857634 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L98{exception_wrapper}]] {
+exception_wrapper() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L134{exception_wrapper}]]]
+exception_wrapper(exception_wrapper && that) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L139{exception_wrapper}]]]
+exception_wrapper(const exception_wrapper & that) = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L144{exception_wrapper}]]]
+exception_wrapper(const std::exception_ptr & ptr) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L158{exception_wrapper}]]]
+exception_wrapper(std::exception_ptr && ptr) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L159{exception_wrapper}]]]
+exception_wrapper<Ex,Ex_=std::decay_t<Ex>,std::enable_if_t<static_cast<_Bool>(Conjunction<IsStdException<Ex_>, IsRegularExceptionType<Ex_> >::value), long>=170>(Ex && ex) : void
+exception_wrapper<Ex,Ex_=std::decay_t<Ex>,std::enable_if_t<static_cast<_Bool>(IsRegularExceptionType<Ex_>::value), long>=182>(std::in_place_t, Ex && ex) : void
+exception_wrapper<Ex,As...,std::enable_if_t<static_cast<_Bool>(IsRegularExceptionType<Ex>::value), long>=188>(std::in_place_type_t<Ex>, As &&... as) : void
..
+operator=(exception_wrapper && that) noexcept : exception_wrapper & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L150{operator=}]]]
+operator=(const exception_wrapper & that) = default : exception_wrapper & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L155{operator=}]]]
..
+operator!() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L198{operator!}]]]
..
+class_name() const : fbstring [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L237{class_name}]]]
+exception_ptr_ref() const noexcept : const std::exception_ptr & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L225{exception_ptr_ref}]]]
{static} -extract_(std::exception_ptr &&) noexcept : std::exception_ptr [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L129{extract_}]]]
+get_exception<Ex>() const noexcept : const Ex *
+get_exception<Ex>() noexcept : Ex *
+get_exception() noexcept : std::exception * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L209{get_exception}]]]
+get_exception() const noexcept : const std::exception * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L211{get_exception}]]]
+handle<CatchFns...>(CatchFns... fns) const : void
+handle<CatchFns...>(CatchFns... fns) : void
{static} -handle_<This,CatchFns...>(This & this_, const char * name, CatchFns &... fns) : void
+has_exception_ptr() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L205{has_exception_ptr}]]]
+is_compatible_with<Ex>() const noexcept : _Bool
{static} -onNoExceptionError(const char * name) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L103{onNoExceptionError}]]]
+operator bool() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L195{operator bool}]]]
+reset() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L202{reset}]]]
+swap(exception_wrapper & that) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L192{swap}]]]
+terminate_with() const noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L251{terminate_with}]]]
+throw_exception() const : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L248{throw_exception}]]]
+throw_with_nested<Ex>(Ex && ex) const : void
+to_exception_ptr() const noexcept : std::exception_ptr [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L224{to_exception_ptr}]]]
+type() const noexcept : const std::type_info * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L229{type}]]]
+what() const : fbstring [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L233{what}]]]
+with_exception<Ex=const void,Fn>(Fn fn) : _Bool
+with_exception<Ex=const void,Fn>(Fn fn) const : _Bool
{static} -with_exception_<This,Fn>(This & this_, Fn fn_, tag_t<void>) : _Bool
{static} -with_exception_<This,Fn,Ex>(This & this_, Fn fn_, tag_t<Ex>) : _Bool
{static} -with_exception_<Ex,This,Fn>(This & this_, Fn fn_) : _Bool
__
-ptr_ : std::exception_ptr [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L108{ptr_}]]]
}
class "Unit" as C_0009195241151980591236
class C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Unit.h#L36{Unit}]] {
+operator!=(const Unit &) constexpr const : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Unit.h#L38{operator!=}]]]
+operator==(const Unit &) constexpr const : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Unit.h#L37{operator==}]]]
__
}
class "Try<T>" as C_0001082685028566422986
class C_0001082685028566422986 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L138{Try}]] {
+operator*() const : const T & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L236{operator*}]]]
+operator*() : T & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L242{operator*}]]]
+operator*() : T && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L249{operator*}]]]
+operator*() const : const T && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L256{operator*}]]]
+operator->() const : const T * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L264{operator->}]]]
+operator->() : T * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L270{operator->}]]]
..
+emplace<Args...>(Args &&... args) noexcept : T &
+emplaceException<Args...>(Args &&... args) noexcept : exception_wrapper &
+exception() : exception_wrapper & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L291{exception}]]]
+exception() : exception_wrapper && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L298{exception}]]]
+exception() const : const exception_wrapper & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L305{exception}]]]
+exception() const : const exception_wrapper && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L312{exception}]]]
+get<_Bool isTry,R>() : typename std::enable_if<!isTry, R>::type
+get<_Bool isTry,R>() : typename std::enable_if<isTry, R>::type
+hasException() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L279{hasException}]]]
+hasException<Ex>() const noexcept : _Bool
+hasValue() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L275{hasValue}]]]
+throwIfFailed() const : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L228{throwIfFailed}]]]
+throwUnlessValue() const : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L227{throwUnlessValue}]]]
+tryGetExceptionObject() const noexcept : const std::exception * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L326{tryGetExceptionObject}]]]
+tryGetExceptionObject<Ex>() const noexcept : const Ex *
+tryGetExceptionObject<Ex>() noexcept : Ex *
+tryGetExceptionObject() noexcept : std::exception * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L323{tryGetExceptionObject}]]]
+value() : T & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L189{value}]]]
+value() const : const T && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L210{value}]]]
+value() const : const T & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L203{value}]]]
+value() : T && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L196{value}]]]
+value_or<U>(U && defaultValue) const : T
+value_or<U>(U && defaultValue) : T
+withException<Ex,F>(F func) : _Bool
+withException<Ex,F>(F func) const : _Bool
+withException<F>(F func) : _Bool
+withException<F>(F func) const : _Bool
__
}
class "futures::Barrier" as C_0003208454900612351799
class C_0003208454900612351799 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L45{Barrier}]] {
+Barrier(uint32_t n) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L47{Barrier}]]]
+~Barrier() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L48{~Barrier}]]]
..
-allocateControlBlock() : ControlBlock * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L90{allocateControlBlock}]]]
{static} -controlBlockSize(size_t n) : size_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L86{controlBlockSize}]]]
-freeControlBlock(ControlBlock * b) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L91{freeControlBlock}]]]
{static} -promises(ControlBlock * cb) : BoolPromise * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L82{promises}]]]
+wait() : Future<bool> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L50{wait}]]]
__
-controlBlock_ : std::atomic<ControlBlock *> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L94{controlBlock_}]]]
{static} -kReader : const uint64_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L56{kReader}]]]
{static} -kReaderShift : const uint64_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L55{kReaderShift}]]]
{static} -kValueMask : const uint64_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L57{kValueMask}]]]
-size_ : uint32_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L93{size_}]]]
}
class "Executor::KeepAlive" as C_0017942624705739324784
class C_0017942624705739324784 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/synchronization/HazptrDomain.h#L747{Executor::KeepAlive}]] {
__
}
class "Promise<T>" as C_0014224631506271559051
class C_0014224631506271559051 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L179{Promise}]] {
+Promise() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L195{Promise}]]]
+Promise(const Promise<T> &) = deleted : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L206{Promise}]]]
+Promise(Promise<T> && other) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L216{Promise}]]]
-Promise(futures::detail::EmptyConstruct) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L479{Promise}]]]
-Promise(futures::detail::MakeRetrievedFromStolenCoreTag, Core & core) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L484{Promise}]]]
+~Promise() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L203{~Promise}]]]
..
+operator=(const Promise<T> &) = deleted : Promise<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L207{operator=}]]]
+operator=(Promise<T> && other) noexcept : Promise<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L229{operator=}]]]
..
-detach() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L482{detach}]]]
-getCore() const : const Core & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L461{getCore}]]]
-getCore() : Core & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L460{getCore}]]]
{static} -getCoreImpl<CoreT>(CoreT * core) : CoreT &
+getFuture() : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L265{getFuture}]]]
+getSemiFuture() : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L246{getSemiFuture}]]]
+isFulfilled() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L435{isFulfilled}]]]
{static} +makeEmpty() noexcept : Promise<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L187{makeEmpty}]]]
+setException(exception_wrapper ew) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L289{setException}]]]
+setException<E>(E && e) : typename std::enable_if<std::is_base_of<std::exception, typename std::decay<E>::type>::value>::type
+setInterruptHandler<F>(F && fn) : void
+setTry(Try<T> && t) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L397{setTry}]]]
-setTry(Executor::KeepAlive<> && ka, Try<T> && t) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L473{setTry}]]]
+setValue<B=T>() : typename std::enable_if<std::is_same<Unit, B>::value, void>::type
+setValue<M>(M && value) : void
+setWith<F>(F && func) : void
-throwIfFulfilled() const : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L481{throwIfFulfilled}]]]
+valid() const noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L428{valid}]]]
__
-core_ : Core * [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L477{core_}]]]
-retrieved_ : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L451{retrieved_}]]]
}
class "SemiFuture<T>" as C_0001253063926417800239
class C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L521{SemiFuture}]] {
+SemiFuture(const SemiFuture<T> &) = deleted : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L585{SemiFuture}]]]
+SemiFuture(SemiFuture<T> &&) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L587{SemiFuture}]]]
+SemiFuture(Future<T> &&) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L589{SemiFuture}]]]
-SemiFuture(Core * obj) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1003{SemiFuture}]]]
-SemiFuture(futures::detail::EmptyConstruct) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1005{SemiFuture}]]]
+SemiFuture<T2=T,typename=typename std::enable_if<!isFuture<typename std::decay<T2>::type>::value && !isSemiFuture<typename std::decay<T2>::type>::value && std::is_constructible<Try<T>, T2>::value>::type>(T2 && val) : void
+SemiFuture<T2=T>(typename std::enable_if<std::is_same<Unit,T2>::value>::type * p = nullptr) : void
+SemiFuture<Args...,typename std::enable_if<std::is_constructible<T, Args &&...>::value, int>::type=0>(std::in_place_t, Args &&... args) : void
+~SemiFuture() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L528{~SemiFuture}]]]
..
+operator=(const SemiFuture<T> &) = deleted : SemiFuture<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L602{operator=}]]]
+operator=(SemiFuture<T> &&) noexcept : SemiFuture<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L603{operator=}]]]
..
+operator=(Future<T> &&) noexcept : SemiFuture<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L604{operator=}]]]
..
+defer<F>(F && func) : SemiFuture<typename futures::detail::tryCallableResult<T, F>::value_type>
+defer<R,Args...>(R (&)(Args...) func) : auto
+deferEnsure<F>(F && func) : SemiFuture<T>
+deferError<ExceptionType,F>(tag_t<ExceptionType>, F && func) : SemiFuture<T>
+deferError<ExceptionType,R,Args...>(tag_t<ExceptionType> tag, R (&)(Args...) func) : SemiFuture<T>
+deferError<R,Args...>(R (&)(Args...) func) : SemiFuture<T>
+deferError<F>(F && func) : SemiFuture<T>
+deferError<ExceptionType,F>(F && func) : SemiFuture<T>
+deferExTry<F>(F && func) : SemiFuture<typename futures::detail::tryExecutorCallableResult<T, F>::value_type>
+deferExValue<F>(F && func) : SemiFuture<typename futures::detail::valueExecutorCallableResult<T, F>::value_type>
+deferValue<R,Args...>(R (&)(Args...) func) : auto
+deferValue<F>(F && func) : SemiFuture<typename futures::detail::valueCallableResult<T, F>::value_type>
+delayed(HighResDuration dur, Timekeeper * tk = nullptr) : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L951{delayed}]]]
+get(HighResDuration dur) : T [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L630{get}]]]
+get() : T [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L617{get}]]]
+getTry(HighResDuration dur) : Try<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L655{getTry}]]]
+getTry() : Try<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L642{getTry}]]]
{static} +makeEmpty() : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L535{makeEmpty}]]]
{static} -releaseDeferredExecutor(Core * core) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1024{releaseDeferredExecutor}]]]
-stealDeferredExecutor() : futures::detail::DeferredWrapper [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1009{stealDeferredExecutor}]]]
+toUnsafeFuture() : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L969{toUnsafeFuture}]]]
+unit() : SemiFuture<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L902{unit}]]]
+via(Executor::KeepAlive<> executor, int8_t priority) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L705{via}]]]
+via(Executor::KeepAlive<> executor) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L699{via}]]]
+viaInlineUnsafe(Executor::KeepAlive<> executor) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L704{viaInlineUnsafe}]]]
-wait(HighResDuration dur) : SemiFuture<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1022{wait}]]]
+wait(HighResDuration dur) : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L696{wait}]]]
+wait() : SemiFuture<T> && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L684{wait}]]]
+wait() : SemiFuture<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L669{wait}]]]
+within(HighResDuration dur, Timekeeper * tk = nullptr) : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L919{within}]]]
+within<E>(HighResDuration dur, E e, Timekeeper * tk = nullptr) : SemiFuture<T>
__
}
class "Future<T>" as C_0003460267206905569965
class C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1063{Future}]] {
+Future(const Future<T> &) = deleted : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1115{Future}]]]
+Future(Future<T> &&) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1117{Future}]]]
#Future(Core * obj) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1896{Future}]]]
#Future(futures::detail::EmptyConstruct) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1898{Future}]]]
+Future<T2=T,typename=typename std::enable_if<!isFuture<typename std::decay<T2>::type>::value && !isSemiFuture<typename std::decay<T2>::type>::value && std::is_constructible<Try<T>, T2>::value>::type>(T2 && val) : void
+Future<T2=T>(typename std::enable_if<std::is_same<Unit,T2>::value>::type * p = nullptr) : void
+Future<Args...,typename std::enable_if<std::is_constructible<T, Args &&...>::value, int>::type=0>(std::in_place_t, Args &&... args) : void
+Future<T2,typename std::enable_if<!std::is_same<T, typename std::decay<T2>::type>::value && std::is_constructible<T, T2 &&>::value && std::is_convertible<T2 &&, T>::value, int>::type=0>(Future<T2> && other) : void
+Future<T2,typename std::enable_if<!std::is_same<T, typename std::decay<T2>::type>::value && std::is_constructible<T, T2 &&>::value && !std::is_convertible<T2 &&, T>::value, int>::type=0>(Future<T2> && other) : void
..
+operator=(const Future<T> &) = deleted : Future<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1175{operator=}]]]
+operator=(Future<T> &&) noexcept : Future<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1178{operator=}]]]
..
+operator=<T2,typename std::enable_if<!std::is_same<T, typename std::decay<T2>::type>::value && std::is_constructible<T, T2 &&>::value, int>::type=0>(Future<T2> && other) : Future<T> &
..
+delayed(HighResDuration, Timekeeper *  = nullptr) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1662{delayed}]]]
+ensure<F>(F && func) : Future<T>
+ensureInline<F>(F && func) : Future<T>
+filter<F>(F && predicate) : Future<T>
+get(HighResDuration dur) : T [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1687{get}]]]
+get() : T [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1674{get}]]]
+getTry(HighResDuration dur) : Try<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1712{getTry}]]]
+getTry() : Try<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1699{getTry}]]]
+getTryVia(DrivableExecutor * e) : Try<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1197{getTryVia}]]]
+getTryVia(TimedDrivableExecutor * e, HighResDuration dur) : Try<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1201{getTryVia}]]]
+getVia(DrivableExecutor * e) : T [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1185{getVia}]]]
+getVia(TimedDrivableExecutor * e, HighResDuration dur) : T [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1192{getVia}]]]
{static} +makeEmpty() : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1172{makeEmpty}]]]
+onTimeout<F>(HighResDuration, F && func, Timekeeper *  = nullptr) : Future<T>
+reduce<In,F>(In && initial, F && func) : Future<In>
+semi() : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1866{semi}]]]
+then<R,Caller,Args...>(R (Caller::*)(Args...) func, Caller * instance) : Future<typename isFuture<R>::Inner>
+then<Arg>(Executor::KeepAlive<> x, Arg && arg) = deleted : auto
+then<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+then() : Future<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1551{then}]]]
+thenError<ExceptionType,F>(tag_t<ExceptionType>, F && func) : typename std::enable_if<isFutureOrSemiFuture<invoke_result_t<F, ExceptionType> >::value, Future<T> >::type
+thenError<ExceptionType,F>(tag_t<ExceptionType>, F && func) : typename std::enable_if<!isFutureOrSemiFuture<invoke_result_t<F, ExceptionType> >::value, Future<T> >::type
+thenError<ExceptionType,R,Args...>(tag_t<ExceptionType> tag, R (&)(Args...) func) : Future<T>
+thenError<ExceptionType,F>(F && func) : Future<T>
+thenError<R,Args...>(R (&)(Args...) func) : Future<T>
+thenError<F>(F && func) : typename std::enable_if<isFutureOrSemiFuture<invoke_result_t<F, exception_wrapper> >::value, Future<T> >::type
+thenError<F>(F && func) : typename std::enable_if<!isFutureOrSemiFuture<invoke_result_t<F, exception_wrapper> >::value, Future<T> >::type
#thenErrorImpl<F>(F && func, futures::detail::InlineContinuation allowInline = futures::detail::InlineContinuation::forbid) : typename std::enable_if<!isFutureOrSemiFuture<invoke_result_t<F, exception_wrapper> >::value, Future<T> >::type
#thenErrorImpl<ExceptionType,F>(tag_t<ExceptionType>, F && func, futures::detail::InlineContinuation allowInline = futures::detail::InlineContinuation::forbid) : typename std::enable_if<isFutureOrSemiFuture<invoke_result_t<F, ExceptionType> >::value, Future<T> >::type
#thenErrorImpl<ExceptionType,F>(tag_t<ExceptionType>, F && func, futures::detail::InlineContinuation allowInline = futures::detail::InlineContinuation::forbid) : typename std::enable_if<!isFutureOrSemiFuture<invoke_result_t<F, ExceptionType> >::value, Future<T> >::type
#thenErrorImpl<F>(F && func, futures::detail::InlineContinuation allowInline = futures::detail::InlineContinuation::forbid) : typename std::enable_if<isFutureOrSemiFuture<invoke_result_t<F, exception_wrapper> >::value, Future<T> >::type
+thenErrorInline<F>(F && func) : Future<T>
+thenErrorInline<ExceptionType,F>(tag_t<ExceptionType>, F && func) : Future<T>
+thenExTry<F>(F && func) : Future<typename futures::detail::tryExecutorCallableResult<T, F>::value_type>
+thenExTryInline<F>(F && func) : Future<typename futures::detail::tryExecutorCallableResult<T, F>::value_type>
+thenExValue<F>(F && func) : Future<typename futures::detail::valueExecutorCallableResult<T, F>::value_type>
+thenExValueInline<F>(F && func) : Future<typename futures::detail::valueExecutorCallableResult<T, F>::value_type>
+thenInline<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+thenTry<R,Args...>(R (&)(Args...) func) : auto
+thenTry<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+thenTryInline<R,Args...>(R (&)(Args...) func) : auto
+thenTryInline<F>(F && func) : Future<typename futures::detail::tryCallableResult<T, F>::value_type>
+thenValue<F>(F && func) : Future<typename futures::detail::valueCallableResult<T, F>::value_type>
+thenValue<R,Args...>(R (&)(Args...) func) : auto
+thenValueInline<F>(F && func) : Future<typename futures::detail::valueCallableResult<T, F>::value_type>
+thenValueInline<R,Args...>(R (&)(Args...) func) : auto
+unit() : Future<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1566{unit}]]]
+unwrap<F=T>() : typename std::enable_if<isFuture<F>::value, Future<typename isFuture<T>::Inner> >::type
+via(Executor::KeepAlive<> executor, int8_t priority) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1247{via}]]]
+via(Executor::KeepAlive<> executor) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1246{via}]]]
+via(Executor::KeepAlive<> executor, int8_t priority) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1231{via}]]]
+via(Executor::KeepAlive<> executor) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1230{via}]]]
+wait() : Future<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1725{wait}]]]
+wait(HighResDuration dur) : Future<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1752{wait}]]]
+wait() : Future<T> && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1739{wait}]]]
+wait(HighResDuration dur) : Future<T> && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1766{wait}]]]
+waitVia(TimedDrivableExecutor * e, HighResDuration dur) : Future<T> && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1820{waitVia}]]]
+waitVia(TimedDrivableExecutor * e, HighResDuration dur) : Future<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1806{waitVia}]]]
+waitVia(DrivableExecutor * e) : Future<T> && [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1794{waitVia}]]]
+waitVia(DrivableExecutor * e) : Future<T> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1781{waitVia}]]]
+willEqual(Future<T> &) : Future<bool> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1826{willEqual}]]]
+within(HighResDuration dur, Timekeeper * tk = nullptr) : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1631{within}]]]
+within<E>(HighResDuration dur, E exception, Timekeeper * tk = nullptr) : Future<T>
__
}
abstract "DrivableExecutor" as C_0003854733173129195911
abstract C_0003854733173129195911 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/DrivableExecutor.h#L40{DrivableExecutor}]] {
+~DrivableExecutor() = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/DrivableExecutor.h#L42{~DrivableExecutor}]]]
..
{abstract} +drive() = 0 : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/DrivableExecutor.h#L52{drive}]]]
__
}
class "TimedDrivableExecutor" as C_0006155476999457451449
class C_0006155476999457451449 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L30{TimedDrivableExecutor}]] {
+TimedDrivableExecutor() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L32{TimedDrivableExecutor}]]]
+~TimedDrivableExecutor() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L33{~TimedDrivableExecutor}]]]
..
+add(Func) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L60{add}]]]
+drain() noexcept : size_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L76{drain}]]]
+drive() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L36{drive}]]]
+run() noexcept : size_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L68{run}]]]
+try_drive() noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L40{try_drive}]]]
+try_drive_for<Rep,Period>(const std::chrono::duration<Rep,Period> & timeout) noexcept : _Bool
+try_drive_until<Clock,Duration>(const std::chrono::time_point<Clock,Duration> & deadline) noexcept : _Bool
+try_wait() noexcept : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L82{try_wait}]]]
+try_wait_for<Rep,Period>(const std::chrono::duration<Rep,Period> & timeout) noexcept : _Bool
+try_wait_until<Clock,Duration>(const std::chrono::time_point<Clock,Duration> & deadline) noexcept : _Bool
+wait() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L79{wait}]]]
__
-func_ : Func [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L100{func_}]]]
-queue_ : UMPSCQueue<Func,true> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/executors/TimedDrivableExecutor.h#L99{queue_}]]]
}
class "isSemiFuture<SemiFuture<T>>" as C_0007421581599365877708
class C_0007421581599365877708 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future-pre.h#L35{isSemiFuture}]] {
__
}
class "isFuture<Future<T>>" as C_0005835383907236762306
class C_0005835383907236762306 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future-pre.h#L45{isFuture}]] {
__
}
class "isFutureOrSemiFuture<Future<T>>" as C_0018009393024518706430
class C_0018009393024518706430 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future-pre.h#L60{isFutureOrSemiFuture}]] {
__
}
class "Future<Try<T>>" as C_0014184947059038668229
class C_0014184947059038668229 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future-pre.h#L65{Future}]] {
__
}
class "isFutureOrSemiFuture<SemiFuture<T>>" as C_0002340968626733292005
class C_0002340968626733292005 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future-pre.h#L70{isFutureOrSemiFuture}]] {
__
}
class "SemiFuture<Try<T>>" as C_0004625922700371406929
class C_0004625922700371406929 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future-pre.h#L75{SemiFuture}]] {
__
}
class "PromiseContract<T>" as C_0010115290322117200595
class C_0010115290322117200595 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L122{PromiseContract}]] {
__
+future : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L124{future}]]]
+promise : Promise<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L123{promise}]]]
}
class "SemiPromiseContract<T>" as C_0000624268001861988441
class C_0000624268001861988441 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L128{SemiPromiseContract}]] {
__
+future : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L130{future}]]]
+promise : Promise<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L129{promise}]]]
}
class "SemiFuture<Unit>" as C_0005040405413099874209
class C_0005040405413099874209 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L902{SemiFuture}]] {
__
}
class "tag_t<ExceptionType>" as C_0018347827994528382898
class C_0018347827994528382898 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L818{tag_t}]] {
__
}
class "Future<Unit>" as C_0006984202933268680575
class C_0006984202933268680575 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1551{Future}]] {
__
}
class "Future<bool>" as C_0001755568429059916174
class C_0001755568429059916174 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1826{Future}]] {
__
}
class "Future<T2>" as C_0003257631961380900224
class C_0003257631961380900224 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1127{Future}]] {
__
}
abstract "Timekeeper" as C_0012634615413387786366
abstract C_0012634615413387786366 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1977{Timekeeper}]] {
+~Timekeeper() = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1979{~Timekeeper}]]]
..
{abstract} +after(HighResDuration dur) = 0 : SemiFuture<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1986{after}]]]
+afterUnsafe(HighResDuration dur) : Future<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1994{afterUnsafe}]]]
+at<Clock>(std::chrono::time_point<Clock> when) : SemiFuture<Unit>
+atUnsafe<Clock>(std::chrono::time_point<Clock> when) : Future<Unit>
__
}
class "SharedPromise::Defaulted<size_t>" as C_0005942001210392254752
class C_0005942001210392254752 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L131{SharedPromise::Defaulted}]] {
__
}
class "SharedPromise::Defaulted<Try<T>>" as C_0004934512812947647933
class C_0004934512812947647933 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L132{SharedPromise::Defaulted}]] {
__
}
class "SharedPromise<T>" as C_0000565409696705527043
class C_0000565409696705527043 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L41{SharedPromise}]] {
+getFuture() const : Future<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L56{getFuture}]]]
+getSemiFuture() const : SemiFuture<T> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L47{getSemiFuture}]]]
-hasResult() const : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L126{hasResult}]]]
+isFulfilled() const : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L100{isFulfilled}]]]
+setException(exception_wrapper ew) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L62{setException}]]]
+setException<E>(const E &) : typename std::enable_if<std::is_base_of<std::exception, E>::value>::type
+setInterruptHandler(std::function<void (const exception_wrapper &)>) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L77{setInterruptHandler}]]]
+setTry(Try<T> && t) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L89{setTry}]]]
+setValue<B=T>() : typename std::enable_if<std::is_same<Unit, B>::value, void>::type
+setValue<M>(M && value) : void
+setWith<F>(F && func) : void
+size() const : size_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L59{size}]]]
__
-interruptHandler_ : std::function<void (const exception_wrapper &)> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L134{interruptHandler_}]]]
-mutex_ : Mutex [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L130{mutex_}]]]
-promises_ : std::vector<Promise<T>> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L133{promises_}]]]
-size_ : Defaulted<size_t> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L131{size_}]]]
-try_ : Defaulted<Try<T>> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L132{try_}]]]
}
class "SharedPromise::Mutex" as C_0008006617923212087293
class C_0008006617923212087293 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L104{SharedPromise::Mutex}]] {
+operator=(Mutex &&) noexcept : Mutex & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L107{operator=}]]]
..
+Mutex() = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L105{Mutex}]]]
+Mutex(Mutex &&) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L106{Mutex}]]]
__
}
class "SharedPromise::Defaulted<V>" as C_0006115416865625030461
class C_0006115416865625030461 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L111{SharedPromise::Defaulted}]] {
+operator=(Defaulted<V> && that) noexcept : Defaulted<V> & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L120{operator=}]]]
..
+Defaulted() = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L117{Defaulted}]]]
+Defaulted(Defaulted<V> && that) noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L118{Defaulted}]]]
__
+value : V [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L116{value}]]]
}
class "FutureSplitter<T>" as C_0007311240070236582105
class C_0007311240070236582105 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L134{FutureSplitter}]] {
__
}
class "Promise<bool>" as C_0001284932117452059526
class C_0001284932117452059526 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L79{Promise}]] {
__
}
class "EventBaseThreadTimekeeper" as C_0014546640806406856592
class C_0014546640806406856592 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L27{EventBaseThreadTimekeeper}]] {
+EventBaseThreadTimekeeper() = deleted : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L29{EventBaseThreadTimekeeper}]]]
+EventBaseThreadTimekeeper(EventBase & eventBase) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L30{EventBaseThreadTimekeeper}]]]
+~EventBaseThreadTimekeeper() = default : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L32{~EventBaseThreadTimekeeper}]]]
..
+after(HighResDuration) : SemiFuture<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L35{after}]]]
__
#eventBaseRef_ : EventBase & [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L38{eventBaseRef_}]]]
}
class "WTCallback<TBase>" as C_0009184897837778571109
class C_0009184897837778571109 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L30{WTCallback}]] {
+WTCallback(PrivateConstructorTag) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L34{WTCallback}]]]
..
#callbackCanceled() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L67{callbackCanceled}]]]
{static} +create(EventBase * base) : std::pair<std::shared_ptr<WTCallback<TBase>>,SemiFuture<Unit>> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L37{create}]]]
{static} #interruptHandler(std::shared_ptr<WTCallback<TBase>> self, exception_wrapper ew) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L73{interruptHandler}]]]
#timeoutExpired() noexcept : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L61{timeoutExpired}]]]
__
#state_ : Synchronized<std::optional<State>> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L59{state_}]]]
}
class "Promise<Unit>" as C_0003493896011210497921
class C_0003493896011210497921 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L54{Promise}]] {
__
}
class "ManualTimekeeper" as C_0010191229819511600985
class C_0010191229819511600985 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L34{ManualTimekeeper}]] {
+ManualTimekeeper() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L36{ManualTimekeeper}]]]
..
+advance(Duration dur) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L45{advance}]]]
+after(HighResDuration dur) : SemiFuture<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L40{after}]]]
+now() const : std::chrono::steady_clock::time_point [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L49{now}]]]
+numScheduled() const : std::size_t [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L53{numScheduled}]]]
__
-now_ : std::atomic<std::chrono::steady_clock::time_point> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L72{now_}]]]
-schedule_ : Synchronized<std::multimap<std::chrono::steady_clock::time_point,std::shared_ptr<TimeoutHandler>>> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L76{schedule_}]]]
}
class "HeapTimekeeper" as C_0015282033556129705293
class C_0015282033556129705293 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L32{HeapTimekeeper}]] {
+HeapTimekeeper() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L34{HeapTimekeeper}]]]
+~HeapTimekeeper() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L35{~HeapTimekeeper}]]]
..
+after(HighResDuration) : SemiFuture<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L37{after}]]]
__
-state_ : std::shared_ptr<State> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L46{state_}]]]
-thread_ : std::thread [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L47{thread_}]]]
}
class "HeapTimekeeper::Timeout" as C_0003677432100539814726
class C_0003677432100539814726 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L34{HeapTimekeeper::Timeout}]] {
+operator<(const Timeout & other) const : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L47{operator<}]]]
..
-Timeout(HeapTimekeeper & parent, Clock::time_point exp, Promise<Unit> promise) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L57{Timeout}]]]
{static} +create(HeapTimekeeper & parent, Clock::time_point expiration) : std::pair<Ref,SemiFuture<Unit>> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L41{create}]]]
+decRef() : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L44{decRef}]]]
{static} -interruptHandler(Ref self, std::shared_ptr<State> state, exception_wrapper ew) : void [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L54{interruptHandler}]]]
+tryFulfill(Try<Unit> t) : bool [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L45{tryFulfill}]]]
__
+expiration : const Clock::time_point [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L51{expiration}]]]
-fulfilled_ : relaxed_atomic<bool> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L60{fulfilled_}]]]
-promise_ : Promise<Unit> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L61{promise_}]]]
-refCount_ : std::atomic<uint8_t> [[[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L59{refCount_}]]]
}
C_0012315460912762857634 ..> C_0003474684073711699487 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/ExceptionWrapper.h#L118{}]]
C_0001082685028566422986 ..> C_0012315460912762857634 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/Try.h#L291{}]]
C_0003208454900612351799 ..> C_0001755568429059916174 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L50{}]]
C_0003208454900612351799 ..> C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Barrier.h#L50{}]]
C_0017942624705739324784 ..|> C_0003318743605067253837
C_0014224631506271559051 ..|> C_0014224631506271559051
C_0014224631506271559051 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L246{}]]
C_0014224631506271559051 ..> C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L265{}]]
C_0014224631506271559051 ..> C_0012315460912762857634 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L289{}]]
C_0014224631506271559051 ..> C_0001082685028566422986 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L397{}]]
C_0014224631506271559051 ..> C_0017942624705739324784 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L473{}]]
C_0014224631506271559051 ..> C_0003318743605067253837 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Promise.h#L473{}]]
C_0001253063926417800239 ..|> C_0001253063926417800239
C_0001253063926417800239 ..> C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L589{}]]
C_0001253063926417800239 ..> C_0001082685028566422986 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L642{}]]
C_0001253063926417800239 ..> C_0017942624705739324784 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L699{}]]
C_0001253063926417800239 ..> C_0003318743605067253837 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L699{}]]
C_0001253063926417800239 ..> C_0005040405413099874209 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L902{}]]
C_0001253063926417800239 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L902{}]]
C_0001253063926417800239 ..> C_0012634615413387786366 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L919{}]]
C_0001253063926417800239 ..> C_0018347827994528382898 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L818{}]]
C_0001253063926417800239 ..> C_0003474684073711699487 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L818{}]]
C_0003460267206905569965 ..|> C_0003460267206905569965
C_0003460267206905569965 ..> C_0003854733173129195911 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1185{}]]
C_0003460267206905569965 ..> C_0006155476999457451449 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1192{}]]
C_0003460267206905569965 ..> C_0001082685028566422986 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1197{}]]
C_0003460267206905569965 ..> C_0017942624705739324784 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1230{}]]
C_0003460267206905569965 ..> C_0003318743605067253837 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1230{}]]
C_0003460267206905569965 ..> C_0006984202933268680575 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1551{}]]
C_0003460267206905569965 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1551{}]]
C_0003460267206905569965 ..> C_0012634615413387786366 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1631{}]]
C_0003460267206905569965 ..> C_0001755568429059916174 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1826{}]]
C_0003460267206905569965 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1866{}]]
C_0003460267206905569965 ..> C_0003257631961380900224 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1127{}]]
C_0003460267206905569965 ..> C_0018347827994528382898 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1472{}]]
C_0003460267206905569965 ..> C_0003474684073711699487 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1472{}]]
C_0003854733173129195911 <|-- C_0006155476999457451449
C_0007421581599365877708 ..> C_0001253063926417800239
C_0005835383907236762306 ..> C_0003460267206905569965
C_0018009393024518706430 ..> C_0003460267206905569965
C_0014184947059038668229 ..> C_0001082685028566422986
C_0014184947059038668229 ..|> C_0003460267206905569965
C_0002340968626733292005 ..> C_0001253063926417800239
C_0004625922700371406929 ..> C_0001082685028566422986
C_0004625922700371406929 ..|> C_0001253063926417800239
C_0010115290322117200595 o-- C_0014224631506271559051 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L123{promise}]] : +promise
C_0010115290322117200595 o-- C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L124{future}]] : +future
C_0000624268001861988441 o-- C_0014224631506271559051 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L129{promise}]] : +promise
C_0000624268001861988441 o-- C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L130{future}]] : +future
C_0005040405413099874209 ..> C_0009195241151980591236
C_0005040405413099874209 ..|> C_0001253063926417800239
C_0018347827994528382898 ..|> C_0003474684073711699487
C_0006984202933268680575 ..> C_0009195241151980591236
C_0006984202933268680575 ..|> C_0003460267206905569965
C_0001755568429059916174 ..|> C_0003460267206905569965
C_0003257631961380900224 ..|> C_0003460267206905569965
C_0012634615413387786366 ..> C_0005040405413099874209 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1986{}]]
C_0012634615413387786366 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1986{}]]
C_0012634615413387786366 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1986{}]]
C_0012634615413387786366 ..> C_0006984202933268680575 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1994{}]]
C_0012634615413387786366 ..> C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/Future.h#L1994{}]]
C_0005942001210392254752 ..|> C_0006115416865625030461
C_0004934512812947647933 ..> C_0001082685028566422986
C_0004934512812947647933 ..|> C_0006115416865625030461
C_0000565409696705527043 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L47{}]]
C_0000565409696705527043 ..> C_0003460267206905569965 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L56{}]]
C_0000565409696705527043 ..> C_0001082685028566422986 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L89{}]]
C_0000565409696705527043 o-- C_0008006617923212087293 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L130{mutex_}]] : -mutex_
C_0000565409696705527043 o-- C_0005942001210392254752 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L131{size_}]] : -size_
C_0000565409696705527043 o-- C_0004934512812947647933 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L132{try_}]] : -try_
C_0000565409696705527043 o-- C_0014224631506271559051 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L133{promises_}]] : -promises_
C_0000565409696705527043 --> C_0012315460912762857634 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/SharedPromise.h#L134{interruptHandler_}]] : -interruptHandler_
C_0008006617923212087293 --+ C_0000565409696705527043
C_0006115416865625030461 --+ C_0000565409696705527043
C_0001284932117452059526 ..|> C_0014224631506271559051
C_0014546640806406856592 ..> C_0005040405413099874209 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L35{}]]
C_0014546640806406856592 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L35{}]]
C_0014546640806406856592 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ThreadWheelTimekeeper.h#L35{}]]
C_0012634615413387786366 <|-- C_0014546640806406856592
C_0009184897837778571109 ..> C_0005040405413099874209
C_0009184897837778571109 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L37{}]]
C_0009184897837778571109 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L37{}]]
C_0009184897837778571109 ..> C_0012315460912762857634 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/WTCallback.h#L74{}]]
C_0003493896011210497921 ..> C_0009195241151980591236
C_0003493896011210497921 ..|> C_0014224631506271559051
C_0010191229819511600985 ..> C_0005040405413099874209 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L40{}]]
C_0010191229819511600985 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L40{}]]
C_0010191229819511600985 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/ManualTimekeeper.h#L40{}]]
C_0012634615413387786366 <|-- C_0010191229819511600985
C_0015282033556129705293 ..> C_0005040405413099874209 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L37{}]]
C_0015282033556129705293 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L37{}]]
C_0015282033556129705293 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.h#L37{}]]
C_0012634615413387786366 <|-- C_0015282033556129705293
C_0003677432100539814726 --+ C_0015282033556129705293
C_0003677432100539814726 ..> C_0005040405413099874209
C_0003677432100539814726 ..> C_0001253063926417800239 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L41{}]]
C_0003677432100539814726 ..> C_0009195241151980591236 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L41{}]]
C_0003677432100539814726 ..> C_0001082685028566422986 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L45{}]]
C_0003677432100539814726 ..> C_0012315460912762857634 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L55{}]]
C_0003677432100539814726 o-- C_0003493896011210497921 [[https://github.com/facebook/folly/blob/78286282478e1ae05b2e8cbcf0e2139eab283bea/folly/futures/HeapTimekeeper.cpp#L61{promise_}]] : -promise_

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
