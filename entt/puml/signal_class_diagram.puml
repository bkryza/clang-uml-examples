@startuml
abstract "internal::basic_dispatcher_handler" as C_0001307290238739357754
abstract C_0001307290238739357754 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L27{basic_dispatcher_handler}]] {
+~basic_dispatcher_handler() = default : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L28{~basic_dispatcher_handler}]]]
..
{abstract} +clear() noexcept = 0 : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L31{clear}]]]
{abstract} +disconnect(void *) = 0 : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L30{disconnect}]]]
{abstract} +publish() = 0 : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L29{publish}]]]
{abstract} +size() const noexcept = 0 : std::size_t [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L32{size}]]]
__
}
class "internal::dispatcher_handler<Type,Allocator>" as C_0000948211101657221704
class C_0000948211101657221704 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L36{dispatcher_handler}]] {
+dispatcher_handler(const internal::dispatcher_handler::allocator_type & allocator) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L46{dispatcher_handler}]]]
..
+bucket() noexcept : auto [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L68{bucket}]]]
+clear() noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L64{clear}]]]
+disconnect(void * instance) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L60{disconnect}]]]
+enqueue<Args...>(Args &&... args) : void
+publish() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L50{publish}]]]
+size() const noexcept : std::size_t [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L85{size}]]]
+trigger(Type event) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L72{trigger}]]]
__
-events : internal::dispatcher_handler::container_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L91{events}]]]
-signal : internal::dispatcher_handler::signal_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L90{signal}]]]
}
class "connect_arg_t<auto>" as C_0001142186291934866126
class C_0001142186291934866126 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L32{connect_arg_t}]] {
+connect_arg_t() = default : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L34{connect_arg_t}]]]
__
}
class "delegate<Ret(Args...)>" as C_0000011977380754407836
class C_0000011977380754407836 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/delegate.hpp#L59{delegate}]] {
__
}
class "connect_arg_t<Candidate>" as C_0000669731748523585054
class C_0000669731748523585054 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L32{connect_arg_t}]] {
__
}
class "scoped_connection" as C_0000084455293237423501
class C_0000084455293237423501 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L19{scoped_connection}]] {
+scoped_connection() = default : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L272{scoped_connection}]]]
+scoped_connection(const connection & other) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L278{scoped_connection}]]]
+scoped_connection(const scoped_connection &) = deleted : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L282{scoped_connection}]]]
+scoped_connection(scoped_connection && other) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L288{scoped_connection}]]]
+~scoped_connection() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L292{~scoped_connection}]]]
..
+operator=(const scoped_connection &) = deleted : scoped_connection & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L300{operator=}]]]
+operator=(scoped_connection && other) noexcept : scoped_connection & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L307{operator=}]]]
..
+operator=(connection other) : scoped_connection & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L317{operator=}]]]
..
+operator bool() const noexcept : bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L326{operator bool}]]]
+release() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L331{release}]]]
__
-conn : connection [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L336{conn}]]]
}
class "basic_dispatcher<typename=std::allocator<void>>" as C_0000098445855838491408
class C_0000098445855838491408 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L12{basic_dispatcher}]] {
__
}
class "sink<typename>" as C_0000209413521570231267
class C_0000209413521570231267 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L22{sink}]] {
__
}
class "sigh<Type,typename=std::allocator<void>>" as C_0000397774958659844289
class C_0000397774958659844289 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L25{sigh}]] {
__
}
class "emitter<typename,typename=std::allocator<void>>" as C_0001248149390777255459
class C_0001248149390777255459 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L15{emitter}]] {
__
}
class "connection" as C_0001629008291831120506
class C_0001629008291831120506 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L17{connection}]] {
-connection(delegate<void (void *)> fn, void * ref) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L231{connection}]]]
+connection() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L236{connection}]]]
..
+operator bool() const noexcept : bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L244{operator bool}]]]
+release() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L249{release}]]]
__
-disconnect : delegate<void (void *)> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L257{disconnect}]]]
-signal : void * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L258{signal}]]]
}
class "delegate<typename>" as C_0002122157564414146506
class C_0002122157564414146506 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/fwd.hpp#L9{delegate}]] {
__
}
class "sigh<Ret(Args...),Allocator>" as C_0001654528939521938342
class C_0001654528939521938342 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L54{sigh}]] {
+sigh() noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L70{sigh}]]]
+sigh(allocator_type const& allocator) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L77{sigh}]]]
+sigh(const sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> & other) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L84{sigh}]]]
+sigh(const sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> & other, allocator_type const& allocator) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L92{sigh}]]]
+sigh(sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> && other) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L99{sigh}]]]
+sigh(sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> && other, allocator_type const& allocator) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L107{sigh}]]]
..
+operator=(const sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> & other) noexcept : sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L115{operator=}]]]
+operator=(sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> && other) noexcept : sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L125{operator=}]]]
..
+collect<Func>(Func func, Args... args) const : void
+empty() const noexcept : bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L159{empty}]]]
+get_allocator() constexpr const noexcept : allocator_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L143{get_allocator}]]]
+publish(Args... args) const : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L170{publish}]]]
+size() const noexcept : size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L151{size}]]]
+swap(sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2> & other) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L134{swap}]]]
__
-calls : container_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L216{calls}]]]
}
class "delegate<void(void *)>" as C_0001338234208699310194
class C_0001338234208699310194 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/delegate.hpp#L59{delegate}]] {
__
}
class "sink<sigh<Ret(Args...),Allocator>>" as C_0000122718201217191999
class C_0000122718201217191999 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L359{sink}]] {
+sink(sigh<Ret (Args...),Allocator> & ref) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L387{sink}]]]
..
-before(delegate<Ret (Args...)> call) : auto [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L373{before}]]]
+before(const void * value_or_instance) : sink<sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2>> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L445{before}]]]
+before() : sink<sigh<type-parameter-0-0 (type-parameter-0-1...),type-parameter-0-2>> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L464{before}]]]
+before<auto Function>() : sink<sigh<type-parameter-0-0 (type-parameter-0-1...), type-parameter-0-2> >
+before<auto Candidate,Type>(Type && value_or_instance) : sink<sigh<type-parameter-0-0 (type-parameter-0-1...), type-parameter-0-2> >
+before<Type,typename=std::enable_if_t<!std::is_same_v<std::decay_t<std::remove_pointer_t<Type> >, void>, sink<sigh<type-parameter-0-0 (type-parameter-0-1...), type-parameter-0-2> > >>(Type & value_or_instance) : sink<sigh<type-parameter-0-0 (type-parameter-0-1...), type-parameter-0-2> >
+connect<auto Candidate,Type...>(Type &&... value_or_instance) : class connection
+disconnect(const void * value_or_instance) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L531{disconnect}]]]
+disconnect() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L540{disconnect}]]]
+disconnect<auto Candidate,Type...>(Type &&... value_or_instance) : void
+disconnect<Type,typename=std::enable_if_t<!std::is_same_v<std::decay_t<std::remove_pointer_t<Type> >, void> >>(Type & value_or_instance) : void
+empty() const noexcept : bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L395{empty}]]]
{static} -release<auto Candidate,Type>(Type value_or_instance, void * signal) : void
{static} -release<auto Candidate>(void * signal) : void
__
-offset : difference_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L545{offset}]]]
-signal : signal_type * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L546{signal}]]]
}
class "sigh<Type,Allocator=std::allocator<void>>" as C_0000168483954532210279
class C_0000168483954532210279 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L35{sigh}]] {
__
}
class "sink<Type>" as C_0001692833380939147962
class C_0001692833380939147962 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L23{sink}]] {
__
}
class "sigh<void(Type &),Allocator>" as C_0000852066601687344945
class C_0000852066601687344945 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/sigh.hpp#L35{sigh}]] {
__
}
class "basic_dispatcher<Allocator=std::allocator<void>>" as C_0001139451768232131379
class C_0001139451768232131379 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L116{basic_dispatcher}]] {
+basic_dispatcher() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L159{basic_dispatcher}]]]
+basic_dispatcher(const basic_dispatcher::allocator_type & allocator) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L166{basic_dispatcher}]]]
+basic_dispatcher(basic_dispatcher<type-parameter-0-0> && other) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L173{basic_dispatcher}]]]
+basic_dispatcher(basic_dispatcher<type-parameter-0-0> && other, const basic_dispatcher::allocator_type & allocator) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L181{basic_dispatcher}]]]
..
+operator=(basic_dispatcher<type-parameter-0-0> && other) noexcept : basic_dispatcher<type-parameter-0-0> & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L189{operator=}]]]
..
-assure<Type>(const id_type id) : handler_type<Type> &
-assure<Type>(const id_type id) const : const handler_type<Type> *
+clear() noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L361{clear}]]]
+clear<Type>(const id_type id = type_hash<Type>::value()) : void
+disconnect<Type>(Type * value_or_instance) : void
+disconnect<Type>(Type & value_or_instance) : void
+enqueue<Type,Args...>(Args &&... args) : void
+enqueue<Type>(Type && value) : void
+enqueue_hint<Type,Args...>(const id_type id, Args &&... args) : void
+enqueue_hint<Type>(const id_type id, Type && value) : void
+get_allocator() constexpr const noexcept : basic_dispatcher::allocator_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L207{get_allocator}]]]
+sink<Type>(const id_type id = type_hash<Type>::value()) : auto
+size() const noexcept : basic_dispatcher::size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L227{size}]]]
+size<Type>(const id_type id = type_hash<Type>::value()) const noexcept : basic_dispatcher::size_type
+swap(basic_dispatcher<type-parameter-0-0> & other) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L198{swap}]]]
+trigger<Type>(Type && value = {}) : void
+trigger<Type>(const id_type id, Type && value = {}) : void
+update() const : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L378{update}]]]
+update<Type>(const id_type id = type_hash<Type>::value()) : void
__
-pools : compressed_pair<basic_dispatcher::container_type,basic_dispatcher::allocator_type> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/dispatcher.hpp#L385{pools}]]]
}
class "emitter<Derived,Allocator=std::allocator<void>>" as C_0001377312229211188154
class C_0001377312229211188154 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L36{emitter}]] {
+emitter() : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L51{emitter}]]]
+emitter(const emitter::allocator_type & allocator) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L58{emitter}]]]
+emitter(emitter<type-parameter-0-0,type-parameter-0-1> && other) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L70{emitter}]]]
+emitter(emitter<type-parameter-0-0,type-parameter-0-1> && other, const emitter::allocator_type & allocator) noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L78{emitter}]]]
+~emitter() noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L62{~emitter}]]]
..
+operator=(emitter<type-parameter-0-0,type-parameter-0-1> && other) noexcept : emitter<type-parameter-0-0,type-parameter-0-1> & [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L86{operator=}]]]
..
+clear() noexcept : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L142{clear}]]]
+contains<Type>() const : _Bool
+empty() const noexcept : bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L160{empty}]]]
+erase<Type>() : void
+get_allocator() constexpr const noexcept : emitter::allocator_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L104{get_allocator}]]]
+on<Type>(std::function<void (Type &,Derived &)> func) : void
+publish<Type>(Type && value) : void
+swap(emitter<type-parameter-0-0,type-parameter-0-1> & other) : void [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L95{swap}]]]
__
-handlers : compressed_pair<emitter::container_type,emitter::allocator_type> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/signal/emitter.hpp#L165{handlers}]]]
}
C_0000948211101657221704 o-- C_0000852066601687344945 : -signal
C_0001307290238739357754 <|-- C_0000948211101657221704
C_0000011977380754407836 ..|> C_0002122157564414146506
C_0000669731748523585054 ..|> C_0001142186291934866126
C_0000084455293237423501 ..> C_0001629008291831120506
C_0000084455293237423501 o-- C_0001629008291831120506 : -conn
C_0001629008291831120506 ..> C_0001338234208699310194
C_0001629008291831120506 o-- C_0001338234208699310194 : -disconnect
C_0001654528939521938342 ..|> C_0000397774958659844289
C_0001654528939521938342 ..> C_0000011977380754407836
C_0001654528939521938342 o-- C_0000011977380754407836 : -calls
C_0001338234208699310194 ..|> C_0000011977380754407836
C_0000122718201217191999 ..> C_0001654528939521938342
C_0000122718201217191999 ..|> C_0000209413521570231267
C_0000122718201217191999 ..> C_0000011977380754407836
C_0000122718201217191999 --> C_0001654528939521938342 : -signal
C_0000852066601687344945 ..|> C_0001654528939521938342

'Generated with clang-uml, version 0.3.7-36-g13ea67c
'LLVM version Ubuntu clang version 15.0.6
@enduml
