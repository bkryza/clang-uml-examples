@startuml
class "internal::dense_map_node<Key,Type>" as C_0001949040226502523653
class C_0001949040226502523653 {
}
class "internal::storage_iterator<std::vector<typename alloc_traits::pointer>>" as C_0002209338957740976162
class C_0002209338957740976162 {
}
class "internal::extended_storage_iterator<typename base_type::iterator,internal::storage_iterator<std::vector<typename alloc_traits::pointer>>>" as C_0000018044932043323221
class C_0000018044932043323221 {
}
class "internal::extended_storage_iterator<typename base_type::const_iterator,internal::storage_iterator<std::vector<typename alloc_traits::pointer>>>" as C_0000246104228557977884
class C_0000246104228557977884 {
}
class "internal::extended_storage_iterator<typename base_type::iterator>" as C_0000880421278423536144
class C_0000880421278423536144 {
}
class "internal::extended_storage_iterator<typename base_type::const_iterator>" as C_0001783428072821606564
class C_0001783428072821606564 {
}
class "internal::extended_group_iterator<basic_group<type_list<>,type_list<type-parameter-0-0...>,type_list<type-parameter-0-1...>>::iterator,owned_t,get_t<type-parameter-0-0...>>" as C_0000440103747575733986
class C_0000440103747575733986 {
}
class "internal::extended_group_iterator<basic_group<type_list<type-parameter-0-0...>,type_list<type-parameter-0-1...>,type_list<type-parameter-0-2...>>::iterator,owned_t<type-parameter-0-0...>,get_t<type-parameter-0-1...>>" as C_0001062876330760904480
class C_0001062876330760904480 {
}
class "internal::view_iterator<std::common_type_t<typename Get::base_type...,typename Exclude::base_type...>,sizeof...(Get) - 1u,sizeof...(Exclude)>" as C_0000390675639111256783
class C_0000390675639111256783 {
}
class "internal::extended_view_iterator<internal::view_iterator<std::common_type_t<typename Get::base_type...,typename Exclude::base_type...>,sizeof...(Get) - 1u,sizeof...(Exclude)>,Get...>" as C_0001780449445169454883
class C_0001780449445169454883 {
}
class "internal::meta_context" as C_0000538414692726589468
class C_0000538414692726589468 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/context.hpp#L21{meta_context}]] {
{static} +from(meta_ctx & ctx) : meta_context &
{static} +from(const meta_ctx & ctx) : const meta_context &
+value : dense_map<id_type,meta_type_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/context.hpp#L22{value}]]]
}
enum "internal::meta_traits" as C_0000280988144863594744
enum C_0000280988144863594744 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L32{meta_traits}]] {
is_none
is_const
is_static
is_arithmetic
is_integral
is_signed
is_array
is_enum
is_class
is_meta_pointer_like
is_meta_sequence_container
is_meta_associative_container
_entt_enum_as_bitmask
}
class "internal::meta_prop_node" as C_0002287663038699269962
class C_0002287663038699269962 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L50{meta_prop_node}]] {
+type : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L51{type}]]]
+value : std::shared_ptr<void> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L52{value}]]]
}
class "internal::meta_base_node" as C_0001914246467647862418
class C_0001914246467647862418 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L55{meta_base_node}]] {
+type : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L56{type}]]]
+cast : const void *(*)(const void *) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L57{cast}]]]
}
class "internal::meta_conv_node" as C_0001744731429327847043
class C_0001744731429327847043 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L60{meta_conv_node}]] {
+conv : meta_any (*)(const meta_ctx &,const void *) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L61{conv}]]]
}
class "internal::meta_ctor_node" as C_0001899008894225588729
class C_0001899008894225588729 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L64{meta_ctor_node}]] {
+arity : size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L67{arity}]]]
+arg : meta_type (*)(const meta_ctx &,const size_type) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L68{arg}]]]
+invoke : meta_any (*)(const meta_ctx &,meta_any *const) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L69{invoke}]]]
}
class "internal::meta_dtor_node" as C_0000027853839799635237
class C_0000027853839799635237 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L72{meta_dtor_node}]] {
+dtor : void (*)(void *) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L73{dtor}]]]
}
class "internal::meta_data_node" as C_0001300544611355739027
class C_0001300544611355739027 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L76{meta_data_node}]] {
+traits : meta_traits [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L79{traits}]]]
+arity : size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L80{arity}]]]
+type : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L81{type}]]]
+arg : meta_type (*)(const meta_ctx &,const size_type) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L82{arg}]]]
+set : bool (*)(meta_handle,meta_any) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L83{set}]]]
+get : meta_any (*)(const meta_ctx &,meta_handle) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L84{get}]]]
+prop : dense_map<id_type,meta_prop_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L85{prop}]]]
}
class "internal::meta_func_node" as C_0000946352673696314221
class C_0000946352673696314221 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L88{meta_func_node}]] {
+traits : meta_traits [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L91{traits}]]]
+arity : size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L92{arity}]]]
+ret : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L93{ret}]]]
+arg : meta_type (*)(const meta_ctx &,const size_type) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L94{arg}]]]
+invoke : meta_any (*)(const meta_ctx &,meta_handle,meta_any *const) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L95{invoke}]]]
+next : std::shared_ptr<meta_func_node> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L96{next}]]]
+prop : dense_map<id_type,meta_prop_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L97{prop}]]]
}
class "internal::meta_template_node" as C_0001018405862232678881
class C_0001018405862232678881 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L100{meta_template_node}]] {
+arity : size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L103{arity}]]]
+type : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L104{type}]]]
+arg : meta_type_node (*)(const meta_context &,const size_type) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L105{arg}]]]
}
class "internal::meta_type_descriptor" as C_0001527251533333513449
class C_0001527251533333513449 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L108{meta_type_descriptor}]] {
+ctor : dense_map<id_type,meta_ctor_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L109{ctor}]]]
+base : dense_map<id_type,meta_base_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L110{base}]]]
+conv : dense_map<id_type,meta_conv_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L111{conv}]]]
+data : dense_map<id_type,meta_data_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L112{data}]]]
+func : dense_map<id_type,meta_func_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L113{func}]]]
+prop : dense_map<id_type,meta_prop_node,identity> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L114{prop}]]]
}
class "internal::meta_type_node" as C_0000525053821134233418
class C_0000525053821134233418 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L117{meta_type_node}]] {
+info : const type_info * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L120{info}]]]
+id : id_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L121{id}]]]
+traits : meta_traits [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L122{traits}]]]
+size_of : size_type [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L123{size_of}]]]
+resolve : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L124{resolve}]]]
+remove_pointer : meta_type_node (*)(const meta_context &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L125{remove_pointer}]]]
+default_constructor : meta_any (*)(const meta_ctx &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L126{default_constructor}]]]
+conversion_helper : double (*)(void *,const void *) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L127{conversion_helper}]]]
+from_void : meta_any (*)(const meta_ctx &,void *,const void *) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L128{from_void}]]]
+templ : meta_template_node [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L129{templ}]]]
+dtor : meta_dtor_node [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L130{dtor}]]]
+details : std::shared_ptr<meta_type_descriptor> [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/node.hpp#L131{details}]]]
}
class "internal::meta_range_iterator<Type,It>" as C_0001680061593450782610
class C_0001680061593450782610 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/range.hpp#L21{meta_range_iterator}]] {
+meta_range_iterator<Type, It>() : void
+meta_range_iterator<Type, It>(const meta_ctx & area, const It iter) : void
+operator++() : meta_range_iterator<Type,It> &
+operator++(int ) : meta_range_iterator<Type,It>
+operator--() : meta_range_iterator<Type,It> &
+operator--(int ) : meta_range_iterator<Type,It>
+operator+=(const difference_type value) : meta_range_iterator<Type,It> &
+operator+(const difference_type value) const : meta_range_iterator<Type,It>
+operator-=(const difference_type value) : meta_range_iterator<Type,It> &
+operator-(const difference_type value) const : meta_range_iterator<Type,It>
+operator[](const difference_type value) const : reference
+operator->() const : pointer
+operator*() const : reference
-it : It [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/range.hpp#L94{it}]]]
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/range.hpp#L95{ctx}]]]
}
class "internal::dense_map_node<unsigned int,internal::meta_prop_node>" as C_0001416586396588278868
class C_0001416586396588278868 {
}
class "internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_prop_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_prop_node>>>>" as C_0000256005029522348866
class C_0000256005029522348866 {
}
class "internal::meta_range_iterator<meta_prop,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_prop_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_prop_node>>>>>" as C_0002022177154570931656
class C_0002022177154570931656 {
}
class "internal::dense_map_node<unsigned int,internal::meta_base_node>" as C_0000754015702115002224
class C_0000754015702115002224 {
}
class "internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_base_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_base_node>>>>" as C_0001730869697943472033
class C_0001730869697943472033 {
}
class "internal::meta_range_iterator<meta_type,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_base_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_base_node>>>>>" as C_0000687779808449181748
class C_0000687779808449181748 {
}
class "internal::dense_map_node<unsigned int,internal::meta_data_node>" as C_0001884142664040392323
class C_0001884142664040392323 {
}
class "internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_data_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_data_node>>>>" as C_0001620061075178992792
class C_0001620061075178992792 {
}
class "internal::meta_range_iterator<meta_data,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_data_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_data_node>>>>>" as C_0000948210315575492179
class C_0000948210315575492179 {
}
class "internal::dense_map_node<unsigned int,internal::meta_func_node>" as C_0001766152460412506334
class C_0001766152460412506334 {
}
class "internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_func_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_func_node>>>>" as C_0001946512673470579741
class C_0001946512673470579741 {
}
class "internal::meta_range_iterator<meta_func,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_func_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_func_node>>>>>" as C_0001890063025567647345
class C_0001890063025567647345 {
}
class "internal::is_dynamic_sequence_container<,=void>" as C_0001962535575840304398
class C_0001962535575840304398 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L30{is_dynamic_sequence_container}]] {
}
class "internal::is_dynamic_sequence_container<Type,void>" as C_0001155409705821895096
class C_0001155409705821895096 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L33{is_dynamic_sequence_container}]] {
}
class "internal::is_key_only_meta_associative_container<,=void>" as C_0000247160601387657120
class C_0000247160601387657120 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L36{is_key_only_meta_associative_container}]] {
}
class "internal::is_key_only_meta_associative_container<Type,void>" as C_0002100854792893821829
class C_0002100854792893821829 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L39{is_key_only_meta_associative_container}]] {
}
class "internal::basic_meta_sequence_container_traits<Type>" as C_0001210939812952245161
class C_0001210939812952245161 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L42{basic_meta_sequence_container_traits}]] {
{static} +size(const any & container) : size_type
{static} +resize(any & container, size_type sz) : bool
{static} +iter(const meta_ctx & ctx, any & container, const bool as_end) : iterator
{static} +insert_or_erase(const meta_ctx & ctx, any & container, const any & handle, meta_any & value) : iterator
}
class "internal::basic_meta_associative_container_traits<Type>" as C_0001867570166306127929
class C_0001867570166306127929 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L98{basic_meta_associative_container_traits}]] {
{static} +size(const any & container) : size_type
{static} +clear(any & container) : bool
{static} +iter(const meta_ctx & ctx, any & container, const bool as_end) : iterator
{static} +insert_or_erase(any & container, meta_any & key, meta_any & value) : size_type
{static} +find(const meta_ctx & ctx, any & container, meta_any & key) : iterator
{static} +key_only : const auto [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L102{key_only}]]]
}
class "type_list<First,Other...>" as C_0001723716587279733623
class C_0001723716587279733623 {
}
class "type_list<Other...>" as C_0000401973545844492876
class C_0000401973545844492876 {
}
class "type_list<Type,Other...>" as C_0000496685335806935509
class C_0000496685335806935509 {
}
class "type_list" as C_0000816653833137337534
class C_0000816653833137337534 {
}
class "type_list<Type...>" as C_0000150299823092418682
class C_0000150299823092418682 {
}
class "value_list<Value,Other...>" as C_0001276342508473126665
class C_0001276342508473126665 {
}
class "value_list<Other...>" as C_0000669672540584988414
class C_0000669672540584988414 {
}
class "value_list<Value>" as C_0000114548431562228752
class C_0000114548431562228752 {
}
class "compressed_pair<std::vector<std::size_t>,dense_map::hasher>" as C_0001686486826919845415
class C_0001686486826919845415 {
}
class "compressed_pair<std::vector<internal::dense_map_node<Key,Type>>,dense_map::key_equal>" as C_0000507249114974527684
class C_0000507249114974527684 {
}
class "basic_storage<Type>" as C_0000604750336572959053
class C_0000604750336572959053 {
}
class "basic_registry" as C_0002264387755278828673
class C_0002264387755278828673 {
}
class "basic_handle<basic_registry,Args...>" as C_0000373210226805056699
class C_0000373210226805056699 {
}
class "type_list_transform_t<Get,storage_for>" as C_0001934751505825948529
class C_0001934751505825948529 {
}
class "type_list_transform_t<Exclude,storage_for>" as C_0001284155302502968847
class C_0001284155302502968847 {
}
class "basic_view<type_list_transform_t<Get,storage_for>,type_list_transform_t<Exclude,storage_for>>" as C_0001034581343962934250
class C_0001034581343962934250 {
}
class "type_list_transform_t<Owned,storage_for>" as C_0001818618597505735573
class C_0001818618597505735573 {
}
class "basic_group<type_list_transform_t<Owned,storage_for>,type_list_transform_t<Get,storage_for>,type_list_transform_t<Exclude,storage_for>>" as C_0002026173216716894202
class C_0002026173216716894202 {
}
class "basic_any" as C_0002066456960134789731
class C_0002066456960134789731 {
}
class "delegate<Ret(Args...)>" as C_0000011977380754407836
class C_0000011977380754407836 {
}
class "delegate<void(void *)>" as C_0001338234208699310194
class C_0001338234208699310194 {
}
class "sigh<Ret(Args...),Allocator>" as C_0001654528939521938342
class C_0001654528939521938342 {
}
class "basic_registry<typename Type::entity_type,typename Type::base_type::allocator_type>" as C_0000457430710378177051
class C_0000457430710378177051 {
}
class "sigh<void(basic_registry<typename Type::entity_type,typename Type::base_type::allocator_type> &,const typename Type::entity_type),typename Type::allocator_type>" as C_0001194940276112359990
class C_0001194940276112359990 {
}
class "compressed_pair<std::vector<typename alloc_traits::pointer>,basic_storage::allocator_type>" as C_0002071883873613020951
class C_0002071883873613020951 {
}
class "type_list<Owned...>" as C_0000152445147622989908
class C_0000152445147622989908 {
}
class "type_list<Get...>" as C_0001924778053637683860
class C_0001924778053637683860 {
}
class "type_list<Exclude...>" as C_0000880809990211728775
class C_0000880809990211728775 {
}
class "type_list<type-parameter-0-0...>" as C_0000551651351962443750
class C_0000551651351962443750 {
}
class "type_list<type-parameter-0-1...>" as C_0001445398420447762901
class C_0001445398420447762901 {
}
class "type_list<type-parameter-1-0...>" as C_0001581716270673090485
class C_0001581716270673090485 {
}
class "type_list<type-parameter-1-1...>" as C_0000515135022708998009
class C_0000515135022708998009 {
}
class "type_list<Get>" as C_0000546039440085833388
class C_0000546039440085833388 {
}
class "constness_as_t<typename mapped_type::element_type,std::remove_reference_t<decltype(std::declval<It>()->second)>>" as C_0001669075289880192202
class C_0001669075289880192202 {
}
class "basic_any<0u>" as C_0001720362734447604481
class C_0001720362734447604481 {
}
class "dense_map<internal::registry_context::key_type,basic_any<0u>,identity>" as C_0000234410286508720676
class C_0000234410286508720676 {
}
class "type_list<type-parameter-1-2...>" as C_0001713344560538845956
class C_0001713344560538845956 {
}
class "basic_sparse_set<Entity,Allocator>" as C_0000905480437473060417
class C_0000905480437473060417 {
}
class "dense_map<id_type,std::shared_ptr<basic_sparse_set<Entity,Allocator>>,identity,std::equal_to,typename alloc_traits::template rebind_alloc<std::pair<const id_type,std::shared_ptr<base_type>>>>" as C_0001783734328370983242
class C_0001783734328370983242 {
}
class "dense_map<id_type,internal::meta_type_node,identity>" as C_0001131971734310342207
class C_0001131971734310342207 {
}
class "meta_ctx_arg_t" as C_0000464234600847097780
class C_0000464234600847097780 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/context.hpp#L36{meta_ctx_arg_t}]] {
}
class "meta_ctx" as C_0002081920116707811987
class C_0002081920116707811987 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/context.hpp#L42{meta_ctx}]] {
}
class "adl_meta_pointer_like<Type>" as C_0000287995227400462696
class C_0000287995227400462696 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/adl_pointer.hpp#L22{adl_meta_pointer_like}]] {
{static} +dereference(const Type & value) : decltype(auto)
}
class "is_meta_pointer_like<>" as C_0000654842191423348582
class C_0000654842191423348582 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/type_traits.hpp#L36{is_meta_pointer_like}]] {
}
class "is_meta_pointer_like<const type-parameter-0-0>" as C_0001260407740088236296
class C_0001260407740088236296 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/type_traits.hpp#L44{is_meta_pointer_like}]] {
}
class "dense_map<id_type,internal::meta_prop_node,identity>" as C_0001822051852880390808
class C_0001822051852880390808 {
}
class "dense_map<id_type,internal::meta_ctor_node,identity>" as C_0000245335727889508469
class C_0000245335727889508469 {
}
class "dense_map<id_type,internal::meta_base_node,identity>" as C_0001461157616830626916
class C_0001461157616830626916 {
}
class "dense_map<id_type,internal::meta_conv_node,identity>" as C_0001393856659694978975
class C_0001393856659694978975 {
}
class "dense_map<id_type,internal::meta_data_node,identity>" as C_0000287209789921733675
class C_0000287209789921733675 {
}
class "dense_map<id_type,internal::meta_func_node,identity>" as C_0000478263940182268569
class C_0000478263940182268569 {
}
class "iterable_adaptor<internal::meta_range_iterator<Type,It>>" as C_0001880599329443562314
class C_0001880599329443562314 {
}
class "meta_sequence_container" as C_0001417960685261049940
class C_0001417960685261049940 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L30{meta_sequence_container}]] {
+meta_sequence_container(const meta_ctx & area = locator<meta_ctx>::value_or()) : void
+value_type() const : meta_type
+size() const : size_type
+resize(const size_type ) : bool
+clear() : bool
+begin() : iterator
+end() : iterator
+insert(iterator , meta_any ) : iterator
+erase(iterator ) : iterator
+operator[](const size_type ) : meta_any
+operator bool() const : bool
+rebind<Type>(any instance) : void
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L73{ctx}]]]
-value_type_node : internal::meta_type_node (*)(const internal::meta_context &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L74{value_type_node}]]]
-size_fn : size_type (*)(const any &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L75{size_fn}]]]
-resize_fn : bool (*)(any &,size_type) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L76{resize_fn}]]]
-iter_fn : iterator (*)(const meta_ctx &,any &,const bool) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L77{iter_fn}]]]
-insert_or_erase_fn : iterator (*)(const meta_ctx &,any &,const any &,meta_any &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L78{insert_or_erase_fn}]]]
-storage : any [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L79{storage}]]]
}
class "meta_associative_container" as C_0000367312427546747580
class C_0000367312427546747580 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L83{meta_associative_container}]] {
+meta_associative_container(const meta_ctx & area = locator<meta_ctx>::value_or()) : void
+key_only() const : bool
+key_type() const : meta_type
+mapped_type() const : meta_type
+value_type() const : meta_type
+size() const : size_type
+clear() : bool
+begin() : iterator
+end() : iterator
+insert(meta_any ) : bool
+insert(meta_any , meta_any ) : bool
+erase(meta_any ) : size_type
+find(meta_any ) : iterator
+operator bool() const : bool
+rebind<Type>(any instance) : void
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L136{ctx}]]]
-key_only_container : bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L137{key_only_container}]]]
-key_type_node : internal::meta_type_node (*)(const internal::meta_context &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L138{key_type_node}]]]
-mapped_type_node : internal::meta_type_node (*)(const internal::meta_context &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L139{mapped_type_node}]]]
-value_type_node : internal::meta_type_node (*)(const internal::meta_context &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L140{value_type_node}]]]
-size_fn : size_type (*)(const any &) noexcept [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L141{size_fn}]]]
-clear_fn : bool (*)(any &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L142{clear_fn}]]]
-iter_fn : iterator (*)(const meta_ctx &,any &,const bool) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L143{iter_fn}]]]
-insert_or_erase_fn : size_type (*)(any &,meta_any &,meta_any &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L144{insert_or_erase_fn}]]]
-find_fn : iterator (*)(const meta_ctx &,any &,meta_any &) [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L145{find_fn}]]]
-storage : any [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L146{storage}]]]
}
class "meta_any" as C_0001968309773337949765
class C_0001968309773337949765 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L150{meta_any}]] {
-release() : void
-meta_any(const meta_ctx & area, const meta_any & other, any ref) : void
+meta_any() : void
+meta_any(meta_ctx_arg_t , const meta_ctx & area) : void
+meta_any(const meta_ctx & area, const meta_any & other) : void
+meta_any(const meta_ctx & area, meta_any && other) : void
+meta_any(const meta_any & other) = default : void
+meta_any(meta_any && other) : void
+~meta_any() : void
+operator=(const meta_any & other) : meta_any &
+operator=(meta_any && other) : meta_any &
+type() const : meta_type
+data() const : const void *
+data() : void *
+get(const id_type id) const : meta_any
+get(const id_type id) : meta_any
+allow_cast(const meta_type & type) const : meta_any
+allow_cast(const meta_type & type) : bool
+assign(const meta_any & other) : bool
+assign(meta_any && other) : bool
+reset() : void
+as_sequence_container() : meta_sequence_container
+as_sequence_container() const : meta_sequence_container
+as_associative_container() : meta_associative_container
+as_associative_container() const : meta_associative_container
+operator*() const : meta_any
+operator bool() const : bool
+operator==(const meta_any & other) const : bool
+operator!=(const meta_any & other) const : bool
+as_ref() : meta_any
+as_ref() const : meta_any
+owner() const : bool
{static} -basic_vtable<Type>(const operation op, const any & value, void * other) : void
+meta_any<Type,Args...>(std::in_place_type_t<Type> , Args &&... args) : void
+meta_any<Type,Args...>(const meta_ctx & area, std::in_place_type_t<Type> , Args &&... args) : void
+meta_any<Type,=std::enable_if_t<! std::is_same_v<std::decay_t<Type>, meta_any> >>(Type && value) : void
+meta_any<Type,=std::enable_if_t<! std::is_same_v<std::decay_t<Type>, meta_any> >>(const meta_ctx & area, Type && value) : void
+operator=<Type>(Type && value) : std::enable_if_t<! std::is_same_v<std::decay_t<Type>, meta_any>, meta_any &>
+invoke<Args...>(const id_type id, Args &&... args) : meta_any
+invoke<Args...>(const id_type id, Args &&... args) : meta_any
+set<Type>(const id_type id, Type && value) : _Bool
+try_cast<Type>() : const Type *
+try_cast<Type>() : Type *
+cast<Type>() : Type
+cast<Type>() : Type
+allow_cast<Type>() : meta_any
+allow_cast<Type>() : _Bool
+emplace<Type,Args...>(Args &&... args) : void
-storage : any [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L602{storage}]]]
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L603{ctx}]]]
-node : internal::meta_type_node [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L604{node}]]]
-vtable : vtable_type * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L605{vtable}]]]
}
enum "meta_any::operation" as C_0001491525687593005245
enum C_0001491525687593005245 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L151{meta_any##operation}]] {
deref
seq
assoc
}
class "meta_handle" as C_0001434100633440438851
class C_0001434100633440438851 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L638{meta_handle}]] {
+meta_handle() : void
+meta_handle(meta_ctx_arg_t , const meta_ctx & area) : void
+meta_handle(meta_any & value) : void
+meta_handle(const meta_any & value) : void
+meta_handle(const meta_ctx & area, const meta_handle & other) : void
+meta_handle(const meta_ctx & area, meta_handle && other) : void
+meta_handle(const meta_handle & ) : void
+meta_handle(meta_handle && ) = default : void
+operator=(const meta_handle & ) : meta_handle &
+operator=(meta_handle && ) = default : meta_handle &
+operator bool() const : bool
+operator->() : meta_any *
+operator->() const : const meta_any *
+meta_handle<Type,=std::enable_if_t<! std::is_same_v<std::decay_t<Type>, meta_handle> >>(const meta_ctx & ctx, Type & value) : void
+meta_handle<Type,=std::enable_if_t<! std::is_same_v<std::decay_t<Type>, meta_handle> >>(Type & value) : void
-any : meta_any [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L739{any}]]]
}
class "meta_prop" as C_0001799673578591754172
class C_0001799673578591754172 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L743{meta_prop}]] {
+meta_prop() : void
+meta_prop(const meta_ctx & area, const internal::meta_prop_node & curr) : void
+value() const : meta_any
+operator bool() const : bool
-node : const internal::meta_prop_node * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L775{node}]]]
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L776{ctx}]]]
}
class "iterable_adaptor<internal::meta_range_iterator<meta_prop,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_prop_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_prop_node>>>>>>" as C_0001282284798058207477
class C_0001282284798058207477 {
}
class "meta_data" as C_0000112740822490093753
class C_0000112740822490093753 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L780{meta_data}]] {
+meta_data() : void
+meta_data(const meta_ctx & area, const internal::meta_data_node & curr) : void
+arity() const : size_type
+is_const() const : bool
+is_static() const : bool
+type() const : meta_type
+get(meta_handle instance) const : meta_any
+arg(const size_type index) const : meta_type
+prop() const : iterable_adaptor<meta_prop,typename decltype(internal::meta_data_node::prop)::const_iterator>
+prop(const id_type key) const : meta_prop
+operator bool() const : bool
+set<Type>(meta_handle instance, Type && value) : _Bool
-node : const internal::meta_data_node * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L880{node}]]]
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L881{ctx}]]]
}
class "meta_func" as C_0000702095689945499751
class C_0000702095689945499751 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L885{meta_func}]] {
+meta_func() : void
+meta_func(const meta_ctx & area, const internal::meta_func_node & curr) : void
+arity() const : size_type
+is_const() const : bool
+is_static() const : bool
+ret() const : meta_type
+arg(const size_type index) const : meta_type
+invoke(meta_handle instance, meta_any *const args, const size_type sz) const : meta_any
+prop() const : iterable_adaptor<meta_prop,typename decltype(internal::meta_func_node::prop)::const_iterator>
+prop(const id_type key) const : meta_prop
+next() const : meta_func
+operator bool() const : bool
+invoke<Args...>(meta_handle instance, Args &&... args) : meta_any
-node : const internal::meta_func_node * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1001{node}]]]
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1002{ctx}]]]
}
class "iterable_adaptor<internal::meta_range_iterator<meta_type,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_base_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_base_node>>>>>>" as C_0002046882851363651357
class C_0002046882851363651357 {
}
class "iterable_adaptor<internal::meta_range_iterator<meta_data,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_data_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_data_node>>>>>>" as C_0000800305969371262710
class C_0000800305969371262710 {
}
class "iterable_adaptor<internal::meta_range_iterator<meta_func,internal::dense_map_iterator<__gnu_cxx::__normal_iterator<internal::dense_map_node<unsigned int,internal::meta_func_node> const*,std::vector<internal::dense_map_node<unsigned int,internal::meta_func_node>>>>>>" as C_0002155526758645616743
class C_0002155526758645616743 {
}
class "meta_type" as C_0001471774363206158135
class C_0001471774363206158135 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1006{meta_type}]] {
+meta_type() : void
+meta_type(const meta_ctx & area, const internal::meta_type_node & curr) : void
+meta_type(const meta_ctx & area, const internal::meta_base_node & curr) : void
+info() const : const type_info &
+id() const : id_type
+size_of() const : size_type
+is_arithmetic() const : bool
+is_integral() const : bool
+is_signed() const : bool
+is_array() const : bool
+is_enum() const : bool
+is_class() const : bool
+is_pointer() const : bool
+remove_pointer() const : meta_type
+is_pointer_like() const : bool
+is_sequence_container() const : bool
+is_associative_container() const : bool
+is_template_specialization() const : bool
+template_arity() const : size_type
+template_type() const : meta_type
+template_arg(const size_type index) const : meta_type
+base() const : iterable_adaptor<meta_type,typename decltype(internal::meta_type_descriptor::base)::const_iterator>
+data() const : iterable_adaptor<meta_data,typename decltype(internal::meta_type_descriptor::data)::const_iterator>
+data(const id_type id) const : meta_data
+func() const : iterable_adaptor<meta_func,typename decltype(internal::meta_type_descriptor::func)::const_iterator>
+func(const id_type id) const : meta_func
+construct(meta_any *const args, const size_type sz) const : meta_any
+from_void(void * element) const : meta_any
+from_void(const void * element) const : meta_any
+invoke(const id_type id, meta_handle instance, meta_any *const args, const size_type sz) const : meta_any
+get(const id_type id, meta_handle instance) const : meta_any
+prop() const : iterable_adaptor<meta_prop,typename decltype(internal::meta_type_descriptor::prop)::const_iterator>
+prop(const id_type key) const : meta_prop
+operator bool() const : bool
+operator==(const meta_type & other) const : bool
-lookup<Func>(meta_any *const args, const typename internal::meta_type_node::size_type sz, bool constness, Func next) : auto
+construct<Args...>(Args &&... args) : meta_any
+invoke<Args...>(const id_type id, meta_handle instance, Args &&... args) : meta_any
+set<Type>(const id_type id, meta_handle instance, Type && value) : _Bool
-node : internal::meta_type_node [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1479{node}]]]
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1480{ctx}]]]
}
class "input_iterator_pointer<meta_sequence_container::meta_iterator::value_type>" as C_0001951273119444799997
class C_0001951273119444799997 {
}
class "meta_sequence_container::meta_iterator" as C_0001348020219268859095
class C_0001348020219268859095 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1585{meta_sequence_container##meta_iterator}]] {
+meta_iterator() : void
+operator++() : meta_iterator &
+operator++(int value) : meta_iterator
+operator--() : meta_iterator &
+operator--(int value) : meta_iterator
+operator*() const : reference
+operator->() const : pointer
+operator bool() const : bool
+operator==(const meta_iterator & other) const : bool
+operator!=(const meta_iterator & other) const : bool
{static} -basic_vtable<It>(const operation op, const any & value, const std::ptrdiff_t offset, meta_any * other) : void
+meta_iterator<It>(const meta_ctx & area, It iter) : void
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1672{ctx}]]]
-vtable : vtable_type * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1673{vtable}]]]
-handle : any [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1674{handle}]]]
}
enum "meta_sequence_container::meta_iterator::operation" as C_0002083859142244320219
enum C_0002083859142244320219 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1588{meta_sequence_container##meta_iterator##operation}]] {
incr
deref
}
class "input_iterator_pointer<std::pair<meta_any,meta_any>>" as C_0002236569433328520036
class C_0002236569433328520036 {
}
class "meta_associative_container::meta_iterator" as C_0000617200052185663862
class C_0000617200052185663862 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1677{meta_associative_container##meta_iterator}]] {
+meta_iterator() : void
+operator++() : meta_iterator &
+operator++(int ) : meta_iterator
+operator*() const : reference
+operator->() const : pointer
+operator bool() const : bool
+operator==(const meta_iterator & other) const : bool
+operator!=(const meta_iterator & other) const : bool
{static} -basic_vtable<_Bool KeyOnly,It>(const operation op, const any & value, std::pair<meta_any,meta_any> * other) : void
+meta_iterator<_Bool KeyOnly,It>(const meta_ctx & area, std::integral_constant<bool,KeyOnly> , It iter) : void
-ctx : const meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1754{ctx}]]]
-vtable : vtable_type * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1755{vtable}]]]
-handle : any [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1756{handle}]]]
}
enum "meta_associative_container::meta_iterator::operation" as C_0001781024582849168243
enum C_0001781024582849168243 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/meta.hpp#L1678{meta_associative_container##meta_iterator##operation}]] {
incr
deref
}
class "as_ref_t" as C_0001103417484490358886
class C_0001103417484490358886 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/policy.hpp#L9{as_ref_t}]] {
}
class "as_cref_t" as C_0000146673137024079387
class C_0000146673137024079387 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/policy.hpp#L23{as_cref_t}]] {
}
class "as_is_t" as C_0000923093982674114011
class C_0000923093982674114011 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/policy.hpp#L37{as_is_t}]] {
}
class "as_void_t" as C_0002076914652010932378
class C_0002076914652010932378 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/policy.hpp#L51{as_void_t}]] {
}
class "is_meta_policy<Type>" as C_0000975170008706517679
class C_0000975170008706517679 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/policy.hpp#L70{is_meta_policy}]] {
}
class "meta_function_descriptor_traits<Ret,Args,_Bool Static,_Bool Const>" as C_0000247512576201833618
class C_0000247512576201833618 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L24{meta_function_descriptor_traits}]] {
{static} +is_static : const bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L31{is_static}]]]
{static} +is_const : const bool [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L33{is_const}]]]
}
class "type_list<Args...>" as C_0002069939067833684929
class C_0002069939067833684929 {
}
class "type_list<Class const&,Args...>" as C_0001202959394162006474
class C_0001202959394162006474 {
}
class "meta_function_descriptor<Type,Ret (Class::*)(Args...)>" as C_0001932275979656827793
class C_0001932275979656827793 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L48{meta_function_descriptor}]] {
}
class "type_list<Class &,Args...>" as C_0002180609247602176846
class C_0002180609247602176846 {
}
class "type_list<Class &>" as C_0001538292789765646379
class C_0001538292789765646379 {
}
class "meta_function_descriptor<Type,Ret Class::*>" as C_0001910453016087782735
class C_0001910453016087782735 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L77{meta_function_descriptor}]] {
}
class "type_list<MaybeType,Args...>" as C_0002050445163208954030
class C_0002050445163208954030 {
}
class "meta_function_descriptor<Type,type-parameter-0-1 (*)(type-parameter-0-2,type-parameter-0-3...)>" as C_0000073653440954301769
class C_0000073653440954301769 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L92{meta_function_descriptor}]] {
}
class "meta_function_descriptor<Type,type-parameter-0-1 (*)()>" as C_0000982571462431432490
class C_0000982571462431432490 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L105{meta_function_descriptor}]] {
}
class "meta_function_helper<Type,Candidate>" as C_0000412818825903250046
class C_0000412818825903250046 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L122{meta_function_helper}]] {
{static} -get_rid_of_noexcept<Ret,Args...,Class>(Ret (Class::*)(Args...) const ) : meta_function_descriptor<Type, Ret (Class::*)(Args...) const>
{static} -get_rid_of_noexcept<Ret,Args...,Class>(Ret (Class::*)(Args...) ) : meta_function_descriptor<Type, Ret (Class::*)(Args...)>
{static} -get_rid_of_noexcept<Ret,Class>(Ret Class::* ) : meta_function_descriptor<Type, Ret Class::*>
{static} -get_rid_of_noexcept<Ret,Args...>(Ret (*)(Args...) ) : meta_function_descriptor<Type, Ret (*)(Args...)>
{static} -get_rid_of_noexcept<Class>(Class ) : meta_function_descriptor<Class, decltype(& Class::operator())>
}
class "meta_factory<Type>" as C_0000907837021403397683
class C_0000907837021403397683 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/factory.hpp#L91{meta_factory}]] {
+meta_factory<Type>() : void
+meta_factory<Type>(meta_ctx & area) : void
+type(const id_type id) : auto
-data<Setter,auto Getter,Policy,std::size_t... Index>(const id_type id, std::index_sequence<Index...> ) : void
+base<Base>() : auto
+conv<auto Candidate>() : auto
+conv<To>() : auto
+ctor<auto Candidate,Policy=as_is_t>() : auto
+ctor<Args...>() : auto
+dtor<auto Func>() : auto
+data<auto Data,Policy=as_is_t>(const id_type id) : auto
+data<auto Setter,auto Getter,Policy=as_is_t>(const id_type id) : auto
+data<Setter,auto Getter,Policy=as_is_t>(const id_type id) : auto
+func<auto Candidate,Policy=as_is_t>(const id_type id) : auto
+prop<Value...>(id_type id, Value &&... value) : meta_factory<Type>
-ctx : meta_ctx * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/factory.hpp#L516{ctx}]]]
-bucket : dense_map<id_type,internal::meta_prop_node,identity> * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/factory.hpp#L517{bucket}]]]
-info : const type_info * [[[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/factory.hpp#L518{info}]]]
}
class "meta_sequence_container_traits<>" as C_0000230208678398040471
class C_0000230208678398040471 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/type_traits.hpp#L21{meta_sequence_container_traits}]] {
}
class "meta_template_traits<>" as C_0000385755136283730185
class C_0000385755136283730185 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/type_traits.hpp#L14{meta_template_traits}]] {
}
class "meta_function_descriptor<,>" as C_0000601247120126870169
class C_0000601247120126870169 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/utility.hpp#L38{meta_function_descriptor}]] {
}
class "meta_associative_container_traits<>" as C_0001549829803570807279
class C_0001549829803570807279 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/type_traits.hpp#L28{meta_associative_container_traits}]] {
}
class "meta_class_template_tag<<>>" as C_0001741658610240792101
class C_0001741658610240792101 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/template.hpp#L10{meta_class_template_tag}]] {
}
class "meta_template_traits<Clazz<Args...>>" as C_0001678354601453987363
class C_0001678354601453987363 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/template.hpp#L18{meta_template_traits}]] {
}
class "compressed_pair<std::vector<std::size_t>,dense_set::hasher>" as C_0002082989189680990643
class C_0002082989189680990643 {
}
class "compressed_pair<std::vector<std::pair<std::size_t,Type>>,dense_set::key_equal>" as C_0001611725919328905677
class C_0001611725919328905677 {
}
class "meta_sequence_container_traits<std::vector<Args...>>" as C_0001812754514459660486
class C_0001812754514459660486 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L167{meta_sequence_container_traits}]] {
}
class "meta_sequence_container_traits<std::array<Type,N>>" as C_0002305598377862199910
class C_0002305598377862199910 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L176{meta_sequence_container_traits}]] {
}
class "meta_sequence_container_traits<std::list<Args...>>" as C_0001502033686155282154
class C_0001502033686155282154 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L184{meta_sequence_container_traits}]] {
}
class "meta_sequence_container_traits<std::deque<Args...>>" as C_0000878375924534047847
class C_0000878375924534047847 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L192{meta_sequence_container_traits}]] {
}
class "meta_associative_container_traits<std::map<Args...>>" as C_0000324436644607549379
class C_0000324436644607549379 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L200{meta_associative_container_traits}]] {
}
class "meta_associative_container_traits<std::unordered_map<Args...>>" as C_0000706090232095899208
class C_0000706090232095899208 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L209{meta_associative_container_traits}]] {
}
class "meta_associative_container_traits<std::set<Args...>>" as C_0000078098050595519435
class C_0000078098050595519435 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L217{meta_associative_container_traits}]] {
}
class "meta_associative_container_traits<std::unordered_set<Args...>>" as C_0001354049406655093322
class C_0001354049406655093322 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L226{meta_associative_container_traits}]] {
}
class "dense_map<Args...>" as C_0001348473980876857683
class C_0001348473980876857683 {
}
class "meta_associative_container_traits<dense_map<Args...>>" as C_0001372504806056304404
class C_0001372504806056304404 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L234{meta_associative_container_traits}]] {
}
class "dense_set<Args...>" as C_0001734574189125363494
class C_0001734574189125363494 {
}
class "meta_associative_container_traits<dense_set<Args...>>" as C_0001514772364311316606
class C_0001514772364311316606 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/container.hpp#L242{meta_associative_container_traits}]] {
}
class "is_meta_pointer_like<Type *>" as C_0002027315653752367014
class C_0002027315653752367014 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/pointer.hpp#L15{is_meta_pointer_like}]] {
}
class "is_meta_pointer_like<Type[_Size]>" as C_0000841356564924522328
class C_0000841356564924522328 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/pointer.hpp#L24{is_meta_pointer_like}]] {
}
class "is_meta_pointer_like<std::shared_ptr<Type>>" as C_0002260232230584678565
class C_0002260232230584678565 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/pointer.hpp#L33{is_meta_pointer_like}]] {
}
class "is_meta_pointer_like<std::unique_ptr<Type>>" as C_0000742074985782975624
class C_0000742074985782975624 [[https://github.com/skypjack/entt/blob/fef921132cae7588213d0f9bcd2fb9c8ffd8b7fc/src/entt/meta/pointer.hpp#L43{is_meta_pointer_like}]] {
}
C_0001949040226502523653 ..|> C_0001949040226502523653
C_0000018044932043323221 ..> C_0002209338957740976162
C_0000246104228557977884 ..> C_0002209338957740976162
C_0000440103747575733986 ..> C_0000816653833137337534
C_0000440103747575733986 ..> C_0000551651351962443750
C_0001062876330760904480 ..> C_0000551651351962443750
C_0001062876330760904480 ..> C_0001445398420447762901
C_0001780449445169454883 ..> C_0000390675639111256783
C_0000538414692726589468 ..> C_0002081920116707811987
C_0000538414692726589468 o-- C_0001131971734310342207 : +value
C_0001300544611355739027 o-- C_0000280988144863594744 : +traits
C_0001300544611355739027 o-- C_0001822051852880390808 : +prop
C_0000946352673696314221 o-- C_0000280988144863594744 : +traits
C_0000946352673696314221 --> C_0000946352673696314221 : +next
C_0000946352673696314221 o-- C_0001822051852880390808 : +prop
C_0001527251533333513449 o-- C_0000245335727889508469 : +ctor
C_0001527251533333513449 o-- C_0001461157616830626916 : +base
C_0001527251533333513449 o-- C_0001393856659694978975 : +conv
C_0001527251533333513449 o-- C_0000287209789921733675 : +data
C_0001527251533333513449 o-- C_0000478263940182268569 : +func
C_0001527251533333513449 o-- C_0001822051852880390808 : +prop
C_0000525053821134233418 o-- C_0000280988144863594744 : +traits
C_0000525053821134233418 o-- C_0001018405862232678881 : +templ
C_0000525053821134233418 o-- C_0000027853839799635237 : +dtor
C_0000525053821134233418 --> C_0001527251533333513449 : +details
C_0001680061593450782610 ..> C_0002081920116707811987
C_0001680061593450782610 --> C_0002081920116707811987 : -ctx
C_0001416586396588278868 ..> C_0002287663038699269962
C_0001416586396588278868 ..|> C_0001949040226502523653
C_0000256005029522348866 ..> C_0002287663038699269962
C_0000256005029522348866 ..|> C_0001949040226502523653
C_0002022177154570931656 ..> C_0001799673578591754172
C_0002022177154570931656 ..> C_0002287663038699269962
C_0002022177154570931656 ..|> C_0001949040226502523653
C_0002022177154570931656 ..|> C_0001680061593450782610
C_0000754015702115002224 ..> C_0001914246467647862418
C_0000754015702115002224 ..|> C_0001949040226502523653
C_0001730869697943472033 ..> C_0001914246467647862418
C_0001730869697943472033 ..|> C_0001949040226502523653
C_0000687779808449181748 ..> C_0001471774363206158135
C_0000687779808449181748 ..> C_0001914246467647862418
C_0000687779808449181748 ..|> C_0001949040226502523653
C_0000687779808449181748 ..|> C_0001680061593450782610
C_0001884142664040392323 ..> C_0001300544611355739027
C_0001884142664040392323 ..|> C_0001949040226502523653
C_0001620061075178992792 ..> C_0001300544611355739027
C_0001620061075178992792 ..|> C_0001949040226502523653
C_0000948210315575492179 ..> C_0000112740822490093753
C_0000948210315575492179 ..> C_0001300544611355739027
C_0000948210315575492179 ..|> C_0001949040226502523653
C_0000948210315575492179 ..|> C_0001680061593450782610
C_0001766152460412506334 ..> C_0000946352673696314221
C_0001766152460412506334 ..|> C_0001949040226502523653
C_0001946512673470579741 ..> C_0000946352673696314221
C_0001946512673470579741 ..|> C_0001949040226502523653
C_0001890063025567647345 ..> C_0000702095689945499751
C_0001890063025567647345 ..> C_0000946352673696314221
C_0001890063025567647345 ..|> C_0001949040226502523653
C_0001890063025567647345 ..|> C_0001680061593450782610
C_0001155409705821895096 ..|> C_0001962535575840304398
C_0002100854792893821829 ..|> C_0000247160601387657120
C_0001210939812952245161 ..> C_0002066456960134789731
C_0001210939812952245161 ..> C_0002081920116707811987
C_0001210939812952245161 ..> C_0001968309773337949765
C_0001867570166306127929 ..> C_0002066456960134789731
C_0001867570166306127929 ..> C_0002081920116707811987
C_0001867570166306127929 ..> C_0001968309773337949765
C_0001723716587279733623 ..|> C_0000150299823092418682
C_0000401973545844492876 ..|> C_0001723716587279733623
C_0000496685335806935509 ..|> C_0001723716587279733623
C_0000150299823092418682 ..|> C_0001723716587279733623
C_0000507249114974527684 ..> C_0001949040226502523653
C_0000373210226805056699 ..> C_0002264387755278828673
C_0001284155302502968847 ..|> C_0001934751505825948529
C_0001034581343962934250 ..> C_0001934751505825948529
C_0001034581343962934250 ..> C_0001284155302502968847
C_0001818618597505735573 ..|> C_0001934751505825948529
C_0002026173216716894202 ..> C_0001818618597505735573
C_0002026173216716894202 ..> C_0001934751505825948529
C_0002026173216716894202 ..> C_0001284155302502968847
C_0001338234208699310194 ..|> C_0000011977380754407836
C_0001194940276112359990 ..> C_0000457430710378177051
C_0001194940276112359990 ..|> C_0001654528939521938342
C_0000152445147622989908 ..|> C_0001723716587279733623
C_0001924778053637683860 ..|> C_0001723716587279733623
C_0000880809990211728775 ..|> C_0001723716587279733623
C_0000551651351962443750 ..|> C_0001723716587279733623
C_0001445398420447762901 ..|> C_0001723716587279733623
C_0001581716270673090485 ..|> C_0001723716587279733623
C_0000515135022708998009 ..|> C_0001723716587279733623
C_0000546039440085833388 ..|> C_0001723716587279733623
C_0000234410286508720676 ..> C_0001720362734447604481
C_0001713344560538845956 ..|> C_0001723716587279733623
C_0001783734328370983242 ..> C_0000905480437473060417
C_0001131971734310342207 ..> C_0000525053821134233418
C_0002081920116707811987 <.. C_0000538414692726589468 : +<<friend>>
C_0000538414692726589468 <|-- C_0002081920116707811987
C_0001260407740088236296 ..|> C_0000654842191423348582
C_0001822051852880390808 ..> C_0002287663038699269962
C_0000245335727889508469 ..> C_0001899008894225588729
C_0001461157616830626916 ..> C_0001914246467647862418
C_0001393856659694978975 ..> C_0001744731429327847043
C_0000287209789921733675 ..> C_0001300544611355739027
C_0000478263940182268569 ..> C_0000946352673696314221
C_0001880599329443562314 ..> C_0001680061593450782610
C_0001417960685261049940 ..> C_0002081920116707811987
C_0001417960685261049940 ..> C_0001471774363206158135
C_0001417960685261049940 ..> C_0001968309773337949765
C_0001417960685261049940 ..> C_0002066456960134789731
C_0001417960685261049940 --> C_0002081920116707811987 : -ctx
C_0001417960685261049940 o-- C_0002066456960134789731 : -storage
C_0000367312427546747580 ..> C_0002081920116707811987
C_0000367312427546747580 ..> C_0001471774363206158135
C_0000367312427546747580 ..> C_0001968309773337949765
C_0000367312427546747580 ..> C_0002066456960134789731
C_0000367312427546747580 --> C_0002081920116707811987 : -ctx
C_0000367312427546747580 o-- C_0002066456960134789731 : -storage
C_0001968309773337949765 ..> C_0002081920116707811987
C_0001968309773337949765 ..> C_0002066456960134789731
C_0001968309773337949765 ..> C_0000464234600847097780
C_0001968309773337949765 ..> C_0001471774363206158135
C_0001968309773337949765 ..> C_0001417960685261049940
C_0001968309773337949765 ..> C_0000367312427546747580
C_0001968309773337949765 o-- C_0002066456960134789731 : -storage
C_0001968309773337949765 --> C_0002081920116707811987 : -ctx
C_0001968309773337949765 o-- C_0000525053821134233418 : -node
C_0001491525687593005245 --+ C_0001968309773337949765
C_0001434100633440438851 ..> C_0000464234600847097780
C_0001434100633440438851 ..> C_0002081920116707811987
C_0001434100633440438851 ..> C_0001968309773337949765
C_0001434100633440438851 o-- C_0001968309773337949765 : -any
C_0001799673578591754172 ..> C_0002081920116707811987
C_0001799673578591754172 ..> C_0002287663038699269962
C_0001799673578591754172 ..> C_0001968309773337949765
C_0001799673578591754172 --> C_0002287663038699269962 : -node
C_0001799673578591754172 --> C_0002081920116707811987 : -ctx
C_0001282284798058207477 ..> C_0000256005029522348866
C_0001282284798058207477 ..> C_0002022177154570931656
C_0001282284798058207477 ..|> C_0001880599329443562314
C_0000112740822490093753 ..> C_0002081920116707811987
C_0000112740822490093753 ..> C_0001300544611355739027
C_0000112740822490093753 ..> C_0001471774363206158135
C_0000112740822490093753 ..> C_0001434100633440438851
C_0000112740822490093753 ..> C_0001968309773337949765
C_0000112740822490093753 ..> C_0001799673578591754172
C_0000112740822490093753 ..> C_0001282284798058207477
C_0000112740822490093753 --> C_0001300544611355739027 : -node
C_0000112740822490093753 --> C_0002081920116707811987 : -ctx
C_0000702095689945499751 ..> C_0002081920116707811987
C_0000702095689945499751 ..> C_0000946352673696314221
C_0000702095689945499751 ..> C_0001471774363206158135
C_0000702095689945499751 ..> C_0001434100633440438851
C_0000702095689945499751 ..> C_0001968309773337949765
C_0000702095689945499751 ..> C_0001799673578591754172
C_0000702095689945499751 ..> C_0001282284798058207477
C_0000702095689945499751 --> C_0000946352673696314221 : -node
C_0000702095689945499751 --> C_0002081920116707811987 : -ctx
C_0002046882851363651357 ..> C_0001730869697943472033
C_0002046882851363651357 ..> C_0000687779808449181748
C_0002046882851363651357 ..|> C_0001880599329443562314
C_0000800305969371262710 ..> C_0001620061075178992792
C_0000800305969371262710 ..> C_0000948210315575492179
C_0000800305969371262710 ..|> C_0001880599329443562314
C_0002155526758645616743 ..> C_0001946512673470579741
C_0002155526758645616743 ..> C_0001890063025567647345
C_0002155526758645616743 ..|> C_0001880599329443562314
C_0001471774363206158135 ..> C_0002081920116707811987
C_0001471774363206158135 ..> C_0000525053821134233418
C_0001471774363206158135 ..> C_0001914246467647862418
C_0001471774363206158135 ..> C_0002046882851363651357
C_0001471774363206158135 ..> C_0000112740822490093753
C_0001471774363206158135 ..> C_0000800305969371262710
C_0001471774363206158135 ..> C_0000702095689945499751
C_0001471774363206158135 ..> C_0002155526758645616743
C_0001471774363206158135 ..> C_0001968309773337949765
C_0001471774363206158135 ..> C_0001434100633440438851
C_0001471774363206158135 ..> C_0001799673578591754172
C_0001471774363206158135 ..> C_0001282284798058207477
C_0001471774363206158135 o-- C_0000525053821134233418 : -node
C_0001471774363206158135 --> C_0002081920116707811987 : -ctx
C_0001348020219268859095 --+ C_0001417960685261049940
C_0001348020219268859095 ..> C_0001968309773337949765
C_0001348020219268859095 ..> C_0001951273119444799997
C_0001348020219268859095 ..> C_0002066456960134789731
C_0001348020219268859095 ..> C_0002081920116707811987
C_0001348020219268859095 --> C_0002081920116707811987 : -ctx
C_0001348020219268859095 o-- C_0002066456960134789731 : -handle
C_0001348020219268859095 <.. C_0001417960685261049940 : +<<friend>>
C_0002083859142244320219 --+ C_0001348020219268859095
C_0000617200052185663862 --+ C_0000367312427546747580
C_0000617200052185663862 ..> C_0001968309773337949765
C_0000617200052185663862 ..> C_0002236569433328520036
C_0000617200052185663862 ..> C_0002066456960134789731
C_0000617200052185663862 ..> C_0002081920116707811987
C_0000617200052185663862 --> C_0002081920116707811987 : -ctx
C_0000617200052185663862 o-- C_0002066456960134789731 : -handle
C_0001781024582849168243 --+ C_0000617200052185663862
C_0002069939067833684929 ..|> C_0001723716587279733623
C_0001202959394162006474 ..|> C_0001723716587279733623
C_0001932275979656827793 ..|> C_0000601247120126870169
C_0002180609247602176846 ..|> C_0001723716587279733623
C_0001538292789765646379 ..|> C_0001723716587279733623
C_0001910453016087782735 ..|> C_0000601247120126870169
C_0002050445163208954030 ..|> C_0001723716587279733623
C_0000073653440954301769 ..|> C_0000601247120126870169
C_0000982571462431432490 ..|> C_0000601247120126870169
C_0000907837021403397683 ..> C_0002081920116707811987
C_0000907837021403397683 --> C_0002081920116707811987 : -ctx
C_0000907837021403397683 --> C_0002287663038699269962 : -bucket
C_0000907837021403397683 --> C_0001822051852880390808 : -bucket
C_0001678354601453987363 ..|> C_0000385755136283730185
C_0002082989189680990643 ..|> C_0001686486826919845415
C_0001812754514459660486 ..|> C_0000230208678398040471
C_0002305598377862199910 ..|> C_0000230208678398040471
C_0001502033686155282154 ..|> C_0000230208678398040471
C_0000878375924534047847 ..|> C_0000230208678398040471
C_0000324436644607549379 ..|> C_0001549829803570807279
C_0000706090232095899208 ..|> C_0001549829803570807279
C_0000078098050595519435 ..|> C_0001549829803570807279
C_0001354049406655093322 ..|> C_0001549829803570807279
C_0001372504806056304404 ..> C_0001348473980876857683
C_0001372504806056304404 ..|> C_0001549829803570807279
C_0001514772364311316606 ..> C_0001734574189125363494
C_0001514772364311316606 ..|> C_0001549829803570807279
C_0002027315653752367014 ..|> C_0000654842191423348582
C_0000841356564924522328 ..|> C_0002027315653752367014
C_0002260232230584678565 ..|> C_0000654842191423348582
C_0000742074985782975624 ..|> C_0000654842191423348582

'Generated with clang-uml, version 0.3.5-2-g7e9944c
'LLVM version Ubuntu clang version 16.0.1 (++20230328073357+42d1b276f779-1~exp1~20230328073502.65)
@enduml
