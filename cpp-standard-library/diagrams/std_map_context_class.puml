@startuml
title std::map context class diagram
left to right direction
class "binary_function<_Arg1,_Arg2,_Result>" as C_0009583224762676263256
class C_0009583224762676263256 {
__
}
class "binary_function<_Tp,_Tp,bool>" as C_0001906998976845593827
class C_0001906998976845593827 {
__
}
class "equal_to<_Tp=void>" as C_0005819947583752498517
class C_0005819947583752498517 {
__
}
class "not_equal_to<_Tp=void>" as C_0004088953224300771248
class C_0004088953224300771248 {
__
}
class "greater<_Tp=void>" as C_0001698641695689253648
class C_0001698641695689253648 {
__
}
class "less<_Tp=void>" as C_0017625547811729843273
class C_0017625547811729843273 {
__
}
class "greater_equal<_Tp=void>" as C_0016809506695079101711
class C_0016809506695079101711 {
__
}
class "less_equal<_Tp=void>" as C_0016061750655888038828
class C_0016061750655888038828 {
__
}
class "binary_function<_Tp *,_Tp *,bool>" as C_0014703748170233212531
class C_0014703748170233212531 {
__
}
class "logical_and<_Tp=void>" as C_0004413300066190592573
class C_0004413300066190592573 {
__
}
class "logical_or<_Tp=void>" as C_0000261527948690069145
class C_0000261527948690069145 {
__
}
class "binary_function<typename _Predicate::first_argument_type,typename _Predicate::second_argument_type,bool>" as C_0007311719642430294892
class C_0007311719642430294892 {
__
}
class "_Rb_tree<_Key,_Val,_KeyOfValue,_Compare2,_Alloc>" as C_0013916464534772332265
class C_0013916464534772332265 {
__
}
class "_Rb_tree::_Rb_tree_impl<_Compare>" as C_0000835102953787614701
class C_0000835102953787614701 {
__
}
class "_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc=allocator<_Val>>" as C_0002792771039014577438
class C_0002792771039014577438 {
__
}
class "_Rb_tree::_Reuse_or_alloc_node" as C_0015617614989422225774
class C_0015617614989422225774 {
__
}
class "_Rb_tree::_Alloc_node" as C_0011400188904545266026
class C_0011400188904545266026 {
__
}
class "_Rb_tree::_Rb_tree_impl<_Key_compare,_Bool=__is_pod(_Key_compare)>" as C_0002795575896817403525
class C_0002795575896817403525 {
__
}
class "_Rb_tree::_Auto_node" as C_0004125478248778121511
class C_0004125478248778121511 {
__
}
class "_Rb_tree<_Key,_Val,_Sel,_Cmp1,_Alloc>" as C_0010543423047955878282
class C_0010543423047955878282 {
__
}
class "_Rb_tree<_Key,_Val,_Sel,_Cmp2,_Alloc>" as C_0006682815439280437833
class C_0006682815439280437833 {
__
}
class "map<_Key,_Tp,_Cmp2,_Alloc>" as C_0015235694265660149602
class C_0015235694265660149602 {
__
}
class "_Rb_tree<map::key_type,pair<_Key const,_Tp>,_Select1st<pair<_Key const,_Tp>>,map::key_compare,map::_Pair_alloc_type>" as C_0013894242623239472501
class C_0013894242623239472501 {
__
}
class "map<_Key,_Tp,_Compare=less<_Key>,_Alloc=allocator<pair<const _Key, _Tp>>>" as C_0015937781856508569918
class C_0015937781856508569918 {
__
}
class "binary_function<pair<_Key const,_Tp>,pair<_Key const,_Tp>,bool>" as C_0000866953055675511964
class C_0000866953055675511964 {
__
}
class "map::value_compare" as C_0014510487773565290867
class C_0014510487773565290867 {
__
}
class "map<_Key,_Val,_Cmp1,_Alloc>" as C_0016373827787893331873
class C_0016373827787893331873 {
__
}
class "map<_Key,_Val,_Cmp2,_Alloc>" as C_0013101789567079497534
class C_0013101789567079497534 {
__
}
class "_Rb_tree<multimap::key_type,pair<_Key const,_Tp>,_Select1st<pair<_Key const,_Tp>>,multimap::key_compare,multimap::_Pair_alloc_type>" as C_0001090897514726089586
class C_0001090897514726089586 {
__
}
class "multimap<_Key,_Tp,_Compare=less<_Key>,_Alloc=allocator<pair<const _Key, _Tp>>>" as C_0008109501906190460155
class C_0008109501906190460155 {
__
}
class "multimap::value_compare" as C_0002334092490773708849
class C_0002334092490773708849 {
__
}
class "map<_Key,_Tp,_Cmp,pmr::polymorphic_allocator<pair<_Key const,_Tp>>>" as C_0002099648825473310360
class C_0002099648825473310360 {
__
}
C_0001906998976845593827 ..|> C_0009583224762676263256
C_0001906998976845593827 <|-- C_0005819947583752498517
C_0001906998976845593827 <|-- C_0004088953224300771248
C_0001906998976845593827 <|-- C_0001698641695689253648
C_0001906998976845593827 <|-- C_0017625547811729843273
C_0001906998976845593827 <|-- C_0016809506695079101711
C_0001906998976845593827 <|-- C_0016061750655888038828
C_0014703748170233212531 ..|> C_0001906998976845593827
C_0001906998976845593827 <|-- C_0004413300066190592573
C_0001906998976845593827 <|-- C_0000261527948690069145
C_0007311719642430294892 ..|> C_0001906998976845593827
C_0013916464534772332265 ..|> C_0002792771039014577438
C_0002792771039014577438 o-- C_0000835102953787614701 : #_M_impl
C_0015617614989422225774 --+ C_0002792771039014577438
C_0011400188904545266026 --+ C_0002792771039014577438
C_0002795575896817403525 --+ C_0002792771039014577438
C_0004125478248778121511 --+ C_0002792771039014577438
C_0010543423047955878282 ..|> C_0013916464534772332265
C_0006682815439280437833 ..|> C_0013916464534772332265
C_0015235694265660149602 ..|> C_0015937781856508569918
C_0013894242623239472501 ..|> C_0013916464534772332265
C_0015937781856508569918 o-- C_0013894242623239472501 : -_M_t
C_0000866953055675511964 ..|> C_0001906998976845593827
C_0014510487773565290867 --+ C_0015937781856508569918
C_0000866953055675511964 <|-- C_0014510487773565290867
C_0016373827787893331873 ..|> C_0015235694265660149602
C_0013101789567079497534 ..|> C_0015235694265660149602
C_0001090897514726089586 ..|> C_0013916464534772332265
C_0008109501906190460155 o-- C_0001090897514726089586 : -_M_t
C_0002334092490773708849 --+ C_0008109501906190460155
C_0000866953055675511964 <|-- C_0002334092490773708849
C_0002099648825473310360 ..|> C_0015235694265660149602
   note top of C_0009583224762676263256
    Helper for defining adaptable binary function objects.
end note
       note top of C_0005819947583752498517
    One of the
end note
     note top of C_0004088953224300771248
    One of the
end note
     note top of C_0001698641695689253648
    One of the
end note
     note top of C_0017625547811729843273
    One of the
end note
     note top of C_0016809506695079101711
    One of the
end note
     note top of C_0016061750655888038828
    One of the
end note
       note top of C_0004413300066190592573
    One of the
end note
     note top of C_0000261527948690069145
    One of the
end note
             note top of C_0015617614989422225774
    Functor recycling a pool of nodes and using allocation once the pool
 is empty.
end note
     note top of C_0011400188904545266026
    Functor similar to the previous one but without any pool of nodes to
 recycle.
end note
       note top of C_0004125478248778121511
    An RAII _Node handle
end note
             note top of C_0015937781856508569918
    Meets the requirements of a 
container
, a
  
reversible container
, and an
  
associative contai...
end note
               note top of C_0008109501906190460155
    Meets the requirements of a 
container
, a
  
reversible container
, and an
  
associative contai...
end note
      


'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
