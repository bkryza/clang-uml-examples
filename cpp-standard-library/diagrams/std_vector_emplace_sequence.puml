@startuml
title std::vector emplace() sequence diagram
participant "clanguml_examples::vector::emplace()" as C_0011263144175145469968 [[{emplace}]]
activate C_0011263144175145469968
participant "std::vector<int,std::allocator<int>>" as C_0015941193700393482414
C_0011263144175145469968 -> C_0015941193700393482414 [[{}]] : vector()
activate C_0015941193700393482414
deactivate C_0015941193700393482414
C_0011263144175145469968 -> C_0015941193700393482414 [[{}]] : end()
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0011263144175145469968
deactivate C_0015941193700393482414
C_0011263144175145469968 -> C_0015941193700393482414 [[{}]] : emplace(const_iterator,int &&)
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : _M_emplace_aux(const_iterator,value_type &&)
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : _M_insert_rval(const_iterator,value_type &&)
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : cbegin() const
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
alt
else
C_0015941193700393482414 -> C_0015941193700393482414 : **[**cend() const**]**
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
participant "std::allocator_traits<std::allocator<int>>" as C_0010063822820481407780
C_0015941193700393482414 -> C_0010063822820481407780 : __construct(allocator_type &,int *,int &&)__
activate C_0010063822820481407780
participant "std::__new_allocator<int>" as C_0013536231744392208463
C_0010063822820481407780 -> C_0013536231744392208463 : construct(int *,int &&)
activate C_0013536231744392208463
deactivate C_0013536231744392208463
deactivate C_0010063822820481407780
C_0015941193700393482414 -> C_0015941193700393482414 : begin()
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : _M_insert_aux(iterator,int &&)
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0010063822820481407780 : __construct(allocator_type &,int *,int &&)__
activate C_0010063822820481407780
C_0010063822820481407780 -> C_0013536231744392208463 : construct(int *,int &&)
activate C_0013536231744392208463
deactivate C_0013536231744392208463
deactivate C_0010063822820481407780
participant "std::move_backward<int *,int *>(int *,int *,int *)" as C_0009652104259835145654
C_0015941193700393482414 -> C_0009652104259835145654 : 
activate C_0009652104259835145654
participant "std::__miter_base<int *>(int *)" as C_0005606349143570622066
C_0009652104259835145654 -> C_0005606349143570622066 : 
activate C_0005606349143570622066
C_0005606349143570622066 --> C_0009652104259835145654
deactivate C_0005606349143570622066
C_0009652104259835145654 -> C_0005606349143570622066 : 
activate C_0005606349143570622066
C_0005606349143570622066 --> C_0009652104259835145654
deactivate C_0005606349143570622066
participant "std::__copy_move_backward_a<true,int *,int *>(int *,int *,int *)" as C_0007141132863551649466
C_0009652104259835145654 -> C_0007141132863551649466 : 
activate C_0007141132863551649466
participant "std::__niter_base<int *>(int *)" as C_0003398911146189074410
C_0007141132863551649466 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0007141132863551649466
deactivate C_0003398911146189074410
C_0007141132863551649466 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0007141132863551649466
deactivate C_0003398911146189074410
C_0007141132863551649466 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0007141132863551649466
deactivate C_0003398911146189074410
participant "std::__copy_move_backward_a1<true,int *,int *>(int *,int *,int *)" as C_0011783134468367473614
C_0007141132863551649466 -> C_0011783134468367473614 : 
activate C_0011783134468367473614
participant "std::__copy_move_backward_a2<true,int *,int *>(int *,int *,int *)" as C_0009947005634884701560
C_0011783134468367473614 -> C_0009947005634884701560 : 
activate C_0009947005634884701560
participant "std::__copy_move_backward<true,true,std::random_access_iterator_tag>" as C_0001492776226183515379
C_0009947005634884701560 -> C_0001492776226183515379 : ____copy_move_b(int *,int *,int *)__
activate C_0001492776226183515379
alt
else
participant "std::__copy_move<true,false,std::random_access_iterator_tag>" as C_0007533333341847638545
C_0001492776226183515379 -> C_0007533333341847638545 : ____assign_one(int *,int *)__
activate C_0007533333341847638545
deactivate C_0007533333341847638545
end
C_0001492776226183515379 --> C_0009947005634884701560
deactivate C_0001492776226183515379
C_0009947005634884701560 --> C_0011783134468367473614
deactivate C_0009947005634884701560
C_0011783134468367473614 --> C_0007141132863551649466
deactivate C_0011783134468367473614
participant "std::__niter_wrap<int *>(int *const &,int *)" as C_0016017675111949389967
C_0007141132863551649466 -> C_0016017675111949389967 : 
activate C_0016017675111949389967
C_0016017675111949389967 --> C_0007141132863551649466
deactivate C_0016017675111949389967
C_0007141132863551649466 --> C_0009652104259835145654
deactivate C_0007141132863551649466
C_0009652104259835145654 --> C_0015941193700393482414
deactivate C_0009652104259835145654
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : begin()
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : _M_realloc_insert(iterator,int &&)
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : _M_check_len(size_type,const char *) const
activate C_0015941193700393482414
alt
C_0015941193700393482414 -> C_0015941193700393482414 : **[**max_size() const**]**
activate C_0015941193700393482414
participant "std::_Vector_base<int,std::allocator<int>>" as C_0002242519539507971003
C_0015941193700393482414 -> C_0002242519539507971003 : _M_get_Tp_allocator() const
activate C_0002242519539507971003
C_0002242519539507971003 --> C_0015941193700393482414
deactivate C_0002242519539507971003
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_max_size(const _Tp_alloc_type &)__
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0010063822820481407780 : __max_size(const allocator_type &)__
activate C_0010063822820481407780
C_0010063822820481407780 -> C_0013536231744392208463 : max_size() const
activate C_0013536231744392208463
C_0013536231744392208463 -> C_0013536231744392208463 : _M_max_size() const
activate C_0013536231744392208463
C_0013536231744392208463 --> C_0013536231744392208463
deactivate C_0013536231744392208463
C_0013536231744392208463 --> C_0010063822820481407780
deactivate C_0013536231744392208463
C_0010063822820481407780 --> C_0015941193700393482414
deactivate C_0010063822820481407780
participant "std::min<unsigned long>(const unsigned long &,const unsigned long &)" as C_0009138995724741752461
C_0015941193700393482414 -> C_0009138995724741752461 : 
activate C_0009138995724741752461
note over C_0009138995724741752461
return __b < __a ? __b :
__a;
end note
alt
C_0009138995724741752461 --> C_0015941193700393482414
end
C_0009138995724741752461 --> C_0015941193700393482414
deactivate C_0009138995724741752461
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : **[**size() const**]**
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
participant "std::__throw_length_error(const char *)" as C_0012137766637998982545
C_0015941193700393482414 -> C_0012137766637998982545 : 
activate C_0012137766637998982545
deactivate C_0012137766637998982545
end
C_0015941193700393482414 -> C_0015941193700393482414 : size() const
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : size() const
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
participant "std::max<unsigned long>(const unsigned long &,const unsigned long &)" as C_0017273831125994635944
C_0015941193700393482414 -> C_0017273831125994635944 : 
activate C_0017273831125994635944
note over C_0017273831125994635944
return __a < __b ? __b :
__a;
end note
alt
C_0017273831125994635944 --> C_0015941193700393482414
end
C_0017273831125994635944 --> C_0015941193700393482414
deactivate C_0017273831125994635944
alt
C_0015941193700393482414 -> C_0015941193700393482414 : **[**size() const**]**
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : **[**max_size() const**]**
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0002242519539507971003 : _M_get_Tp_allocator() const
activate C_0002242519539507971003
C_0002242519539507971003 --> C_0015941193700393482414
deactivate C_0002242519539507971003
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_max_size(const _Tp_alloc_type &)__
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0010063822820481407780 : __max_size(const allocator_type &)__
activate C_0010063822820481407780
C_0010063822820481407780 -> C_0013536231744392208463 : max_size() const
activate C_0013536231744392208463
C_0013536231744392208463 -> C_0013536231744392208463 : _M_max_size() const
activate C_0013536231744392208463
C_0013536231744392208463 --> C_0013536231744392208463
deactivate C_0013536231744392208463
C_0013536231744392208463 --> C_0010063822820481407780
deactivate C_0013536231744392208463
C_0010063822820481407780 --> C_0015941193700393482414
deactivate C_0010063822820481407780
C_0015941193700393482414 -> C_0009138995724741752461 : 
activate C_0009138995724741752461
alt
C_0009138995724741752461 --> C_0015941193700393482414
end
C_0009138995724741752461 --> C_0015941193700393482414
deactivate C_0009138995724741752461
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : max_size() const
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0002242519539507971003 : _M_get_Tp_allocator() const
activate C_0002242519539507971003
C_0002242519539507971003 --> C_0015941193700393482414
deactivate C_0002242519539507971003
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_max_size(const _Tp_alloc_type &)__
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0010063822820481407780 : __max_size(const allocator_type &)__
activate C_0010063822820481407780
C_0010063822820481407780 -> C_0013536231744392208463 : max_size() const
activate C_0013536231744392208463
C_0013536231744392208463 -> C_0013536231744392208463 : _M_max_size() const
activate C_0013536231744392208463
C_0013536231744392208463 --> C_0013536231744392208463
deactivate C_0013536231744392208463
C_0013536231744392208463 --> C_0010063822820481407780
deactivate C_0013536231744392208463
C_0010063822820481407780 --> C_0015941193700393482414
deactivate C_0010063822820481407780
C_0015941193700393482414 -> C_0009138995724741752461 : 
activate C_0009138995724741752461
alt
C_0009138995724741752461 --> C_0015941193700393482414
end
C_0009138995724741752461 --> C_0015941193700393482414
deactivate C_0009138995724741752461
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
else
end
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : begin()
activate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0002242519539507971003 : _M_allocate(size_t)
activate C_0002242519539507971003
alt
C_0002242519539507971003 -> C_0010063822820481407780 : __allocate(allocator_type &,size_type)__
activate C_0010063822820481407780
C_0010063822820481407780 -> C_0013536231744392208463 : allocate(size_type,const void *)
activate C_0013536231744392208463
alt
C_0013536231744392208463 -> C_0013536231744392208463 : **[**_M_max_size() const**]**
activate C_0013536231744392208463
C_0013536231744392208463 --> C_0013536231744392208463
deactivate C_0013536231744392208463
note over C_0013536231744392208463
_GLIBCXX_RESOLVE_LIB_DEFECTS
3190. allocator::allocate
sometimes returns too little
storage
end note
alt
participant "std::__throw_bad_array_new_length()" as C_0017195084916193522427
C_0013536231744392208463 -> C_0017195084916193522427 : 
activate C_0017195084916193522427
deactivate C_0017195084916193522427
end
participant "std::__throw_bad_alloc()" as C_0013352003183979330430
C_0013536231744392208463 -> C_0013352003183979330430 : 
activate C_0013352003183979330430
deactivate C_0013352003183979330430
end
alt
C_0013536231744392208463 --> C_0010063822820481407780
end
C_0013536231744392208463 --> C_0010063822820481407780
deactivate C_0013536231744392208463
C_0010063822820481407780 --> C_0002242519539507971003
deactivate C_0010063822820481407780
else
end
C_0002242519539507971003 --> C_0015941193700393482414
deactivate C_0002242519539507971003
participant "std::vector<int,std::allocator<int>>::_M_realloc_insert(iterator,int &&)::_Guard" as C_0000966375327007965772
C_0015941193700393482414 -> C_0000966375327007965772 : _Guard(pointer,size_type,_Tp_alloc_type &)
activate C_0000966375327007965772
deactivate C_0000966375327007965772
participant "std::__to_address<int>(int *)" as C_0004855128701536684386
C_0015941193700393482414 -> C_0004855128701536684386 : 
activate C_0004855128701536684386
C_0004855128701536684386 --> C_0015941193700393482414
deactivate C_0004855128701536684386
C_0015941193700393482414 -> C_0010063822820481407780 : __construct(allocator_type &,int *,int &&)__
activate C_0010063822820481407780
C_0010063822820481407780 -> C_0013536231744392208463 : construct(int *,int &&)
activate C_0013536231744392208463
deactivate C_0013536231744392208463
deactivate C_0010063822820481407780
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_use_relocate()__
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_nothrow_relocate(true_type)__
activate C_0015941193700393482414
participant "std::declval<int *>()" as C_0004779186066276791745
C_0015941193700393482414 -> C_0004779186066276791745 : 
activate C_0004779186066276791745
participant "std::__declval<int *,int *&&>(int)" as C_0018160989867957437293
C_0004779186066276791745 -> C_0018160989867957437293 : 
activate C_0018160989867957437293
deactivate C_0018160989867957437293
deactivate C_0004779186066276791745
C_0015941193700393482414 -> C_0004779186066276791745 : 
activate C_0004779186066276791745
C_0004779186066276791745 -> C_0018160989867957437293 : 
activate C_0018160989867957437293
deactivate C_0018160989867957437293
deactivate C_0004779186066276791745
C_0015941193700393482414 -> C_0004779186066276791745 : 
activate C_0004779186066276791745
C_0004779186066276791745 -> C_0018160989867957437293 : 
activate C_0018160989867957437293
deactivate C_0018160989867957437293
deactivate C_0004779186066276791745
participant "std::declval<std::allocator<int> &>()" as C_0002484442590246211927
C_0015941193700393482414 -> C_0002484442590246211927 : 
activate C_0002484442590246211927
participant "std::__declval<std::allocator<int> &,std::allocator<int> &>(int)" as C_0005450069788562230153
C_0002484442590246211927 -> C_0005450069788562230153 : 
activate C_0005450069788562230153
deactivate C_0005450069788562230153
deactivate C_0002484442590246211927
participant "std::__relocate_a<int *,int *,std::allocator<int>>(int *,int *,int *,std::allocator<int> &)" as C_0009333400899182116630
C_0015941193700393482414 -> C_0009333400899182116630 : 
activate C_0009333400899182116630
participant "std::__niter_base<_Iterator>(reverse_iterator<_Iterator>)" as C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
participant "std::reverse_iterator<_Iterator>" as C_0003742820890603540341
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
participant "std::__make_reverse_iterator<_Iterator>(_Iterator)" as C_0017093837099329869810
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
participant "std::__relocate_a_1<_Tp,_Up>(_Tp *,_Tp *,_Tp *,allocator<_Up> &)" as C_0002290468438876315038
C_0009333400899182116630 -> C_0002290468438876315038 : 
activate C_0002290468438876315038
C_0002290468438876315038 --> C_0009333400899182116630
deactivate C_0002290468438876315038
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
participant "std::__relocate_a_1<int,int>(int *,int *,int *,std::allocator<int> &)" as C_0010814365466682801946
C_0009333400899182116630 -> C_0010814365466682801946 : 
activate C_0010814365466682801946
C_0010814365466682801946 --> C_0009333400899182116630
deactivate C_0010814365466682801946
C_0009333400899182116630 --> C_0015941193700393482414
deactivate C_0009333400899182116630
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0002242519539507971003 : _M_get_Tp_allocator()
activate C_0002242519539507971003
C_0002242519539507971003 --> C_0015941193700393482414
deactivate C_0002242519539507971003
note over C_0015941193700393482414
Relocation cannot throw.
end note
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_relocate(pointer,pointer,pointer,_Tp_alloc_type &)__
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0009333400899182116630 : 
activate C_0009333400899182116630
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0002290468438876315038 : 
activate C_0002290468438876315038
C_0002290468438876315038 --> C_0009333400899182116630
deactivate C_0002290468438876315038
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0010814365466682801946 : 
activate C_0010814365466682801946
C_0010814365466682801946 --> C_0009333400899182116630
deactivate C_0010814365466682801946
C_0009333400899182116630 --> C_0015941193700393482414
deactivate C_0009333400899182116630
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 -> C_0002242519539507971003 : _M_get_Tp_allocator()
activate C_0002242519539507971003
C_0002242519539507971003 --> C_0015941193700393482414
deactivate C_0002242519539507971003
C_0015941193700393482414 -> C_0015941193700393482414 : ___S_relocate(pointer,pointer,pointer,_Tp_alloc_type &)__
activate C_0015941193700393482414
C_0015941193700393482414 -> C_0009333400899182116630 : 
activate C_0009333400899182116630
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 -> C_0003742820890603540341 : base() const
activate C_0003742820890603540341
C_0003742820890603540341 --> C_0013490546104110753729
deactivate C_0003742820890603540341
C_0013490546104110753729 -> C_0013490546104110753729 : 
activate C_0013490546104110753729
deactivate C_0013490546104110753729
C_0013490546104110753729 -> C_0017093837099329869810 : 
activate C_0017093837099329869810
C_0017093837099329869810 --> C_0013490546104110753729
deactivate C_0017093837099329869810
C_0013490546104110753729 --> C_0009333400899182116630
deactivate C_0013490546104110753729
C_0009333400899182116630 -> C_0002290468438876315038 : 
activate C_0002290468438876315038
C_0002290468438876315038 --> C_0009333400899182116630
deactivate C_0002290468438876315038
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0003398911146189074410 : 
activate C_0003398911146189074410
C_0003398911146189074410 --> C_0009333400899182116630
deactivate C_0003398911146189074410
C_0009333400899182116630 -> C_0010814365466682801946 : 
activate C_0010814365466682801946
C_0010814365466682801946 --> C_0009333400899182116630
deactivate C_0010814365466682801946
C_0009333400899182116630 --> C_0015941193700393482414
deactivate C_0009333400899182116630
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
deactivate C_0015941193700393482414
end
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 --> C_0015941193700393482414
deactivate C_0015941193700393482414
C_0015941193700393482414 --> C_0011263144175145469968
deactivate C_0015941193700393482414
deactivate C_0011263144175145469968

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
