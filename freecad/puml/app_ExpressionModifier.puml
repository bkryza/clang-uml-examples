@startuml
title App::ExpressionModifier context
package [App] as C_0002285326295477687690 {
abstract "PropertyLinkBase" as C_0000326090825016602636
abstract C_0000326090825016602636 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L98{PropertyLinkBase}]] {
+PropertyLinkBase() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L104{PropertyLinkBase}]]]
+~PropertyLinkBase() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L105{~PropertyLinkBase}]]]
..
+CopyOnImportExternal(const std::map<std::string,std::string> & nameMap) const : App::Property * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L225{CopyOnImportExternal}]]]
+CopyOnLabelChange(App::DocumentObject * obj, const std::string & ref, const char * newLabel) const : App::Property * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L239{CopyOnLabelChange}]]]
{abstract} +CopyOnLinkReplace(const App::DocumentObject * parent, App::DocumentObject * oldObj, App::DocumentObject * newObj) const = 0 : App::Property * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L213{CopyOnLinkReplace}]]]
+_registerElementReference(App::DocumentObject * obj, std::string & sub, App::PropertyLinkBase::ShadowSub & shadow) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L379{_registerElementReference}]]]
+_updateElementReference(App::DocumentObject * feature, App::DocumentObject * obj, std::string & sub, App::PropertyLinkBase::ShadowSub & shadow, bool reverse, bool notify = false) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L366{_updateElementReference}]]]
{abstract} +adjustLink(const std::set<App::DocumentObject *> & inList) = 0 : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L199{adjustLink}]]]
{abstract} +breakLink(App::DocumentObject * obj, bool clear) = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L188{breakLink}]]]
{static} +breakLinks(App::DocumentObject * link, const std::vector<App::DocumentObject *> & objs, bool clear) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L389{breakLinks}]]]
+checkLabelReferences(const std::vector<std::string> & subs, bool reset = true) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L147{checkLabelReferences}]]]
+checkRestore(std::string * msg = nullptr) const : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L164{checkRestore}]]]
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L100{create}]]]
{static} +exportSubName(std::string & output, const App::DocumentObject * obj, const char * subname, bool first_obj = false) : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L446{exportSubName}]]]
{static} +getClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L100{getClassTypeId}]]]
{static} +getLabelReferences(std::vector<std::string> & labels, const char * subname) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L498{getLabelReferences}]]]
+getLinkedElements(std::map<App::DocumentObject *,std::vector<std::string>> & elements, bool newStyle = true, bool all = true) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L264{getLinkedElements}]]]
+getLinkedObjects<T>(T & inserter, bool all = false) const : void
{abstract} +getLinks(std::vector<App::DocumentObject *> & objs, bool all = false, std::vector<std::string> * subs = nullptr, bool newStyle = true) const = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L178{getLinks}]]]
+getTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L100{getTypeId}]]]
#hasSetValue() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L549{hasSetValue}]]]
{static} +importSubName(Base::XMLReader & reader, const char * sub, bool & restoreLabel) : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L464{importSubName}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L100{init}]]]
+isSame(const App::Property & other) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L286{isSame}]]]
+linkedElements(bool newStyle = true, bool all = true) const : std::map<App::DocumentObject *,std::vector<std::string>> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L278{linkedElements}]]]
+linkedObjects(bool all = false) const : std::vector<App::DocumentObject *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L249{linkedObjects}]]]
+referenceChanged() const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L153{referenceChanged}]]]
+registerLabelReferences(std::vector<std::string> && labels, bool reset = true) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L136{registerLabelReferences}]]]
{static} +restoreLabelReference(const App::DocumentObject * obj, std::string & sub, App::PropertyLinkBase::ShadowSub * shadow = nullptr) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L486{restoreLabelReference}]]]
+setAllowExternal(bool allow) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L296{setAllowExternal}]]]
+setAllowPartial(bool enable) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L546{setAllowPartial}]]]
#setFlag(int flag, bool value = true) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L553{setFlag}]]]
+testFlag(int flag) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L542{testFlag}]]]
{static} +tryImport(const App::Document * doc, const App::DocumentObject * obj, const std::map<std::string,std::string> & nameMap) : App::DocumentObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L421{tryImport}]]]
{static} +tryImportSubName(const App::DocumentObject * obj, const char * sub, const App::Document * doc, const std::map<std::string,std::string> & nameMap) : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L406{tryImportSubName}]]]
{static} +tryReplaceLink(const App::PropertyContainer * owner, App::DocumentObject * obj, const App::DocumentObject * parent, App::DocumentObject * oldObj, App::DocumentObject * newObj, const char * sub = nullptr) : std::pair<App::DocumentObject *,std::string> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L319{tryReplaceLink}]]]
{static} +tryReplaceLinkSubs(const App::PropertyContainer * owner, App::DocumentObject * obj, const App::DocumentObject * parent, App::DocumentObject * oldObj, App::DocumentObject * newObj, const std::vector<std::string> & subs) : std::pair<App::DocumentObject *,std::vector<std::string>> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L339{tryReplaceLinkSubs}]]]
+unregisterElementReference() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L128{unregisterElementReference}]]]
+unregisterLabelReferences() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L150{unregisterLabelReferences}]]]
+updateElementReference(App::DocumentObject * feature, bool reverse = false, bool notify = false) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L119{updateElementReference}]]]
{static} +updateElementReferences(App::DocumentObject * feature, bool reverse = false) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L347{updateElementReferences}]]]
{static} +updateLabelReference(const App::DocumentObject * linked, const char * subname, App::DocumentObject * obj, const std::string & ref, const char * newLabel) : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L530{updateLabelReference}]]]
{static} +updateLabelReferences(App::DocumentObject * obj, const char * newLabel) : std::vector<std::pair<Property *,std::unique_ptr<Property>>> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L508{updateLabelReferences}]]]
__
-_ElementRefs : std::set<App::DocumentObject *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L559{_ElementRefs}]]]
#_Flags : std::bitset<32> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L552{_Flags}]]]
-_LabelRefs : std::set<std::string> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L558{_LabelRefs}]]]
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyLinks.h#L100{classTypeId}]]]
}
abstract "ExpressionVisitor" as C_0001161651732259613065
abstract C_0001161651732259613065 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ObjectIdentifier.h#L57{ExpressionVisitor}]] {
+~ExpressionVisitor() = default : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L58{~ExpressionVisitor}]]]
..
+aboutToChange() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L60{aboutToChange}]]]
#adjustLinks(App::Expression & e, const std::set<App::DocumentObject *> & inList) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L67{adjustLinks}]]]
+changed() const : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L61{changed}]]]
#collectReplacement(App::Expression & e, std::map<ObjectIdentifier,ObjectIdentifier> &, const App::DocumentObject * parent, App::DocumentObject * oldObj, App::DocumentObject * newObj) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L71{collectReplacement}]]]
#getIdentifiers(App::Expression & e, std::map<App::ObjectIdentifier,bool> &) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L66{getIdentifiers}]]]
+getPropertyLink() : App::PropertyLinkBase * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L63{getPropertyLink}]]]
#importSubNames(App::Expression & e, const ObjectIdentifier::SubNameMap & subNameMap) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L74{importSubNames}]]]
#moveCells(App::Expression & e, const App::CellAddress & address, int rowCount, int colCount) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L77{moveCells}]]]
#offsetCells(App::Expression & e, int rowOffset, int colOffset) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L78{offsetCells}]]]
#relabeledDocument(App::Expression & e, const std::string & oldName, const std::string & newName) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L68{relabeledDocument}]]]
#renameObjectIdentifier(App::Expression & e, const std::map<ObjectIdentifier,ObjectIdentifier> &, const App::ObjectIdentifier &) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L69{renameObjectIdentifier}]]]
+reset() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L62{reset}]]]
#updateElementReference(App::Expression & e, App::DocumentObject * feature, bool reverse) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L73{updateElementReference}]]]
#updateLabelReference(App::Expression & e, App::DocumentObject * obj, const std::string & ref, const char * newLabel) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L75{updateLabelReference}]]]
{abstract} +visit(App::Expression & e) = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L59{visit}]]]
__
}
class "ExpressionModifier<P>" as C_0000339955518006216378
class C_0000339955518006216378 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L81{ExpressionModifier}]] {
+ExpressionModifier(P & _prop) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L83{ExpressionModifier}]]]
+~ExpressionModifier() = default : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L90{~ExpressionModifier}]]]
..
+aboutToChange() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L92{aboutToChange}]]]
+changed() const : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L97{changed}]]]
+getPropertyLink() : App::PropertyLinkBase * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L101{getPropertyLink}]]]
+reset() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L99{reset}]]]
__
#_changed : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L107{_changed}]]]
#prop : P & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L104{prop}]]]
#propLink : App::PropertyLinkBase * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L105{propLink}]]]
#signaller : typename AtomicPropertyChangeInterface<P>::AtomicPropertyChange [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Expression.h#L106{signaller}]]]
}
package [ExpressionParser] as C_0000905861183269213715 {
}
package [Meta] as C_0002283864520314866053 {
}
}
C_0000339955518006216378 --> C_0000326090825016602636 : #propLink
C_0001161651732259613065 <|-- C_0000339955518006216378

'Generated with clang-uml, version 0.4.0-14-g26abb71
'LLVM version Ubuntu clang version 15.0.7
@enduml
