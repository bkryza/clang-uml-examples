@startuml
title App::Extension context
package [Base] as C_0000701777446892506059 {
class "Type" as C_0001299587473968259399
class C_0001299587473968259399 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L80{Type}]] {
+Type(const Base::Type & type) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L84{Type}]]]
+Type() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L85{Type}]]]
+~Type() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L87{~Type}]]]
..
+operator=(const Base::Type type) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L114{operator=}]]]
..
+operator!=(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L116{operator!=}]]]
+operator<(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L118{operator<}]]]
+operator<=(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L119{operator<=}]]]
+operator==(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L115{operator==}]]]
+operator>(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L121{operator>}]]]
+operator>=(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L120{operator>=}]]]
..
{static} +badType() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L123{badType}]]]
+createInstance() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L90{createInstance}]]]
{static} +createInstanceByName(const char * TypeName, bool bLoadModule = false) : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L92{createInstanceByName}]]]
{static} +createType(const Base::Type parent, const char * name, Base::Type::instantiationMethod method = nullptr) : const Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L109{createType}]]]
{static} +destruct() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L125{destruct}]]]
{static} +fromKey(unsigned int key) : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L98{fromKey}]]]
{static} +fromName(const char * name) : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L97{fromName}]]]
{static} +getAllDerivedFrom(const Base::Type type, std::vector<Type> & List) : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L103{getAllDerivedFrom}]]]
+getKey() const : unsigned int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L111{getKey}]]]
{static} #getModuleName(const char * ClassName) : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L128{getModuleName}]]]
+getName() const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L99{getName}]]]
{static} +getNumTypes() : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L107{getNumTypes}]]]
+getParent() const : const Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L100{getParent}]]]
{static} +getTypeIfDerivedFrom(const char * name, const Base::Type parent, bool bLoadModule = false) : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L105{getTypeIfDerivedFrom}]]]
{static} +importModule(const char * TypeName) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L93{importModule}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L124{init}]]]
+isBad() const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L112{isBad}]]]
+isDerivedFrom(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L101{isDerivedFrom}]]]
__
-index : unsigned int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L134{index}]]]
{static} -loadModuleSet : std::set<std::string> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L140{loadModuleSet}]]]
{static} -typedata : std::vector<TypeData *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L138{typedata}]]]
{static} -typemap : std::map<std::string,unsigned int> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L137{typemap}]]]
}
}
package [App] as C_0002285326295477687690 {
class "PropertyData" as C_0001065140174462797402
class C_0001065140174462797402 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L56{PropertyData}]] {
+addProperty(App::PropertyData::OffsetBase offsetBase, const char * PropName, App::Property * Prop, const char * PropertyGroup = nullptr, App::PropertyType  = Prop_None, const char * PropertyDocu = nullptr) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L116{addProperty}]]]
+findProperty(App::PropertyData::OffsetBase offsetBase, const char * PropName) const : const App::PropertyData::PropertySpec * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L118{findProperty}]]]
+findProperty(App::PropertyData::OffsetBase offsetBase, const App::Property * prop) const : const App::PropertyData::PropertySpec * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L119{findProperty}]]]
+getDocumentation(App::PropertyData::OffsetBase offsetBase, const char * name) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L126{getDocumentation}]]]
+getDocumentation(App::PropertyData::OffsetBase offsetBase, const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L127{getDocumentation}]]]
+getGroup(App::PropertyData::OffsetBase offsetBase, const char * name) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L124{getGroup}]]]
+getGroup(App::PropertyData::OffsetBase offsetBase, const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L125{getGroup}]]]
+getName(App::PropertyData::OffsetBase offsetBase, const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L121{getName}]]]
+getPropertyByName(App::PropertyData::OffsetBase offsetBase, const char * name) const : App::Property * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L129{getPropertyByName}]]]
+getPropertyList(App::PropertyData::OffsetBase offsetBase, std::vector<Property *> & List) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L131{getPropertyList}]]]
+getPropertyMap(App::PropertyData::OffsetBase offsetBase, std::map<std::string,Property *> & Map) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L130{getPropertyMap}]]]
+getPropertyNamedList(App::PropertyData::OffsetBase offsetBase, std::vector<std::pair<const char *,Property *>> & List) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L132{getPropertyNamedList}]]]
+getType(App::PropertyData::OffsetBase offsetBase, const App::Property * prop) const : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L122{getType}]]]
+getType(App::PropertyData::OffsetBase offsetBase, const char * name) const : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L123{getType}]]]
+merge(App::PropertyData * other = nullptr) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L134{merge}]]]
+split(App::PropertyData * other) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L135{split}]]]
__
+parentMerged : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L112{parentMerged}]]]
+parentPropertyData : const App::PropertyData * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L114{parentPropertyData}]]]
+propertyData : bmi::multi_index_container<PropertySpec,bmi::indexed_by<bmi::sequenced<>,bmi::hashed_unique<bmi::member<PropertySpec,const char *,&PropertySpec::Name>,CStringHasher,CStringHasher>,bmi::hashed_unique<bmi::member<PropertySpec,short,&PropertySpec::Offset>>>> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyContainer.h#L110{propertyData}]]]
}
class "ExtensionContainer" as C_0000679410891240475874
class C_0000679410891240475874 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L110{ExtensionContainer}]] {
+ExtensionContainer() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L119{ExtensionContainer}]]]
+~ExtensionContainer() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L120{~ExtensionContainer}]]]
..
+Restore(Base::XMLReader & reader) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L179{Restore}]]]
+Save(Base::Writer & writer) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L178{Save}]]]
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L113{create}]]]
+extensionBegin() : App::ExtensionContainer::ExtensionIterator [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L147{extensionBegin}]]]
+extensionEnd() : App::ExtensionContainer::ExtensionIterator [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L148{extensionEnd}]]]
{static} +getClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L113{getClassTypeId}]]]
+getExtension(Base::Type, bool derived = true, bool no_except = false) const : App::Extension * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L126{getExtension}]]]
+getExtension(const std::string & name) const : App::Extension * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L127{getExtension}]]]
+getExtensionByType<ExtensionT>(bool no_except = false, bool derived = true) const : ExtensionT *
+getExtensionsDerivedFrom(Base::Type type) const : std::vector<Extension *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L136{getExtensionsDerivedFrom}]]]
+getExtensionsDerivedFromType<ExtensionT>() const : std::vector<ExtensionT *>
+getPropertyByName(const char * name) const : App::Property * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L154{getPropertyByName}]]]
+getPropertyDocumentation(const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L171{getPropertyDocumentation}]]]
+getPropertyDocumentation(const char * name) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L173{getPropertyDocumentation}]]]
+getPropertyGroup(const char * name) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L169{getPropertyGroup}]]]
+getPropertyGroup(const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L167{getPropertyGroup}]]]
+getPropertyList(std::vector<Property *> & List) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L160{getPropertyList}]]]
+getPropertyMap(std::map<std::string,Property *> & Map) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L158{getPropertyMap}]]]
+getPropertyName(const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L156{getPropertyName}]]]
+getPropertyType(const App::Property * prop) const : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L163{getPropertyType}]]]
+getPropertyType(const char * name) const : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L165{getPropertyType}]]]
+getTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L113{getTypeId}]]]
+handleChangedPropertyName(Base::XMLReader & reader, const char * TypeName, const char * PropName) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L193{handleChangedPropertyName}]]]
+handleChangedPropertyType(Base::XMLReader & reader, const char * TypeName, App::Property * prop) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L201{handleChangedPropertyType}]]]
+hasExtension(const std::string & name) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L124{hasExtension}]]]
+hasExtension(Base::Type, bool derived = true) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L123{hasExtension}]]]
+hasExtensions() const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L125{hasExtensions}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L113{init}]]]
+onChanged(const App::Property *) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L176{onChanged}]]]
+registerExtension(Base::Type extension, App::Extension * ext) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L122{registerExtension}]]]
+restoreExtensions(Base::XMLReader & reader) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L184{restoreExtensions}]]]
+saveExtensions(Base::Writer & writer) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L183{saveExtensions}]]]
__
-_extensions : std::map<Base::Type,App::Extension *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L205{_extensions}]]]
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionContainer.h#L113{classTypeId}]]]
}
class "Extension" as C_0001794001296406087163
class C_0001794001296406087163 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L222{Extension}]] {
+Extension() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L231{Extension}]]]
+~Extension() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L232{~Extension}]]]
..
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{create}]]]
+extensionGetPropertyByName(const char * name) const : App::Property * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L250{extensionGetPropertyByName}]]]
#extensionGetPropertyData() const : const App::PropertyData & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{extensionGetPropertyData}]]]
{static} #extensionGetPropertyDataPtr() : const App::PropertyData * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{extensionGetPropertyDataPtr}]]]
+extensionGetPropertyDocumentation(const char * name) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L269{extensionGetPropertyDocumentation}]]]
+extensionGetPropertyDocumentation(const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L267{extensionGetPropertyDocumentation}]]]
+extensionGetPropertyGroup(const char * name) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L265{extensionGetPropertyGroup}]]]
+extensionGetPropertyGroup(const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L263{extensionGetPropertyGroup}]]]
+extensionGetPropertyList(std::vector<Property *> & List) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L256{extensionGetPropertyList}]]]
+extensionGetPropertyMap(std::map<std::string,Property *> & Map) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L254{extensionGetPropertyMap}]]]
+extensionGetPropertyName(const App::Property * prop) const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L252{extensionGetPropertyName}]]]
+extensionGetPropertyType(const char * name) const : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L261{extensionGetPropertyType}]]]
+extensionGetPropertyType(const App::Property * prop) const : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L259{extensionGetPropertyType}]]]
#extensionHandleChangedPropertyName(Base::XMLReader & reader, const char * TypeName, const char * PropName) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L289{extensionHandleChangedPropertyName}]]]
#extensionHandleChangedPropertyType(Base::XMLReader & reader, const char * TypeName, App::Property * prop) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L291{extensionHandleChangedPropertyType}]]]
+extensionIsDerivedFrom(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L280{extensionIsDerivedFrom}]]]
#extensionOnChanged(const App::Property * p) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L286{extensionOnChanged}]]]
+extensionRestore(Base::XMLReader &) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L275{extensionRestore}]]]
+extensionSave(Base::Writer &) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L274{extensionSave}]]]
+getExtendedContainer() const : const App::ExtensionContainer * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L237{getExtendedContainer}]]]
+getExtendedContainer() : App::ExtensionContainer * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L236{getExtendedContainer}]]]
{static} +getExtensionClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{getExtensionClassTypeId}]]]
+getExtensionPyObject() : PyObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L244{getExtensionPyObject}]]]
+getExtensionTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{getExtensionTypeId}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{init}]]]
+initExtension(App::ExtensionContainer * obj) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L234{initExtension}]]]
{static} #initExtensionSubclass(Base::Type & toInit, const char * ClassName, const char * ParentName, Base::Type::instantiationMethod method = nullptr) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L282{initExtensionSubclass}]]]
#initExtensionType(Base::Type type) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L296{initExtensionType}]]]
+isPythonExtension() : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L242{isPythonExtension}]]]
+name() const : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L240{name}]]]
__
#ExtensionPythonObject : Py::SmartPtr [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L298{ExtensionPythonObject}]]]
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{classTypeId}]]]
-m_base : App::ExtensionContainer * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L302{m_base}]]]
-m_extensionType : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L301{m_extensionType}]]]
#m_isPythonExtension : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L297{m_isPythonExtension}]]]
{static} -propertyData : App::PropertyData [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.h#L227{propertyData}]]]
}
class "DocumentObjectExtension" as C_0000808215986931611497
class C_0000808215986931611497 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L40{DocumentObjectExtension}]] {
+DocumentObjectExtension() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L49{DocumentObjectExtension}]]]
+~DocumentObjectExtension() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L50{~DocumentObjectExtension}]]]
..
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{create}]]]
+extensionExecute() : App::DocumentObjectExecReturn * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L57{extensionExecute}]]]
+extensionGetLinkedObject(App::DocumentObject *& ret, bool recursive, Base::Matrix4D * mat, bool transform, int depth) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L95{extensionGetLinkedObject}]]]
#extensionGetPropertyData() const : const App::PropertyData & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{extensionGetPropertyData}]]]
{static} #extensionGetPropertyDataPtr() : const App::PropertyData * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{extensionGetPropertyDataPtr}]]]
+extensionGetSubObject(App::DocumentObject *& ret, const char * subname, PyObject ** pyObj, Base::Matrix4D * mat, bool transform, int depth) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L80{extensionGetSubObject}]]]
+extensionGetSubObjects(std::vector<std::string> & ret, int reason) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L88{extensionGetSubObjects}]]]
+extensionHasChildElement() const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L100{extensionHasChildElement}]]]
+extensionIsElementVisible(const char *) : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L99{extensionIsElementVisible}]]]
+extensionMustExecute() : short [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L56{extensionMustExecute}]]]
+extensionSetElementVisible(const char *, bool) : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L98{extensionSetElementVisible}]]]
+getExtendedObject() : App::DocumentObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L52{getExtendedObject}]]]
+getExtendedObject() const : const App::DocumentObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L53{getExtendedObject}]]]
{static} +getExtensionClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{getExtensionClassTypeId}]]]
+getExtensionPyObject() : PyObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L69{getExtensionPyObject}]]]
+getExtensionTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{getExtensionTypeId}]]]
+getViewProviderExtensionName() const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L73{getViewProviderExtensionName}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{init}]]]
+onExtendedDocumentRestored() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L63{onExtendedDocumentRestored}]]]
+onExtendedSettingDocument() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L61{onExtendedSettingDocument}]]]
+onExtendedSetupObject() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L65{onExtendedSetupObject}]]]
+onExtendedUnsetupObject() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L67{onExtendedUnsetupObject}]]]
__
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{classTypeId}]]]
{static} -propertyData : App::PropertyData [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/DocumentObjectExtension.h#L45{propertyData}]]]
}
class "ExtensionPythonT<App::Extension>" as C_0001976434673191902003
class C_0001976434673191902003 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L212{ExtensionPythonT}]] {
+ExtensionPythonT() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionPython.h#L45{ExtensionPythonT}]]]
+ExtensionPythonT(const App::ExtensionPythonT<App::Extension> &) = deleted : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionPython.h#L51{ExtensionPythonT}]]]
+ExtensionPythonT(App::ExtensionPythonT<App::Extension> &&) = deleted : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionPython.h#L52{ExtensionPythonT}]]]
+~ExtensionPythonT() = default : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionPython.h#L49{~ExtensionPythonT}]]]
..
+operator=(const App::ExtensionPythonT<App::Extension> &) = deleted : App::ExtensionPythonT<App::Extension> & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionPython.h#L53{operator=}]]]
+operator=(App::ExtensionPythonT<App::Extension> &&) = deleted : App::ExtensionPythonT<App::Extension> & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ExtensionPython.h#L54{operator=}]]]
..
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{create}]]]
#extensionGetPropertyData() const : const App::PropertyData & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{extensionGetPropertyData}]]]
{static} #extensionGetPropertyDataPtr() : const App::PropertyData * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{extensionGetPropertyDataPtr}]]]
{static} +getExtensionClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{getExtensionClassTypeId}]]]
+getExtensionTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{getExtensionTypeId}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{init}]]]
__
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{classTypeId}]]]
{static} -propertyData : App::PropertyData [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/Extension.cpp#L209{propertyData}]]]
}
package [ExpressionParser] as C_0000905861183269213715 {
}
package [Meta] as C_0002283864520314866053 {
}
}
package [Py] as C_0000849183934795741319 {
class "SmartPtr" as C_0001441700554754500561
class C_0001441700554754500561 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L43{SmartPtr}]] {
+SmartPtr() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L53{SmartPtr}]]]
+SmartPtr(PyObject * pyob, bool owned = false) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L56{SmartPtr}]]]
+SmartPtr(const Py::SmartPtr & ob) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L59{SmartPtr}]]]
+~SmartPtr() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L68{~SmartPtr}]]]
..
+operator=(const Py::SmartPtr & rhs) : Py::SmartPtr & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L62{operator=}]]]
..
+operator*() const : PyObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L71{operator*}]]]
+operator=(const Py::Object & rhs) : Py::SmartPtr & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L63{operator=}]]]
+operator=(PyObject * rhsp) : Py::SmartPtr & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L65{operator=}]]]
..
+is(PyObject * pother) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L79{is}]]]
+is(const Py::SmartPtr & other) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L80{is}]]]
+isNull() const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L82{isNull}]]]
+ptr() const : PyObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L74{ptr}]]]
#release() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L50{release}]]]
#set(PyObject * pyob, bool owned = false) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L49{set}]]]
__
-p : PyObject * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/SmartPtrPy.h#L46{p}]]]
}
}
C_0001065140174462797402 --> C_0001065140174462797402 : +parentPropertyData
C_0000679410891240475874 --> C_0001299587473968259399 : -classTypeId
C_0001794001296406087163 o-- C_0001441700554754500561 : #ExtensionPythonObject
C_0001794001296406087163 o-- C_0001299587473968259399 : -m_extensionType
C_0001794001296406087163 --> C_0000679410891240475874 : -m_base
C_0001794001296406087163 --> C_0001299587473968259399 : -classTypeId
C_0001794001296406087163 --> C_0001065140174462797402 : -propertyData
C_0001794001296406087163 <.. C_0000679410891240475874 : +<<friend>>
C_0000808215986931611497 --> C_0001299587473968259399 : -classTypeId
C_0000808215986931611497 --> C_0001065140174462797402 : -propertyData
C_0001794001296406087163 <|-- C_0000808215986931611497
C_0001976434673191902003 --> C_0001299587473968259399 : -classTypeId
C_0001976434673191902003 --> C_0001065140174462797402 : -propertyData
C_0001794001296406087163 <|-- C_0001976434673191902003

'Generated with clang-uml, version 0.4.0-14-g26abb71
'LLVM version Ubuntu clang version 15.0.7
@enduml
