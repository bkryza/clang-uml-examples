@startuml
title App::ComplexGeoData context
package [Base] as C_0000701777446892506059 {
class "Type" as C_0001299587473968259399
class C_0001299587473968259399 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L80{Type}]] {
+Type(const Base::Type & type) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L84{Type}]]]
+Type() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L85{Type}]]]
+~Type() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L87{~Type}]]]
..
+operator=(const Base::Type type) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L114{operator=}]]]
..
+operator!=(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L116{operator!=}]]]
+operator<(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L118{operator<}]]]
+operator<=(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L119{operator<=}]]]
+operator==(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L115{operator==}]]]
+operator>(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L121{operator>}]]]
+operator>=(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L120{operator>=}]]]
..
{static} +badType() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L123{badType}]]]
+createInstance() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L90{createInstance}]]]
{static} +createInstanceByName(const char * TypeName, bool bLoadModule = false) : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L92{createInstanceByName}]]]
{static} +createType(const Base::Type parent, const char * name, Base::Type::instantiationMethod method = nullptr) : const Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L109{createType}]]]
{static} +destruct() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L125{destruct}]]]
{static} +fromKey(unsigned int key) : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L98{fromKey}]]]
{static} +fromName(const char * name) : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L97{fromName}]]]
{static} +getAllDerivedFrom(const Base::Type type, std::vector<Type> & List) : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L103{getAllDerivedFrom}]]]
+getKey() const : unsigned int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L111{getKey}]]]
{static} #getModuleName(const char * ClassName) : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L128{getModuleName}]]]
+getName() const : const char * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L99{getName}]]]
{static} +getNumTypes() : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L107{getNumTypes}]]]
+getParent() const : const Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L100{getParent}]]]
{static} +getTypeIfDerivedFrom(const char * name, const Base::Type parent, bool bLoadModule = false) : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L105{getTypeIfDerivedFrom}]]]
{static} +importModule(const char * TypeName) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L93{importModule}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L124{init}]]]
+isBad() const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L112{isBad}]]]
+isDerivedFrom(const Base::Type type) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L101{isDerivedFrom}]]]
__
-index : unsigned int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L134{index}]]]
{static} -loadModuleSet : std::set<std::string> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L140{loadModuleSet}]]]
{static} -typedata : std::vector<TypeData *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L138{typedata}]]]
{static} -typemap : std::map<std::string,unsigned int> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Type.h#L137{typemap}]]]
}
abstract "Persistence" as C_0001441097518118859586
abstract C_0001441097518118859586 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L36{Persistence}]] {
{abstract} +Restore(Base::XMLReader &) = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L79{Restore}]]]
+RestoreDocFile(Base::Reader &) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L143{RestoreDocFile}]]]
{abstract} +Save(Base::Writer &) const = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L63{Save}]]]
+SaveDocFile(Base::Writer &) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L113{SaveDocFile}]]]
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L39{create}]]]
+dumpToStream(std::ostream & stream, int compression) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L148{dumpToStream}]]]
{static} +encodeAttribute(const std::string &) : std::string [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L145{encodeAttribute}]]]
{static} +getClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L39{getClassTypeId}]]]
{abstract} +getMemSize() const = 0 : unsigned int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L46{getMemSize}]]]
+getTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L39{getTypeId}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L39{init}]]]
-restoreFinished() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L159{restoreFinished}]]]
+restoreFromStream(std::istream & stream) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L151{restoreFromStream}]]]
__
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Persistence.h#L39{classTypeId}]]]
}
class "Handled" as C_0001877203087156647552
class C_0001877203087156647552 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L145{Handled}]] {
+Handled() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L148{Handled}]]]
-Handled(const Base::Handled &) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L159{Handled}]]]
+~Handled() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L149{~Handled}]]]
..
+operator=(const Base::Handled &) : const Base::Handled & [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L156{operator=}]]]
..
+getRefCount() const : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L155{getRefCount}]]]
+ref() const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L151{ref}]]]
+unref() const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L152{unref}]]]
+unrefNoDelete() const : int [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L153{unrefNoDelete}]]]
__
-_lRefCount : QAtomicInt * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L162{_lRefCount}]]]
}
class "Reference<App::StringHasher>" as C_0001331318764029167146
class C_0001331318764029167146 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/Base/Handle.h#L44{Reference}]] {
__
}
}
package [Data] as C_0000993002797833335293 {
abstract "ComplexGeoData" as C_0000312978546787811344
abstract C_0000312978546787811344 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/PropertyGeo.h#L42{ComplexGeoData}]] {
+ComplexGeoData() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L86{ComplexGeoData}]]]
+~ComplexGeoData() = default : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L88{~ComplexGeoData}]]]
..
+applyRotation(const Base::Rotation &) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L122{applyRotation}]]]
+applyTransform(const Base::Matrix4D & rclTrf) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L118{applyTransform}]]]
+applyTranslation(const Base::Vector3d &) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L120{applyTranslation}]]]
{abstract} +countSubElements(const char * Type) const = 0 : unsigned long [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L97{countSubElements}]]]
{static} +create() : void * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L75{create}]]]
#elementMap(bool flush = true) const : Data::ElementMapPtr [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L366{elementMap}]]]
+elementType(const Data::IndexedName &) const : char [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L248{elementType}]]]
+elementType(const Data::MappedName &) const : char [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L247{elementType}]]]
+elementType(const char * name) const : char [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L249{elementType}]]]
+flushElementMap() const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L277{flushElementMap}]]]
+getAccuracy() const : double [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L152{getAccuracy}]]]
{abstract} +getBoundBox() const = 0 : Base::BoundBox3d [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L154{getBoundBox}]]]
+getCenterOfGravity(Base::Vector3d & center) const : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L173{getCenterOfGravity}]]]
{static} +getClassTypeId() : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L75{getClassTypeId}]]]
+getElementMap() const : std::vector<MappedElement> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L263{getElementMap}]]]
+getElementMapSize(bool flush = true) const : size_t [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L269{getElementMapSize}]]]
+getElementMappedNames(const Data::IndexedName & element, bool needUnmapped = false) const : std::vector<std::pair<MappedName,ElementIDRefs>> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L234{getElementMappedNames}]]]
+getElementName(const char * name, Data::ElementIDRefs * sid = nullptr, bool copy = false) const : Data::MappedElement [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L220{getElementName}]]]
{abstract} +getElementTypes() const = 0 : std::vector<const char *> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L96{getElementTypes}]]]
+getFaces(std::vector<Base::Vector3d> & Points, std::vector<Facet> & faces, double Accuracy, uint16_t flags = 0) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L167{getFaces}]]]
+getFacesFromSubElement(const Data::Segment *, std::vector<Base::Vector3d> & Points, std::vector<Base::Vector3d> & PointNormals, std::vector<Facet> & faces) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L108{getFacesFromSubElement}]]]
+getIndexedName(const Data::MappedName & name, Data::ElementIDRefs * sid = nullptr) const : Data::IndexedName [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L187{getIndexedName}]]]
+getLines(std::vector<Base::Vector3d> & Points, std::vector<Line> & lines, double Accuracy, uint16_t flags = 0) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L164{getLines}]]]
+getLinesFromSubElement(const Data::Segment *, std::vector<Base::Vector3d> & Points, std::vector<Line> & lines) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L103{getLinesFromSubElement}]]]
+getMappedName(const Data::IndexedName & element, bool allowUnmapped = false, Data::ElementIDRefs * sid = nullptr) const : Data::MappedName [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L199{getMappedName}]]]
+getPlacement() const : Base::Placement [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L130{getPlacement}]]]
+getPointFromLineIntersection(const Base::Vector3f & base, const Base::Vector3f & dir) const : Base::Vector3d [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L156{getPointFromLineIntersection}]]]
+getPoints(std::vector<Base::Vector3d> & Points, std::vector<Base::Vector3d> & Normals, double Accuracy, uint16_t flags = 0) const : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L160{getPoints}]]]
{abstract} +getSubElement(const char * Type, unsigned long) const = 0 : Data::Segment * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L99{getSubElement}]]]
+getSubElementByName(const char * Name) const : Data::Segment * [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L101{getSubElementByName}]]]
{abstract} +getTransform() const = 0 : Base::Matrix4D [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L140{getTransform}]]]
+getTypeId() const : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L75{getTypeId}]]]
{static} +init() : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L75{init}]]]
{static} +isElementName(const char * subName) : bool [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L272{isElementName}]]]
+reTagElementMap(long tag, App::StringHasherRef hasher, const char * postfix = nullptr) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L237{reTagElementMap}]]]
+resetElementMap(Data::ElementMapPtr elementMap = ElementMapPtr()) : Data::ElementMapPtr [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L257{resetElementMap}]]]
+setElementMap(const std::vector<MappedElement> & elements) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L266{setElementMap}]]]
+setPlacement(const Base::Placement & rclPlacement) : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L126{setPlacement}]]]
{abstract} +setTransform(const Base::Matrix4D & rclTrf) = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L135{setTransform}]]]
{abstract} +transformGeometry(const Base::Matrix4D & rclMat) = 0 : void [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L146{transformGeometry}]]]
#transformPointToInside(const Base::Vector3d & vec) const : Base::Vector3f [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L328{transformPointToInside}]]]
#transformPointToOutside(const Base::Vector3f & vec) const : Base::Vector3d [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L283{transformPointToOutside}]]]
#transformPointsToOutside<Vec>(const std::vector<Vec> & input) const : std::vector<Base::Vector3d>
#transformToInside(const Base::Vector3d & vec) const : Base::Vector3f [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L355{transformToInside}]]]
#transformToOutside(const Base::Vector3f & vec) const : Base::Vector3d [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L348{transformToOutside}]]]
#transformVectorToOutside(const Base::Vector3f & vec) const : Base::Vector3d [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L304{transformVectorToOutside}]]]
#transformVectorsToOutside<Vec>(const std::vector<Vec> & input) const : std::vector<Base::Vector3d>
__
+Hasher : App::StringHasherRef [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L343{Hasher}]]]
+Tag : long [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L338{Tag}]]]
-_elementMap : Data::ElementMapPtr [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L369{_elementMap}]]]
{static} -classTypeId : Base::Type [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L75{classTypeId}]]]
}
class "ComplexGeoData::Line" as C_0001265940820092420605
class C_0001265940820092420605 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L78{ComplexGeoData##Line}]] {
__
+I1 : uint32_t [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L78{I1}]]]
+I2 : uint32_t [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L78{I2}]]]
}
class "ComplexGeoData::Facet" as C_0000975468404761095565
class C_0000975468404761095565 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L79{ComplexGeoData##Facet}]] {
__
+I1 : uint32_t [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L79{I1}]]]
+I2 : uint32_t [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L79{I2}]]]
+I3 : uint32_t [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L79{I3}]]]
}
class "ComplexGeoData::Domain" as C_0001999848979845670786
class C_0001999848979845670786 [[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L80{ComplexGeoData##Domain}]] {
__
+facets : std::vector<Facet> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L82{facets}]]]
+points : std::vector<Base::Vector3d> [[[https://github.com/FreeCAD/FreeCAD/blob/f6708547a9bb3f71a4aaade12109f511a72c207c/src/App/ComplexGeoData.h#L81{points}]]]
}
}
C_0001441097518118859586 --> C_0001299587473968259399 : -classTypeId
C_0000312978546787811344 o-- C_0001331318764029167146 : +Hasher
C_0000312978546787811344 --> C_0001299587473968259399 : -classTypeId
C_0001441097518118859586 <|-- C_0000312978546787811344
C_0001877203087156647552 <|-- C_0000312978546787811344
C_0001265940820092420605 --+ C_0000312978546787811344
C_0000975468404761095565 --+ C_0000312978546787811344
C_0001999848979845670786 --+ C_0000312978546787811344

'Generated with clang-uml, version 0.4.0-14-g26abb71
'LLVM version Ubuntu clang version 15.0.7
@enduml
